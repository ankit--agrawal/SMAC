// generated by SMACK version 1.9.0 for corral
// via /mnt/local/smack-project/smack/bin/smack -x=svcomp --time-limit 1800 /proj/SMACK/sv-benchmarks/c/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out.c --verifier-options  /bopt:boolControlVC /bopt:z3opt:SMT.MBQI=true /bopt:z3opt:SMT.MBQI.MAX_ITERATIONS=2444 /deepAsserts /di /noInitPruning /nonUniformUnfolding /staticInlining /trackAllVars /useArrayTheory --unroll 16

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (13 regions)
var $M.0: [ref] i8;
var $M.1: [ref] i8;
var $M.2: i32;
var $M.3: ref;
var $M.4: ref;
var $M.5: ref;
var $M.6: i32;
var $M.7: i32;
var $M.8: i32;
var $M.9: i32;
var $M.10: i32;
var $M.11: i32;
var $M.12: i32;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 238885));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32792));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 1028));
const atm_qdisc_ops_group0: ref;
axiom (atm_qdisc_ops_group0 == $sub.ref(0, 2060));
const atm_qdisc_ops_group1: ref;
axiom (atm_qdisc_ops_group1 == $sub.ref(0, 3092));
const atm_class_ops_group0: ref;
axiom (atm_class_ops_group0 == $sub.ref(0, 4124));
const ldv_state_variable_1: ref;
axiom (ldv_state_variable_1 == $sub.ref(0, 5152));
const ref_cnt: ref;
axiom (ref_cnt == $sub.ref(0, 6180));
const ldv_state_variable_0: ref;
axiom (ldv_state_variable_0 == $sub.ref(0, 7208));
const ldv_state_variable_2: ref;
axiom (ldv_state_variable_2 == $sub.ref(0, 8236));
const ldv_retval_0: ref;
axiom (ldv_retval_0 == $sub.ref(0, 9264));
const ldv_retval_1: ref;
axiom (ldv_retval_1 == $sub.ref(0, 10292));
const ldv_spin: ref;
axiom (ldv_spin == $sub.ref(0, 11320));
const {:count 8} llc_oui_ip: ref;
axiom (llc_oui_ip == $sub.ref(0, 12352));
const {:count 7} atm_policy: ref;
axiom (atm_policy == $sub.ref(0, 13404));
const atm_class_ops: ref;
axiom (atm_class_ops == $sub.ref(0, 14540));
const atm_qdisc_ops: ref;
axiom (atm_qdisc_ops == $sub.ref(0, 15700));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32776));
const .str: ref;
axiom (.str == $sub.ref(0, 16732));
const {:count 15} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 17771));
const {:count 206} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 19001));
const {:count 35} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 20060));
const {:count 28} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 21112));
const {:count 11} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 22147));
const {:count 39} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 23210));
const {:count 24} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 24258));
const {:count 22} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 25304));
const {:count 25} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 26353));
const {:count 13} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 27390));
const {:count 33} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 28447));
const {:count 12} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 29483));
const {:count 39} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 30546));
const pfifo_qdisc_ops: ref;
axiom (pfifo_qdisc_ops == $sub.ref(0, 32784));
const noop_qdisc: ref;
axiom (noop_qdisc == $sub.ref(0, 32792));
const {:count 33} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 31603));
const {:count 16} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 32643));
const {:count 36} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 33703));
const {:count 37} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 34764));
const {:count 33} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 35821));
const {:count 12} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 36857));
const {:count 32} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 37913));
const {:count 12} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 38949));
const {:count 32} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 40005));
const {:count 15} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 41044));
const {:count 35} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 42103));
const {:count 15} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 43142));
const {:count 42} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 44208));
const {:count 26} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 45258));
const {:count 41} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 46323));
const {:count 11} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 47358));
const {:count 42} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 48424));
const {:count 21} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 49469));
const {:count 18} .str.43: ref;
axiom (.str.43 == $sub.ref(0, 50511));
const {:count 60} .str.44: ref;
axiom (.str.44 == $sub.ref(0, 51595));
const {:count 16} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 52635));
const {:count 44} .str.42: ref;
axiom (.str.42 == $sub.ref(0, 53703));
const {:count 12} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 54739));
const {:count 42} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 55805));
const {:count 14} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 56843));
const {:count 42} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 57909));
const {:count 33} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 58966));
const {:count 14} .str.45: ref;
axiom (.str.45 == $sub.ref(0, 60004));
const {:count 70} .str.46: ref;
axiom (.str.46 == $sub.ref(0, 61098));
const {:count 22} .str.47: ref;
axiom (.str.47 == $sub.ref(0, 62144));
const {:count 48} .str.48: ref;
axiom (.str.48 == $sub.ref(0, 63216));
const {:count 28} .str.49: ref;
axiom (.str.49 == $sub.ref(0, 64268));
const {:count 33} .str.50: ref;
axiom (.str.50 == $sub.ref(0, 65325));
const {:count 26} .str.51: ref;
axiom (.str.51 == $sub.ref(0, 66375));
const {:count 24} .str.52: ref;
axiom (.str.52 == $sub.ref(0, 67423));
const {:count 25} .str.53: ref;
axiom (.str.53 == $sub.ref(0, 68472));
const {:count 23} .str.54: ref;
axiom (.str.54 == $sub.ref(0, 69519));
const {:count 12} .str.55: ref;
axiom (.str.55 == $sub.ref(0, 70555));
const {:count 39} .str.56: ref;
axiom (.str.56 == $sub.ref(0, 71618));
const {:count 12} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 72654));
const {:count 29} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 73707));
const {:count 13} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 74744));
const {:count 55} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 75823));
const {:count 14} .str.2.61: ref;
axiom (.str.2.61 == $sub.ref(0, 76861));
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 77893));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const malloc: ref;
axiom (malloc == $sub.ref(0, 78925));
procedure  malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const atm_tc_enqueue: ref;
axiom (atm_tc_enqueue == $sub.ref(0, 79957));
procedure  atm_tc_enqueue($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i24;
  var $i13: i24;
  var $i14: i24;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $p29: ref;
  var $i30: i32;
  var $i31: i64;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $i43: i64;
  var $i44: i1;
  var $p48: ref;
  var $p49: ref;
  var $i50: i64;
  var $i51: i1;
  var $p52: ref;
  var $p53: ref;
  var $i54: i32;
  var $i55: i1;
  var $i56: i32;
  var $p58: ref;
  var $i59: i64;
  var $p60: ref;
  var $i61: i64;
  var $i62: i1;
  var $p63: ref;
  var $i64: i32;
  var $p65: ref;
  var $p66: ref;
  var $i57: i32;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i64;
  var $i76: i1;
  var $i46: i32;
  var $p47: ref;
  var $i77: i32;
  var $i45: i32;
  var $p67: ref;
  var $i68: i32;
  var $p78: ref;
  var $i79: i32;
  var $i80: i64;
  var $i81: i1;
  var $p82: ref;
  var $p84: ref;
  var $p85: ref;
  var $i86: i64;
  var $i87: i1;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i64;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i1;
  var $i96: i1;
  var $i97: i1;
  var $i98: i1;
  var $i99: i1;
  var $i100: i1;
  var $p104: ref;
  var $p105: ref;
  var $i106: i64;
  var $i107: i1;
  var $p108: ref;
  var $p109: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $i114: i64;
  var $i115: i64;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p110: ref;
  var $p119: ref;
  var $p83: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i32;
  var $i123: i1;
  var $p102: ref;
  var $i103: i32;
  var $i124: i32;
  var $i125: i1;
  var $p126: ref;
  var $p127: ref;
  var $i128: i32;
  var $i129: i32;
  var $p130: ref;
  var $p131: ref;
  var $i132: i64;
  var $i133: i1;
  var $p134: ref;
  var $p135: ref;
  var $i136: i32;
  var $i137: i32;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $i141: i64;
  var $i142: i64;
  var $i143: i1;
  var $p144: ref;
  var $p145: ref;
  var $i146: i32;
  var $i147: i32;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $i101: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7276, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := qdisc_priv($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7277, 7} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  // WARNING: call void @llvm.dbg.value(metadata %struct.atm_qdisc_data* %6, i64 0, metadata !7785, metadata !7764), !dbg !7786, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7279, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7279, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7280, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7280, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7281, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7281, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7282, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7282, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str.6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7283, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7283, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7283, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i24($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7283, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i24($i12, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7283, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $or.i24($i13, 397);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7283, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p11, $i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7284, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7284, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7285, 51} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7285, 51} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7285, 33} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7285, 57} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i64($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7285, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := ldv__builtin_expect($i19, 0);
  // WARNING: %21 = call i64 @ldv__builtin_expect(i64 %20, i64 0), !dbg !7804, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7286, 15} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7286, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7287, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := __dynamic_pr_debug.ref.ref.ref.ref.ref($p3, .str.6, $p0, $p1, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7289, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7294, 13} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7294, 13} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i32($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7294, 22} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i24, $sub.i32(0, 65536));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7294, 45} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7294, 45} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7294, 37} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i25, $i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7294, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7295, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i28 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7297, 36} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7297, 36} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7297, 15} true;
  assume {:verifier.code 0} true;
  call $i31 := atm_tc_get($p1, $i30);
  // WARNING: %37 = call i64 @atm_tc_get(%struct.Qdisc* %1, i32 %36), !dbg !7827, !verifier.code !7762
  call {:cexpr "tmp___1"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7298, 12} true;
  assume {:verifier.code 0} true;
  $p32 := $i2p.i64.ref($i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7299, 9} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7299, 30} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i64($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7299, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb7, $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7301, 47} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p5, 128);
  $p36 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7301, 53} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7302, 14} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7302, 45} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 36} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p38, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $p2i.ref.i64($p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 67} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 45} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 42} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i64($i41, $i43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 11} true;
  assume {:verifier.code 0} true;
  $i45 := 0;
  assume {:branchcond $i44} true;
  goto $bb9, $bb10;
$bb7:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7299, 78} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb8:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  $p78, $i79 := $p32, 0;
  goto $bb28;
$bb9:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 11} true;
  assume {:verifier.code 0} true;
  $i46, $p47 := 0, $p39;
  goto $bb12;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i44 == 1));
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb12:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7328, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7305, 33} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7305, 33} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7305, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.i64($p49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7305, 45} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i64($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7305, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7306, 76} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p47, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7306, 76} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7306, 18} true;
  assume {:verifier.code 0} true;
  call $i54 := tc_classify_compat($p0, $p53, $p2);
  // WARNING: %61 = call i32 @tc_classify_compat(%struct.sk_buff* %0, %struct.tcf_proto* %60, %struct.load_weight* %3), !dbg !7858, !verifier.code !7762
  call {:cexpr "result"} boogie_si_record_i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7308, 20} true;
  assume {:verifier.code 0} true;
  $i55 := $slt.i32($i54, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7308, 13} true;
  assume {:verifier.code 0} true;
  $i56 := $i54;
  assume {:branchcond $i55} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb16:
  assume ($i55 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7309, 11} true;
  assume {:verifier.code 0} true;
  $i57 := $i54;
  goto $bb18;
$bb17:
  assume !(($i55 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7324, 54} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p47, 96);
  $p70 := $add.ref($p47, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7324, 59} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7325, 14} true;
  assume {:verifier.code 0} true;
  $p72 := $bitcast.ref.ref($p71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7325, 49} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p72, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 36} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p72, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 11} true;
  assume {:verifier.code 0} true;
  $i75 := $p2i.ref.i64($p74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 42} true;
  assume {:verifier.code 0} true;
  $i76 := $ne.i64($i75, $i43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 11} true;
  assume {:verifier.code 0} true;
  $i46, $p47, $i77 := $i57, $p73, $i57;
  assume {:branchcond $i76} true;
  goto $bb25, $bb26;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7313, 44} true;
  assume {:verifier.code 0} true;
  $p58 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7313, 44} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i64($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7313, 16} true;
  assume {:verifier.code 0} true;
  $p60 := $i2p.i64.ref($i59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7314, 13} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7314, 34} true;
  assume {:verifier.code 0} true;
  $i62 := $eq.i64($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7314, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7315, 39} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7315, 39} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7315, 18} true;
  assume {:verifier.code 0} true;
  call $p65 := lookup_flow($p1, $i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7316, 9} true;
  assume {:verifier.code 0} true;
  $p66 := $p65;
  goto $bb22;
$bb21:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  $p66 := $p60;
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7319, 9} true;
  assume {:verifier.code 0} true;
  $p67, $i68 := $p66, $i56;
  goto $bb23;
$bb23:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7334, 5} true;
  assume {:verifier.code 0} true;
  $p78, $i79 := $p67, $i68;
  goto $bb28;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7305, 86} true;
  assume {:verifier.code 0} true;
  $i57 := $i46;
  goto $bb18;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 11} true;
  assume {:verifier.code 0} true;
  assume ($i76 == 1);
  goto $bb12;
$bb26:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7327, 11} true;
  assume {:verifier.code 0} true;
  $i45 := $i77;
  goto $bb11;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7332, 7} true;
  assume {:verifier.code 0} true;
  $p67, $i68 := $0.ref, $i45;
  goto $bb23;
$bb28:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7338, 7} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7338, 28} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i64($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7338, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7339, 17} true;
  assume {:verifier.code 0} true;
  $p82 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7340, 3} true;
  assume {:verifier.code 0} true;
  $p83 := $p4;
  goto $bb32;
$bb31:
  assume !(($i81 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7341, 31} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p78, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7341, 31} true;
  assume {:verifier.code 0} true;
  $p85 := $load.ref($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7341, 9} true;
  assume {:verifier.code 0} true;
  $i86 := $p2i.ref.i64($p85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7341, 35} true;
  assume {:verifier.code 0} true;
  $i87 := $ne.i64($i86, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7341, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb33, $bb34;
$bb32:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7364, 34} true;
  assume {:verifier.code 0} true;
  $p120 := $p83;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7364, 34} true;
  assume {:verifier.code 0} true;
  $p121 := $load.ref($M.0, $p120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7364, 9} true;
  assume {:verifier.code 0} true;
  call $i122 := qdisc_enqueue($p0, $p121);
  // WARNING: %140 = call i32 @qdisc_enqueue(%struct.sk_buff* %0, %struct.Qdisc* %139), !dbg !7932, !verifier.code !7762
  call {:cexpr "ret"} boogie_si_record_i32($i122);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7365, 11} true;
  assume {:verifier.code 0} true;
  $i123 := $ne.i32($i122, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7365, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb58, $bb59;
$bb33:
  assume ($i87 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7342, 66} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p78, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7342, 66} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7342, 72} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p89, 1296);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7342, 72} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i64($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7342, 39} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7342, 45} true;
  assume {:verifier.code 0} true;
  $p93 := $bitcast.ref.ref($p92);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7342, 45} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p93, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7342, 57} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p94, $i91);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7343, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  $i95 := $slt.i32($i79, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i95 == 1);
  assume {:verifier.code 0} true;
  $i98 := $slt.i32($i79, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb45, $bb46;
$bb38:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  $i96 := $slt.i32($i79, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb39, $bb41;
$bb39:
  assume {:verifier.code 0} true;
  assume ($i96 == 1);
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7349, 5} true;
  assume {:verifier.code 0} true;
  call kfree_skb($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7350, 5} true;
  assume {:verifier.code 0} true;
  $i101 := 65536;
  goto $bb51;
$bb41:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  $i97 := $eq.i32($i79, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i97 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7346, 21} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb43:
  assume {:verifier.code 0} true;
  assume !(($i97 == 1));
  goto $bb44;
$bb44:
  assume {:verifier.code 0} true;
  goto $bb57;
$bb45:
  assume ($i98 == 1);
  assume {:verifier.code 0} true;
  $i100 := $eq.i32($i79, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb49, $bb50;
$bb46:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  $i99 := $eq.i32($i79, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7352, 5} true;
  assume {:verifier.code 0} true;
  call kfree_skb($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7353, 5} true;
  assume {:verifier.code 0} true;
  $p102, $i103 := $p78, 3;
  goto $bb52;
$bb48:
  assume {:verifier.code 0} true;
  assume !(($i99 == 1));
  goto $bb44;
$bb49:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7355, 31} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p78, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7355, 31} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7355, 9} true;
  assume {:verifier.code 0} true;
  $i106 := $p2i.ref.i64($p105);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7355, 38} true;
  assume {:verifier.code 0} true;
  $i107 := $ne.i64($i106, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7355, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb53, $bb54;
$bb50:
  assume {:verifier.code 0} true;
  assume !(($i100 == 1));
  goto $bb44;
$bb51:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7390, 1} true;
  assume {:verifier.code 0} true;
  $r := $i101;
  $exn := false;
  return;
$bb52:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7367, 14} true;
  assume {:verifier.code 0} true;
  $i124 := $and.i32($i103, 65536);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7367, 23} true;
  assume {:verifier.code 0} true;
  $i125 := $eq.i32($i124, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7367, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb60, $bb61;
$bb53:
  assume ($i107 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7356, 20} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p78, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7356, 20} true;
  assume {:verifier.code 0} true;
  $p109 := $load.ref($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7357, 5} true;
  assume {:verifier.code 0} true;
  $p110 := $p109;
  goto $bb55;
$bb54:
  assume !(($i107 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7358, 91} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7358, 97} true;
  assume {:verifier.code 0} true;
  $p112 := $bitcast.ref.ref($p111);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7358, 97} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p112, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7358, 97} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i64($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7358, 109} true;
  assume {:verifier.code 0} true;
  $i115 := $or.i64($i114, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7358, 39} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7358, 45} true;
  assume {:verifier.code 0} true;
  $p117 := $bitcast.ref.ref($p116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7358, 45} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p117, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7358, 57} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p118, $i115);
  assume {:verifier.code 0} true;
  $p110 := $p78;
  goto $bb55;
$bb55:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7360, 5} true;
  assume {:verifier.code 0} true;
  $p119 := $p110;
  goto $bb56;
$bb56:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $p83 := $p119;
  goto $bb32;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7361, 5} true;
  assume {:verifier.code 0} true;
  $p119 := $p78;
  goto $bb56;
$bb58:
  assume ($i123 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7365, 17} true;
  assume {:verifier.code 0} true;
  $p102, $i103 := $p83, $i122;
  goto $bb52;
$bb59:
  assume !(($i123 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb60:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7368, 32} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p1, 252);
  $p127 := $add.ref($add.ref($p1, 252), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7368, 39} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i32($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7368, 45} true;
  assume {:verifier.code 0} true;
  $i129 := $add.i32($i128, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7368, 12} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p1, 252);
  $p131 := $add.ref($add.ref($p1, 252), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7368, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p131, $i129);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7369, 11} true;
  assume {:verifier.code 0} true;
  $i132 := $p2i.ref.i64($p102);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7369, 32} true;
  assume {:verifier.code 0} true;
  $i133 := $ne.i64($i132, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7369, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i133} true;
  goto $bb62, $bb63;
$bb61:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb62:
  assume ($i133 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7370, 36} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p102, 72);
  $p135 := $add.ref($add.ref($p102, 72), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7370, 43} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i32($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7370, 49} true;
  assume {:verifier.code 0} true;
  $i137 := $add.i32($i136, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7370, 15} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p102, 72);
  $p139 := $add.ref($add.ref($p102, 72), 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7370, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p139, $i137);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7371, 7} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume !(($i133 == 1));
  assume {:verifier.code 0} true;
  goto $bb64;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7374, 5} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7377, 5} true;
  assume {:verifier.code 0} true;
  $i101 := $i103;
  goto $bb51;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7381, 29} true;
  assume {:verifier.code 0} true;
  $p140 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7381, 7} true;
  assume {:verifier.code 0} true;
  $i141 := $p2i.ref.i64($p140);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7381, 38} true;
  assume {:verifier.code 0} true;
  $i142 := $p2i.ref.i64($p83);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7381, 35} true;
  assume {:verifier.code 0} true;
  $i143 := $eq.i64($i141, $i142);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7381, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb67, $bb68;
$bb67:
  assume ($i143 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7382, 24} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p1, 136);
  $p145 := $add.ref($add.ref($p1, 136), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7382, 26} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i32($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7382, 31} true;
  assume {:verifier.code 0} true;
  $i147 := $add.i32($i146, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7382, 10} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p1, 136);
  $p149 := $add.ref($add.ref($p1, 136), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7382, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p149, $i147);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7383, 5} true;
  assume {:verifier.code 0} true;
  $i101 := 0;
  goto $bb51;
$bb68:
  assume !(($i143 == 1));
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7387, 25} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p5, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7387, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_schedule($p150);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7388, 3} true;
  assume {:verifier.code 0} true;
  $i101 := 131072;
  goto $bb51;
}
const atm_tc_dequeue: ref;
axiom (atm_tc_dequeue == $sub.ref(0, 80989));
procedure  atm_tc_dequeue($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7540, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7541, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7542, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7542, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7543, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7543, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, .str.11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7544, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7544, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7545, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7545, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7546, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7546, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7546, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7546, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7546, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $or.i24($i11, 533);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7546, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p9, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7547, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7547, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7548, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7548, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7548, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7548, 57} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7548, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  // WARNING: %19 = call i64 @ldv__builtin_expect(i64 %18, i64 0), !dbg !7798, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7549, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7549, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7550, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := __dynamic_pr_debug.ref.ref.ref.ref($p1, .str.12, $p0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7551, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7554, 25} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p3, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7554, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_schedule($p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7555, 33} true;
  assume {:verifier.code 0} true;
  $p22 := $p3;
  $p23 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7555, 38} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7555, 9} true;
  assume {:verifier.code 0} true;
  call $p25 := qdisc_dequeue_peeked($p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7556, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7556, 27} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7556, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7557, 24} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 136);
  $p29 := $add.ref($add.ref($p0, 136), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7557, 26} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7557, 31} true;
  assume {:verifier.code 0} true;
  $i31 := $sub.i32($i30, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7557, 10} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 136);
  $p33 := $add.ref($add.ref($p0, 136), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7557, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p33, $i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7558, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7561, 3} true;
  assume {:verifier.code 0} true;
  $r := $p25;
  $exn := false;
  return;
}
const atm_tc_peek: ref;
axiom (atm_tc_peek == $sub.ref(0, 82021));
procedure  atm_tc_peek($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7573, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7574, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7575, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7575, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7576, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7576, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, .str.20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7577, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7577, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7578, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7578, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7579, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7579, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7579, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7579, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7579, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $or.i24($i11, 545);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7579, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p9, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7580, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7580, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7581, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7581, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7581, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7581, 57} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7581, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  // WARNING: %19 = call i64 @ldv__builtin_expect(i64 %18, i64 0), !dbg !7798, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7582, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7582, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7583, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := __dynamic_pr_debug.ref.ref.ref.ref($p1, .str.21, $p0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7584, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7587, 21} true;
  assume {:verifier.code 0} true;
  $p21 := $p3;
  $p22 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7587, 26} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7587, 30} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7587, 30} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7587, 36} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7587, 36} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7587, 46} true;
  assume {:verifier.code 0} true;
  $p28 := $p3;
  $p29 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7587, 51} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  call $p31 := devirtbounce($p27, $p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7588, 3} true;
  assume {:verifier.code 0} true;
  $r := $p31;
  $exn := false;
  return;
}
const atm_tc_drop: ref;
axiom (atm_tc_drop == $sub.ref(0, 83053));
procedure  atm_tc_drop($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $p28: ref;
  var $i29: i64;
  var $i30: i1;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i64;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i1;
  var $i50: i32;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i64;
  var $i59: i1;
  var $p31: ref;
  var $i51: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7603, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7604, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7605, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7605, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7606, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7606, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, .str.22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7607, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7607, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7608, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7608, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7609, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7609, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7609, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7609, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7609, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $or.i24($i11, 556);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7609, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p9, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7610, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7610, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7611, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7611, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7611, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7611, 57} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7611, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  // WARNING: %19 = call i64 @ldv__builtin_expect(i64 %18, i64 0), !dbg !7798, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7612, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7612, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7613, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := __dynamic_pr_debug.ref.ref.ref.ref($p1, .str.23, $p0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7614, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7617, 43} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p3, 128);
  $p22 := $add.ref($p3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7617, 49} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7618, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7618, 41} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 32} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p24, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 63} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 41} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 38} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i27, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 7} true;
  assume {:verifier.code 0} true;
  $p31 := $p25;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i30 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7635, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7621, 31} true;
  assume {:verifier.code 0} true;
  $p32 := $p31;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7621, 31} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7621, 35} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7621, 35} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7621, 41} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7621, 41} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7621, 7} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i64($p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7621, 46} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i64($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7621, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7622, 22} true;
  assume {:verifier.code 0} true;
  $p40 := $p31;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7622, 22} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7622, 26} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7622, 26} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7622, 32} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, 64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7622, 32} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7622, 45} true;
  assume {:verifier.code 0} true;
  $p46 := $p31;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7622, 45} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  call $i48 := devirtbounce.1($p45, $p47);
  // WARNING: %53 = call i32 @devirtbounce.1(i32 (%struct.Qdisc*)* %50, %struct.Qdisc* %52)
  call {:cexpr "len"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7623, 13} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7623, 9} true;
  assume {:verifier.code 0} true;
  $i50 := $i48;
  assume {:branchcond $i49} true;
  goto $bb11, $bb12;
$bb10:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb11:
  assume ($i49 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7624, 7} true;
  assume {:verifier.code 0} true;
  $i51 := $i50;
  goto $bb13;
$bb12:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7642, 1} true;
  assume {:verifier.code 0} true;
  $r := $i51;
  $exn := false;
  return;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7628, 3} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7631, 50} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p31, 96);
  $p53 := $add.ref($p31, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7631, 55} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7632, 10} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7632, 45} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 32} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p55, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 7} true;
  assume {:verifier.code 0} true;
  $i58 := $p2i.ref.i64($p57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 38} true;
  assume {:verifier.code 0} true;
  $i59 := $ne.i64($i58, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 7} true;
  assume {:verifier.code 0} true;
  $p31 := $p56;
  assume {:branchcond $i59} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 7} true;
  assume {:verifier.code 0} true;
  assume ($i59 == 1);
  goto $bb7;
$bb17:
  assume !(($i59 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7634, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7640, 3} true;
  assume {:verifier.code 0} true;
  $i51 := 0;
  goto $bb13;
}
const atm_tc_init: ref;
axiom (atm_tc_init == $sub.ref(0, 84085));
procedure  atm_tc_init($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i24;
  var $i13: i24;
  var $i14: i24;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i1;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i24;
  var $i50: i24;
  var $i51: i24;
  var $p52: ref;
  var $p53: ref;
  var $i54: i8;
  var $i55: i64;
  var $i56: i64;
  var $i57: i64;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $i77: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7653, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7654, 7} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7655, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7655, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7656, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7656, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7657, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7657, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7658, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7658, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str.14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7659, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7659, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7659, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i24($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7659, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i24($i12, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7659, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $or.i24($i13, 568);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7659, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p11, $i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7660, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7660, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7661, 51} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7661, 51} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7661, 33} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7661, 57} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i64($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7661, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := ldv__builtin_expect($i19, 0);
  // WARNING: %21 = call i64 @ldv__builtin_expect(i64 %20, i64 0), !dbg !7802, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7662, 15} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7662, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7663, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := __dynamic_pr_debug.ref.ref.ref.ref.ref($p2, .str.14, $p0, $p5, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7665, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7668, 23} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7668, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7669, 23} true;
  assume {:verifier.code 0} true;
  $p24 := $p5;
  $p25 := $add.ref($p5, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7669, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7670, 17} true;
  assume {:verifier.code 0} true;
  $p26 := $p5;
  $p27 := $add.ref($p5, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7670, 33} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p5, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7670, 3} true;
  assume {:verifier.code 0} true;
  call list_add($p27, $p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7671, 38} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7671, 38} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7672, 38} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7672, 38} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7671, 15} true;
  assume {:verifier.code 0} true;
  call $p33 := qdisc_create_dflt($p30, pfifo_qdisc_ops, $i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7671, 6} true;
  assume {:verifier.code 0} true;
  $p34 := $p5;
  $p35 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7671, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p35, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7673, 26} true;
  assume {:verifier.code 0} true;
  $p36 := $p5;
  $p37 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7673, 31} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7673, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7673, 33} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i64($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7673, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7674, 8} true;
  assume {:verifier.code 0} true;
  $p41 := $p5;
  $p42 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7674, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p42, noop_qdisc);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7675, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7678, 18} true;
  assume {:verifier.code 0} true;
  $p43 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7678, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p43, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7679, 18} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7679, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p44, .str.13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7680, 18} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7680, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p45, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7681, 18} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7681, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p46, .str.15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7682, 18} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7682, 18} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7682, 25} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i24($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7682, 25} true;
  assume {:verifier.code 0} true;
  $i50 := $and.i24($i49, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7682, 25} true;
  assume {:verifier.code 0} true;
  $i51 := $or.i24($i50, 576);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7682, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p48, $i51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7683, 18} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7683, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p52, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7684, 55} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7684, 55} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i8($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7684, 33} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i8.i64($i54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7684, 61} true;
  assume {:verifier.code 0} true;
  $i56 := $and.i64($i55, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7684, 13} true;
  assume {:verifier.code 0} true;
  call $i57 := ldv__builtin_expect($i56, 0);
  // WARNING: %64 = call i64 @ldv__builtin_expect(i64 %63, i64 0), !dbg !7848, !verifier.code !7762
  call {:cexpr "tmp___1"} boogie_si_record_i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7685, 15} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i64($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7685, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7686, 84} true;
  assume {:verifier.code 0} true;
  $p59 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7687, 27} true;
  assume {:verifier.code 0} true;
  $p60 := $p5;
  $p61 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7687, 32} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7686, 5} true;
  assume {:verifier.code 0} true;
  call $i63 := __dynamic_pr_debug.ref.ref.ref.ref($p3, .str.15, $p59, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7688, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7691, 6} true;
  assume {:verifier.code 0} true;
  $p64 := $p5;
  $p65 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7691, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p65, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7692, 6} true;
  assume {:verifier.code 0} true;
  $p66 := $p5;
  $p67 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7692, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p67, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7693, 6} true;
  assume {:verifier.code 0} true;
  $p68 := $p5;
  $p69 := $add.ref($p5, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7693, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p69, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7694, 26} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7694, 26} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i32($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7694, 6} true;
  assume {:verifier.code 0} true;
  $p72 := $p5;
  $p73 := $add.ref($p5, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7694, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p73, $i71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7695, 6} true;
  assume {:verifier.code 0} true;
  $p74 := $p5;
  $p75 := $add.ref($p5, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7695, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p75, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7696, 21} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p5, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7696, 46} true;
  assume {:verifier.code 0} true;
  $i77 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7696, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_init($p76, sch_atm_dequeue, $i77);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7697, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const atm_tc_reset: ref;
axiom (atm_tc_reset == $sub.ref(0, 85117));
procedure  atm_tc_reset($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $p28: ref;
  var $i29: i64;
  var $i30: i1;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $i41: i1;
  var $p31: ref;
  var $p42: ref;
  var $p43: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7711, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7712, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7713, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7713, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7714, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7714, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, .str.9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7715, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7715, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7716, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7716, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7717, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7717, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7717, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7717, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7717, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $or.i24($i11, 591);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7717, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p9, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7718, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7718, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7719, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7719, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7719, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7719, 57} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7719, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  // WARNING: %19 = call i64 @ldv__builtin_expect(i64 %18, i64 0), !dbg !7798, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7720, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7720, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7721, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := __dynamic_pr_debug.ref.ref.ref.ref($p1, .str.10, $p0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7722, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7725, 43} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p3, 128);
  $p22 := $add.ref($p3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7725, 49} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7726, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7726, 41} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 32} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p24, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 63} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 41} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 38} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i27, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 7} true;
  assume {:verifier.code 0} true;
  $p31 := $p25;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i30 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7734, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7729, 21} true;
  assume {:verifier.code 0} true;
  $p32 := $p31;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7729, 21} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7729, 3} true;
  assume {:verifier.code 0} true;
  call qdisc_reset($p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7730, 50} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p31, 96);
  $p35 := $add.ref($p31, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7730, 55} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7731, 10} true;
  assume {:verifier.code 0} true;
  $p37 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7731, 45} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p37, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 32} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p37, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 38} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i64($i40, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 7} true;
  assume {:verifier.code 0} true;
  $p31 := $p38;
  assume {:branchcond $i41} true;
  goto $bb9, $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 7} true;
  assume {:verifier.code 0} true;
  assume ($i41 == 1);
  goto $bb7;
$bb10:
  assume !(($i41 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7733, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7738, 8} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 136);
  $p43 := $add.ref($add.ref($p0, 136), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7738, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p43, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7739, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const atm_tc_destroy: ref;
axiom (atm_tc_destroy == $sub.ref(0, 86149));
procedure  atm_tc_destroy($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $p28: ref;
  var $i29: i64;
  var $i30: i1;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i1;
  var $p31: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i64;
  var $p53: ref;
  var $i54: i64;
  var $i55: i1;
  var $p58: ref;
  var $i59: i32;
  var $i60: i1;
  var $p61: ref;
  var $i62: i32;
  var $i63: i32;
  var $i64: i64;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i64;
  var $i72: i1;
  var $p56: ref;
  var $p57: ref;
  var $p73: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7757, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7758, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7759, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7759, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7760, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7760, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, .str.1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7761, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7761, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7762, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7762, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7763, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7763, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7763, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7763, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7763, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $or.i24($i11, 602);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7763, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p9, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7764, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7764, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7765, 51} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7765, 51} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7765, 33} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7765, 57} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7765, 13} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  // WARNING: %19 = call i64 @ldv__builtin_expect(i64 %18, i64 0), !dbg !7798, !verifier.code !7762
  call {:cexpr "tmp___1"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7766, 15} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7766, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7767, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := __dynamic_pr_debug.ref.ref.ref.ref($p1, .str.3, $p0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7768, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7771, 43} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p3, 128);
  $p22 := $add.ref($p3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7771, 49} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7772, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7772, 41} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 32} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($add.ref($p24, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 63} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 41} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 38} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i27, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 7} true;
  assume {:verifier.code 0} true;
  $p31 := $p25;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i30 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7780, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7775, 29} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7775, 3} true;
  assume {:verifier.code 0} true;
  call tcf_destroy_chain($p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7776, 50} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p31, 96);
  $p34 := $add.ref($p31, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7776, 55} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7777, 10} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7777, 45} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p36, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 32} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p36, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 38} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i64($i39, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 7} true;
  assume {:verifier.code 0} true;
  $p31 := $p37;
  assume {:branchcond $i40} true;
  goto $bb9, $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 7} true;
  assume {:verifier.code 0} true;
  assume ($i40 == 1);
  goto $bb7;
$bb10:
  assume !(($i40 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7779, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7784, 47} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p3, 128);
  $p42 := $add.ref($p3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7784, 53} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7785, 10} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7785, 45} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7786, 50} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p44, $mul.ref($sub.ref(0, 88), 128)), 96);
  $p47 := $add.ref($add.ref($p44, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7786, 55} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7787, 13} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7787, 48} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p49, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 32} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($add.ref($p44, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 7} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 63} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 41} true;
  assume {:verifier.code 0} true;
  $i54 := $p2i.ref.i64($p53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 38} true;
  assume {:verifier.code 0} true;
  $i55 := $ne.i64($i52, $i54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i55 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 7} true;
  assume {:verifier.code 0} true;
  $p56, $p57 := $p50, $p45;
  goto $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i55 == 1));
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7801, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7790, 13} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p57, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7790, 13} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7790, 17} true;
  assume {:verifier.code 0} true;
  $i60 := $sgt.i32($i59, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7790, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7791, 57} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p57, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7791, 57} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7791, 5} true;
  assume {:verifier.code 0} true;
  call $i63 := printk.ref.ref.i32(.str.4, $p57, $i62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7792, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7795, 19} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7795, 3} true;
  assume {:verifier.code 0} true;
  call atm_tc_put($p0, $i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7797, 53} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p56, 96);
  $p66 := $add.ref($p56, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7797, 58} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7798, 13} true;
  assume {:verifier.code 0} true;
  $p68 := $bitcast.ref.ref($p67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7798, 48} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p68, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 32} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p56, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 7} true;
  assume {:verifier.code 0} true;
  $i71 := $p2i.ref.i64($p70);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 38} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i64($i71, $i54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 7} true;
  assume {:verifier.code 0} true;
  $p56, $p57 := $p69, $p56;
  assume {:branchcond $i72} true;
  goto $bb20, $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 7} true;
  assume {:verifier.code 0} true;
  assume ($i72 == 1);
  goto $bb15;
$bb21:
  assume !(($i72 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7800, 7} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7805, 21} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p3, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7805, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_kill($p73);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7806, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const atm_tc_dump: ref;
axiom (atm_tc_dump == $sub.ref(0, 87181));
procedure  atm_tc_dump($p0: ref, $p1: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7969, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const qdisc_priv: ref;
axiom (qdisc_priv == $sub.ref(0, 88213));
procedure  qdisc_priv($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6520, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6520, 21} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 448);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6520, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 89245));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !8450, metadata !7764), !dbg !8451, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6148, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __dynamic_pr_debug: ref;
axiom (__dynamic_pr_debug == $sub.ref(0, 90277));
procedure  __dynamic_pr_debug.ref.ref.ref.ref.ref.ref.ref($p0: ref, $p1: ref, p.2: ref, p.3: ref, p.4: ref, p.5: ref, p.6: ref)
  returns ($r: i32);
procedure  __dynamic_pr_debug.ref.ref.ref.ref($p0: ref, $p1: ref, p.2: ref, p.3: ref)
  returns ($r: i32);
procedure  __dynamic_pr_debug.ref.ref.ref.ref.ref($p0: ref, $p1: ref, p.2: ref, p.3: ref, p.4: ref)
  returns ($r: i32);
procedure  __dynamic_pr_debug.ref.ref.ref($p0: ref, $p1: ref, p.2: ref)
  returns ($r: i32);
procedure  __dynamic_pr_debug.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
procedure  __dynamic_pr_debug.ref.ref($p0: ref, $p1: ref)
  returns ($r: i32);
procedure  __dynamic_pr_debug.ref.ref.i64($p0: ref, $p1: ref, p.2: i64)
  returns ($r: i32);
procedure  __dynamic_pr_debug.ref.ref.i32.i32.i32($p0: ref, $p1: ref, p.2: i32, p.3: i32, p.4: i32)
  returns ($r: i32);
procedure  __dynamic_pr_debug.ref.ref.ref.ref.i32.i32.ref.ref($p0: ref, $p1: ref, p.2: ref, p.3: ref, p.4: i32, p.5: i32, p.6: ref, p.7: ref)
  returns ($r: i32);
procedure  __dynamic_pr_debug.ref.ref.ref.ref.i32($p0: ref, $p1: ref, p.2: ref, p.3: ref, p.4: i32)
  returns ($r: i32);
const tcf_destroy_chain: ref;
axiom (tcf_destroy_chain == $sub.ref(0, 91309));
procedure  tcf_destroy_chain($p0: ref);
const printk: ref;
axiom (printk == $sub.ref(0, 92341));
procedure  printk.ref.i32($p0: ref, p.1: i32)
  returns ($r: i32);
procedure  printk.ref.ref.i32($p0: ref, p.1: ref, p.2: i32)
  returns ($r: i32);
const atm_tc_put: ref;
axiom (atm_tc_put == $sub.ref(0, 93373));
procedure  atm_tc_put($p0: ref, $i1: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i24;
  var $i16: i24;
  var $i17: i24;
  var $p18: ref;
  var $p19: ref;
  var $i20: i8;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $i24: i1;
  var $i25: i32;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i24;
  var $i40: i24;
  var $i41: i24;
  var $p42: ref;
  var $p43: ref;
  var $i44: i8;
  var $i45: i64;
  var $i46: i64;
  var $i47: i64;
  var $i48: i1;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i24;
  var $i58: i24;
  var $i59: i24;
  var $p60: ref;
  var $p61: ref;
  var $i62: i8;
  var $i63: i64;
  var $i64: i64;
  var $i65: i64;
  var $i66: i1;
  var $p67: ref;
  var $p68: ref;
  var $i69: i32;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i64;
  var $i76: i1;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i24;
  var $i84: i24;
  var $i85: i24;
  var $p86: ref;
  var $p87: ref;
  var $i88: i8;
  var $i89: i64;
  var $i90: i64;
  var $i91: i64;
  var $i92: i1;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $i98: i64;
  var $i99: i32;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $i111: i64;
  var $i112: i1;
  var $p113: ref;
  var $p114: ref;
  var $i115: i64;
  var $p116: ref;
  var $i117: i64;
  var $i118: i64;
  var $i119: i1;
  var $p120: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !8457, metadata !7764), !dbg !8458, !verifier.code !7762
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6703, 9} true;
  assume {:verifier.code 0} true;
  call $p6 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6704, 7} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6705, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $i2p.i64.ref($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6706, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6706, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6707, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6707, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, .str.36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6708, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6708, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6709, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6709, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, .str.37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6710, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6710, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6710, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i24($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6710, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i24($i15, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6710, 21} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i24($i16, 168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6710, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p14, $i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6711, 14} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6711, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6712, 51} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6712, 51} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6712, 33} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6712, 57} true;
  assume {:verifier.code 0} true;
  $i22 := $and.i64($i21, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6712, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := ldv__builtin_expect($i22, 0);
  // WARNING: %24 = call i64 @ldv__builtin_expect(i64 %23, i64 0), !dbg !7809, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6713, 15} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6713, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6714, 5} true;
  assume {:verifier.code 0} true;
  call $i25 := __dynamic_pr_debug.ref.ref.ref.ref.ref($p2, .str.37, $p0, $p7, $p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6716, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6719, 21} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p8, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6719, 21} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6719, 25} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32($i27, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6719, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p8, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6719, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6720, 13} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p8, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6720, 13} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6720, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6720, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6721, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6783, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6725, 18} true;
  assume {:verifier.code 0} true;
  $p33 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6725, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p33, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6726, 18} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6726, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p34, .str.36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6727, 18} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6727, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p35, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6728, 18} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6728, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p36, .str.38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6729, 18} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6729, 18} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6729, 25} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i24($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6729, 25} true;
  assume {:verifier.code 0} true;
  $i40 := $and.i24($i39, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6729, 25} true;
  assume {:verifier.code 0} true;
  $i41 := $or.i24($i40, 171);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6729, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p38, $i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6730, 18} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6730, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p42, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6731, 55} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6731, 55} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i8($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6731, 33} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i8.i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6731, 61} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i64($i45, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6731, 13} true;
  assume {:verifier.code 0} true;
  call $i47 := ldv__builtin_expect($i46, 0);
  // WARNING: %54 = call i64 @ldv__builtin_expect(i64 %53, i64 0), !dbg !7843, !verifier.code !7762
  call {:cexpr "tmp___1"} boogie_si_record_i64($i47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6732, 15} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i64($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6732, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6733, 5} true;
  assume {:verifier.code 0} true;
  call $i49 := __dynamic_pr_debug.ref.ref($p3, .str.38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6734, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6737, 25} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p8, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6737, 3} true;
  assume {:verifier.code 0} true;
  call list_del_init($p50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6738, 18} true;
  assume {:verifier.code 0} true;
  $p51 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6738, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p51, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6739, 18} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6739, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p52, .str.36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6740, 18} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6740, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p53, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6741, 18} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6741, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p54, .str.39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6742, 18} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6742, 18} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6742, 25} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i24($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6742, 25} true;
  assume {:verifier.code 0} true;
  $i58 := $and.i24($i57, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6742, 25} true;
  assume {:verifier.code 0} true;
  $i59 := $or.i24($i58, 173);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6742, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p56, $i59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6743, 18} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p4, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6743, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p60, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6744, 55} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p4, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6744, 55} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i8($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6744, 33} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i8.i64($i62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6744, 61} true;
  assume {:verifier.code 0} true;
  $i64 := $and.i64($i63, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6744, 13} true;
  assume {:verifier.code 0} true;
  call $i65 := ldv__builtin_expect($i64, 0);
  // WARNING: %75 = call i64 @ldv__builtin_expect(i64 %74, i64 0), !dbg !7869, !verifier.code !7762
  call {:cexpr "tmp___2"} boogie_si_record_i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6745, 15} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i64($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6745, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6746, 74} true;
  assume {:verifier.code 0} true;
  $p67 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6746, 74} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6746, 5} true;
  assume {:verifier.code 0} true;
  call $i69 := __dynamic_pr_debug.ref.ref.ref($p4, .str.39, $p68);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6747, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6750, 23} true;
  assume {:verifier.code 0} true;
  $p70 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6750, 23} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6750, 3} true;
  assume {:verifier.code 0} true;
  call qdisc_destroy($p71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6751, 29} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6751, 3} true;
  assume {:verifier.code 0} true;
  call tcf_destroy_chain($p72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6752, 29} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p8, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6752, 29} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6752, 7} true;
  assume {:verifier.code 0} true;
  $i75 := $p2i.ref.i64($p74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6752, 34} true;
  assume {:verifier.code 0} true;
  $i76 := $ne.i64($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6752, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6753, 20} true;
  assume {:verifier.code 0} true;
  $p77 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6753, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p77, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6754, 20} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6754, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p78, .str.36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6755, 20} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p5, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6755, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p79, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6756, 20} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6756, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p80, .str.40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6757, 20} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6757, 20} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p81);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6757, 27} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i24($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6757, 27} true;
  assume {:verifier.code 0} true;
  $i84 := $and.i24($i83, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6757, 27} true;
  assume {:verifier.code 0} true;
  $i85 := $or.i24($i84, 178);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6757, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p82, $i85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6758, 20} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p5, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6758, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p86, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6759, 57} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p5, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6759, 57} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i8($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6759, 35} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i8.i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6759, 63} true;
  assume {:verifier.code 0} true;
  $i90 := $and.i64($i89, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6759, 15} true;
  assume {:verifier.code 0} true;
  call $i91 := ldv__builtin_expect($i90, 0);
  // WARNING: %105 = call i64 @ldv__builtin_expect(i64 %104, i64 0), !dbg !7904, !verifier.code !7762
  call {:cexpr "tmp___4"} boogie_si_record_i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6760, 17} true;
  assume {:verifier.code 0} true;
  $i92 := $ne.i64($i91, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6760, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb16:
  assume ($i92 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6761, 44} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p8, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6761, 44} true;
  assume {:verifier.code 0} true;
  $p94 := $load.ref($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6761, 51} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p94, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6761, 51} true;
  assume {:verifier.code 0} true;
  $p96 := $load.ref($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6761, 58} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p96, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6761, 17} true;
  assume {:verifier.code 0} true;
  call $i98 := atomic_long_read($p97);
  // WARNING: %113 = call i64 @atomic_long_read(%union.ktime* %112), !dbg !7914, !verifier.code !7762
  call {:cexpr "tmp___3"} boogie_si_record_i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6762, 7} true;
  assume {:verifier.code 0} true;
  call $i99 := __dynamic_pr_debug.ref.ref.i64($p5, .str.40, $i98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6763, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i92 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6766, 30} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p8, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6766, 30} true;
  assume {:verifier.code 0} true;
  $p101 := $load.ref($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6766, 12} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6766, 12} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6766, 18} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p103, 1464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6766, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p104, $p101);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6767, 17} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p8, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6767, 17} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6767, 24} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p106, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6767, 24} true;
  assume {:verifier.code 0} true;
  $p108 := $load.ref($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6767, 5} true;
  assume {:verifier.code 0} true;
  call fput($p108);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6768, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6771, 29} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p8, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6771, 29} true;
  assume {:verifier.code 0} true;
  $p110 := $load.ref($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6771, 7} true;
  assume {:verifier.code 0} true;
  $i111 := $p2i.ref.i64($p110);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6771, 36} true;
  assume {:verifier.code 0} true;
  $i112 := $ne.i64($i111, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6771, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i112} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i112 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6772, 43} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p8, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6772, 43} true;
  assume {:verifier.code 0} true;
  $p114 := $load.ref($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6772, 21} true;
  assume {:verifier.code 0} true;
  $i115 := $p2i.ref.i64($p114);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6772, 5} true;
  assume {:verifier.code 0} true;
  call atm_tc_put($p0, $i115);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6773, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i112 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6776, 29} true;
  assume {:verifier.code 0} true;
  $p116 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6776, 7} true;
  assume {:verifier.code 0} true;
  $i117 := $p2i.ref.i64($p116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6776, 38} true;
  assume {:verifier.code 0} true;
  $i118 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6776, 35} true;
  assume {:verifier.code 0} true;
  $i119 := $ne.i64($i117, $i118);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6776, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i119 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6777, 11} true;
  assume {:verifier.code 0} true;
  $p120 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6777, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6778, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i119 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6781, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
}
const tasklet_kill: ref;
axiom (tasklet_kill == $sub.ref(0, 94405));
procedure  tasklet_kill($p0: ref);
const list_del_init: ref;
axiom (list_del_init == $sub.ref(0, 95437));
procedure  list_del_init($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5996, 3} true;
  assume {:verifier.code 0} true;
  call __list_del_entry($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5997, 3} true;
  assume {:verifier.code 0} true;
  call INIT_LIST_HEAD($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5998, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const qdisc_destroy: ref;
axiom (qdisc_destroy == $sub.ref(0, 96469));
procedure  qdisc_destroy($p0: ref);
const atomic_long_read: ref;
axiom (atomic_long_read == $sub.ref(0, 97501));
procedure  atomic_long_read($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6043, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := atomic64_read($p0);
  // WARNING: %2 = call i64 @atomic64_read(%union.ktime* %0), !dbg !7771, !verifier.code !7767
  call {:cexpr "tmp"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6044, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const fput: ref;
axiom (fput == $sub.ref(0, 98533));
procedure  fput($p0: ref);
const kfree: ref;
axiom (kfree == $sub.ref(0, 99565));
procedure  kfree($p0: ref);
const atomic64_read: ref;
axiom (atomic64_read == $sub.ref(0, 100597));
procedure  atomic64_read($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $i2: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6033, 45} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6033, 18} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6033, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const __list_del_entry: ref;
axiom (__list_del_entry == $sub.ref(0, 101629));
procedure  __list_del_entry($p0: ref);
const INIT_LIST_HEAD: ref;
axiom (INIT_LIST_HEAD == $sub.ref(0, 102661));
procedure  INIT_LIST_HEAD($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5975, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5975, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p1, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5976, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5976, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5977, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const qdisc_reset: ref;
axiom (qdisc_reset == $sub.ref(0, 103693));
procedure  qdisc_reset($p0: ref);
const list_add: ref;
axiom (list_add == $sub.ref(0, 104725));
procedure  list_add($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5986, 31} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5986, 31} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5986, 3} true;
  assume {:verifier.code 0} true;
  call __list_add($p0, $p1, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5987, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const qdisc_create_dflt: ref;
axiom (qdisc_create_dflt == $sub.ref(0, 105757));
procedure  qdisc_create_dflt($p0: ref, $p1: ref, $i2: i32)
  returns ($r: ref);
const sch_atm_dequeue: ref;
axiom (sch_atm_dequeue == $sub.ref(0, 106789));
procedure  sch_atm_dequeue($i0: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i24;
  var $i14: i24;
  var $i15: i24;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i1;
  var $i23: i32;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i64;
  var $p31: ref;
  var $i32: i64;
  var $i33: i1;
  var $p35: ref;
  var $i36: i64;
  var $i37: i64;
  var $i38: i1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $i50: i1;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $i57: i32;
  var $i58: i1;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i64;
  var $i64: i1;
  var $i65: i32;
  var $i66: i64;
  var $i67: i64;
  var $i68: i1;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i24;
  var $i77: i24;
  var $i78: i24;
  var $p79: ref;
  var $p80: ref;
  var $i81: i8;
  var $i82: i64;
  var $i83: i64;
  var $i84: i64;
  var $i85: i1;
  var $i86: i32;
  var $i87: i32;
  var $p88: ref;
  var $i89: i32;
  var $p90: ref;
  var $i91: i32;
  var $i92: i1;
  var $p93: ref;
  var $i94: i32;
  var $p95: ref;
  var $i96: i64;
  var $i97: i1;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i105: i64;
  var $i106: i1;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $i114: i24;
  var $i115: i24;
  var $i116: i24;
  var $p117: ref;
  var $p118: ref;
  var $i119: i8;
  var $i120: i64;
  var $i121: i64;
  var $i122: i64;
  var $i123: i1;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $i127: i32;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: i32;
  var $i135: i64;
  var $p136: ref;
  var $i137: i32;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $i141: i32;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $i146: i32;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: i32;
  var $p52: ref;
  var $p51: ref;
  var $p59: ref;
  var $p39: ref;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $i161: i64;
  var $i162: i1;
  var $p34: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: %4 = alloca %struct._ddebug, align 8, !verifier.code !7762
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7418, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7419, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := qdisc_priv($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7420, 7} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7421, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7421, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7422, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7422, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, .str.16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7423, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7423, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7424, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7424, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, .str.17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7425, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7425, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7425, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i24($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7425, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $and.i24($i13, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7425, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $or.i24($i14, 485);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7425, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p12, $i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7426, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7426, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7427, 51} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7427, 51} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7427, 33} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7427, 57} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i64($i19, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7427, 13} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv__builtin_expect($i20, 0);
  // WARNING: %22 = call i64 @ldv__builtin_expect(i64 %21, i64 0), !dbg !7805, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7428, 15} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7428, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7429, 5} true;
  assume {:verifier.code 0} true;
  call $i23 := __dynamic_pr_debug.ref.ref.ref.ref($p1, .str.17, $p4, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7431, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7434, 43} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p6, 128);
  $p25 := $add.ref($p6, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7434, 49} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7435, 10} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7435, 41} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 32} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p27, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 63} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p6, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 41} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 38} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i64($i30, $i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  $p34 := $p28;
  goto $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i33 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb43;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7523, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7438, 29} true;
  assume {:verifier.code 0} true;
  $p35 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7438, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $p2i.ref.i64($p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7438, 38} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7438, 35} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i64($i36, $i37);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7438, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7439, 5} true;
  assume {:verifier.code 0} true;
  $p39 := $p34;
  goto $bb11;
$bb10:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7519, 50} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p39, 96);
  $p156 := $add.ref($p39, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7519, 55} true;
  assume {:verifier.code 0} true;
  $p157 := $load.ref($M.0, $p156);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7520, 10} true;
  assume {:verifier.code 0} true;
  $p158 := $bitcast.ref.ref($p157);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7520, 45} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p158, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 32} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($add.ref($p158, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  $i161 := $p2i.ref.i64($p160);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 38} true;
  assume {:verifier.code 0} true;
  $i162 := $ne.i64($i161, $i32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  $p34 := $p159;
  assume {:branchcond $i162} true;
  goto $bb41, $bb42;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 20} true;
  assume {:verifier.code 0} true;
  $p40 := $p34;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 20} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 24} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 24} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 30} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 30} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 43} true;
  assume {:verifier.code 0} true;
  $p46 := $p34;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 43} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  call $p48 := devirtbounce($p45, $p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 27} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i64($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 7} true;
  assume {:verifier.code 0} true;
  $p51 := $p34;
  assume {:branchcond $i50} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 7} true;
  assume {:verifier.code 0} true;
  $p52 := $p48;
  goto $bb16;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i50 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7513, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7445, 32} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p34, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7445, 32} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7445, 42} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p52, 224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7445, 42} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i32($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7445, 13} true;
  assume {:verifier.code 0} true;
  call $i57 := atm_may_send($p54, $i56);
  // WARNING: %62 = call i32 @atm_may_send(%struct.atm_vcc* %59, i32 %61), !dbg !7849, !verifier.code !7762
  call {:cexpr "tmp___1"} boogie_si_record_i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7446, 15} true;
  assume {:verifier.code 0} true;
  $i58 := $eq.i32($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7446, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7447, 5} true;
  assume {:verifier.code 0} true;
  $p59 := $p34;
  goto $bb20;
$bb19:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 66} true;
  assume {:verifier.code 0} true;
  $p39 := $p59;
  goto $bb11;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7451, 36} true;
  assume {:verifier.code 0} true;
  $p60 := $p34;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7451, 36} true;
  assume {:verifier.code 0} true;
  $p61 := $load.ref($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7451, 9} true;
  assume {:verifier.code 0} true;
  call $p62 := qdisc_dequeue_peeked($p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7452, 33} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7452, 53} true;
  assume {:verifier.code 0} true;
  $i64 := $eq.i64($i63, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7452, 53} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i1.i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7452, 33} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i32.i64($i65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7452, 13} true;
  assume {:verifier.code 0} true;
  call $i67 := ldv__builtin_expect($i66, 0);
  // WARNING: %74 = call i64 @ldv__builtin_expect(i64 %73, i64 0), !dbg !7861, !verifier.code !7762
  call {:cexpr "tmp___2"} boogie_si_record_i64($i67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7454, 15} true;
  assume {:verifier.code 0} true;
  $i68 := $ne.i64($i67, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7454, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7455, 5} true;
  assume {:verifier.code 0} true;
  $p59 := $p34;
  goto $bb20;
$bb23:
  assume !(($i68 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7459, 3} true;
  assume {:verifier.code 0} true;
  call qdisc_bstats_update($p4, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7460, 25} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p34, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7460, 3} true;
  assume {:verifier.code 0} true;
  call bstats_update($p69, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7461, 18} true;
  assume {:verifier.code 0} true;
  $p70 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7461, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p70, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7462, 18} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7462, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p71, .str.16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7463, 18} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7463, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p72, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7464, 18} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7464, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p73, .str.18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7465, 18} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7465, 18} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7465, 25} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i24($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7465, 25} true;
  assume {:verifier.code 0} true;
  $i77 := $and.i24($i76, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7465, 25} true;
  assume {:verifier.code 0} true;
  $i78 := $or.i24($i77, 503);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7465, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p75, $i78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7466, 18} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7466, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p79, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7467, 55} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7467, 55} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i8($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7467, 33} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.i8.i64($i81);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7467, 61} true;
  assume {:verifier.code 0} true;
  $i83 := $and.i64($i82, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7467, 13} true;
  assume {:verifier.code 0} true;
  call $i84 := ldv__builtin_expect($i83, 0);
  // WARNING: %94 = call i64 @ldv__builtin_expect(i64 %93, i64 0), !dbg !7887, !verifier.code !7762
  call {:cexpr "tmp___3"} boogie_si_record_i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7468, 15} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i64($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7468, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7469, 5} true;
  assume {:verifier.code 0} true;
  call $i86 := __dynamic_pr_debug.ref.ref.ref($p2, .str.18, $p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7471, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7474, 13} true;
  assume {:verifier.code 0} true;
  call $i87 := skb_network_offset($p62);
  // WARNING: %100 = call i32 @skb_network_offset(%struct.sk_buff* %69), !dbg !7896, !verifier.code !7762
  call {:cexpr "tmp___4"} boogie_si_record_i32($i87);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7475, 3} true;
  assume {:verifier.code 0} true;
  call $p88 := skb_pull($p62, $i87);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7476, 13} true;
  assume {:verifier.code 0} true;
  call $i89 := skb_headroom($p62);
  // WARNING: %102 = call i32 @skb_headroom(%struct.sk_buff* %69), !dbg !7900, !verifier.code !7762
  call {:cexpr "tmp___5"} boogie_si_record_i32($i89);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7477, 38} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p34, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7477, 38} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i32($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7477, 15} true;
  assume {:verifier.code 0} true;
  $i92 := $ult.i32($i89, $i91);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7477, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i92 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7478, 58} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p34, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7478, 58} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i32($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7478, 11} true;
  assume {:verifier.code 0} true;
  call $p95 := skb_realloc_headroom($p62, $i94);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7479, 5} true;
  assume {:verifier.code 0} true;
  call consume_skb($p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7480, 9} true;
  assume {:verifier.code 0} true;
  $i96 := $p2i.ref.i64($p95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7480, 29} true;
  assume {:verifier.code 0} true;
  $i97 := $eq.i64($i96, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7480, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb30, $bb31;
$bb29:
  assume !(($i92 == 1));
  assume {:verifier.code 0} true;
  $p107 := $p62;
  goto $bb36;
$bb30:
  assume ($i97 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7481, 7} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i97 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 20} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 24} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p98, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 24} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 30} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p100, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 30} true;
  assume {:verifier.code 0} true;
  $p102 := $load.ref($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7511, 43} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p46);
  call $p104 := devirtbounce($p102, $p103);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 7} true;
  assume {:verifier.code 0} true;
  $i105 := $p2i.ref.i64($p104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 27} true;
  assume {:verifier.code 0} true;
  $i106 := $ne.i64($i105, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 7} true;
  assume {:verifier.code 0} true;
  $p52 := $p104;
  assume {:branchcond $i106} true;
  goto $bb33, $bb34;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 7} true;
  assume {:verifier.code 0} true;
  assume ($i106 == 1);
  goto $bb16;
$bb34:
  assume !(($i106 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 7} true;
  assume {:verifier.code 0} true;
  $p51 := $p34;
  goto $bb15;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7486, 3} true;
  assume {:verifier.code 0} true;
  $p107 := $p95;
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7489, 18} true;
  assume {:verifier.code 0} true;
  $p108 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7489, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p108, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7490, 18} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7490, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p109, .str.16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7491, 18} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7491, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p110, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7492, 18} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7492, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p111, .str.19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7493, 18} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7493, 18} true;
  assume {:verifier.code 0} true;
  $p113 := $bitcast.ref.ref($p112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7493, 25} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i24($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7493, 25} true;
  assume {:verifier.code 0} true;
  $i115 := $and.i24($i114, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7493, 25} true;
  assume {:verifier.code 0} true;
  $i116 := $or.i24($i115, 516);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7493, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p113, $i116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7494, 18} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7494, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p117, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7495, 55} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7495, 55} true;
  assume {:verifier.code 0} true;
  $i119 := $load.i8($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7495, 33} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i8.i64($i119);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7495, 61} true;
  assume {:verifier.code 0} true;
  $i121 := $and.i64($i120, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7495, 13} true;
  assume {:verifier.code 0} true;
  call $i122 := ldv__builtin_expect($i121, 0);
  // WARNING: %140 = call i64 @ldv__builtin_expect(i64 %139, i64 0), !dbg !7935, !verifier.code !7762
  call {:cexpr "tmp___7"} boogie_si_record_i64($i122);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7496, 15} true;
  assume {:verifier.code 0} true;
  $i123 := $ne.i64($i122, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7496, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7497, 15} true;
  assume {:verifier.code 0} true;
  call $p124 := skb_network_header($p107);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7499, 29} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p107, 216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7499, 29} true;
  assume {:verifier.code 0} true;
  $p126 := $load.ref($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7498, 5} true;
  assume {:verifier.code 0} true;
  call $i127 := __dynamic_pr_debug.ref.ref.ref.ref($p3, .str.19, $p124, $p126);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7500, 3} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i123 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7503, 53} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p34, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7503, 53} true;
  assume {:verifier.code 0} true;
  $p129 := $load.ref($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7503, 35} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p107, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7503, 41} true;
  assume {:verifier.code 0} true;
  $p131 := $bitcast.ref.ref($p130);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7503, 41} true;
  assume {:verifier.code 0} true;
  $p132 := $p131;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7503, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p132, $p129);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7504, 26} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p34, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7504, 26} true;
  assume {:verifier.code 0} true;
  $i134 := $load.i32($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7504, 11} true;
  assume {:verifier.code 0} true;
  $i135 := $sext.i32.i64($i134);
  // WARNING: %156 = sext i32 %155 to i64, !dbg !7953, !verifier.code !7762
  call {:cexpr "__len"} boogie_si_record_i64($i135);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7505, 48} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p34, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7505, 48} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i32($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7505, 13} true;
  assume {:verifier.code 0} true;
  call $p138 := skb_push($p107, $i137);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7506, 70} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p34, 124);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7506, 45} true;
  assume {:verifier.code 0} true;
  $p140 := $bitcast.ref.ref($p139);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7506, 11} true;
  assume {:verifier.code 0} true;
  call $i141 := __builtinx_memcpy.ref.ref.i64($p138, $p140, $i135);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7507, 27} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p34, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7507, 27} true;
  assume {:verifier.code 0} true;
  $p143 := $load.ref($M.0, $p142);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7507, 14} true;
  assume {:verifier.code 0} true;
  call $p144 := sk_atm($p143);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7508, 25} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p107, 224);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7508, 25} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i32($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7508, 47} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p144, 600);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7508, 3} true;
  assume {:verifier.code 0} true;
  call atomic_add($i146, $p147);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7509, 13} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p34, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7509, 13} true;
  assume {:verifier.code 0} true;
  $p149 := $load.ref($M.0, $p148);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7509, 19} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p149, 1480);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7509, 19} true;
  assume {:verifier.code 0} true;
  $p151 := $load.ref($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7509, 32} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p34, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7509, 32} true;
  assume {:verifier.code 0} true;
  $p153 := $load.ref($M.0, $p152);
  call $i154 := devirtbounce.2($p151, $p153, $p107);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7509, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7512, 66} true;
  assume {:verifier.code 0} true;
  $p59 := $p51;
  goto $bb20;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  assume ($i162 == 1);
  goto $bb7;
$bb42:
  assume !(($i162 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7522, 7} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7528, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const tasklet_init: ref;
axiom (tasklet_init == $sub.ref(0, 107821));
procedure  tasklet_init($p0: ref, $p1: ref, $i2: i64);
const atm_may_send: ref;
axiom (atm_may_send == $sub.ref(0, 108853));
procedure  atm_may_send($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.atm_vcc* %0, i64 0, metadata !8906, metadata !7764), !dbg !8907, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6396, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := sk_atm($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6397, 53} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 600);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6397, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := atomic_read($p3);
  // WARNING: %5 = call i32 @atomic_read(%union.__anonunion_ldv_43662_259* %4), !dbg !7775, !verifier.code !7767
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6398, 13} true;
  assume {:verifier.code 0} true;
  call $p5 := sk_atm($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6399, 34} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i32($i4, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6399, 67} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p5, 608);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6399, 67} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6399, 41} true;
  assume {:verifier.code 0} true;
  $i9 := $ult.i32($i6, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6399, 41} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6399, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const qdisc_dequeue_peeked: ref;
axiom (qdisc_dequeue_peeked == $sub.ref(0, 109885));
procedure  qdisc_dequeue_peeked($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p12: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6505, 14} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6505, 14} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6506, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6506, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6507, 10} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6507, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6508, 24} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 136);
  $p7 := $add.ref($add.ref($p0, 136), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6508, 26} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6508, 31} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32($i8, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6508, 10} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 136);
  $p11 := $add.ref($add.ref($p0, 136), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6508, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6509, 3} true;
  assume {:verifier.code 0} true;
  $p12 := $p2;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6510, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6510, 19} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  call $p15 := devirtbounce($p14, $p0);
  assume {:verifier.code 0} true;
  $p12 := $p15;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6512, 3} true;
  assume {:verifier.code 0} true;
  $r := $p12;
  $exn := false;
  return;
}
const qdisc_bstats_update: ref;
axiom (qdisc_bstats_update == $sub.ref(0, 110917));
procedure  qdisc_bstats_update($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6496, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 232);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6496, 3} true;
  assume {:verifier.code 0} true;
  call bstats_update($p2, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6497, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const bstats_update: ref;
axiom (bstats_update == $sub.ref(0, 111949));
procedure  bstats_update($p0: ref, $p1: ref)
{
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i1;
  var $i9: i8;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i16;
  var $i15: i32;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6478, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := qdisc_pkt_len($p1);
  // WARNING: %3 = call i32 @qdisc_pkt_len(%struct.sk_buff* %1), !dbg !7771, !verifier.code !7768
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6479, 27} true;
  assume {:verifier.code 0} true;
  $p3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6479, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6479, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6479, 33} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i4, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6479, 11} true;
  assume {:verifier.code 0} true;
  $p7 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6479, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p7, $i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6480, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := skb_is_gso($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6480, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i1.i8($i8);
  // WARNING: %10 = zext i1 %9 to i8, !dbg !7781, !verifier.code !7768
  call {:cexpr "tmp___3"} boogie_si_record_i8($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6481, 13} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i8.i1($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6481, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6482, 15} true;
  assume {:verifier.code 0} true;
  call $p11 := skb_end_pointer($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6483, 60} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6483, 60} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6483, 60} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i16($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6483, 15} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i16.i32($i14);
  // WARNING: %17 = zext i16 %16 to i32, !dbg !7792, !verifier.code !7768
  call {:cexpr "tmp___2"} boogie_si_record_i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6484, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i15;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i16 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6487, 29} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6487, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6487, 37} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i32($i18, $i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6487, 11} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6487, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6488, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_network_offset: ref;
axiom (skb_network_offset == $sub.ref(0, 112981));
procedure  skb_network_offset($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i32;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6243, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := skb_network_header($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6244, 34} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6244, 18} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6244, 76} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6244, 76} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6244, 64} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6244, 48} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i64.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6244, 46} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32($i3, $i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6244, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const skb_pull: ref;
axiom (skb_pull == $sub.ref(0, 114013));
procedure  skb_pull($p0: ref, $i1: i32)
  returns ($r: ref);
const skb_headroom: ref;
axiom (skb_headroom == $sub.ref(0, 115045));
procedure  skb_headroom($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $i8: i32;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6227, 39} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6227, 39} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6227, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6227, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i64.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6227, 75} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6227, 75} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6227, 63} true;
  assume {:verifier.code 0} true;
  $i7 := $p2i.ref.i64($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6227, 47} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i64.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6227, 45} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32($i4, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6227, 3} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
}
const skb_realloc_headroom: ref;
axiom (skb_realloc_headroom == $sub.ref(0, 116077));
procedure  skb_realloc_headroom($p0: ref, $i1: i32)
  returns ($r: ref);
const consume_skb: ref;
axiom (consume_skb == $sub.ref(0, 117109));
procedure  consume_skb($p0: ref);
const skb_network_header: ref;
axiom (skb_network_header == $sub.ref(0, 118141));
procedure  skb_network_header($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i16;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6235, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6235, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6235, 61} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 194);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6235, 61} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6235, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6235, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6235, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const skb_push: ref;
axiom (skb_push == $sub.ref(0, 119173));
procedure  skb_push($p0: ref, $i1: i32)
  returns ($r: ref);
const __builtinx_memcpy: ref;
axiom (__builtinx_memcpy == $sub.ref(0, 120205));
procedure  __builtinx_memcpy()
  returns ($r: i32);
procedure  __builtinx_memcpy.ref.ref.i64(p.0: ref, p.1: ref, p.2: i64)
  returns ($r: i32);
const sk_atm: ref;
axiom (sk_atm == $sub.ref(0, 121237));
procedure  sk_atm($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6386, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6386, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const atomic_add: ref;
axiom (atomic_add == $sub.ref(0, 122269));
procedure  atomic_add($i0: i32, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6024, 132} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  call devirtbounce.3(0, $p2, $i0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6025, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const qdisc_pkt_len: ref;
axiom (qdisc_pkt_len == $sub.ref(0, 123301));
procedure  qdisc_pkt_len($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6425, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := qdisc_skb_cb($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6426, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6426, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6426, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const skb_is_gso: ref;
axiom (skb_is_gso == $sub.ref(0, 124333));
procedure  skb_is_gso($p0: ref)
  returns ($r: i1)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i16;
  var $i5: i32;
  var $i6: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6260, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := skb_end_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6261, 59} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6261, 59} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6261, 59} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6261, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6261, 68} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6261, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const skb_end_pointer: ref;
axiom (skb_end_pointer == $sub.ref(0, 125365));
procedure  skb_end_pointer($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6209, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6209, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6209, 61} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 204);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6209, 61} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6209, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6209, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6209, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const qdisc_skb_cb: ref;
axiom (qdisc_skb_cb == $sub.ref(0, 126397));
procedure  qdisc_skb_cb($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6410, 42} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6410, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6410, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const atomic_read: ref;
axiom (atomic_read == $sub.ref(0, 127429));
procedure  atomic_read($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6016, 43} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6016, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6016, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const __list_add: ref;
axiom (__list_add == $sub.ref(0, 128461));
procedure  __list_add($p0: ref, $p1: ref, $p2: ref);
const tasklet_schedule: ref;
axiom (tasklet_schedule == $sub.ref(0, 129493));
procedure  tasklet_schedule($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6176, 64} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6176, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := test_and_set_bit(0, $p1);
  // WARNING: %3 = call i32 @test_and_set_bit(i64 0, i64* %2), !dbg !7770, !verifier.code !7767
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6177, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6177, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6178, 5} true;
  assume {:verifier.code 0} true;
  call __tasklet_schedule($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6179, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6182, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const test_and_set_bit: ref;
axiom (test_and_set_bit == $sub.ref(0, 130525));
procedure  test_and_set_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  // WARNING: %3 = alloca i8, align 1, !verifier.code !7764
  // WARNING: ignoring llvm.debug call.
  assume true;
  call devirtbounce.4(0, $p1, $p2, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5957, 32} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5957, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5957, 35} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5957, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5957, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const __tasklet_schedule: ref;
axiom (__tasklet_schedule == $sub.ref(0, 131557));
procedure  __tasklet_schedule($p0: ref);
const atm_tc_get: ref;
axiom (atm_tc_get == $sub.ref(0, 132589));
procedure  atm_tc_get($p0: ref, $i1: i32)
  returns ($r: i64)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i24;
  var $i13: i24;
  var $i14: i24;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $i22: i32;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i24;
  var $i37: i24;
  var $i38: i24;
  var $p39: ref;
  var $p40: ref;
  var $i41: i8;
  var $i42: i64;
  var $i43: i64;
  var $i44: i64;
  var $i45: i1;
  var $i46: i32;
  var $i47: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !9138, metadata !7764), !dbg !9139, !verifier.code !7762
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6641, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6642, 7} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6643, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6643, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6644, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6644, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6645, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6645, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6646, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6646, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str.27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6647, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6647, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6647, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i24($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6647, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i24($i12, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6647, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $or.i24($i13, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6647, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p11, $i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6648, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6648, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6649, 51} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6649, 51} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6649, 33} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6649, 57} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i64($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6649, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := ldv__builtin_expect($i19, 0);
  // WARNING: %21 = call i64 @ldv__builtin_expect(i64 %20, i64 0), !dbg !7802, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6650, 15} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6650, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6651, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := __dynamic_pr_debug.ref.ref.ref.ref.i32($p2, .str.27, $p0, $p5, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6653, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6656, 10} true;
  assume {:verifier.code 0} true;
  call $p23 := lookup_flow($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6657, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6657, 28} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6657, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6658, 23} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p23, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6658, 23} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6658, 27} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i27, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6658, 11} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p23, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6658, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6659, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6662, 18} true;
  assume {:verifier.code 0} true;
  $p30 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6662, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p30, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6663, 18} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6663, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p31, .str.26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6664, 18} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6664, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p32, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6665, 18} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p3, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6665, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p33, .str.28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6666, 18} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p3, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6666, 18} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6666, 25} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i24($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6666, 25} true;
  assume {:verifier.code 0} true;
  $i37 := $and.i24($i36, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6666, 25} true;
  assume {:verifier.code 0} true;
  $i38 := $or.i24($i37, 148);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6666, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p35, $i38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6667, 18} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6667, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p39, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6668, 55} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p3, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6668, 55} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i8($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6668, 33} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i8.i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6668, 61} true;
  assume {:verifier.code 0} true;
  $i43 := $and.i64($i42, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6668, 13} true;
  assume {:verifier.code 0} true;
  call $i44 := ldv__builtin_expect($i43, 0);
  // WARNING: %51 = call i64 @ldv__builtin_expect(i64 %50, i64 0), !dbg !7839, !verifier.code !7762
  call {:cexpr "tmp___1"} boogie_si_record_i64($i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6669, 15} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i64($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6669, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6670, 5} true;
  assume {:verifier.code 0} true;
  call $i46 := __dynamic_pr_debug.ref.ref.ref($p3, .str.28, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6671, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6674, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6674, 3} true;
  assume {:verifier.code 0} true;
  $r := $i47;
  $exn := false;
  return;
}
const tc_classify_compat: ref;
axiom (tc_classify_compat == $sub.ref(0, 133621));
procedure  tc_classify_compat($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const lookup_flow: ref;
axiom (lookup_flow == $sub.ref(0, 134653));
procedure  lookup_flow($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
  var $i12: i64;
  var $i13: i1;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $p18: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $p14: ref;
  var $p19: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !9219, metadata !7764), !dbg !9220, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6536, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6537, 7} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6538, 43} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 128);
  $p5 := $add.ref($p3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6538, 49} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6539, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6539, 41} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p7, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 32} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($add.ref($p7, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 63} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p3, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 41} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 38} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i10, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $p8;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i13 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6551, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6542, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6542, 13} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6542, 21} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i16, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6542, 7} true;
  assume {:verifier.code 0} true;
  $p18 := $p14;
  assume {:branchcond $i17} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i17 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6543, 5} true;
  assume {:verifier.code 0} true;
  $p19 := $p18;
  goto $bb8;
$bb7:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6558, 1} true;
  assume {:verifier.code 0} true;
  $r := $p19;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6547, 50} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p14, 96);
  $p21 := $add.ref($p14, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6547, 55} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6548, 10} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6548, 45} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 32} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($add.ref($p23, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 38} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $p24;
  assume {:branchcond $i27} true;
  goto $bb10, $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  assume ($i27 == 1);
  goto $bb4;
$bb11:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6556, 3} true;
  assume {:verifier.code 0} true;
  $p19 := $0.ref;
  goto $bb8;
}
const kfree_skb: ref;
axiom (kfree_skb == $sub.ref(0, 135685));
procedure  kfree_skb($p0: ref);
const qdisc_enqueue: ref;
axiom (qdisc_enqueue == $sub.ref(0, 136717));
procedure  qdisc_enqueue($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6465, 3} true;
  assume {:verifier.code 0} true;
  call qdisc_calculate_pkt_len($p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6466, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6466, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  call $i4 := devirtbounce.5($p3, $p0, $p1);
  // WARNING: %5 = call i32 @devirtbounce.5(i32 (%struct.sk_buff*, %struct.Qdisc*)* %4, %struct.sk_buff* %0, %struct.Qdisc* %1)
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6467, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const qdisc_calculate_pkt_len: ref;
axiom (qdisc_calculate_pkt_len == $sub.ref(0, 137749));
procedure  qdisc_calculate_pkt_len($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i1;
  var $i7: i32;
  var $i8: i1;
  var $i9: i64;
  var $i10: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6438, 72} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6438, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6439, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := debug_lockdep_rcu_enabled();
  // WARNING: %5 = call i32 @debug_lockdep_rcu_enabled(), !dbg !7775, !verifier.code !7767
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6440, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6440, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6440, 21} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i8.i1(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6440, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6440, 16} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6440, 7} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb3;
$bb5:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6441, 15} true;
  assume {:verifier.code 0} true;
  call $i7 := rcu_read_lock_bh_held();
  // WARNING: %10 = call i32 @rcu_read_lock_bh_held(), !dbg !7784, !verifier.code !7767
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6442, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6442, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6444, 7} true;
  assume {:verifier.code 0} true;
  call lockdep_rcu_suspicious(.str.7, 460, .str.8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6445, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6448, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6452, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6452, 28} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6452, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6453, 5} true;
  assume {:verifier.code 0} true;
  call __qdisc_calculate_pkt_len($p0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6454, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6457, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const debug_lockdep_rcu_enabled: ref;
axiom (debug_lockdep_rcu_enabled == $sub.ref(0, 138781));
procedure  debug_lockdep_rcu_enabled()
  returns ($r: i32);
const rcu_read_lock_bh_held: ref;
axiom (rcu_read_lock_bh_held == $sub.ref(0, 139813));
procedure  rcu_read_lock_bh_held()
  returns ($r: i32);
const lockdep_rcu_suspicious: ref;
axiom (lockdep_rcu_suspicious == $sub.ref(0, 140845));
procedure  lockdep_rcu_suspicious($p0: ref, $i1: i32, $p2: ref);
const __qdisc_calculate_pkt_len: ref;
axiom (__qdisc_calculate_pkt_len == $sub.ref(0, 141877));
procedure  __qdisc_calculate_pkt_len($p0: ref, $p1: ref);
const atm_tc_graft: ref;
axiom (atm_tc_graft == $sub.ref(0, 142909));
procedure  atm_tc_graft($p0: ref, $i1: i64, $p2: ref, $p3: ref)
  returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i24;
  var $i15: i24;
  var $i16: i24;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i1;
  var $i24: i32;
  var $p25: ref;
  var $i26: i32;
  var $i27: i1;
  var $i29: i64;
  var $i30: i1;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i64;
  var $i37: i1;
  var $p38: ref;
  var $i28: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !9317, metadata !7764), !dbg !9318, !verifier.code !7762
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6570, 9} true;
  assume {:verifier.code 0} true;
  call $p5 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6571, 7} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6572, 10} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6573, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6573, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6574, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6574, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str.34);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6575, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6575, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6576, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6576, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, .str.35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6577, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6577, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6577, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i24($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6577, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i24($i14, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6577, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $or.i24($i15, 119);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6577, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p13, $i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6578, 14} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p4, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6578, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6579, 51} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6579, 51} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6579, 33} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6579, 57} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i64($i20, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6579, 13} true;
  assume {:verifier.code 0} true;
  call $i22 := ldv__builtin_expect($i21, 0);
  // WARNING: %23 = call i64 @ldv__builtin_expect(i64 %22, i64 0), !dbg !7807, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6580, 15} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6580, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6581, 5} true;
  assume {:verifier.code 0} true;
  call $i24 := __dynamic_pr_debug.ref.ref.ref.ref.ref.ref.ref($p4, .str.35, $p0, $p6, $p7, $p2, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6583, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6586, 61} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p7, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6586, 13} true;
  assume {:verifier.code 0} true;
  call $i26 := list_empty($p25);
  // WARNING: %30 = call i32 @list_empty(%struct.list_head* %29), !dbg !7817, !verifier.code !7762
  call {:cexpr "tmp___1"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6587, 15} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i32($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6587, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6588, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 22);
  goto $bb6;
$bb5:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6606, 1} true;
  assume {:verifier.code 0} true;
  $r := $i28;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6592, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6592, 27} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i64($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6592, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6594, 3} true;
  assume {:verifier.code 0} true;
  $p31 := noop_qdisc;
  goto $bb10;
$bb9:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  $p31 := $p2;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6597, 16} true;
  assume {:verifier.code 0} true;
  $p32 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6597, 16} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6597, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p3, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6598, 9} true;
  assume {:verifier.code 0} true;
  $p34 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6598, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p34, $p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6599, 23} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6599, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $p2i.ref.i64($p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6599, 28} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i64($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6599, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6600, 17} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6600, 5} true;
  assume {:verifier.code 0} true;
  call qdisc_reset($p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6601, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6604, 3} true;
  assume {:verifier.code 0} true;
  $i28 := 0;
  goto $bb6;
}
const atm_tc_leaf: ref;
axiom (atm_tc_leaf == $sub.ref(0, 143941));
procedure  atm_tc_leaf($p0: ref, $i1: i64)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i24;
  var $i11: i24;
  var $i12: i24;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i1;
  var $i20: i32;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !9392, metadata !7764), !dbg !9393, !verifier.code !7762
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6614, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6615, 14} true;
  assume {:verifier.code 0} true;
  $p4 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6615, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p4, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6616, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6616, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, .str.24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6617, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6617, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6618, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6618, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6619, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6619, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6619, 21} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i24($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6619, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $and.i24($i10, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6619, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $or.i24($i11, 135);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6619, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p9, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6620, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6620, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6621, 47} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6621, 47} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6621, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6621, 53} true;
  assume {:verifier.code 0} true;
  $i17 := $and.i64($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6621, 9} true;
  assume {:verifier.code 0} true;
  call $i18 := ldv__builtin_expect($i17, 0);
  // WARNING: %19 = call i64 @ldv__builtin_expect(i64 %18, i64 0), !dbg !7797, !verifier.code !7762
  call {:cexpr "tmp"} boogie_si_record_i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6622, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6622, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6623, 5} true;
  assume {:verifier.code 0} true;
  call $i20 := __dynamic_pr_debug.ref.ref.ref.ref($p2, .str.25, $p0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6624, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6627, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6627, 32} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6627, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6627, 87} true;
  assume {:verifier.code 0} true;
  $p23 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6627, 87} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6627, 11} true;
  assume {:verifier.code 0} true;
  $p25 := $p24;
  goto $bb6;
$bb5:
  assume !(($i22 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6627, 11} true;
  assume {:verifier.code 0} true;
  $p25 := $0.ref;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6627, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6627, 3} true;
  assume {:verifier.code 0} true;
  $r := $p25;
  $exn := false;
  return;
}
const atm_tc_change: ref;
axiom (atm_tc_change == $sub.ref(0, 144973));
procedure  atm_tc_change($p0: ref, $i1: i32, $i2: i32, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i24;
  var $i29: i24;
  var $i30: i24;
  var $p31: ref;
  var $p32: ref;
  var $i33: i8;
  var $i34: i64;
  var $i35: i64;
  var $i36: i64;
  var $i37: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i1;
  var $p41: ref;
  var $i42: i32;
  var $i43: i1;
  var $i45: i64;
  var $i46: i1;
  var $i47: i64;
  var $i48: i1;
  var $p49: ref;
  var $i50: i32;
  var $i51: i32;
  var $i52: i1;
  var $i53: i32;
  var $p54: ref;
  var $p55: ref;
  var $i56: i64;
  var $i57: i1;
  var $p58: ref;
  var $p59: ref;
  var $i60: i32;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i24;
  var $i68: i24;
  var $i69: i24;
  var $p70: ref;
  var $p71: ref;
  var $i72: i8;
  var $i73: i64;
  var $i74: i64;
  var $i75: i64;
  var $i76: i1;
  var $i77: i32;
  var $p78: ref;
  var $p79: ref;
  var $i80: i64;
  var $i81: i1;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $i88: i32;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $i92: i64;
  var $i93: i1;
  var $p95: ref;
  var $p96: ref;
  var $i97: i32;
  var $i98: i64;
  var $p99: ref;
  var $i100: i64;
  var $i101: i1;
  var $p94: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $i108: i24;
  var $i109: i24;
  var $i110: i24;
  var $p111: ref;
  var $p112: ref;
  var $i113: i8;
  var $i114: i64;
  var $i115: i64;
  var $i116: i64;
  var $i117: i1;
  var $i118: i32;
  var $p119: ref;
  var $i120: i16;
  var $i121: i32;
  var $i122: i32;
  var $p123: ref;
  var $i124: i64;
  var $i125: i1;
  var $i126: i32;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $i133: i24;
  var $i134: i24;
  var $i135: i24;
  var $p136: ref;
  var $p137: ref;
  var $i138: i8;
  var $i139: i64;
  var $i140: i64;
  var $i141: i64;
  var $i142: i1;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $i146: i64;
  var $i147: i32;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $i151: i32;
  var $i152: i1;
  var $p153: ref;
  var $p154: ref;
  var $p155: ref;
  var $i156: i32;
  var $i157: i1;
  var $i158: i1;
  var $p159: ref;
  var $i160: i32;
  var $i161: i32;
  var $i162: i32;
  var $i163: i1;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $p169: ref;
  var $i170: i24;
  var $i171: i24;
  var $i172: i24;
  var $p173: ref;
  var $p174: ref;
  var $i175: i8;
  var $i176: i64;
  var $i177: i64;
  var $i178: i64;
  var $i179: i1;
  var $i180: i32;
  var $p183: ref;
  var $i184: i32;
  var $i185: i32;
  var $i186: i32;
  var $i187: i32;
  var $i188: i32;
  var $i189: i64;
  var $i190: i1;
  var $i191: i32;
  var $i193: i32;
  var $i194: i1;
  var $i182: i32;
  var $i195: i32;
  var $i192: i32;
  var $i181: i32;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $i202: i24;
  var $i203: i24;
  var $i204: i24;
  var $p205: ref;
  var $p206: ref;
  var $i207: i8;
  var $i208: i64;
  var $i209: i64;
  var $i210: i64;
  var $i211: i1;
  var $i212: i32;
  var $i213: i64;
  var $i214: i64;
  var $p215: ref;
  var $p216: ref;
  var $p217: ref;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $p222: ref;
  var $i223: i24;
  var $i224: i24;
  var $i225: i24;
  var $p226: ref;
  var $p227: ref;
  var $i228: i8;
  var $i229: i64;
  var $i230: i64;
  var $i231: i64;
  var $i232: i1;
  var $i233: i32;
  var $i234: i64;
  var $i235: i1;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $p240: ref;
  var $p241: ref;
  var $p242: ref;
  var $i243: i64;
  var $i244: i1;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $i252: i24;
  var $i253: i24;
  var $i254: i24;
  var $p255: ref;
  var $p256: ref;
  var $i257: i8;
  var $i258: i64;
  var $i259: i64;
  var $i260: i64;
  var $i261: i1;
  var $p262: ref;
  var $p263: ref;
  var $i264: i32;
  var $p265: ref;
  var $p266: ref;
  var $p267: ref;
  var $p268: ref;
  var $p269: ref;
  var $p270: ref;
  var $p271: ref;
  var $p272: ref;
  var $p273: ref;
  var $p274: ref;
  var $p275: ref;
  var $p276: ref;
  var $p277: ref;
  var $i278: i24;
  var $i279: i24;
  var $i280: i24;
  var $p281: ref;
  var $p282: ref;
  var $i283: i8;
  var $i284: i64;
  var $i285: i64;
  var $i286: i64;
  var $i287: i1;
  var $p288: ref;
  var $p289: ref;
  var $i290: i32;
  var $p291: ref;
  var $p292: ref;
  var $p293: ref;
  var $p294: ref;
  var $p295: ref;
  var $p296: ref;
  var $p297: ref;
  var $p298: ref;
  var $p299: ref;
  var $p300: ref;
  var $p301: ref;
  var $p302: ref;
  var $p303: ref;
  var $p304: ref;
  var $p305: ref;
  var $p306: ref;
  var $i307: i64;
  var $i308: i1;
  var $i309: i64;
  var $p310: ref;
  var $p311: ref;
  var $i312: i32;
  var $i313: i1;
  var $p314: ref;
  var $p315: ref;
  var $p316: ref;
  var $p317: ref;
  var $p318: ref;
  var $i319: i32;
  var $i320: i64;
  var $i321: i64;
  var $i322: i1;
  var $i323: i64;
  var $p324: ref;
  var $p325: ref;
  var $i326: i32;
  var $i44: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(56, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p10 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p11 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p12 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p13 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p14 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p15 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !9437, metadata !7764), !dbg !9438, !verifier.code !7762
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !9439, metadata !7764), !dbg !9440, !verifier.code !7762
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6864, 9} true;
  assume {:verifier.code 0} true;
  call $p16 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6865, 7} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6866, 34} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6866, 10} true;
  assume {:verifier.code 0} true;
  $p19 := $i2p.i64.ref($i18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6868, 15} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6868, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6869, 14} true;
  assume {:verifier.code 0} true;
  $p22 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6869, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p22, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6870, 14} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6870, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6871, 14} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p7, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6871, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p24, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6872, 14} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p7, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6872, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p25, .str.46);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6873, 14} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p7, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6873, 14} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6873, 21} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i24($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6873, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $and.i24($i28, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6873, 21} true;
  assume {:verifier.code 0} true;
  $i30 := $or.i24($i29, 228);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6873, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p27, $i30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6874, 14} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p7, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6874, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p31, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6875, 51} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p7, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6875, 51} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i8($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6875, 33} true;
  assume {:verifier.code 0} true;
  $i34 := $zext.i8.i64($i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6875, 57} true;
  assume {:verifier.code 0} true;
  $i35 := $and.i64($i34, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6875, 13} true;
  assume {:verifier.code 0} true;
  call $i36 := ldv__builtin_expect($i35, 0);
  // WARNING: %37 = call i64 @ldv__builtin_expect(i64 %36, i64 0), !dbg !7837, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6876, 15} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i64($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6876, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6877, 5} true;
  assume {:verifier.code 0} true;
  call $i38 := __dynamic_pr_debug.ref.ref.ref.ref.i32.i32.ref.ref($p7, .str.46, $p0, $p17, $i1, $i2, $p19, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6879, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 15} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 31} true;
  assume {:verifier.code 0} true;
  $i40 := $ne.i32($i2, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 47} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb7, $bb8;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 21} true;
  assume {:verifier.code 0} true;
  assume !(($i39 == 1));
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb7:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 55} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 55} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 62} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i32($i42, $i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb9, $bb10;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 47} true;
  assume {:verifier.code 0} true;
  assume !(($i40 == 1));
  goto $bb6;
$bb9:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6883, 5} true;
  assume {:verifier.code 0} true;
  $i44 := $sub.i32(0, 22);
  goto $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6882, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i43 == 1));
  goto $bb6;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7120, 1} true;
  assume {:verifier.code 0} true;
  $r := $i44;
  $exn := false;
  return;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6887, 7} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6887, 28} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i64($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6887, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6888, 5} true;
  assume {:verifier.code 0} true;
  $i44 := $sub.i32(0, 16);
  goto $bb11;
$bb14:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6892, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6892, 27} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i64($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6892, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6893, 5} true;
  assume {:verifier.code 0} true;
  $i44 := $sub.i32(0, 22);
  goto $bb11;
$bb17:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6897, 28} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6897, 11} true;
  assume {:verifier.code 0} true;
  call $i50 := nla_parse_nested($p49, 6, $p21, atm_policy);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6897, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $i50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6899, 7} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6899, 13} true;
  assume {:verifier.code 0} true;
  $i52 := $slt.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6899, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6900, 13} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6900, 5} true;
  assume {:verifier.code 0} true;
  $i44 := $i53;
  goto $bb11;
$bb20:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6904, 23} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6904, 23} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6904, 7} true;
  assume {:verifier.code 0} true;
  $i56 := $p2i.ref.i64($p55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6904, 29} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i64($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6904, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6905, 5} true;
  assume {:verifier.code 0} true;
  $i44 := $sub.i32(0, 22);
  goto $bb11;
$bb23:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6909, 50} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6909, 50} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6909, 13} true;
  assume {:verifier.code 0} true;
  call $i60 := nla_get_u32($p59);
  // WARNING: %80 = call i32 @nla_get_u32(%struct.nlattr* %79), !dbg !7888, !verifier.code !7762
  call {:cexpr "tmp___1"} boogie_si_record_i32($i60);
  // WARNING: call void @llvm.dbg.value(metadata i32 %80, i64 0, metadata !9554, metadata !7764), !dbg !9555, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6911, 18} true;
  assume {:verifier.code 0} true;
  $p61 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6911, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p61, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6912, 18} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6912, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p62, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6913, 18} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6913, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p63, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6914, 18} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p8, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6914, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p64, .str.47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6915, 18} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6915, 18} true;
  assume {:verifier.code 0} true;
  $p66 := $bitcast.ref.ref($p65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6915, 25} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i24($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6915, 25} true;
  assume {:verifier.code 0} true;
  $i68 := $and.i24($i67, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6915, 25} true;
  assume {:verifier.code 0} true;
  $i69 := $or.i24($i68, 253);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6915, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p66, $i69);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6916, 18} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p8, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6916, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p70, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6917, 55} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p8, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6917, 55} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i8($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6917, 33} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i8.i64($i72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6917, 61} true;
  assume {:verifier.code 0} true;
  $i74 := $and.i64($i73, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6917, 13} true;
  assume {:verifier.code 0} true;
  call $i75 := ldv__builtin_expect($i74, 0);
  // WARNING: %95 = call i64 @ldv__builtin_expect(i64 %94, i64 0), !dbg !7908, !verifier.code !7762
  call {:cexpr "tmp___2"} boogie_si_record_i64($i75);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6918, 15} true;
  assume {:verifier.code 0} true;
  $i76 := $ne.i64($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6918, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6919, 5} true;
  assume {:verifier.code 0} true;
  call $i77 := __dynamic_pr_debug.ref.ref.i32($p8, .str.47, $i60);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6920, 3} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6923, 23} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6923, 23} true;
  assume {:verifier.code 0} true;
  $p79 := $load.ref($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6923, 7} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6923, 29} true;
  assume {:verifier.code 0} true;
  $i81 := $ne.i64($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6923, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6924, 48} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6924, 48} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6924, 15} true;
  assume {:verifier.code 0} true;
  call $i84 := nla_len($p83);
  // WARNING: %108 = call i32 @nla_len(%struct.nlattr* %107), !dbg !7924, !verifier.code !7762
  call {:cexpr "hdr_len"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6925, 45} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p5, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6925, 45} true;
  assume {:verifier.code 0} true;
  $p86 := $load.ref($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6925, 11} true;
  assume {:verifier.code 0} true;
  call $p87 := nla_data($p86);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6926, 3} true;
  assume {:verifier.code 0} true;
  $i88, $p89 := $i84, $p87;
  goto $bb30;
$bb29:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  $i88, $p89 := 8, $0.ref;
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6930, 23} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6930, 23} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6930, 7} true;
  assume {:verifier.code 0} true;
  $i92 := $p2i.ref.i64($p91);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6930, 29} true;
  assume {:verifier.code 0} true;
  $i93 := $eq.i64($i92, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6930, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i93 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6932, 3} true;
  assume {:verifier.code 0} true;
  $p94 := $0.ref;
  goto $bb33;
$bb32:
  assume !(($i93 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6933, 52} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6933, 52} true;
  assume {:verifier.code 0} true;
  $p96 := $load.ref($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6933, 15} true;
  assume {:verifier.code 0} true;
  call $i97 := nla_get_u32($p96);
  // WARNING: %122 = call i32 @nla_get_u32(%struct.nlattr* %121), !dbg !7941, !verifier.code !7762
  call {:cexpr "tmp___3"} boogie_si_record_i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6934, 15} true;
  assume {:verifier.code 0} true;
  call $i98 := atm_tc_get($p0, $i97);
  // WARNING: %123 = call i64 @atm_tc_get(%struct.Qdisc* %0, i32 %122), !dbg !7944, !verifier.code !7762
  call {:cexpr "tmp___4"} boogie_si_record_i64($i98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6935, 14} true;
  assume {:verifier.code 0} true;
  $p99 := $i2p.i64.ref($i98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6936, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $p2i.ref.i64($p99);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6936, 32} true;
  assume {:verifier.code 0} true;
  $i101 := $eq.i64($i100, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6936, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb34, $bb35;
$bb33:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6942, 18} true;
  assume {:verifier.code 0} true;
  $p102 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6942, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p102, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6943, 18} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p9, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6943, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p103, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6944, 18} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p9, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6944, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p104, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6945, 18} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p9, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6945, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p105, .str.48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6946, 18} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p9, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6946, 18} true;
  assume {:verifier.code 0} true;
  $p107 := $bitcast.ref.ref($p106);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6946, 25} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i24($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6946, 25} true;
  assume {:verifier.code 0} true;
  $i109 := $and.i24($i108, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6946, 25} true;
  assume {:verifier.code 0} true;
  $i110 := $or.i24($i109, 270);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6946, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p107, $i110);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6947, 18} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p9, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6947, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p111, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6948, 55} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p9, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6948, 55} true;
  assume {:verifier.code 0} true;
  $i113 := $load.i8($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6948, 33} true;
  assume {:verifier.code 0} true;
  $i114 := $zext.i8.i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6948, 61} true;
  assume {:verifier.code 0} true;
  $i115 := $and.i64($i114, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6948, 13} true;
  assume {:verifier.code 0} true;
  call $i116 := ldv__builtin_expect($i115, 0);
  // WARNING: %145 = call i64 @ldv__builtin_expect(i64 %144, i64 0), !dbg !7969, !verifier.code !7762
  call {:cexpr "tmp___6"} boogie_si_record_i64($i116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6949, 15} true;
  assume {:verifier.code 0} true;
  $i117 := $ne.i64($i116, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6949, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i117} true;
  goto $bb37, $bb38;
$bb34:
  assume ($i101 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6937, 7} true;
  assume {:verifier.code 0} true;
  $i44 := $sub.i32(0, 2);
  goto $bb11;
$bb35:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  $p94 := $p99;
  goto $bb33;
$bb37:
  assume ($i117 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6950, 15} true;
  assume {:verifier.code 0} true;
  call $i118 := nla_len($p21);
  // WARNING: %148 = call i32 @nla_len(%struct.nlattr* %22), !dbg !7975, !verifier.code !7762
  call {:cexpr "tmp___5"} boogie_si_record_i32($i118);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6952, 35} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p21, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6952, 35} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i16($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6952, 24} true;
  assume {:verifier.code 0} true;
  $i121 := $zext.i16.i32($i120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6951, 5} true;
  assume {:verifier.code 0} true;
  call $i122 := __dynamic_pr_debug.ref.ref.i32.i32.i32($p9, .str.48, $i121, $i118, $i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6953, 3} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i117 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6956, 10} true;
  assume {:verifier.code 0} true;
  call $p123 := sockfd_lookup($i60, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6957, 7} true;
  assume {:verifier.code 0} true;
  $i124 := $p2i.ref.i64($p123);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6957, 28} true;
  assume {:verifier.code 0} true;
  $i125 := $eq.i64($i124, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6957, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6958, 13} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6958, 5} true;
  assume {:verifier.code 0} true;
  $i44 := $i126;
  goto $bb11;
$bb41:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6962, 18} true;
  assume {:verifier.code 0} true;
  $p127 := $p10;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6962, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p127, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6963, 18} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p10, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6963, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p128, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6964, 18} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p10, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6964, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p129, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6965, 18} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p10, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6965, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p130, .str.49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6966, 18} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p10, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6966, 18} true;
  assume {:verifier.code 0} true;
  $p132 := $bitcast.ref.ref($p131);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6966, 25} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i24($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6966, 25} true;
  assume {:verifier.code 0} true;
  $i134 := $and.i24($i133, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6966, 25} true;
  assume {:verifier.code 0} true;
  $i135 := $or.i24($i134, 274);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6966, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p132, $i135);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6967, 18} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p10, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6967, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p136, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6968, 55} true;
  assume {:verifier.code 0} true;
  $p137 := $add.ref($p10, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6968, 55} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i8($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6968, 33} true;
  assume {:verifier.code 0} true;
  $i139 := $zext.i8.i64($i138);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6968, 61} true;
  assume {:verifier.code 0} true;
  $i140 := $and.i64($i139, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6968, 13} true;
  assume {:verifier.code 0} true;
  call $i141 := ldv__builtin_expect($i140, 0);
  // WARNING: %176 = call i64 @ldv__builtin_expect(i64 %175, i64 0), !dbg !8008, !verifier.code !7762
  call {:cexpr "tmp___8"} boogie_si_record_i64($i141);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6969, 15} true;
  assume {:verifier.code 0} true;
  $i142 := $ne.i64($i141, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6969, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i142} true;
  goto $bb43, $bb44;
$bb43:
  assume ($i142 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6970, 41} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p123, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6970, 41} true;
  assume {:verifier.code 0} true;
  $p144 := $load.ref($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6970, 48} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p144, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6970, 15} true;
  assume {:verifier.code 0} true;
  call $i146 := atomic_long_read($p145);
  // WARNING: %182 = call i64 @atomic_long_read(%union.ktime* %181), !dbg !8017, !verifier.code !7762
  call {:cexpr "tmp___7"} boogie_si_record_i64($i146);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6971, 5} true;
  assume {:verifier.code 0} true;
  call $i147 := __dynamic_pr_debug.ref.ref.i64($p10, .str.49, $i146);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6972, 3} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !(($i142 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 20} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p123, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 20} true;
  assume {:verifier.code 0} true;
  $p149 := $load.ref($M.0, $p148);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 26} true;
  assume {:verifier.code 0} true;
  $p150 := $p149;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 26} true;
  assume {:verifier.code 0} true;
  $i151 := $load.i32($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 33} true;
  assume {:verifier.code 0} true;
  $i152 := $ne.i32($i151, 20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i152} true;
  goto $bb46, $bb47;
$bb46:
  assume ($i152 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 55} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p123, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 55} true;
  assume {:verifier.code 0} true;
  $p154 := $load.ref($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 61} true;
  assume {:verifier.code 0} true;
  $p155 := $p154;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 61} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i32($M.0, $p155);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 68} true;
  assume {:verifier.code 0} true;
  $i157 := $ne.i32($i156, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i157} true;
  goto $bb49, $bb50;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 39} true;
  assume {:verifier.code 0} true;
  assume !(($i152 == 1));
  goto $bb48;
$bb48:
  assume {:verifier.code 0} true;
  goto $bb52;
$bb49:
  assume ($i157 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6976, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $sub.i32(0, 91));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6977, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6975, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i157 == 1));
  goto $bb48;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7112, 7} true;
  assume {:verifier.code 0} true;
  $i321 := $p2i.ref.i64($p94);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7112, 30} true;
  assume {:verifier.code 0} true;
  $i322 := $ne.i64($i321, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7112, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i322} true;
  goto $bb95, $bb96;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6981, 15} true;
  assume {:verifier.code 0} true;
  $i158 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6981, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i158} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i158 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6982, 16} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6982, 16} true;
  assume {:verifier.code 0} true;
  $i160 := $load.i32($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6982, 23} true;
  assume {:verifier.code 0} true;
  $i161 := $xor.i32($i160, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6982, 34} true;
  assume {:verifier.code 0} true;
  $i162 := $and.i32($i161, $sub.i32(0, 65536));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6982, 49} true;
  assume {:verifier.code 0} true;
  $i163 := $ne.i32($i162, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6982, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i163} true;
  goto $bb55, $bb56;
$bb54:
  assume !(($i158 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7014, 9} true;
  assume {:verifier.code 0} true;
  $i182 := 1;
  goto $bb62;
$bb55:
  assume ($i163 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6983, 22} true;
  assume {:verifier.code 0} true;
  $p164 := $p11;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6983, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p164, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6984, 22} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p11, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6984, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p165, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6985, 22} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p11, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6985, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p166, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6986, 22} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p11, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6986, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p167, .str.50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6987, 22} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p11, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6987, 22} true;
  assume {:verifier.code 0} true;
  $p169 := $bitcast.ref.ref($p168);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6987, 29} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i24($M.0, $p169);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6987, 29} true;
  assume {:verifier.code 0} true;
  $i171 := $and.i24($i170, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6987, 29} true;
  assume {:verifier.code 0} true;
  $i172 := $or.i24($i171, 283);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6987, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p169, $i172);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6988, 22} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p11, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6988, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p173, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6989, 59} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p11, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6989, 59} true;
  assume {:verifier.code 0} true;
  $i175 := $load.i8($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6989, 37} true;
  assume {:verifier.code 0} true;
  $i176 := $zext.i8.i64($i175);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6989, 65} true;
  assume {:verifier.code 0} true;
  $i177 := $and.i64($i176, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6989, 17} true;
  assume {:verifier.code 0} true;
  call $i178 := ldv__builtin_expect($i177, 0);
  // WARNING: %222 = call i64 @ldv__builtin_expect(i64 %221, i64 0), !dbg !8061, !verifier.code !7762
  call {:cexpr "tmp___9"} boogie_si_record_i64($i178);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6990, 19} true;
  assume {:verifier.code 0} true;
  $i179 := $ne.i64($i178, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6990, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i179} true;
  goto $bb57, $bb58;
$bb56:
  assume !(($i163 == 1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb57:
  assume ($i179 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6991, 9} true;
  assume {:verifier.code 0} true;
  call $i180 := __dynamic_pr_debug.ref.ref($p11, .str.50);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6992, 7} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i179 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6995, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $sub.i32(0, 22));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6996, 7} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7000, 3} true;
  assume {:verifier.code 0} true;
  $i181 := $i1;
  goto $bb61;
$bb61:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7021, 18} true;
  assume {:verifier.code 0} true;
  $p196 := $p12;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7021, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p196, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7022, 18} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($p12, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7022, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p197, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7023, 18} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p12, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7023, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p198, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7024, 18} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p12, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7024, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p199, .str.51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7025, 18} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($p12, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7025, 18} true;
  assume {:verifier.code 0} true;
  $p201 := $bitcast.ref.ref($p200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7025, 25} true;
  assume {:verifier.code 0} true;
  $i202 := $load.i24($M.0, $p201);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7025, 25} true;
  assume {:verifier.code 0} true;
  $i203 := $and.i24($i202, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7025, 25} true;
  assume {:verifier.code 0} true;
  $i204 := $or.i24($i203, 299);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7025, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p201, $i204);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7026, 18} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p12, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7026, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p205, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7027, 56} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p12, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7027, 56} true;
  assume {:verifier.code 0} true;
  $i207 := $load.i8($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7027, 34} true;
  assume {:verifier.code 0} true;
  $i208 := $zext.i8.i64($i207);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7027, 62} true;
  assume {:verifier.code 0} true;
  $i209 := $and.i64($i208, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7027, 14} true;
  assume {:verifier.code 0} true;
  call $i210 := ldv__builtin_expect($i209, 0);
  // WARNING: %264 = call i64 @ldv__builtin_expect(i64 %263, i64 0), !dbg !8113, !verifier.code !7762
  call {:cexpr "tmp___10"} boogie_si_record_i64($i210);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7028, 16} true;
  assume {:verifier.code 0} true;
  $i211 := $ne.i64($i210, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7028, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb71, $bb72;
$bb62:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7015, 7} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7004, 22} true;
  assume {:verifier.code 0} true;
  $p183 := $add.ref($p0, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7004, 22} true;
  assume {:verifier.code 0} true;
  $i184 := $load.i32($M.0, $p183);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7004, 29} true;
  assume {:verifier.code 0} true;
  $i185 := $and.i32($i184, $sub.i32(0, 65536));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7004, 55} true;
  assume {:verifier.code 0} true;
  $i186 := $and.i32($i182, 65535);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7004, 44} true;
  assume {:verifier.code 0} true;
  $i187 := $or.i32($i185, $i186);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7004, 66} true;
  assume {:verifier.code 0} true;
  $i188 := $or.i32($i187, 32768);
  // WARNING: %237 = or i32 %236, 32768, !dbg !8081, !verifier.code !7762
  call {:cexpr "classid"} boogie_si_record_i32($i188);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7005, 10} true;
  assume {:verifier.code 0} true;
  call $i189 := atm_tc_get($p0, $i188);
  // WARNING: %238 = call i64 @atm_tc_get(%struct.Qdisc* %0, i32 %237), !dbg !8082, !verifier.code !7762
  call {:cexpr "cl"} boogie_si_record_i64($i189);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7006, 12} true;
  assume {:verifier.code 0} true;
  $i190 := $eq.i64($i189, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7006, 9} true;
  assume {:verifier.code 0} true;
  $i191 := $i188;
  assume {:branchcond $i190} true;
  goto $bb64, $bb65;
$bb64:
  assume ($i190 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7007, 7} true;
  assume {:verifier.code 0} true;
  $i192 := $i191;
  goto $bb66;
$bb65:
  assume !(($i190 == 1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i181 := $i192;
  goto $bb61;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7011, 5} true;
  assume {:verifier.code 0} true;
  call atm_tc_put($p0, $i189);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7012, 11} true;
  assume {:verifier.code 0} true;
  $i193 := $add.i32($i182, 1);
  // WARNING: %243 = add nsw i32 %.027, 1, !dbg !8091, !verifier.code !7762
  call {:cexpr "i"} boogie_si_record_i32($i193);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7014, 11} true;
  assume {:verifier.code 0} true;
  $i194 := $sle.i32($i193, 32767);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7014, 9} true;
  assume {:verifier.code 0} true;
  $i182, $i195 := $i193, $i188;
  assume {:branchcond $i194} true;
  goto $bb68, $bb69;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7014, 9} true;
  assume {:verifier.code 0} true;
  assume ($i194 == 1);
  goto $bb62;
$bb69:
  assume !(($i194 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7014, 14} true;
  assume {:verifier.code 0} true;
  $i192 := $i195;
  goto $bb66;
$bb71:
  assume ($i211 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7029, 5} true;
  assume {:verifier.code 0} true;
  call $i212 := __dynamic_pr_debug.ref.ref.i32($p12, .str.51, $i181);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7030, 3} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i211 == 1));
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7033, 22} true;
  assume {:verifier.code 0} true;
  $i213 := $sext.i32.i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7033, 46} true;
  assume {:verifier.code 0} true;
  $i214 := $add.i64($i213, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7033, 14} true;
  assume {:verifier.code 0} true;
  call $p215 := kzalloc($i214, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7034, 10} true;
  assume {:verifier.code 0} true;
  $p216 := $bitcast.ref.ref($p215);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7035, 18} true;
  assume {:verifier.code 0} true;
  $p217 := $p13;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7035, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p217, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7036, 18} true;
  assume {:verifier.code 0} true;
  $p218 := $add.ref($p13, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7036, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p218, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7037, 18} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p13, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7037, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p219, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7038, 18} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p13, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7038, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p220, .str.52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7039, 18} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p13, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7039, 18} true;
  assume {:verifier.code 0} true;
  $p222 := $bitcast.ref.ref($p221);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7039, 25} true;
  assume {:verifier.code 0} true;
  $i223 := $load.i24($M.0, $p222);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7039, 25} true;
  assume {:verifier.code 0} true;
  $i224 := $and.i24($i223, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7039, 25} true;
  assume {:verifier.code 0} true;
  $i225 := $or.i24($i224, 301);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7039, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p222, $i225);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7040, 18} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($p13, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7040, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p226, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7041, 56} true;
  assume {:verifier.code 0} true;
  $p227 := $add.ref($p13, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7041, 56} true;
  assume {:verifier.code 0} true;
  $i228 := $load.i8($M.0, $p227);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7041, 34} true;
  assume {:verifier.code 0} true;
  $i229 := $zext.i8.i64($i228);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7041, 62} true;
  assume {:verifier.code 0} true;
  $i230 := $and.i64($i229, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7041, 14} true;
  assume {:verifier.code 0} true;
  call $i231 := ldv__builtin_expect($i230, 0);
  // WARNING: %288 = call i64 @ldv__builtin_expect(i64 %287, i64 0), !dbg !8143, !verifier.code !7762
  call {:cexpr "tmp___12"} boogie_si_record_i64($i231);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7042, 16} true;
  assume {:verifier.code 0} true;
  $i232 := $ne.i64($i231, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7042, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i232} true;
  goto $bb74, $bb75;
$bb74:
  assume ($i232 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7043, 5} true;
  assume {:verifier.code 0} true;
  call $i233 := __dynamic_pr_debug.ref.ref.ref($p13, .str.52, $p216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7044, 3} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i232 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7047, 7} true;
  assume {:verifier.code 0} true;
  $i234 := $p2i.ref.i64($p216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7047, 28} true;
  assume {:verifier.code 0} true;
  $i235 := $eq.i64($i234, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7047, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i235} true;
  goto $bb77, $bb78;
$bb77:
  assume ($i235 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7048, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p6, $sub.i32(0, 105));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7049, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb78:
  assume !(($i235 == 1));
  assume {:verifier.code 0} true;
  goto $bb79;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7053, 9} true;
  assume {:verifier.code 0} true;
  $p236 := $add.ref($p216, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7053, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p236, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7054, 36} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7054, 36} true;
  assume {:verifier.code 0} true;
  $p238 := $load.ref($M.0, $p237);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7054, 13} true;
  assume {:verifier.code 0} true;
  call $p239 := qdisc_create_dflt($p238, pfifo_qdisc_ops, $i181);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7054, 9} true;
  assume {:verifier.code 0} true;
  $p240 := $p216;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7054, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p240, $p239);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7056, 29} true;
  assume {:verifier.code 0} true;
  $p241 := $p216;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7056, 29} true;
  assume {:verifier.code 0} true;
  $p242 := $load.ref($M.0, $p241);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7056, 7} true;
  assume {:verifier.code 0} true;
  $i243 := $p2i.ref.i64($p242);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7056, 31} true;
  assume {:verifier.code 0} true;
  $i244 := $eq.i64($i243, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7056, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i244} true;
  goto $bb80, $bb81;
$bb80:
  assume ($i244 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7057, 11} true;
  assume {:verifier.code 0} true;
  $p245 := $p216;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7057, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p245, noop_qdisc);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7058, 3} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb81:
  assume !(($i244 == 1));
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7061, 18} true;
  assume {:verifier.code 0} true;
  $p246 := $p14;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7061, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p246, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7062, 18} true;
  assume {:verifier.code 0} true;
  $p247 := $add.ref($p14, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7062, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p247, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7063, 18} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($p14, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7063, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p248, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7064, 18} true;
  assume {:verifier.code 0} true;
  $p249 := $add.ref($p14, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7064, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p249, .str.53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7065, 18} true;
  assume {:verifier.code 0} true;
  $p250 := $add.ref($p14, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7065, 18} true;
  assume {:verifier.code 0} true;
  $p251 := $bitcast.ref.ref($p250);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7065, 25} true;
  assume {:verifier.code 0} true;
  $i252 := $load.i24($M.0, $p251);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7065, 25} true;
  assume {:verifier.code 0} true;
  $i253 := $and.i24($i252, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7065, 25} true;
  assume {:verifier.code 0} true;
  $i254 := $or.i24($i253, 310);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7065, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p251, $i254);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7066, 18} true;
  assume {:verifier.code 0} true;
  $p255 := $add.ref($p14, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7066, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p255, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7067, 56} true;
  assume {:verifier.code 0} true;
  $p256 := $add.ref($p14, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7067, 56} true;
  assume {:verifier.code 0} true;
  $i257 := $load.i8($M.0, $p256);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7067, 34} true;
  assume {:verifier.code 0} true;
  $i258 := $zext.i8.i64($i257);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7067, 62} true;
  assume {:verifier.code 0} true;
  $i259 := $and.i64($i258, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7067, 14} true;
  assume {:verifier.code 0} true;
  call $i260 := ldv__builtin_expect($i259, 0);
  // WARNING: %326 = call i64 @ldv__builtin_expect(i64 %325, i64 0), !dbg !8189, !verifier.code !7762
  call {:cexpr "tmp___13"} boogie_si_record_i64($i260);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7068, 16} true;
  assume {:verifier.code 0} true;
  $i261 := $ne.i64($i260, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7068, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i261} true;
  goto $bb83, $bb84;
$bb83:
  assume ($i261 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7069, 77} true;
  assume {:verifier.code 0} true;
  $p262 := $p216;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7069, 77} true;
  assume {:verifier.code 0} true;
  $p263 := $load.ref($M.0, $p262);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7069, 5} true;
  assume {:verifier.code 0} true;
  call $i264 := __dynamic_pr_debug.ref.ref.ref($p14, .str.53, $p263);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7070, 3} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb84:
  assume !(($i261 == 1));
  assume {:verifier.code 0} true;
  goto $bb85;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7073, 9} true;
  assume {:verifier.code 0} true;
  $p265 := $add.ref($p216, 40);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7073, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p265, $p123);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7074, 15} true;
  assume {:verifier.code 0} true;
  call $p266 := ATM_SD($p123);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7074, 9} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p216, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7074, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p267, $p266);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7075, 28} true;
  assume {:verifier.code 0} true;
  $p268 := $bitcast.ref.ref($p216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7075, 10} true;
  assume {:verifier.code 0} true;
  $p269 := $add.ref($p216, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7075, 10} true;
  assume {:verifier.code 0} true;
  $p270 := $load.ref($M.0, $p269);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7075, 16} true;
  assume {:verifier.code 0} true;
  $p271 := $add.ref($p270, 1624);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7075, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p271, $p215);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7076, 18} true;
  assume {:verifier.code 0} true;
  $p272 := $p15;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7076, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p272, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7077, 18} true;
  assume {:verifier.code 0} true;
  $p273 := $add.ref($p15, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7077, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p273, .str.45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7078, 18} true;
  assume {:verifier.code 0} true;
  $p274 := $add.ref($p15, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7078, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p274, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7079, 18} true;
  assume {:verifier.code 0} true;
  $p275 := $add.ref($p15, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7079, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p275, .str.54);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7080, 18} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p15, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7080, 18} true;
  assume {:verifier.code 0} true;
  $p277 := $bitcast.ref.ref($p276);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7080, 25} true;
  assume {:verifier.code 0} true;
  $i278 := $load.i24($M.0, $p277);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7080, 25} true;
  assume {:verifier.code 0} true;
  $i279 := $and.i24($i278, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7080, 25} true;
  assume {:verifier.code 0} true;
  $i280 := $or.i24($i279, 314);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7080, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p277, $i280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7081, 18} true;
  assume {:verifier.code 0} true;
  $p281 := $add.ref($p15, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7081, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p281, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7082, 56} true;
  assume {:verifier.code 0} true;
  $p282 := $add.ref($p15, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7082, 56} true;
  assume {:verifier.code 0} true;
  $i283 := $load.i8($M.0, $p282);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7082, 34} true;
  assume {:verifier.code 0} true;
  $i284 := $zext.i8.i64($i283);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7082, 62} true;
  assume {:verifier.code 0} true;
  $i285 := $and.i64($i284, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7082, 14} true;
  assume {:verifier.code 0} true;
  call $i286 := ldv__builtin_expect($i285, 0);
  // WARNING: %355 = call i64 @ldv__builtin_expect(i64 %354, i64 0), !dbg !8223, !verifier.code !7762
  call {:cexpr "tmp___14"} boogie_si_record_i64($i286);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7083, 16} true;
  assume {:verifier.code 0} true;
  $i287 := $ne.i64($i286, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7083, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i287} true;
  goto $bb86, $bb87;
$bb86:
  assume ($i287 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7084, 75} true;
  assume {:verifier.code 0} true;
  $p288 := $add.ref($p216, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7084, 75} true;
  assume {:verifier.code 0} true;
  $p289 := $load.ref($M.0, $p288);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7084, 5} true;
  assume {:verifier.code 0} true;
  call $i290 := __dynamic_pr_debug.ref.ref.ref($p15, .str.54, $p289);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7085, 3} true;
  assume {:verifier.code 0} true;
  goto $bb88;
$bb87:
  assume !(($i287 == 1));
  assume {:verifier.code 0} true;
  goto $bb88;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7088, 26} true;
  assume {:verifier.code 0} true;
  $p291 := $add.ref($p216, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7088, 26} true;
  assume {:verifier.code 0} true;
  $p292 := $load.ref($M.0, $p291);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7088, 32} true;
  assume {:verifier.code 0} true;
  $p293 := $add.ref($p292, 1464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7088, 32} true;
  assume {:verifier.code 0} true;
  $p294 := $load.ref($M.0, $p293);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7088, 9} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($p216, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7088, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p295, $p294);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7089, 9} true;
  assume {:verifier.code 0} true;
  $p296 := $add.ref($p216, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7089, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p296, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7090, 10} true;
  assume {:verifier.code 0} true;
  $p297 := $add.ref($p216, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7090, 10} true;
  assume {:verifier.code 0} true;
  $p298 := $load.ref($M.0, $p297);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7090, 16} true;
  assume {:verifier.code 0} true;
  $p299 := $add.ref($p298, 1464);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7090, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p299, sch_atm_pop);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7091, 9} true;
  assume {:verifier.code 0} true;
  $p300 := $add.ref($p216, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7091, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p300, $i181);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7092, 9} true;
  assume {:verifier.code 0} true;
  $p301 := $add.ref($p216, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7092, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p301, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7093, 9} true;
  assume {:verifier.code 0} true;
  $p302 := $add.ref($p216, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7093, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p302, $p94);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7094, 20} true;
  assume {:verifier.code 0} true;
  $p303 := $add.ref($p216, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7094, 31} true;
  assume {:verifier.code 0} true;
  $p304 := $p17;
  $p305 := $add.ref($p17, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7094, 3} true;
  assume {:verifier.code 0} true;
  call list_add($p303, $p305);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7095, 9} true;
  assume {:verifier.code 0} true;
  $p306 := $add.ref($p216, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7095, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p306, $i88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7096, 7} true;
  assume {:verifier.code 0} true;
  $i307 := $p2i.ref.i64($p89);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7096, 27} true;
  assume {:verifier.code 0} true;
  $i308 := $ne.i64($i307, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7096, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i308} true;
  goto $bb89, $bb90;
$bb89:
  assume ($i308 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7097, 13} true;
  assume {:verifier.code 0} true;
  $i309 := $sext.i32.i64($i88);
  // WARNING: %382 = sext i32 %.04 to i64, !dbg !8257, !verifier.code !7762
  call {:cexpr "__len"} boogie_si_record_i64($i309);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7098, 47} true;
  assume {:verifier.code 0} true;
  $p310 := $add.ref($p216, 124);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7098, 30} true;
  assume {:verifier.code 0} true;
  $p311 := $bitcast.ref.ref($p310);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7098, 13} true;
  assume {:verifier.code 0} true;
  call $i312 := __builtinx_memcpy.ref.ref.i64($p311, $p89, $i309);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7099, 3} true;
  assume {:verifier.code 0} true;
  goto $bb91;
$bb90:
  assume !(($i308 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7101, 19} true;
  assume {:verifier.code 0} true;
  $i313 := $ugt.i64(8, 63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7101, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i313} true;
  goto $bb92, $bb93;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7109, 10} true;
  assume {:verifier.code 0} true;
  $i320 := $p2i.ref.i64($p216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7109, 8} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p4, $i320);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7110, 3} true;
  assume {:verifier.code 0} true;
  $i44 := 0;
  goto $bb11;
$bb92:
  assume ($i313 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7102, 45} true;
  assume {:verifier.code 0} true;
  $p314 := $add.ref($p216, 124);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7102, 28} true;
  assume {:verifier.code 0} true;
  $p315 := $bitcast.ref.ref($p314);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7102, 19} true;
  assume {:verifier.code 0} true;
  call $p316 := __memcpy($p315, llc_oui_ip, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7104, 5} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb93:
  assume !(($i313 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7105, 53} true;
  assume {:verifier.code 0} true;
  $p317 := $add.ref($p216, 124);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7105, 36} true;
  assume {:verifier.code 0} true;
  $p318 := $bitcast.ref.ref($p317);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7105, 19} true;
  assume {:verifier.code 0} true;
  call $i319 := __builtinx_memcpy.ref.ref.i64($p318, llc_oui_ip, 8);
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:verifier.code 0} true;
  goto $bb91;
$bb95:
  assume ($i322 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7113, 21} true;
  assume {:verifier.code 0} true;
  $i323 := $p2i.ref.i64($p94);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7113, 5} true;
  assume {:verifier.code 0} true;
  call atm_tc_put($p0, $i323);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7114, 3} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb96:
  assume !(($i322 == 1));
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7117, 14} true;
  assume {:verifier.code 0} true;
  $p324 := $add.ref($p123, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7117, 14} true;
  assume {:verifier.code 0} true;
  $p325 := $load.ref($M.0, $p324);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7117, 3} true;
  assume {:verifier.code 0} true;
  call fput($p325);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7118, 11} true;
  assume {:verifier.code 0} true;
  $i326 := $load.i32($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7118, 3} true;
  assume {:verifier.code 0} true;
  $i44 := $i326;
  goto $bb11;
}
const atm_tc_delete: ref;
axiom (atm_tc_delete == $sub.ref(0, 146005));
procedure  atm_tc_delete($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i24;
  var $i13: i24;
  var $i14: i24;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $i25: i1;
  var $p27: ref;
  var $p28: ref;
  var $i29: i64;
  var $i30: i1;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $i36: i32;
  var $i37: i1;
  var $p38: ref;
  var $i39: i32;
  var $i40: i32;
  var $p41: ref;
  var $i42: i32;
  var $i43: i1;
  var $i26: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !9964, metadata !7764), !dbg !9965, !verifier.code !7762
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7131, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7132, 7} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7133, 10} true;
  assume {:verifier.code 0} true;
  $p5 := $i2p.i64.ref($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7134, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7134, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7135, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7135, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7136, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7136, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7137, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7137, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str.30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7138, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7138, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7138, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i24($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7138, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i24($i12, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7138, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $or.i24($i13, 341);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7138, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p11, $i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7139, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7139, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7140, 51} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7140, 51} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7140, 33} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7140, 57} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i64($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7140, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := ldv__builtin_expect($i19, 0);
  // WARNING: %21 = call i64 @ldv__builtin_expect(i64 %20, i64 0), !dbg !7803, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7141, 15} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7141, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7142, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := __dynamic_pr_debug.ref.ref.ref.ref.ref($p2, .str.30, $p0, $p4, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7144, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7147, 61} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p5, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7147, 13} true;
  assume {:verifier.code 0} true;
  call $i24 := list_empty($p23);
  // WARNING: %28 = call i32 @list_empty(%struct.list_head* %27), !dbg !7813, !verifier.code !7762
  call {:cexpr "tmp___1"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7148, 15} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7148, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7149, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, 22);
  goto $bb6;
$bb5:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7172, 1} true;
  assume {:verifier.code 0} true;
  $r := $i26;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 29} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 29} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $p2i.ref.i64($p28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 41} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i64($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 84} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb8, $bb10;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 84} true;
  assume {:verifier.code 0} true;
  assume ($i30 == 1);
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7154, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, 16);
  goto $bb6;
$bb10:
  assume !(($i30 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 109} true;
  assume {:verifier.code 0} true;
  $p31 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 87} true;
  assume {:verifier.code 0} true;
  $i32 := $p2i.ref.i64($p31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 118} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 115} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i64($i32, $i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb11, $bb12;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7153, 7} true;
  assume {:verifier.code 0} true;
  assume ($i34 == 1);
  goto $bb9;
$bb12:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7158, 13} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p5, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7158, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7158, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $sle.i32($i36, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7158, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7159, 56} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p5, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7159, 56} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7159, 5} true;
  assume {:verifier.code 0} true;
  call $i40 := printk.ref.i32(.str.31, $i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7160, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, 22);
  goto $bb6;
$bb15:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7164, 13} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p5, 52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7164, 13} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7164, 17} true;
  assume {:verifier.code 0} true;
  $i43 := $sgt.i32($i42, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7164, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7165, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, 16);
  goto $bb6;
$bb18:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7169, 3} true;
  assume {:verifier.code 0} true;
  call atm_tc_put($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7170, 3} true;
  assume {:verifier.code 0} true;
  $i26 := 0;
  goto $bb6;
}
const atm_tc_walk: ref;
axiom (atm_tc_walk == $sub.ref(0, 147037));
procedure  atm_tc_walk($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i24;
  var $i12: i24;
  var $i13: i24;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $i20: i1;
  var $i21: i32;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i64;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $p36: ref;
  var $i37: i32;
  var $p38: ref;
  var $i39: i32;
  var $i40: i1;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $i58: i1;
  var $p35: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7185, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7186, 7} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7187, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7187, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7188, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7188, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str.32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7189, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7189, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7190, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7190, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, .str.33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7191, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7191, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7191, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i24($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7191, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i24($i11, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7191, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $or.i24($i12, 365);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7191, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p10, $i13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7192, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7192, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p14, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7193, 51} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7193, 51} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7193, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7193, 57} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i64($i17, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7193, 13} true;
  assume {:verifier.code 0} true;
  call $i19 := ldv__builtin_expect($i18, 0);
  // WARNING: %20 = call i64 @ldv__builtin_expect(i64 %19, i64 0), !dbg !7800, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7194, 15} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i64($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7194, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7195, 5} true;
  assume {:verifier.code 0} true;
  call $i21 := __dynamic_pr_debug.ref.ref.ref.ref.ref($p2, .str.33, $p0, $p4, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7197, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7200, 15} true;
  assume {:verifier.code 0} true;
  $p22 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7200, 15} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7200, 20} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7200, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7201, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7232, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7205, 43} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 128);
  $p26 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7205, 49} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7206, 10} true;
  assume {:verifier.code 0} true;
  $p28 := $bitcast.ref.ref($p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7206, 41} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 32} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p28, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 63} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 41} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 38} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i64($i31, $i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 7} true;
  assume {:verifier.code 0} true;
  $p35 := $p29;
  goto $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i34 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7225, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7209, 15} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7209, 15} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7209, 32} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7209, 32} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7209, 21} true;
  assume {:verifier.code 0} true;
  $i40 := $sge.i32($i37, $i39);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7209, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7210, 26} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7210, 26} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7210, 36} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p35);
  call $i44 := devirtbounce.6($p42, $p0, $i43, $p1);
  // WARNING: %52 = call i32 @devirtbounce.6(i32 (%struct.Qdisc*, i64, %struct.qdisc_walker*)* %50, %struct.Qdisc* %0, i64 %51, %struct.qdisc_walker* %1)
  call {:cexpr "tmp___1"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7211, 17} true;
  assume {:verifier.code 0} true;
  $i45 := $slt.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7211, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb15:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7212, 15} true;
  assume {:verifier.code 0} true;
  $p46 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7212, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p46, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7213, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7230, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7217, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7220, 27} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7220, 27} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7220, 33} true;
  assume {:verifier.code 0} true;
  $i49 := $add.i32($i48, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7220, 11} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7220, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p50, $i49);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7221, 50} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p35, 96);
  $p52 := $add.ref($p35, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7221, 55} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7222, 10} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7222, 45} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, $mul.ref($sub.ref(0, 88), 128));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 32} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p54, $mul.ref($sub.ref(0, 88), 128)), 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 7} true;
  assume {:verifier.code 0} true;
  $i57 := $p2i.ref.i64($p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 38} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i64($i57, $i33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 7} true;
  assume {:verifier.code 0} true;
  $p35 := $p55;
  assume {:branchcond $i58} true;
  goto $bb20, $bb21;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 7} true;
  assume {:verifier.code 0} true;
  assume ($i58 == 1);
  goto $bb11;
$bb21:
  assume !(($i58 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7224, 68} true;
  assume {:verifier.code 0} true;
  goto $bb17;
}
const atm_tc_find_tcf: ref;
axiom (atm_tc_find_tcf == $sub.ref(0, 148069));
procedure  atm_tc_find_tcf($p0: ref, $i1: i64)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i24;
  var $i13: i24;
  var $i14: i24;
  var $p15: ref;
  var $p16: ref;
  var $i17: i8;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i1;
  var $i22: i32;
  var $i23: i64;
  var $i24: i1;
  var $p25: ref;
  var $p27: ref;
  var $p28: ref;
  var $p26: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !10137, metadata !7764), !dbg !10138, !verifier.code !7762
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7242, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7243, 7} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7244, 10} true;
  assume {:verifier.code 0} true;
  $p5 := $i2p.i64.ref($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7245, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7245, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p6, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7246, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7246, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, .str.41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7247, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7247, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7248, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7248, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str.42);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7249, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7249, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7249, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i24($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7249, 21} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i24($i12, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7249, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $or.i24($i13, 383);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7249, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p11, $i14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7250, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7250, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7251, 51} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7251, 51} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7251, 33} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7251, 57} true;
  assume {:verifier.code 0} true;
  $i19 := $and.i64($i18, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7251, 13} true;
  assume {:verifier.code 0} true;
  call $i20 := ldv__builtin_expect($i19, 0);
  // WARNING: %21 = call i64 @ldv__builtin_expect(i64 %20, i64 0), !dbg !7803, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7252, 15} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i64($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7252, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7253, 5} true;
  assume {:verifier.code 0} true;
  call $i22 := __dynamic_pr_debug.ref.ref.ref.ref.ref($p2, .str.42, $p0, $p4, $p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7255, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7258, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7258, 32} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7258, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7258, 89} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7258, 11} true;
  assume {:verifier.code 0} true;
  $p26 := $p25;
  goto $bb6;
$bb5:
  assume !(($i24 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7258, 108} true;
  assume {:verifier.code 0} true;
  $p27 := $p4;
  $p28 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7258, 11} true;
  assume {:verifier.code 0} true;
  $p26 := $p28;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7258, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7258, 3} true;
  assume {:verifier.code 0} true;
  $r := $p26;
  $exn := false;
  return;
}
const atm_tc_bind_filter: ref;
axiom (atm_tc_bind_filter == $sub.ref(0, 149101));
procedure  atm_tc_bind_filter($p0: ref, $i1: i64, $i2: i32)
  returns ($r: i64)
{
  var $i3: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !10189, metadata !7764), !dbg !10190, !verifier.code !7762
  // WARNING: call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !10191, metadata !7764), !dbg !10192, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6683, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := atm_tc_get($p0, $i2);
  // WARNING: %4 = call i64 @atm_tc_get(%struct.Qdisc* %0, i32 %2), !dbg !7770, !verifier.code !7765
  call {:cexpr "tmp"} boogie_si_record_i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6684, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const atm_tc_dump_class: ref;
axiom (atm_tc_dump_class == $sub.ref(0, 150133));
procedure  atm_tc_dump_class($p0: ref, $i1: i64, $p2: ref, $p3: ref)
  returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i24;
  var $i16: i24;
  var $i17: i24;
  var $p18: ref;
  var $p19: ref;
  var $i20: i8;
  var $i21: i64;
  var $i22: i64;
  var $i23: i64;
  var $i24: i1;
  var $i25: i32;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $p30: ref;
  var $i31: i32;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i1;
  var $p41: ref;
  var $i42: i32;
  var $p43: ref;
  var $p44: ref;
  var $i45: i32;
  var $i46: i1;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $i50: i1;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i16;
  var $i66: i32;
  var $i67: i32;
  var $i68: i16;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i16;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i32;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i32;
  var $i90: i1;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i32;
  var $i95: i1;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $i99: i32;
  var $i100: i1;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $i104: i32;
  var $i105: i1;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: i32;
  var $i110: i1;
  var $i111: i32;
  var $i112: i32;
  var $i113: i32;
  var $i114: i32;
  var $i115: i32;
  var $i116: i32;
  var $i117: i1;
  var $p118: ref;
  var $p119: ref;
  var $i120: i64;
  var $i121: i1;
  var $p122: ref;
  var $i123: i32;
  var $i124: i32;
  var $i125: i1;
  var $i126: i32;
  var $i127: i1;
  var $i128: i32;
  var $i29: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(12, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !10201, metadata !7764), !dbg !10202, !verifier.code !7762
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7837, 9} true;
  assume {:verifier.code 0} true;
  call $p6 := qdisc_priv($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7838, 7} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7839, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $i2p.i64.ref($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7840, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7840, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7841, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7841, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, .str.43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7842, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7842, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7843, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7843, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p12, .str.44);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7844, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7844, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7844, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i24($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7844, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i24($i15, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7844, 21} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i24($i16, 622);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7844, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p14, $i17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7845, 14} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7845, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7846, 51} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p4, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7846, 51} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i8($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7846, 33} true;
  assume {:verifier.code 0} true;
  $i21 := $zext.i8.i64($i20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7846, 57} true;
  assume {:verifier.code 0} true;
  $i22 := $and.i64($i21, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7846, 13} true;
  assume {:verifier.code 0} true;
  call $i23 := ldv__builtin_expect($i22, 0);
  // WARNING: %24 = call i64 @ldv__builtin_expect(i64 %23, i64 0), !dbg !7818, !verifier.code !7762
  call {:cexpr "tmp___0"} boogie_si_record_i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7847, 15} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i64($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7847, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7848, 5} true;
  assume {:verifier.code 0} true;
  call $i25 := __dynamic_pr_debug.ref.ref.ref.ref.ref.ref.ref($p4, .str.44, $p0, $p7, $p8, $p2, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7850, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7853, 61} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p8, 96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7853, 13} true;
  assume {:verifier.code 0} true;
  call $i27 := list_empty($p26);
  // WARNING: %31 = call i32 @list_empty(%struct.list_head* %30), !dbg !7828, !verifier.code !7762
  call {:cexpr "tmp___1"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7854, 15} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7854, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7855, 5} true;
  assume {:verifier.code 0} true;
  $i29 := $sub.i32(0, 22);
  goto $bb6;
$bb5:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7940, 1} true;
  assume {:verifier.code 0} true;
  $r := $i29;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7859, 27} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p8, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7859, 27} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7859, 8} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7859, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i31);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7860, 26} true;
  assume {:verifier.code 0} true;
  $p33 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7860, 26} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7860, 30} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7860, 30} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7860, 8} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p3, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7860, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p37, $i36);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7861, 10} true;
  assume {:verifier.code 0} true;
  call $p38 := nla_nest_start($p2, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7862, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $p2i.ref.i64($p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7862, 28} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i64($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7862, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7863, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7937, 3} true;
  assume {:verifier.code 0} true;
  call nla_nest_cancel($p2, $p38);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7938, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $sub.i32(0, 1);
  goto $bb6;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7867, 35} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p8, 120);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7867, 35} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7867, 69} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p8, 124);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7867, 44} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7867, 13} true;
  assume {:verifier.code 0} true;
  call $i45 := nla_put($p2, 3, $i42, $p44);
  // WARNING: %54 = call i32 @nla_put(%struct.sk_buff* %2, i32 3, i32 %51, i8* %53), !dbg !7855, !verifier.code !7762
  call {:cexpr "tmp___2"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7868, 15} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i32($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7868, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7869, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb13:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7873, 29} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7873, 29} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7873, 7} true;
  assume {:verifier.code 0} true;
  $i49 := $p2i.ref.i64($p48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7873, 33} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i64($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7873, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7874, 5} true;
  assume {:verifier.code 0} true;
  $p51 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7874, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p51, 0, 12, $zext.i32.i64(4), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7875, 9} true;
  assume {:verifier.code 0} true;
  $p52 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7875, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p52, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 47} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 47} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 53} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 1304);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 53} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 24} true;
  assume {:verifier.code 0} true;
  $i57 := $p2i.ref.i64($p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 57} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i64($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb17, $bb18;
$bb16:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb17:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 116} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 116} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 122} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p60, 1304);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 122} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 128} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p62, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 128} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 100} true;
  assume {:verifier.code 0} true;
  $i65 := $trunc.i32.i16($i64);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 100} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i16.i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 24} true;
  assume {:verifier.code 0} true;
  $i67 := $i66;
  goto $bb19;
$bb18:
  assume !(($i58 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 24} true;
  assume {:verifier.code 0} true;
  $i67 := $sub.i32(0, 1);
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 24} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 24} true;
  assume {:verifier.code 0} true;
  $i68 := $trunc.i32.i16($i67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 9} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p5, 4);
  $p70 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7876, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p70, $i68);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7877, 31} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7877, 31} true;
  assume {:verifier.code 0} true;
  $p72 := $load.ref($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7877, 37} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p72, 1280);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7877, 37} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i16($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7877, 9} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p5, 4);
  $p76 := $add.ref($add.ref($p5, 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7877, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p76, $i74);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7878, 31} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7878, 31} true;
  assume {:verifier.code 0} true;
  $p78 := $load.ref($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7878, 37} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p78, 1284);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7878, 37} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7878, 9} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p5, 4);
  $p82 := $add.ref($add.ref($p5, 4), 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7878, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p82, $i80);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7879, 35} true;
  assume {:verifier.code 0} true;
  $p83 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7879, 15} true;
  assume {:verifier.code 0} true;
  call $i84 := nla_put($p2, 5, 12, $p83);
  // WARNING: %100 = call i32 @nla_put(%struct.sk_buff* %2, i32 5, i32 12, i8* %99), !dbg !7897, !verifier.code !7762
  call {:cexpr "tmp___3"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7880, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7880, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7881, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb21:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7885, 82} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7885, 82} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7885, 88} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p87, 1272);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7885, 16} true;
  assume {:verifier.code 0} true;
  call $i89 := constant_test_bit(1, $p88);
  // WARNING: %108 = call i32 @constant_test_bit(i64 1, i64* %107), !dbg !7907, !verifier.code !7762
  call {:cexpr "tmp___15"} boogie_si_record_i32($i89);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7886, 18} true;
  assume {:verifier.code 0} true;
  $i90 := $eq.i32($i89, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7886, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7887, 84} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7887, 84} true;
  assume {:verifier.code 0} true;
  $p92 := $load.ref($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7887, 90} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p92, 1272);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7887, 18} true;
  assume {:verifier.code 0} true;
  call $i94 := constant_test_bit(5, $p93);
  // WARNING: %114 = call i32 @constant_test_bit(i64 5, i64* %113), !dbg !7916, !verifier.code !7762
  call {:cexpr "tmp___14"} boogie_si_record_i32($i94);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7888, 20} true;
  assume {:verifier.code 0} true;
  $i95 := $eq.i32($i94, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7888, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  $i115 := 1;
  goto $bb34;
$bb25:
  assume ($i95 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7889, 86} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7889, 86} true;
  assume {:verifier.code 0} true;
  $p97 := $load.ref($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7889, 92} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p97, 1272);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7889, 20} true;
  assume {:verifier.code 0} true;
  call $i99 := constant_test_bit(7, $p98);
  // WARNING: %120 = call i32 @constant_test_bit(i64 7, i64* %119), !dbg !7925, !verifier.code !7762
  call {:cexpr "tmp___12"} boogie_si_record_i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7890, 22} true;
  assume {:verifier.code 0} true;
  $i100 := $eq.i32($i99, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7890, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb27, $bb28;
$bb26:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  $i114 := 2;
  goto $bb33;
$bb27:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7891, 88} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7891, 88} true;
  assume {:verifier.code 0} true;
  $p102 := $load.ref($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7891, 94} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p102, 1272);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7891, 22} true;
  assume {:verifier.code 0} true;
  call $i104 := constant_test_bit(3, $p103);
  // WARNING: %126 = call i32 @constant_test_bit(i64 3, i64* %125), !dbg !7934, !verifier.code !7762
  call {:cexpr "tmp___10"} boogie_si_record_i32($i104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7892, 24} true;
  assume {:verifier.code 0} true;
  $i105 := $eq.i32($i104, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7892, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb29, $bb30;
$bb28:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  $i113 := 3;
  goto $bb32;
$bb29:
  assume ($i105 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7893, 89} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7893, 89} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7893, 95} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 1272);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7893, 23} true;
  assume {:verifier.code 0} true;
  call $i109 := constant_test_bit(4, $p108);
  // WARNING: %132 = call i32 @constant_test_bit(i64 4, i64* %131), !dbg !7943, !verifier.code !7762
  call {:cexpr "tmp___8"} boogie_si_record_i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7894, 31} true;
  assume {:verifier.code 0} true;
  $i110 := $ne.i32($i109, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7894, 23} true;
  assume {:verifier.code 0} true;
  havoc $i111;
  assume ((($i110 == 1) ==> ($i111 == 5)) && (($i110 != 1) ==> ($i111 == 0)));
  // WARNING: %134 = select i1 %133, i32 5, i32 0, !dbg !7947, !verifier.code !7762
  call {:cexpr "tmp___9"} boogie_si_record_i32($i111);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7895, 11} true;
  assume {:verifier.code 0} true;
  $i112 := $i111;
  goto $bb31;
$bb30:
  assume !(($i105 == 1));
  assume {:verifier.code 0} true;
  $i112 := 4;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  // WARNING: %.03 = phi i32 [ %134, %128 ], [ 4, %135 ], !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7899, 9} true;
  assume {:verifier.code 0} true;
  $i113 := $i112;
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  // WARNING: %.02 = phi i32 [ %.03, %136 ], [ 3, %137 ], !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7903, 7} true;
  assume {:verifier.code 0} true;
  $i114 := $i113;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  // WARNING: %.01 = phi i32 [ %.02, %138 ], [ 2, %139 ], !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7907, 5} true;
  assume {:verifier.code 0} true;
  $i115 := $i114;
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7910, 16} true;
  assume {:verifier.code 0} true;
  call $i116 := nla_put_u32($p2, 6, $i115);
  // WARNING: %143 = call i32 @nla_put_u32(%struct.sk_buff* %2, i32 6, i32 %.04), !dbg !7960, !verifier.code !7762
  call {:cexpr "tmp___16"} boogie_si_record_i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7911, 18} true;
  assume {:verifier.code 0} true;
  $i117 := $ne.i32($i116, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7911, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i117} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i117 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7912, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb36:
  assume !(($i117 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7916, 3} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7919, 29} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p8, 112);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7919, 29} true;
  assume {:verifier.code 0} true;
  $p119 := $load.ref($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7919, 7} true;
  assume {:verifier.code 0} true;
  $i120 := $p2i.ref.i64($p119);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7919, 36} true;
  assume {:verifier.code 0} true;
  $i121 := $ne.i64($i120, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7919, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i121 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7920, 42} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p8, 48);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7920, 42} true;
  assume {:verifier.code 0} true;
  $i123 := $load.i32($M.0, $p122);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7920, 16} true;
  assume {:verifier.code 0} true;
  call $i124 := nla_put_u32($p2, 4, $i123);
  // WARNING: %157 = call i32 @nla_put_u32(%struct.sk_buff* %2, i32 4, i32 %156), !dbg !7976, !verifier.code !7762
  call {:cexpr "tmp___17"} boogie_si_record_i32($i124);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7921, 18} true;
  assume {:verifier.code 0} true;
  $i125 := $ne.i32($i124, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7921, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb41, $bb42;
$bb40:
  assume !(($i121 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7927, 16} true;
  assume {:verifier.code 0} true;
  call $i126 := nla_put_u32($p2, 4, 0);
  // WARNING: %163 = call i32 @nla_put_u32(%struct.sk_buff* %2, i32 4, i32 0), !dbg !7985, !verifier.code !7762
  call {:cexpr "tmp___18"} boogie_si_record_i32($i126);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7928, 18} true;
  assume {:verifier.code 0} true;
  $i127 := $ne.i32($i126, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7928, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb45, $bb46;
$bb41:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7922, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb42:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7926, 3} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7934, 14} true;
  assume {:verifier.code 0} true;
  call $i128 := nla_nest_end($p2, $p38);
  // WARNING: %169 = call i32 @nla_nest_end(%struct.sk_buff* %2, %struct.nlattr* %44), !dbg !7994, !verifier.code !7762
  call {:cexpr "tmp___19"} boogie_si_record_i32($i128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7935, 3} true;
  assume {:verifier.code 0} true;
  $i29 := $i128;
  goto $bb6;
$bb45:
  assume ($i127 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7929, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb46:
  assume !(($i127 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:verifier.code 0} true;
  goto $bb44;
}
const atm_tc_dump_class_stats: ref;
axiom (atm_tc_dump_class_stats == $sub.ref(0, 151165));
procedure  atm_tc_dump_class_stats($p0: ref, $i1: i64, $p2: ref)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i14: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.Qdisc* %0, i64 0, metadata !10431, metadata !7764), !dbg !10432, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7948, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7949, 30} true;
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7949, 30} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7949, 34} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 136);
  $p7 := $add.ref($add.ref($p5, 136), 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7949, 36} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7949, 9} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p3, 72);
  $p10 := $add.ref($p3, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7949, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p10, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7950, 42} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p3, 56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7950, 9} true;
  assume {:verifier.code 0} true;
  call $i12 := gnet_stats_copy_basic($p2, $p11);
  // WARNING: %13 = call i32 @gnet_stats_copy_basic(%struct.gnet_dump* %2, %struct.load_weight* %12), !dbg !7780, !verifier.code !7765
  call {:cexpr "tmp"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7951, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $slt.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7951, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7952, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 1);
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7954, 48} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p3, 72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7954, 15} true;
  assume {:verifier.code 0} true;
  call $i16 := gnet_stats_copy_queue($p2, $p15);
  // WARNING: %18 = call i32 @gnet_stats_copy_queue(%struct.gnet_dump* %2, %struct.gnet_stats_queue* %17), !dbg !7790, !verifier.code !7765
  call {:cexpr "tmp___0"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7955, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $slt.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7955, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7963, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb4:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7956, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i32(0, 1);
  goto $bb3;
$bb5:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7961, 3} true;
  assume {:verifier.code 0} true;
  $i14 := 0;
  goto $bb3;
}
const gnet_stats_copy_basic: ref;
axiom (gnet_stats_copy_basic == $sub.ref(0, 152197));
procedure  gnet_stats_copy_basic($p0: ref, $p1: ref)
  returns ($r: i32);
const gnet_stats_copy_queue: ref;
axiom (gnet_stats_copy_queue == $sub.ref(0, 153229));
procedure  gnet_stats_copy_queue($p0: ref, $p1: ref)
  returns ($r: i32);
const list_empty: ref;
axiom (list_empty == $sub.ref(0, 154261));
procedure  list_empty($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6006, 62} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6006, 62} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6006, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6006, 71} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6006, 68} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i3, $i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6006, 68} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6006, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const nla_nest_start: ref;
axiom (nla_nest_start == $sub.ref(0, 155293));
procedure  nla_nest_start($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !10481, metadata !7764), !dbg !10482, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6334, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := skb_tail_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6335, 11} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6336, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := nla_put($p0, $i1, 0, $0.ref);
  // WARNING: %5 = call i32 @nla_put(%struct.sk_buff* %0, i32 %1, i32 0, i8* null), !dbg !7777, !verifier.code !7767
  call {:cexpr "tmp___0"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6337, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6337, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6338, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6344, 1} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6342, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $p2;
  goto $bb3;
}
const nla_put: ref;
axiom (nla_put == $sub.ref(0, 156325));
procedure  nla_put($p0: ref, $i1: i32, $i2: i32, $p3: ref)
  returns ($r: i32);
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 157357));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);
const constant_test_bit: ref;
axiom (constant_test_bit == $sub.ref(0, 158389));
procedure  constant_test_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $i2: i64;
  var $p3: ref;
  var $i4: i64;
  var $i5: i32;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i32;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5965, 63} true;
  assume {:verifier.code 0} true;
  $i2 := $ashr.i64($i0, 6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5965, 41} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, $mul.ref($i2, 8));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5965, 34} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i64($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5965, 74} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5965, 83} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i5, 63);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5965, 70} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5965, 70} true;
  assume {:verifier.code 0} true;
  $i8 := $lshr.i64($i4, $i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5965, 11} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i64.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5965, 90} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 5965, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const nla_put_u32: ref;
axiom (nla_put_u32 == $sub.ref(0, 159421));
procedure  nla_put_u32($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.sk_buff* %0, i64 0, metadata !10522, metadata !7764), !dbg !10523, !verifier.code !7762
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p3, $i2);
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6314, 35} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6314, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := nla_put($p0, $i1, 4, $p4);
  // WARNING: %6 = call i32 @nla_put(%struct.sk_buff* %0, i32 %1, i32 4, i8* %5), !dbg !7774, !verifier.code !7764
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6315, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const nla_nest_end: ref;
axiom (nla_nest_end == $sub.ref(0, 160453));
procedure  nla_nest_end($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i64;
  var $i4: i16;
  var $i5: i32;
  var $i6: i64;
  var $i7: i16;
  var $i8: i32;
  var $i9: i32;
  var $i10: i16;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6350, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := skb_tail_pointer($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6351, 36} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6351, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $trunc.i64.i16($i3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6351, 20} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6351, 67} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6351, 58} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i64.i16($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6351, 51} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i16.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6351, 49} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32($i5, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6351, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i16($i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6351, 10} true;
  assume {:verifier.code 0} true;
  $p11 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6351, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6352, 22} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6352, 22} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6352, 3} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
}
const nla_nest_cancel: ref;
axiom (nla_nest_cancel == $sub.ref(0, 161485));
procedure  nla_nest_cancel($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6360, 19} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6360, 3} true;
  assume {:verifier.code 0} true;
  call nlmsg_trim($p0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6361, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const nlmsg_trim: ref;
axiom (nlmsg_trim == $sub.ref(0, 162517));
procedure  nlmsg_trim($p0: ref, $p1: ref)
{
  var $i2: i64;
  var $i3: i1;
  var $i4: i64;
  var $i5: i32;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i32;
  var $i10: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6271, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6271, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6271, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6272, 35} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6272, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6272, 78} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 216);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6272, 78} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6272, 66} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6272, 50} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i64.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6272, 48} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32($i5, $i9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6272, 5} true;
  assume {:verifier.code 0} true;
  call skb_trim($p0, $i10);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6273, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6276, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const skb_trim: ref;
axiom (skb_trim == $sub.ref(0, 163549));
procedure  skb_trim($p0: ref, $i1: i32);
const skb_tail_pointer: ref;
axiom (skb_tail_pointer == $sub.ref(0, 164581));
procedure  skb_tail_pointer($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6217, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 208);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6217, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6217, 61} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 200);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6217, 61} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6217, 40} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6217, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, $mul.ref($i5, 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6217, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const nla_parse_nested: ref;
axiom (nla_parse_nested == $sub.ref(0, 165613));
procedure  nla_parse_nested($p0: ref, $i1: i32, $p2: ref, $p3: ref)
  returns ($r: i32)
{
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.nlattr** %0, i64 0, metadata !10601, metadata !7764), !dbg !10602, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6303, 9} true;
  assume {:verifier.code 0} true;
  call $i4 := nla_len($p2);
  // WARNING: %5 = call i32 @nla_len(%struct.nlattr* %2), !dbg !7774, !verifier.code !7767
  call {:cexpr "tmp"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6304, 13} true;
  assume {:verifier.code 0} true;
  call $p5 := nla_data($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6305, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6305, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := nla_parse($p0, $i1, $p6, $i4, $p3);
  // WARNING: %8 = call i32 @nla_parse(%struct.nlattr** %0, i32 %1, %struct.nlattr* %7, i32 %5, %struct.nlattr* %3), !dbg !7782, !verifier.code !7767
  call {:cexpr "tmp___1"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6306, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const nla_get_u32: ref;
axiom (nla_get_u32 == $sub.ref(0, 166645));
procedure  nla_get_u32($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6323, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := nla_data($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6324, 13} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6324, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6324, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const nla_len: ref;
axiom (nla_len == $sub.ref(0, 167677));
procedure  nla_len($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i16;
  var $i3: i32;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6292, 22} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6292, 22} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6292, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6292, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3, $sub.i32(0, 4));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6292, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const nla_data: ref;
axiom (nla_data == $sub.ref(0, 168709));
procedure  nla_data($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6284, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6284, 23} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6284, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const sockfd_lookup: ref;
axiom (sockfd_lookup == $sub.ref(0, 169741));
procedure  sockfd_lookup($i0: i32, $p1: ref)
  returns ($r: ref);
const kzalloc: ref;
axiom (kzalloc == $sub.ref(0, 170773));
procedure  kzalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !10655, metadata !7764), !dbg !10656, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8552, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8553, 3} true;
  assume {:verifier.code 0} true;
  $r := $0.ref;
  $exn := false;
  return;
}
const ATM_SD: ref;
axiom (ATM_SD == $sub.ref(0, 171805));
procedure  ATM_SD($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6377, 22} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6377, 22} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6377, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := atm_sk($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6378, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const sch_atm_pop: ref;
axiom (sch_atm_pop == $sub.ref(0, 172837));
procedure  sch_atm_pop($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i24;
  var $i15: i24;
  var $i16: i24;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i1;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(40, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6791, 37} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 1624);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6791, 37} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6791, 8} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6791, 49} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6791, 49} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6792, 14} true;
  assume {:verifier.code 0} true;
  $p8 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6792, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p8, .str);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6793, 14} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6793, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p9, .str.55);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6794, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6794, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p10, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6795, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6795, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p11, .str.56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6796, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6796, 14} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6796, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i24($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6796, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i24($i14, $sub.i24(0, 262144));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6796, 21} true;
  assume {:verifier.code 0} true;
  $i16 := $or.i24($i15, 196);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6796, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i24($M.0, $p13, $i16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6797, 14} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6797, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p17, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6798, 47} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 35);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6798, 47} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6798, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6798, 53} true;
  assume {:verifier.code 0} true;
  $i21 := $and.i64($i20, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6798, 9} true;
  assume {:verifier.code 0} true;
  call $i22 := ldv__builtin_expect($i21, 0);
  // WARNING: %23 = call i64 @ldv__builtin_expect(i64 %22, i64 0), !dbg !7799, !verifier.code !7762
  call {:cexpr "tmp"} boogie_si_record_i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6799, 11} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6799, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6800, 5} true;
  assume {:verifier.code 0} true;
  call $i24 := __dynamic_pr_debug.ref.ref.ref.ref.ref($p2, .str.56, $p0, $p1, $p7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6802, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6805, 36} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 1624);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6805, 36} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6805, 7} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6805, 48} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p27, 24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6805, 48} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  call devirtbounce.7($p29, $p0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6806, 25} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p7, 144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6806, 3} true;
  assume {:verifier.code 0} true;
  call tasklet_schedule($p30);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6807, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __memcpy: ref;
axiom (__memcpy == $sub.ref(0, 173869));
procedure  __memcpy($p0: ref, $p1: ref, $i2: i64)
  returns ($r: ref);
const atm_sk: ref;
axiom (atm_sk == $sub.ref(0, 174901));
procedure  atm_sk($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6369, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6369, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_check_alloc_flags: ref;
axiom (ldv_check_alloc_flags == $sub.ref(0, 175933));
procedure  ldv_check_alloc_flags($i0: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8669, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8669, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8669, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8669, 21} true;
  assume {:verifier.code 0} true;
  assume ($i2 == 1);
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8671, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8669, 33} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i0, 16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8669, 33} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8669, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8672, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8669, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb2;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8674, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_error: ref;
axiom (ldv_error == $sub.ref(0, 176965));
procedure  ldv_error()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6129, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6131, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6133, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const nla_parse: ref;
axiom (nla_parse == $sub.ref(0, 177997));
procedure  nla_parse($p0: ref, $i1: i32, $p2: ref, $i3: i32, $p4: ref)
  returns ($r: i32);
const ldv_zalloc: ref;
axiom (ldv_zalloc == $sub.ref(0, 179029));
procedure  ldv_zalloc($i0: i64)
  returns ($r: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $p4: ref;
  var $i5: i64;
  var $i6: i1;
  var $i7: i32;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6087, 13} true;
  assume {:verifier.code 1} true;
  call $i1 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i1);
  // WARNING: %2 = call i32 @__VERIFIER_nondet_int(), !dbg !7768, !verifier.code !7770
  call {:cexpr "tmp___0"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6088, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6088, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6089, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6091, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := calloc(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6093, 23} true;
  assume {:verifier.code 1} true;
  $i5 := $p2i.ref.i64($p4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6093, 41} true;
  assume {:verifier.code 1} true;
  $i6 := $ne.i64($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6093, 41} true;
  assume {:verifier.code 1} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6093, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i7);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6094, 5} true;
  assume {:verifier.code 0} true;
  $p3 := $p4;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6097, 1} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const ldv_initialize_Qdisc_ops_1: ref;
axiom (ldv_initialize_Qdisc_ops_1 == $sub.ref(0, 180061));
procedure  ldv_initialize_Qdisc_ops_1()
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8010, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(448);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8011, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8011, 24} true;
  assume {:verifier.code 0} true;
  $M.3 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8012, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_zalloc(232);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8013, 26} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8013, 24} true;
  assume {:verifier.code 0} true;
  $M.4 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8014, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_initialize_Qdisc_class_ops_2: ref;
axiom (ldv_initialize_Qdisc_class_ops_2 == $sub.ref(0, 181093));
procedure  ldv_initialize_Qdisc_class_ops_2()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8022, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(448);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8023, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8023, 24} true;
  assume {:verifier.code 0} true;
  $M.5 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8024, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 182125));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i32;
  var $i6: i64;
  var $i7: i32;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i64;
  var $p13: ref;
  var $p14: ref;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i64;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $i33: i1;
  var $i34: i1;
  var $i35: i1;
  var $i36: i32;
  var $i37: i1;
  var $i38: i32;
  var $i39: i1;
  var $i40: i1;
  var $i41: i1;
  var $i42: i1;
  var $i43: i1;
  var $i44: i1;
  var $i45: i1;
  var $i46: i1;
  var $i47: i1;
  var $i48: i1;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $i52: i32;
  var $i53: i32;
  var $i54: i32;
  var $i55: i1;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $i59: i32;
  var $i60: i1;
  var $p61: ref;
  var $p62: ref;
  var $i63: i32;
  var $i64: i32;
  var $i65: i1;
  var $p66: ref;
  var $p67: ref;
  var $i68: i32;
  var $i69: i32;
  var $i70: i1;
  var $p71: ref;
  var $p72: ref;
  var $i73: i32;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $i77: i32;
  var $i78: i1;
  var $p79: ref;
  var $i80: i32;
  var $i81: i1;
  var $p82: ref;
  var $i83: i32;
  var $i84: i1;
  var $p85: ref;
  var $p86: ref;
  var $i87: i32;
  var $i88: i1;
  var $p89: ref;
  var $p90: ref;
  var $i91: i32;
  var $i92: i1;
  var $p93: ref;
  var $p94: ref;
  var $i95: i32;
  var $i96: i1;
  var $p97: ref;
  var $i98: i32;
  var $i99: i32;
  var $i100: i1;
  var $i101: i32;
  var $i102: i1;
  var $p103: ref;
  var $p104: ref;
  var $i105: i32;
  var $i106: i1;
  var $p107: ref;
  var $p108: ref;
  var $i109: i32;
  var $i110: i1;
  var $p111: ref;
  var $p112: ref;
  var $i113: i32;
  var $i114: i1;
  var $p115: ref;
  var $i116: i32;
  var $i117: i32;
  var $i118: i1;
  var $p119: ref;
  var $i120: i32;
  var $i121: i32;
  var $i122: i1;
  var $p123: ref;
  var $i124: i32;
  var $i125: i32;
  var $i126: i1;
  var $p127: ref;
  var $p128: ref;
  var $i129: i32;
  var $i130: i32;
  var $i131: i1;
  var $p132: ref;
  var $p133: ref;
  var $i134: i32;
  var $i135: i32;
  var $i136: i1;
  var $p137: ref;
  var $p138: ref;
  var $i139: i32;
  var $i140: i32;
  var $i141: i1;
  var $i142: i32;
  var $i143: i32;
  var $i144: i32;
  var $i145: i32;
  var $i146: i1;
  var $i147: i32;
  var $i148: i1;
  var $i149: i1;
  var $i150: i1;
  var $i151: i32;
  var $i152: i1;
  var $i153: i32;
  var $i154: i1;
  var $i155: i32;
  var $i156: i1;
  var $i157: i32;
  var $i158: i32;
  var $i159: i1;
  var $i160: i32;
  var $i161: i1;
  var $i162: i32;
  var $i163: i1;
  var $i164: i32;
  var $i165: i1;
  var $i166: i1;
  var $i167: i1;
  var $i168: i1;
  var $i169: i1;
  var $i170: i1;
  var $i171: i1;
  var $i172: i1;
  var $i173: i1;
  var $i174: i1;
  var $i175: i1;
  var $i176: i1;
  var $i177: i1;
  var $i178: i1;
  var $i179: i32;
  var $i180: i1;
  var $p181: ref;
  var $p182: ref;
  var $i183: i32;
  var $i184: i1;
  var $p185: ref;
  var $p186: ref;
  var $i187: i32;
  var $i188: i1;
  var $p189: ref;
  var $i190: i64;
  var $i191: i32;
  var $i192: i1;
  var $p193: ref;
  var $i194: i64;
  var $i195: i32;
  var $i196: i1;
  var $p197: ref;
  var $i198: i32;
  var $i199: i32;
  var $i200: i1;
  var $p201: ref;
  var $i202: i32;
  var $i203: i32;
  var $i204: i1;
  var $p205: ref;
  var $i206: i32;
  var $i207: i1;
  var $p208: ref;
  var $i209: i32;
  var $i210: i1;
  var $p211: ref;
  var $i212: i32;
  var $i213: i32;
  var $i214: i1;
  var $p215: ref;
  var $i216: i32;
  var $i217: i32;
  var $i218: i1;
  var $p219: ref;
  var $i220: i32;
  var $i221: i32;
  var $i222: i32;
  var $i223: i1;
  var $p224: ref;
  var $p225: ref;
  var $i226: i32;
  var $i227: i1;
  var $p228: ref;
  var $p229: ref;
  var $i230: i32;
  var $i231: i1;
  var $p232: ref;
  var $i233: i32;
  var $i234: i1;
  var $p235: ref;
  var $i236: i32;
  var $i237: i1;
  var $p238: ref;
  var $i239: i32;
  var $i240: i32;
  var $i241: i1;
  var $p242: ref;
  var $i243: i32;
  var $i244: i32;
  var $i245: i1;
  var $p246: ref;
  var $i247: i64;
  var $i248: i32;
  var $i249: i1;
  var $p250: ref;
  var $i251: i64;
  var $i252: i32;
  var $i253: i1;
  var $p254: ref;
  var $i255: i32;
  var $i256: i32;
  var $i257: i1;
  var $p258: ref;
  var $i259: i32;
  var $i260: i32;
  var $i261: i1;
  var $p262: ref;
  var $i263: i32;
  var $i264: i32;
  var $i265: i1;
  var $p266: ref;
  var $i267: i32;
  var $i268: i32;
  var $i269: i1;
  var $i270: i32;
  var $i271: i32;
  var $i272: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8079, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8079, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_zalloc(4);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8080, 13} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8081, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_zalloc(24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8082, 14} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8083, 13} true;
  assume {:verifier.code 1} true;
  call $i4 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i4);
  // WARNING: %5 = call i64 @__VERIFIER_nondet_ulong(), !dbg !7777, !verifier.code !7778
  call {:cexpr "tmp___1"} boogie_si_record_i64($i4);
  // WARNING: call void @llvm.dbg.value(metadata i64 %5, i64 0, metadata !10809, metadata !7764), !dbg !10810, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8085, 13} true;
  assume {:verifier.code 1} true;
  call $i5 := __VERIFIER_nondet_u32();
  call {:cexpr "smack:ext:__VERIFIER_nondet_u32"} boogie_si_record_i32($i5);
  // WARNING: %6 = call i32 @__VERIFIER_nondet_u32(), !dbg !7783, !verifier.code !7778
  call {:cexpr "tmp___2"} boogie_si_record_i32($i5);
  // WARNING: call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !10814, metadata !7764), !dbg !10815, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8087, 13} true;
  assume {:verifier.code 1} true;
  call $i6 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i6);
  // WARNING: %7 = call i64 @__VERIFIER_nondet_ulong(), !dbg !7788, !verifier.code !7778
  call {:cexpr "tmp___3"} boogie_si_record_i64($i6);
  // WARNING: call void @llvm.dbg.value(metadata i64 %7, i64 0, metadata !10819, metadata !7764), !dbg !10820, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8089, 13} true;
  assume {:verifier.code 1} true;
  call $i7 := __VERIFIER_nondet_u32();
  call {:cexpr "smack:ext:__VERIFIER_nondet_u32"} boogie_si_record_i32($i7);
  // WARNING: %8 = call i32 @__VERIFIER_nondet_u32(), !dbg !7793, !verifier.code !7778
  call {:cexpr "tmp___4"} boogie_si_record_i32($i7);
  // WARNING: call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !10824, metadata !7764), !dbg !10825, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8091, 13} true;
  assume {:verifier.code 1} true;
  call $i8 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i8);
  // WARNING: %9 = call i64 @__VERIFIER_nondet_ulong(), !dbg !7798, !verifier.code !7778
  call {:cexpr "tmp___5"} boogie_si_record_i64($i8);
  // WARNING: call void @llvm.dbg.value(metadata i64 %9, i64 0, metadata !10829, metadata !7764), !dbg !10830, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8093, 13} true;
  assume {:verifier.code 0} true;
  call $p9 := ldv_zalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8094, 13} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8095, 13} true;
  assume {:verifier.code 1} true;
  call $i11 := __VERIFIER_nondet_u32();
  call {:cexpr "smack:ext:__VERIFIER_nondet_u32"} boogie_si_record_i32($i11);
  // WARNING: %12 = call i32 @__VERIFIER_nondet_u32(), !dbg !7809, !verifier.code !7778
  call {:cexpr "tmp___7"} boogie_si_record_i32($i11);
  // WARNING: call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !10840, metadata !7764), !dbg !10841, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8097, 13} true;
  assume {:verifier.code 1} true;
  call $i12 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i12);
  // WARNING: %13 = call i64 @__VERIFIER_nondet_ulong(), !dbg !7814, !verifier.code !7778
  call {:cexpr "tmp___8"} boogie_si_record_i64($i12);
  // WARNING: call void @llvm.dbg.value(metadata i64 %13, i64 0, metadata !10845, metadata !7764), !dbg !10846, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8099, 13} true;
  assume {:verifier.code 0} true;
  call $p13 := ldv_zalloc(88);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8100, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p13);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8101, 14} true;
  assume {:verifier.code 1} true;
  call $i15 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i15);
  // WARNING: %16 = call i64 @__VERIFIER_nondet_ulong(), !dbg !7825, !verifier.code !7778
  call {:cexpr "tmp___10"} boogie_si_record_i64($i15);
  // WARNING: call void @llvm.dbg.value(metadata i64 %16, i64 0, metadata !10856, metadata !7764), !dbg !10857, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8103, 14} true;
  assume {:verifier.code 0} true;
  call $p16 := ldv_zalloc(20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8104, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8105, 14} true;
  assume {:verifier.code 0} true;
  call $p18 := ldv_zalloc(232);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8106, 13} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8107, 14} true;
  assume {:verifier.code 0} true;
  call $p20 := ldv_zalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8108, 14} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8109, 14} true;
  assume {:verifier.code 0} true;
  call $p22 := ldv_zalloc(448);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8110, 14} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8111, 14} true;
  assume {:verifier.code 1} true;
  call $i24 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i24);
  // WARNING: %25 = call i64 @__VERIFIER_nondet_ulong(), !dbg !7854, !verifier.code !7778
  call {:cexpr "tmp___15"} boogie_si_record_i64($i24);
  // WARNING: call void @llvm.dbg.value(metadata i64 %25, i64 0, metadata !10885, metadata !7764), !dbg !10886, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8113, 14} true;
  assume {:verifier.code 1} true;
  call $i25 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i25);
  // WARNING: %26 = call i64 @__VERIFIER_nondet_ulong(), !dbg !7859, !verifier.code !7778
  call {:cexpr "tmp___16"} boogie_si_record_i64($i25);
  // WARNING: call void @llvm.dbg.value(metadata i64 %26, i64 0, metadata !10890, metadata !7764), !dbg !10891, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8115, 14} true;
  assume {:verifier.code 0} true;
  call $p26 := ldv_zalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8116, 13} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8117, 14} true;
  assume {:verifier.code 1} true;
  call $i28 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i28);
  // WARNING: %29 = call i64 @__VERIFIER_nondet_ulong(), !dbg !7870, !verifier.code !7778
  call {:cexpr "tmp___18"} boogie_si_record_i64($i28);
  // WARNING: call void @llvm.dbg.value(metadata i64 %29, i64 0, metadata !10901, metadata !7764), !dbg !10902, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8119, 14} true;
  assume {:verifier.code 1} true;
  call $i29 := __VERIFIER_nondet_ulong();
  call {:cexpr "smack:ext:__VERIFIER_nondet_ulong"} boogie_si_record_i64($i29);
  // WARNING: %30 = call i64 @__VERIFIER_nondet_ulong(), !dbg !7875, !verifier.code !7778
  call {:cexpr "tmp___19"} boogie_si_record_i64($i29);
  // WARNING: call void @llvm.dbg.value(metadata i64 %30, i64 0, metadata !10906, metadata !7764), !dbg !10907, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8121, 14} true;
  assume {:verifier.code 1} true;
  call $i30 := __VERIFIER_nondet_u32();
  call {:cexpr "smack:ext:__VERIFIER_nondet_u32"} boogie_si_record_i32($i30);
  // WARNING: %31 = call i32 @__VERIFIER_nondet_u32(), !dbg !7880, !verifier.code !7778
  call {:cexpr "tmp___20"} boogie_si_record_i32($i30);
  // WARNING: call void @llvm.dbg.value(metadata i32 %31, i64 0, metadata !10911, metadata !7764), !dbg !10912, !verifier.code !7762
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8123, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8124, 24} true;
  assume {:verifier.code 0} true;
  $M.6 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8125, 11} true;
  assume {:verifier.code 0} true;
  $M.7 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8126, 24} true;
  assume {:verifier.code 0} true;
  $M.8 := 1;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8127, 24} true;
  assume {:verifier.code 0} true;
  $M.9 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8127, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8129, 14} true;
  assume {:verifier.code 1} true;
  call $i31 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i31);
  // WARNING: %33 = call i32 @__VERIFIER_nondet_int(), !dbg !7891, !verifier.code !7778
  call {:cexpr "tmp___21"} boogie_si_record_i32($i31);
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  $i32 := $slt.i32($i31, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i32 == 1);
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i31, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb10, $bb11;
$bb4:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i31, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8301, 7} true;
  assume {:verifier.code 0} true;
  $i145 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8301, 28} true;
  assume {:verifier.code 0} true;
  $i146 := $ne.i32($i145, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8301, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i146} true;
  goto $bb110, $bb111;
$bb6:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i31, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8344, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8344, 28} true;
  assume {:verifier.code 0} true;
  $i163 := $ne.i32($i162, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8344, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i163} true;
  goto $bb140, $bb141;
$bb8:
  assume {:verifier.code 0} true;
  assume !(($i34 == 1));
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  goto $bb248;
$bb10:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8132, 7} true;
  assume {:verifier.code 0} true;
  $i36 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8132, 28} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8132, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb12, $bb13;
$bb11:
  assume {:verifier.code 0} true;
  assume !(($i35 == 1));
  goto $bb9;
$bb12:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8133, 16} true;
  assume {:verifier.code 1} true;
  call $i38 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i38);
  // WARNING: %38 = call i32 @__VERIFIER_nondet_int(), !dbg !7899, !verifier.code !7778
  call {:cexpr "tmp___22"} boogie_si_record_i32($i38);
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb108;
$bb14:
  assume {:verifier.code 0} true;
  $i39 := $slt.i32($i38, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i39 == 1);
  assume {:verifier.code 0} true;
  $i45 := $slt.i32($i38, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb28, $bb29;
$bb16:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  $i40 := $slt.i32($i38, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i40 == 1);
  assume {:verifier.code 0} true;
  $i44 := $slt.i32($i38, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb26, $bb27;
$bb18:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  $i41 := $slt.i32($i38, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8244, 9} true;
  assume {:verifier.code 0} true;
  $i113 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8244, 30} true;
  assume {:verifier.code 0} true;
  $i114 := $eq.i32($i113, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8244, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb85, $bb86;
$bb20:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  $i42 := $slt.i32($i38, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8264, 9} true;
  assume {:verifier.code 0} true;
  $i125 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8264, 30} true;
  assume {:verifier.code 0} true;
  $i126 := $eq.i32($i125, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8264, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb94, $bb95;
$bb22:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  $i43 := $eq.i32($i38, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8284, 9} true;
  assume {:verifier.code 0} true;
  $i140 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8284, 30} true;
  assume {:verifier.code 0} true;
  $i141 := $eq.i32($i140, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8284, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i141} true;
  goto $bb103, $bb104;
$bb24:
  assume {:verifier.code 0} true;
  assume !(($i43 == 1));
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb106;
$bb26:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8212, 9} true;
  assume {:verifier.code 0} true;
  $i95 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8212, 30} true;
  assume {:verifier.code 0} true;
  $i96 := $eq.i32($i95, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8212, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb70, $bb71;
$bb27:
  assume !(($i44 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8224, 9} true;
  assume {:verifier.code 0} true;
  $i101 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8224, 30} true;
  assume {:verifier.code 0} true;
  $i102 := $eq.i32($i101, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8224, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i102} true;
  goto $bb76, $bb77;
$bb28:
  assume ($i45 == 1);
  assume {:verifier.code 0} true;
  $i47 := $slt.i32($i38, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb32, $bb33;
$bb29:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  $i46 := $slt.i32($i38, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8172, 9} true;
  assume {:verifier.code 0} true;
  $i74 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8172, 30} true;
  assume {:verifier.code 0} true;
  $i75 := $eq.i32($i74, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8172, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb52, $bb53;
$bb31:
  assume !(($i46 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8192, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8192, 30} true;
  assume {:verifier.code 0} true;
  $i84 := $eq.i32($i83, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8192, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb61, $bb62;
$bb32:
  assume ($i47 == 1);
  assume {:verifier.code 0} true;
  $i48 := $eq.i32($i38, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb34, $bb35;
$bb33:
  assume !(($i47 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8152, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8152, 30} true;
  assume {:verifier.code 0} true;
  $i60 := $eq.i32($i59, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8152, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb43, $bb44;
$bb34:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8136, 9} true;
  assume {:verifier.code 0} true;
  $i49 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8136, 30} true;
  assume {:verifier.code 0} true;
  $i50 := $eq.i32($i49, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8136, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb36, $bb37;
$bb35:
  assume {:verifier.code 0} true;
  assume !(($i48 == 1));
  goto $bb25;
$bb36:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8137, 22} true;
  assume {:verifier.code 0} true;
  $p51 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8137, 7} true;
  assume {:verifier.code 0} true;
  call atm_tc_destroy($p51);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8138, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8139, 17} true;
  assume {:verifier.code 0} true;
  $i52 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8139, 25} true;
  assume {:verifier.code 0} true;
  $i53 := $sub.i32($i52, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8139, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $i53;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8140, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8143, 9} true;
  assume {:verifier.code 0} true;
  $i54 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8143, 30} true;
  assume {:verifier.code 0} true;
  $i55 := $eq.i32($i54, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8143, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i55 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8144, 22} true;
  assume {:verifier.code 0} true;
  $p56 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8144, 7} true;
  assume {:verifier.code 0} true;
  call atm_tc_destroy($p56);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8145, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8146, 17} true;
  assume {:verifier.code 0} true;
  $i57 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8146, 25} true;
  assume {:verifier.code 0} true;
  $i58 := $sub.i32($i57, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8146, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $i58;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8147, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume !(($i55 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8150, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8296, 3} true;
  assume {:verifier.code 0} true;
  goto $bb108;
$bb43:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8153, 22} true;
  assume {:verifier.code 0} true;
  $p61 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8153, 44} true;
  assume {:verifier.code 0} true;
  $p62 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8153, 7} true;
  assume {:verifier.code 0} true;
  call $i63 := atm_tc_enqueue($p61, $p62);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8154, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8155, 5} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8158, 9} true;
  assume {:verifier.code 0} true;
  $i64 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8158, 30} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i64, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8158, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb46, $bb47;
$bb46:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8159, 22} true;
  assume {:verifier.code 0} true;
  $p66 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8159, 44} true;
  assume {:verifier.code 0} true;
  $p67 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8159, 7} true;
  assume {:verifier.code 0} true;
  call $i68 := atm_tc_enqueue($p66, $p67);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8160, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 3;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8161, 5} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb47:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8164, 9} true;
  assume {:verifier.code 0} true;
  $i69 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8164, 30} true;
  assume {:verifier.code 0} true;
  $i70 := $eq.i32($i69, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8164, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i70 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8165, 22} true;
  assume {:verifier.code 0} true;
  $p71 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8165, 44} true;
  assume {:verifier.code 0} true;
  $p72 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8165, 7} true;
  assume {:verifier.code 0} true;
  call $i73 := atm_tc_enqueue($p71, $p72);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8166, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 2;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8167, 5} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8170, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb52:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8173, 20} true;
  assume {:verifier.code 0} true;
  $p76 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8173, 7} true;
  assume {:verifier.code 0} true;
  call atm_tc_reset($p76);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8174, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8175, 5} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume !(($i75 == 1));
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8178, 9} true;
  assume {:verifier.code 0} true;
  $i77 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8178, 30} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.i32($i77, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8178, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb55, $bb56;
$bb55:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8179, 20} true;
  assume {:verifier.code 0} true;
  $p79 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8179, 7} true;
  assume {:verifier.code 0} true;
  call atm_tc_reset($p79);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8180, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 3;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8181, 5} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb56:
  assume !(($i78 == 1));
  assume {:verifier.code 0} true;
  goto $bb57;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8184, 9} true;
  assume {:verifier.code 0} true;
  $i80 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8184, 30} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i80, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8184, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb58, $bb59;
$bb58:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8185, 20} true;
  assume {:verifier.code 0} true;
  $p82 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8185, 7} true;
  assume {:verifier.code 0} true;
  call atm_tc_reset($p82);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8186, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 2;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8187, 5} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb59:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8190, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb61:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8193, 22} true;
  assume {:verifier.code 0} true;
  $p85 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8193, 7} true;
  assume {:verifier.code 0} true;
  call $p86 := atm_tc_dequeue($p85);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8194, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8195, 5} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8198, 9} true;
  assume {:verifier.code 0} true;
  $i87 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8198, 30} true;
  assume {:verifier.code 0} true;
  $i88 := $eq.i32($i87, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8198, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb64, $bb65;
$bb64:
  assume ($i88 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8199, 22} true;
  assume {:verifier.code 0} true;
  $p89 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8199, 7} true;
  assume {:verifier.code 0} true;
  call $p90 := atm_tc_dequeue($p89);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8200, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 3;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8201, 5} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb65:
  assume !(($i88 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8204, 9} true;
  assume {:verifier.code 0} true;
  $i91 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8204, 30} true;
  assume {:verifier.code 0} true;
  $i92 := $eq.i32($i91, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8204, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i92} true;
  goto $bb67, $bb68;
$bb67:
  assume ($i92 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8205, 22} true;
  assume {:verifier.code 0} true;
  $p93 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8205, 7} true;
  assume {:verifier.code 0} true;
  call $p94 := atm_tc_dequeue($p93);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8206, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 2;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8207, 5} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb68:
  assume !(($i92 == 1));
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8210, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb70:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8213, 34} true;
  assume {:verifier.code 0} true;
  $p97 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8213, 22} true;
  assume {:verifier.code 0} true;
  call $i98 := atm_tc_init($p97, $p1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8213, 20} true;
  assume {:verifier.code 0} true;
  $M.10 := $i98;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32($i98);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8214, 11} true;
  assume {:verifier.code 0} true;
  $i99 := $M.10;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8214, 24} true;
  assume {:verifier.code 0} true;
  $i100 := $eq.i32($i99, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8214, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb72, $bb73;
$bb71:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  goto $bb75;
$bb72:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8215, 30} true;
  assume {:verifier.code 0} true;
  $M.6 := 3;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8216, 7} true;
  assume {:verifier.code 0} true;
  goto $bb74;
$bb73:
  assume !(($i100 == 1));
  assume {:verifier.code 0} true;
  goto $bb74;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8219, 5} true;
  assume {:verifier.code 0} true;
  goto $bb75;
$bb75:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8222, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb76:
  assume ($i102 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8225, 19} true;
  assume {:verifier.code 0} true;
  $p103 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8225, 7} true;
  assume {:verifier.code 0} true;
  call $p104 := atm_tc_peek($p103);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8226, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8227, 5} true;
  assume {:verifier.code 0} true;
  goto $bb78;
$bb77:
  assume !(($i102 == 1));
  assume {:verifier.code 0} true;
  goto $bb78;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8230, 9} true;
  assume {:verifier.code 0} true;
  $i105 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8230, 30} true;
  assume {:verifier.code 0} true;
  $i106 := $eq.i32($i105, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8230, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb79, $bb80;
$bb79:
  assume ($i106 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8231, 19} true;
  assume {:verifier.code 0} true;
  $p107 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8231, 7} true;
  assume {:verifier.code 0} true;
  call $p108 := atm_tc_peek($p107);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8232, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 3;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8233, 5} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb80:
  assume !(($i106 == 1));
  assume {:verifier.code 0} true;
  goto $bb81;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8236, 9} true;
  assume {:verifier.code 0} true;
  $i109 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8236, 30} true;
  assume {:verifier.code 0} true;
  $i110 := $eq.i32($i109, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8236, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb82, $bb83;
$bb82:
  assume ($i110 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8237, 19} true;
  assume {:verifier.code 0} true;
  $p111 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8237, 7} true;
  assume {:verifier.code 0} true;
  call $p112 := atm_tc_peek($p111);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8238, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 2;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8239, 5} true;
  assume {:verifier.code 0} true;
  goto $bb84;
$bb83:
  assume !(($i110 == 1));
  assume {:verifier.code 0} true;
  goto $bb84;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8242, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb85:
  assume ($i114 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8245, 19} true;
  assume {:verifier.code 0} true;
  $p115 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8245, 7} true;
  assume {:verifier.code 0} true;
  call $i116 := atm_tc_drop($p115);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8246, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8247, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb86:
  assume !(($i114 == 1));
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8250, 9} true;
  assume {:verifier.code 0} true;
  $i117 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8250, 30} true;
  assume {:verifier.code 0} true;
  $i118 := $eq.i32($i117, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8250, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i118} true;
  goto $bb88, $bb89;
$bb88:
  assume ($i118 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8251, 19} true;
  assume {:verifier.code 0} true;
  $p119 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8251, 7} true;
  assume {:verifier.code 0} true;
  call $i120 := atm_tc_drop($p119);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8252, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 3;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8253, 5} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb89:
  assume !(($i118 == 1));
  assume {:verifier.code 0} true;
  goto $bb90;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8256, 9} true;
  assume {:verifier.code 0} true;
  $i121 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8256, 30} true;
  assume {:verifier.code 0} true;
  $i122 := $eq.i32($i121, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8256, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb91, $bb92;
$bb91:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8257, 19} true;
  assume {:verifier.code 0} true;
  $p123 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8257, 7} true;
  assume {:verifier.code 0} true;
  call $i124 := atm_tc_drop($p123);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8258, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 2;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8259, 5} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb92:
  assume !(($i122 == 1));
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8262, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb94:
  assume ($i126 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8265, 19} true;
  assume {:verifier.code 0} true;
  $p127 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8265, 41} true;
  assume {:verifier.code 0} true;
  $p128 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8265, 7} true;
  assume {:verifier.code 0} true;
  call $i129 := atm_tc_dump($p127, $p128);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8266, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8267, 5} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume !(($i126 == 1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8270, 9} true;
  assume {:verifier.code 0} true;
  $i130 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8270, 30} true;
  assume {:verifier.code 0} true;
  $i131 := $eq.i32($i130, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8270, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb97, $bb98;
$bb97:
  assume ($i131 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8271, 19} true;
  assume {:verifier.code 0} true;
  $p132 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8271, 41} true;
  assume {:verifier.code 0} true;
  $p133 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8271, 7} true;
  assume {:verifier.code 0} true;
  call $i134 := atm_tc_dump($p132, $p133);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8272, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 3;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8273, 5} true;
  assume {:verifier.code 0} true;
  goto $bb99;
$bb98:
  assume !(($i131 == 1));
  assume {:verifier.code 0} true;
  goto $bb99;
$bb99:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8276, 9} true;
  assume {:verifier.code 0} true;
  $i135 := $M.6;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8276, 30} true;
  assume {:verifier.code 0} true;
  $i136 := $eq.i32($i135, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8276, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb100, $bb101;
$bb100:
  assume ($i136 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8277, 19} true;
  assume {:verifier.code 0} true;
  $p137 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8277, 41} true;
  assume {:verifier.code 0} true;
  $p138 := $M.4;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8277, 7} true;
  assume {:verifier.code 0} true;
  call $i139 := atm_tc_dump($p137, $p138);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8278, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 2;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8279, 5} true;
  assume {:verifier.code 0} true;
  goto $bb102;
$bb101:
  assume !(($i136 == 1));
  assume {:verifier.code 0} true;
  goto $bb102;
$bb102:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8282, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb103:
  assume ($i141 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8285, 7} true;
  assume {:verifier.code 0} true;
  call $i142 := ldv_setup_1();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8286, 28} true;
  assume {:verifier.code 0} true;
  $M.6 := 2;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8287, 17} true;
  assume {:verifier.code 0} true;
  $i143 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8287, 25} true;
  assume {:verifier.code 0} true;
  $i144 := $add.i32($i143, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8287, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $i144;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i144);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8288, 5} true;
  assume {:verifier.code 0} true;
  goto $bb105;
$bb104:
  assume !(($i141 == 1));
  assume {:verifier.code 0} true;
  goto $bb105;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8291, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb106:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8293, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8294, 5} true;
  assume {:verifier.code 0} true;
  goto $bb107;
$bb107:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8294, 5} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8299, 3} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8531, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb110:
  assume ($i146 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8302, 16} true;
  assume {:verifier.code 1} true;
  call $i147 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i147);
  // WARNING: %222 = call i32 @__VERIFIER_nondet_int(), !dbg !8142, !verifier.code !7778
  call {:cexpr "tmp___23"} boogie_si_record_i32($i147);
  assume {:verifier.code 0} true;
  goto $bb112;
$bb111:
  assume !(($i146 == 1));
  assume {:verifier.code 0} true;
  goto $bb139;
$bb112:
  assume {:verifier.code 0} true;
  $i148 := $slt.i32($i147, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i148} true;
  goto $bb113, $bb114;
$bb113:
  assume ($i148 == 1);
  assume {:verifier.code 0} true;
  $i150 := $eq.i32($i147, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i150} true;
  goto $bb118, $bb119;
$bb114:
  assume !(($i148 == 1));
  assume {:verifier.code 0} true;
  $i149 := $eq.i32($i147, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i149} true;
  goto $bb115, $bb116;
$bb115:
  assume ($i149 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8314, 9} true;
  assume {:verifier.code 0} true;
  $i155 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8314, 30} true;
  assume {:verifier.code 0} true;
  $i156 := $eq.i32($i155, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8314, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i156} true;
  goto $bb128, $bb129;
$bb116:
  assume {:verifier.code 0} true;
  assume !(($i149 == 1));
  goto $bb117;
$bb117:
  assume {:verifier.code 0} true;
  goto $bb137;
$bb118:
  assume ($i150 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8305, 9} true;
  assume {:verifier.code 0} true;
  $i151 := $M.8;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8305, 30} true;
  assume {:verifier.code 0} true;
  $i152 := $eq.i32($i151, 3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8305, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i152} true;
  goto $bb120, $bb121;
$bb119:
  assume {:verifier.code 0} true;
  assume !(($i150 == 1));
  goto $bb117;
$bb120:
  assume ($i152 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8305, 38} true;
  assume {:verifier.code 0} true;
  $i153 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8305, 46} true;
  assume {:verifier.code 0} true;
  $i154 := $eq.i32($i153, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8305, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  goto $bb123, $bb124;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8305, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i152 == 1));
  goto $bb122;
$bb122:
  assume {:verifier.code 0} true;
  goto $bb126;
$bb123:
  assume ($i154 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8306, 7} true;
  assume {:verifier.code 0} true;
  call atm_exit();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8307, 28} true;
  assume {:verifier.code 0} true;
  $M.8 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8308, 7} true;
  assume {:verifier.code 0} true;
  goto $bb125;
$bb124:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8305, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i154 == 1));
  goto $bb122;
$bb125:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8533, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8534, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb126:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8312, 5} true;
  assume {:verifier.code 0} true;
  goto $bb127;
$bb127:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8339, 3} true;
  assume {:verifier.code 0} true;
  goto $bb139;
$bb128:
  assume ($i156 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8315, 22} true;
  assume {:verifier.code 0} true;
  call $i157 := atm_init();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8315, 20} true;
  assume {:verifier.code 0} true;
  $M.11 := $i157;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32($i157);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8316, 11} true;
  assume {:verifier.code 0} true;
  $i158 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8316, 24} true;
  assume {:verifier.code 0} true;
  $i159 := $eq.i32($i158, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8316, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i159} true;
  goto $bb130, $bb131;
$bb129:
  assume !(($i156 == 1));
  assume {:verifier.code 0} true;
  goto $bb136;
$bb130:
  assume ($i159 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8317, 30} true;
  assume {:verifier.code 0} true;
  $M.8 := 3;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8318, 30} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8319, 9} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_Qdisc_class_ops_2();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8320, 30} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8321, 9} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_Qdisc_ops_1();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8322, 7} true;
  assume {:verifier.code 0} true;
  goto $bb132;
$bb131:
  assume !(($i159 == 1));
  assume {:verifier.code 0} true;
  goto $bb132;
$bb132:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8325, 11} true;
  assume {:verifier.code 0} true;
  $i160 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8325, 24} true;
  assume {:verifier.code 0} true;
  $i161 := $ne.i32($i160, 0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8325, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i161} true;
  goto $bb133, $bb134;
$bb133:
  assume ($i161 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8326, 30} true;
  assume {:verifier.code 0} true;
  $M.8 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8327, 9} true;
  assume {:verifier.code 0} true;
  goto $bb125;
$bb134:
  assume !(($i161 == 1));
  assume {:verifier.code 0} true;
  goto $bb135;
$bb135:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8331, 5} true;
  assume {:verifier.code 0} true;
  goto $bb136;
$bb136:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8334, 5} true;
  assume {:verifier.code 0} true;
  goto $bb127;
$bb137:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8336, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8337, 5} true;
  assume {:verifier.code 0} true;
  goto $bb138;
$bb138:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8337, 5} true;
  assume {:verifier.code 0} true;
  goto $bb127;
$bb139:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8342, 3} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb140:
  assume ($i163 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8345, 16} true;
  assume {:verifier.code 1} true;
  call $i164 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i164);
  // WARNING: %258 = call i32 @__VERIFIER_nondet_int(), !dbg !8197, !verifier.code !7778
  call {:cexpr "tmp___24"} boogie_si_record_i32($i164);
  assume {:verifier.code 0} true;
  goto $bb142;
$bb141:
  assume !(($i163 == 1));
  assume {:verifier.code 0} true;
  goto $bb247;
$bb142:
  assume {:verifier.code 0} true;
  $i165 := $slt.i32($i164, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i165} true;
  goto $bb143, $bb144;
$bb143:
  assume ($i165 == 1);
  assume {:verifier.code 0} true;
  $i173 := $slt.i32($i164, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i173} true;
  goto $bb160, $bb161;
$bb144:
  assume !(($i165 == 1));
  assume {:verifier.code 0} true;
  $i166 := $slt.i32($i164, 9);
  assume {:verifier.code 0} true;
  assume {:branchcond $i166} true;
  goto $bb145, $bb146;
$bb145:
  assume ($i166 == 1);
  assume {:verifier.code 0} true;
  $i171 := $slt.i32($i164, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i171} true;
  goto $bb156, $bb157;
$bb146:
  assume !(($i166 == 1));
  assume {:verifier.code 0} true;
  $i167 := $slt.i32($i164, 11);
  assume {:verifier.code 0} true;
  assume {:branchcond $i167} true;
  goto $bb147, $bb148;
$bb147:
  assume ($i167 == 1);
  assume {:verifier.code 0} true;
  $i170 := $slt.i32($i164, 10);
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb154, $bb155;
$bb148:
  assume !(($i167 == 1));
  assume {:verifier.code 0} true;
  $i168 := $slt.i32($i164, 12);
  assume {:verifier.code 0} true;
  assume {:branchcond $i168} true;
  goto $bb149, $bb150;
$bb149:
  assume ($i168 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8497, 9} true;
  assume {:verifier.code 0} true;
  $i260 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8497, 30} true;
  assume {:verifier.code 0} true;
  $i261 := $eq.i32($i260, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8497, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i261} true;
  goto $bb236, $bb237;
$bb150:
  assume !(($i168 == 1));
  assume {:verifier.code 0} true;
  $i169 := $eq.i32($i164, 12);
  assume {:verifier.code 0} true;
  assume {:branchcond $i169} true;
  goto $bb151, $bb152;
$bb151:
  assume ($i169 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8511, 9} true;
  assume {:verifier.code 0} true;
  $i268 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8511, 30} true;
  assume {:verifier.code 0} true;
  $i269 := $eq.i32($i268, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8511, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i269} true;
  goto $bb242, $bb243;
$bb152:
  assume {:verifier.code 0} true;
  assume !(($i169 == 1));
  goto $bb153;
$bb153:
  assume {:verifier.code 0} true;
  goto $bb245;
$bb154:
  assume ($i170 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8469, 9} true;
  assume {:verifier.code 0} true;
  $i244 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8469, 30} true;
  assume {:verifier.code 0} true;
  $i245 := $eq.i32($i244, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8469, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i245} true;
  goto $bb224, $bb225;
$bb155:
  assume !(($i170 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8483, 9} true;
  assume {:verifier.code 0} true;
  $i252 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8483, 30} true;
  assume {:verifier.code 0} true;
  $i253 := $eq.i32($i252, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8483, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i253} true;
  goto $bb230, $bb231;
$bb156:
  assume ($i171 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8427, 9} true;
  assume {:verifier.code 0} true;
  $i222 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8427, 30} true;
  assume {:verifier.code 0} true;
  $i223 := $eq.i32($i222, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8427, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i223} true;
  goto $bb206, $bb207;
$bb157:
  assume !(($i171 == 1));
  assume {:verifier.code 0} true;
  $i172 := $slt.i32($i164, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i172} true;
  goto $bb158, $bb159;
$bb158:
  assume ($i172 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8441, 9} true;
  assume {:verifier.code 0} true;
  $i230 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8441, 30} true;
  assume {:verifier.code 0} true;
  $i231 := $eq.i32($i230, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8441, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i231} true;
  goto $bb212, $bb213;
$bb159:
  assume !(($i172 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8455, 9} true;
  assume {:verifier.code 0} true;
  $i236 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8455, 30} true;
  assume {:verifier.code 0} true;
  $i237 := $eq.i32($i236, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8455, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i237} true;
  goto $bb218, $bb219;
$bb160:
  assume ($i173 == 1);
  assume {:verifier.code 0} true;
  $i176 := $slt.i32($i164, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i176} true;
  goto $bb166, $bb167;
$bb161:
  assume !(($i173 == 1));
  assume {:verifier.code 0} true;
  $i174 := $slt.i32($i164, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i174} true;
  goto $bb162, $bb163;
$bb162:
  assume ($i174 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8390, 9} true;
  assume {:verifier.code 0} true;
  $i203 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8390, 30} true;
  assume {:verifier.code 0} true;
  $i204 := $eq.i32($i203, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8390, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i204} true;
  goto $bb191, $bb192;
$bb163:
  assume !(($i174 == 1));
  assume {:verifier.code 0} true;
  $i175 := $slt.i32($i164, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i175} true;
  goto $bb164, $bb165;
$bb164:
  assume ($i175 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8404, 9} true;
  assume {:verifier.code 0} true;
  $i209 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8404, 30} true;
  assume {:verifier.code 0} true;
  $i210 := $eq.i32($i209, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8404, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i210} true;
  goto $bb197, $bb198;
$bb165:
  assume !(($i175 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8418, 9} true;
  assume {:verifier.code 0} true;
  $i217 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8418, 30} true;
  assume {:verifier.code 0} true;
  $i218 := $eq.i32($i217, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8418, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i218} true;
  goto $bb203, $bb204;
$bb166:
  assume ($i176 == 1);
  assume {:verifier.code 0} true;
  $i178 := $eq.i32($i164, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i178} true;
  goto $bb170, $bb171;
$bb167:
  assume !(($i176 == 1));
  assume {:verifier.code 0} true;
  $i177 := $slt.i32($i164, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i177} true;
  goto $bb168, $bb169;
$bb168:
  assume ($i177 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8362, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8362, 30} true;
  assume {:verifier.code 0} true;
  $i188 := $eq.i32($i187, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8362, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i188} true;
  goto $bb179, $bb180;
$bb169:
  assume !(($i177 == 1));
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8376, 9} true;
  assume {:verifier.code 0} true;
  $i195 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8376, 30} true;
  assume {:verifier.code 0} true;
  $i196 := $eq.i32($i195, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8376, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i196} true;
  goto $bb185, $bb186;
$bb170:
  assume ($i178 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8348, 9} true;
  assume {:verifier.code 0} true;
  $i179 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8348, 30} true;
  assume {:verifier.code 0} true;
  $i180 := $eq.i32($i179, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8348, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i180} true;
  goto $bb172, $bb173;
$bb171:
  assume {:verifier.code 0} true;
  assume !(($i178 == 1));
  goto $bb153;
$bb172:
  assume ($i180 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8349, 19} true;
  assume {:verifier.code 0} true;
  $p181 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8349, 7} true;
  assume {:verifier.code 0} true;
  call $p182 := atm_tc_leaf($p181, $i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8350, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8351, 5} true;
  assume {:verifier.code 0} true;
  goto $bb174;
$bb173:
  assume !(($i180 == 1));
  assume {:verifier.code 0} true;
  goto $bb174;
$bb174:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8354, 9} true;
  assume {:verifier.code 0} true;
  $i183 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8354, 30} true;
  assume {:verifier.code 0} true;
  $i184 := $eq.i32($i183, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8354, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb175, $bb176;
$bb175:
  assume ($i184 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8355, 19} true;
  assume {:verifier.code 0} true;
  $p185 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8355, 7} true;
  assume {:verifier.code 0} true;
  call $p186 := atm_tc_leaf($p185, $i24);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8356, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8357, 5} true;
  assume {:verifier.code 0} true;
  goto $bb177;
$bb176:
  assume !(($i184 == 1));
  assume {:verifier.code 0} true;
  goto $bb177;
$bb177:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8360, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb178:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8523, 3} true;
  assume {:verifier.code 0} true;
  goto $bb247;
$bb179:
  assume ($i188 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8363, 18} true;
  assume {:verifier.code 0} true;
  $p189 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8363, 7} true;
  assume {:verifier.code 0} true;
  call $i190 := atm_tc_get($p189, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8364, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8365, 5} true;
  assume {:verifier.code 0} true;
  goto $bb181;
$bb180:
  assume !(($i188 == 1));
  assume {:verifier.code 0} true;
  goto $bb181;
$bb181:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8368, 9} true;
  assume {:verifier.code 0} true;
  $i191 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8368, 30} true;
  assume {:verifier.code 0} true;
  $i192 := $eq.i32($i191, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8368, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i192} true;
  goto $bb182, $bb183;
$bb182:
  assume ($i192 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8369, 18} true;
  assume {:verifier.code 0} true;
  $p193 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8369, 7} true;
  assume {:verifier.code 0} true;
  call $i194 := atm_tc_get($p193, $i5);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8370, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8371, 5} true;
  assume {:verifier.code 0} true;
  goto $bb184;
$bb183:
  assume !(($i192 == 1));
  assume {:verifier.code 0} true;
  goto $bb184;
$bb184:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8374, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb185:
  assume ($i196 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8377, 21} true;
  assume {:verifier.code 0} true;
  $p197 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8377, 7} true;
  assume {:verifier.code 0} true;
  call $i198 := atm_tc_delete($p197, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8378, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8379, 5} true;
  assume {:verifier.code 0} true;
  goto $bb187;
$bb186:
  assume !(($i196 == 1));
  assume {:verifier.code 0} true;
  goto $bb187;
$bb187:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8382, 9} true;
  assume {:verifier.code 0} true;
  $i199 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8382, 30} true;
  assume {:verifier.code 0} true;
  $i200 := $eq.i32($i199, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8382, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i200} true;
  goto $bb188, $bb189;
$bb188:
  assume ($i200 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8383, 21} true;
  assume {:verifier.code 0} true;
  $p201 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8383, 7} true;
  assume {:verifier.code 0} true;
  call $i202 := atm_tc_delete($p201, $i29);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8384, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8385, 5} true;
  assume {:verifier.code 0} true;
  goto $bb190;
$bb189:
  assume !(($i200 == 1));
  assume {:verifier.code 0} true;
  goto $bb190;
$bb190:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8388, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb191:
  assume ($i204 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8391, 19} true;
  assume {:verifier.code 0} true;
  $p205 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8391, 7} true;
  assume {:verifier.code 0} true;
  call atm_tc_walk($p205, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8392, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8393, 5} true;
  assume {:verifier.code 0} true;
  goto $bb193;
$bb192:
  assume !(($i204 == 1));
  assume {:verifier.code 0} true;
  goto $bb193;
$bb193:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8396, 9} true;
  assume {:verifier.code 0} true;
  $i206 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8396, 30} true;
  assume {:verifier.code 0} true;
  $i207 := $eq.i32($i206, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8396, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i207} true;
  goto $bb194, $bb195;
$bb194:
  assume ($i207 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8397, 19} true;
  assume {:verifier.code 0} true;
  $p208 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8397, 7} true;
  assume {:verifier.code 0} true;
  call atm_tc_walk($p208, $p3);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8398, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8399, 5} true;
  assume {:verifier.code 0} true;
  goto $bb196;
$bb195:
  assume !(($i207 == 1));
  assume {:verifier.code 0} true;
  goto $bb196;
$bb196:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8402, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb197:
  assume ($i210 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8405, 20} true;
  assume {:verifier.code 0} true;
  $p211 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8405, 7} true;
  assume {:verifier.code 0} true;
  call $i212 := atm_tc_graft($p211, $i25, $p23, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8406, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8407, 5} true;
  assume {:verifier.code 0} true;
  goto $bb199;
$bb198:
  assume !(($i210 == 1));
  assume {:verifier.code 0} true;
  goto $bb199;
$bb199:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8410, 9} true;
  assume {:verifier.code 0} true;
  $i213 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8410, 30} true;
  assume {:verifier.code 0} true;
  $i214 := $eq.i32($i213, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8410, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i214} true;
  goto $bb200, $bb201;
$bb200:
  assume ($i214 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8411, 20} true;
  assume {:verifier.code 0} true;
  $p215 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8411, 7} true;
  assume {:verifier.code 0} true;
  call $i216 := atm_tc_graft($p215, $i25, $p23, $p21);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8412, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8413, 5} true;
  assume {:verifier.code 0} true;
  goto $bb202;
$bb201:
  assume !(($i214 == 1));
  assume {:verifier.code 0} true;
  goto $bb202;
$bb202:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8416, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb203:
  assume ($i218 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8419, 18} true;
  assume {:verifier.code 0} true;
  $p219 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8419, 7} true;
  assume {:verifier.code 0} true;
  call atm_tc_put($p219, $i28);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8420, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8421, 17} true;
  assume {:verifier.code 0} true;
  $i220 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8421, 25} true;
  assume {:verifier.code 0} true;
  $i221 := $sub.i32($i220, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8421, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $i221;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i221);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8422, 5} true;
  assume {:verifier.code 0} true;
  goto $bb205;
$bb204:
  assume !(($i218 == 1));
  assume {:verifier.code 0} true;
  goto $bb205;
$bb205:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8425, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb206:
  assume ($i223 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8428, 23} true;
  assume {:verifier.code 0} true;
  $p224 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8428, 7} true;
  assume {:verifier.code 0} true;
  call $p225 := atm_tc_find_tcf($p224, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8429, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8430, 5} true;
  assume {:verifier.code 0} true;
  goto $bb208;
$bb207:
  assume !(($i223 == 1));
  assume {:verifier.code 0} true;
  goto $bb208;
$bb208:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8433, 9} true;
  assume {:verifier.code 0} true;
  $i226 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8433, 30} true;
  assume {:verifier.code 0} true;
  $i227 := $eq.i32($i226, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8433, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i227} true;
  goto $bb209, $bb210;
$bb209:
  assume ($i227 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8434, 23} true;
  assume {:verifier.code 0} true;
  $p228 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8434, 7} true;
  assume {:verifier.code 0} true;
  call $p229 := atm_tc_find_tcf($p228, $i12);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8435, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8436, 5} true;
  assume {:verifier.code 0} true;
  goto $bb211;
$bb210:
  assume !(($i227 == 1));
  assume {:verifier.code 0} true;
  goto $bb211;
$bb211:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8439, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb212:
  assume ($i231 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8442, 18} true;
  assume {:verifier.code 0} true;
  $p232 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8442, 7} true;
  assume {:verifier.code 0} true;
  call atm_tc_put($p232, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8443, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8444, 5} true;
  assume {:verifier.code 0} true;
  goto $bb214;
$bb213:
  assume !(($i231 == 1));
  assume {:verifier.code 0} true;
  goto $bb214;
$bb214:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8447, 9} true;
  assume {:verifier.code 0} true;
  $i233 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8447, 30} true;
  assume {:verifier.code 0} true;
  $i234 := $eq.i32($i233, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8447, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i234} true;
  goto $bb215, $bb216;
$bb215:
  assume ($i234 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8448, 18} true;
  assume {:verifier.code 0} true;
  $p235 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8448, 7} true;
  assume {:verifier.code 0} true;
  call atm_tc_put($p235, $i8);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8449, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8450, 5} true;
  assume {:verifier.code 0} true;
  goto $bb217;
$bb216:
  assume !(($i234 == 1));
  assume {:verifier.code 0} true;
  goto $bb217;
$bb217:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8453, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb218:
  assume ($i237 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8456, 31} true;
  assume {:verifier.code 0} true;
  $p238 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8456, 7} true;
  assume {:verifier.code 0} true;
  call $i239 := atm_tc_dump_class_stats($p238, $i4, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8457, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8458, 5} true;
  assume {:verifier.code 0} true;
  goto $bb220;
$bb219:
  assume !(($i237 == 1));
  assume {:verifier.code 0} true;
  goto $bb220;
$bb220:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8461, 9} true;
  assume {:verifier.code 0} true;
  $i240 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8461, 30} true;
  assume {:verifier.code 0} true;
  $i241 := $eq.i32($i240, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8461, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i241} true;
  goto $bb221, $bb222;
$bb221:
  assume ($i241 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8462, 31} true;
  assume {:verifier.code 0} true;
  $p242 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8462, 7} true;
  assume {:verifier.code 0} true;
  call $i243 := atm_tc_dump_class_stats($p242, $i4, $p14);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8463, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8464, 5} true;
  assume {:verifier.code 0} true;
  goto $bb223;
$bb222:
  assume !(($i241 == 1));
  assume {:verifier.code 0} true;
  goto $bb223;
$bb223:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8467, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb224:
  assume ($i245 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8470, 26} true;
  assume {:verifier.code 0} true;
  $p246 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8470, 7} true;
  assume {:verifier.code 0} true;
  call $i247 := atm_tc_bind_filter($p246, $i15, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8471, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8472, 5} true;
  assume {:verifier.code 0} true;
  goto $bb226;
$bb225:
  assume !(($i245 == 1));
  assume {:verifier.code 0} true;
  goto $bb226;
$bb226:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8475, 9} true;
  assume {:verifier.code 0} true;
  $i248 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8475, 30} true;
  assume {:verifier.code 0} true;
  $i249 := $eq.i32($i248, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8475, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i249} true;
  goto $bb227, $bb228;
$bb227:
  assume ($i249 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8476, 26} true;
  assume {:verifier.code 0} true;
  $p250 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8476, 7} true;
  assume {:verifier.code 0} true;
  call $i251 := atm_tc_bind_filter($p250, $i15, $i11);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8477, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8478, 5} true;
  assume {:verifier.code 0} true;
  goto $bb229;
$bb228:
  assume !(($i249 == 1));
  assume {:verifier.code 0} true;
  goto $bb229;
$bb229:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8481, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb230:
  assume ($i253 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8484, 25} true;
  assume {:verifier.code 0} true;
  $p254 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8484, 7} true;
  assume {:verifier.code 0} true;
  call $i255 := atm_tc_dump_class($p254, $i6, $p19, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8485, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8486, 5} true;
  assume {:verifier.code 0} true;
  goto $bb232;
$bb231:
  assume !(($i253 == 1));
  assume {:verifier.code 0} true;
  goto $bb232;
$bb232:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8489, 9} true;
  assume {:verifier.code 0} true;
  $i256 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8489, 30} true;
  assume {:verifier.code 0} true;
  $i257 := $eq.i32($i256, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8489, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i257} true;
  goto $bb233, $bb234;
$bb233:
  assume ($i257 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8490, 25} true;
  assume {:verifier.code 0} true;
  $p258 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8490, 7} true;
  assume {:verifier.code 0} true;
  call $i259 := atm_tc_dump_class($p258, $i6, $p19, $p17);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8491, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8492, 5} true;
  assume {:verifier.code 0} true;
  goto $bb235;
$bb234:
  assume !(($i257 == 1));
  assume {:verifier.code 0} true;
  goto $bb235;
$bb235:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8495, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb236:
  assume ($i261 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8498, 21} true;
  assume {:verifier.code 0} true;
  $p262 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8498, 7} true;
  assume {:verifier.code 0} true;
  call $i263 := atm_tc_change($p262, $i7, $i30, $p10, $p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8499, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8500, 5} true;
  assume {:verifier.code 0} true;
  goto $bb238;
$bb237:
  assume !(($i261 == 1));
  assume {:verifier.code 0} true;
  goto $bb238;
$bb238:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8503, 9} true;
  assume {:verifier.code 0} true;
  $i264 := $M.9;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8503, 30} true;
  assume {:verifier.code 0} true;
  $i265 := $eq.i32($i264, 2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8503, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i265} true;
  goto $bb239, $bb240;
$bb239:
  assume ($i265 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8504, 21} true;
  assume {:verifier.code 0} true;
  $p266 := $M.5;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8504, 7} true;
  assume {:verifier.code 0} true;
  call $i267 := atm_tc_change($p266, $i7, $i30, $p10, $p27);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8505, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8506, 5} true;
  assume {:verifier.code 0} true;
  goto $bb241;
$bb240:
  assume !(($i265 == 1));
  assume {:verifier.code 0} true;
  goto $bb241;
$bb241:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8509, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb242:
  assume ($i269 == 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8512, 7} true;
  assume {:verifier.code 0} true;
  call $i270 := ldv_probe_2();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8513, 28} true;
  assume {:verifier.code 0} true;
  $M.9 := 2;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8514, 17} true;
  assume {:verifier.code 0} true;
  $i271 := $M.7;
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8514, 25} true;
  assume {:verifier.code 0} true;
  $i272 := $add.i32($i271, 1);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8514, 15} true;
  assume {:verifier.code 0} true;
  $M.7 := $i272;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i272);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8515, 5} true;
  assume {:verifier.code 0} true;
  goto $bb244;
$bb243:
  assume !(($i269 == 1));
  assume {:verifier.code 0} true;
  goto $bb244;
$bb244:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8518, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb245:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8520, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8521, 5} true;
  assume {:verifier.code 0} true;
  goto $bb246;
$bb246:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8521, 5} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb247:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8526, 3} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb248:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8528, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8529, 3} true;
  assume {:verifier.code 0} true;
  goto $bb249;
$bb249:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 8529, 3} true;
  assume {:verifier.code 0} true;
  goto $bb109;
}
const __VERIFIER_nondet_u32: ref;
axiom (__VERIFIER_nondet_u32 == $sub.ref(0, 183157));
procedure  __VERIFIER_nondet_u32()
  returns ($r: i32);
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 184189));
procedure  ldv_initialize();
const ldv_setup_1: ref;
axiom (ldv_setup_1 == $sub.ref(0, 185221));
procedure  ldv_setup_1()
  returns ($r: i32);
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 186253));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6138, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6140, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 6142, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const atm_exit: ref;
axiom (atm_exit == $sub.ref(0, 187285));
procedure  atm_exit()
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7994, 3} true;
  assume {:verifier.code 0} true;
  call $i0 := unregister_qdisc(atm_qdisc_ops);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7995, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const atm_init: ref;
axiom (atm_init == $sub.ref(0, 188317));
procedure  atm_init()
  returns ($r: i32)
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7985, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := register_qdisc(atm_qdisc_ops);
  // WARNING: %1 = call i32 @register_qdisc(%struct.Qdisc_ops* @atm_qdisc_ops), !dbg !7762, !verifier.code !7764
  call {:cexpr "tmp"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--sched--sch_atm.ko-entry_point_true-unreach-call.cil.out-xCkfe9.c", 7986, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const ldv_probe_2: ref;
axiom (ldv_probe_2 == $sub.ref(0, 189349));
procedure  ldv_probe_2()
  returns ($r: i32);
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 190381));
procedure  ldv_check_final_state();
const register_qdisc: ref;
axiom (register_qdisc == $sub.ref(0, 191413));
procedure  register_qdisc($p0: ref)
  returns ($r: i32);
const unregister_qdisc: ref;
axiom (unregister_qdisc == $sub.ref(0, 192445));
procedure  unregister_qdisc($p0: ref)
  returns ($r: i32);
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 193477));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !11495, metadata !7764), !dbg !11496, !verifier.code !7762
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 194509));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 195541));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 196573));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 197605));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 198637));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 199669));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 200701));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 201733));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 202765));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 203797));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 204829));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 205861));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !7762, !verifier.code !7763
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 206893));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 207925));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 208957));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 209989));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 211021));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 212053));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 213085));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 214117));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_unsigned_long: ref;
axiom (__VERIFIER_nondet_unsigned_long == $sub.ref(0, 215149));
procedure  __VERIFIER_nondet_unsigned_long()
  returns ($r: i64)
{
  var $i0: i64;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 168, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_unsigned_long();
  call {:cexpr "smack:ext:__SMACK_nondet_unsigned_long"} boogie_si_record_i64($i0);
  // WARNING: %1 = call i64 @__SMACK_nondet_unsigned_long(), !dbg !7764, !verifier.code !7765
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 169, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $uge.i64($i0, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 169, 28} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 169, 33} true;
  assume {:verifier.code 1} true;
  $i3 := $ule.i64($i0, 18446744073709551615);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 169, 28} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 169, 28} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 169, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 170, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 216181));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 217213));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 218245));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 219277));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 220309));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 221341));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 222373));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 223405));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_ulong: ref;
axiom (__VERIFIER_nondet_ulong == $sub.ref(0, 224437));
procedure  __VERIFIER_nondet_ulong()
  returns ($r: i64)
{
  var $i0: i64;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 238, 21} true;
  assume {:verifier.code 1} true;
  call $i0 := __VERIFIER_nondet_unsigned_long();
  call {:cexpr "smack:ext:__VERIFIER_nondet_unsigned_long"} boogie_si_record_i64($i0);
  // WARNING: %1 = call i64 @__VERIFIER_nondet_unsigned_long(), !dbg !7764, !verifier.code !7765
  call {:cexpr "x"} boogie_si_record_i64($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 239, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const calloc: ref;
axiom (calloc == $sub.ref(0, 225469));
procedure  calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !11547, metadata !7764), !dbg !11548, !verifier.code !7762
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p6, 0, $i7, $zext.i32.i64(1), (0 == 1));
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 254, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 226501));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 227533));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 228565));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 229597));
procedure  llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 230629));
procedure  __SMACK_static_init()
{
$bb0:
  $M.12 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  $M.3 := $0.ref;
  $M.4 := $0.ref;
  $M.5 := $0.ref;
  $M.6 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  $M.7 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  $M.8 := 0;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(0);
  $M.9 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  $M.10 := 0;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32(0);
  $M.11 := 0;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32(0);
  $M.2 := 0;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(0);
  $M.0 := $store.i8($M.0, llc_oui_ip, $sub.i8(0, 86));
  $M.0 := $store.i8($M.0, $add.ref(llc_oui_ip, 1), $sub.i8(0, 86));
  $M.0 := $store.i8($M.0, $add.ref(llc_oui_ip, 2), 3);
  $M.0 := $store.i8($M.0, $add.ref(llc_oui_ip, 3), 0);
  $M.0 := $store.i8($M.0, $add.ref(llc_oui_ip, 4), 0);
  $M.0 := $store.i8($M.0, $add.ref(llc_oui_ip, 5), 0);
  $M.0 := $store.i8($M.0, $add.ref(llc_oui_ip, 6), 8);
  $M.0 := $store.i8($M.0, $add.ref(llc_oui_ip, 7), 0);
  $M.0 := $store.i16($M.0, atm_policy, 0);
  $M.0 := $store.i16($M.0, $add.ref(atm_policy, 2), 0);
  $M.0 := $store.i16($M.0, $add.ref(atm_policy, 4), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(atm_policy, 4), 2), 0);
  $M.0 := $store.i16($M.0, $add.ref(atm_policy, 8), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(atm_policy, 8), 2), 0);
  $M.0 := $store.i16($M.0, $add.ref(atm_policy, 12), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(atm_policy, 12), 2), 0);
  $M.0 := $store.i16($M.0, $add.ref(atm_policy, 16), 3);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(atm_policy, 16), 2), 0);
  $M.0 := $store.i16($M.0, $add.ref(atm_policy, 20), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(atm_policy, 20), 2), 0);
  $M.0 := $store.i16($M.0, $add.ref(atm_policy, 24), 0);
  $M.0 := $store.i16($M.0, $add.ref($add.ref(atm_policy, 24), 2), 0);
  $M.0 := $store.ref($M.0, atm_class_ops, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 8), atm_tc_graft);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 16), atm_tc_leaf);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 32), atm_tc_get);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 40), atm_tc_put);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 48), atm_tc_change);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 56), atm_tc_delete);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 64), atm_tc_walk);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 72), atm_tc_find_tcf);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 80), atm_tc_bind_filter);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 88), atm_tc_put);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 96), atm_tc_dump_class);
  $M.0 := $store.ref($M.0, $add.ref(atm_class_ops, 104), atm_tc_dump_class_stats);
  $M.0 := $store.ref($M.0, atm_qdisc_ops, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 8), atm_class_ops);
  $M.0 := $store.i8($M.0, $add.ref(atm_qdisc_ops, 16), 97);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 1), 116);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 2), 109);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 7), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 8), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 9), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 10), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 11), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 12), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 13), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 14), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(atm_qdisc_ops, 16), 15), 0);
  $M.0 := $store.i32($M.0, $add.ref(atm_qdisc_ops, 32), 176);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 40), atm_tc_enqueue);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 48), atm_tc_dequeue);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 56), atm_tc_peek);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 64), atm_tc_drop);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 72), atm_tc_init);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 80), atm_tc_reset);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 88), atm_tc_destroy);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 112), atm_tc_dump);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(atm_qdisc_ops, 128), __this_module);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 231661));
procedure  devirtbounce(funcPtr: ref, arg: ref)
  returns ($r: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(atm_tc_peek, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $p1 := atm_tc_dequeue(arg);
  $r := $p1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $p2 := atm_tc_peek(arg);
  $r := $p2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(atm_tc_dequeue, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 232693));
procedure  devirtbounce.1(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := atm_tc_drop(arg);
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_memcpy();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(atm_tc_drop, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 233725));
procedure  devirtbounce.2(funcPtr: ref, arg: ref, arg1: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i13 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i13} true;
  goto $bb5, $bb9;
$bb2:
  assume ($i10 == 1);
  $p1 := $bitcast.ref.ref(arg);
  $p2 := $bitcast.ref.ref(arg1);
  call $i3 := atm_tc_enqueue($p1, $p2);
  $r := $i3;
  $exn := false;
  return;
$bb3:
  assume ($i11 == 1);
  $p4 := $bitcast.ref.ref(arg);
  $p5 := $bitcast.ref.ref(arg1);
  call $i6 := atm_tc_init($p4, $p5);
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume ($i12 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call $i8 := atm_tc_dump($p7, arg1);
  $r := $i8;
  $exn := false;
  return;
$bb5:
  assume ($i13 == 1);
  call $i9 := __builtinx_memcpy();
  $r := $i9;
  $exn := false;
  return;
$bb6:
  assume !(($i10 == 1));
  assume false;
$bb7:
  assume !(($i11 == 1));
  $i10 := $eq.ref(atm_tc_enqueue, $p0);
  assume {:branchcond $i10} true;
  goto $bb2, $bb6;
$bb8:
  assume !(($i12 == 1));
  $i11 := $eq.ref(atm_tc_init, $p0);
  assume {:branchcond $i11} true;
  goto $bb3, $bb7;
$bb9:
  assume !(($i13 == 1));
  $i12 := $eq.ref(atm_tc_dump, $p0);
  assume {:branchcond $i12} true;
  goto $bb4, $bb8;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 234757));
procedure  devirtbounce.3(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.4: ref;
axiom (devirtbounce.4 == $sub.ref(0, 235789));
procedure  devirtbounce.4(funcPtr: ref, arg: ref, arg1: ref, arg2: i64, arg3: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.5: ref;
axiom (devirtbounce.5 == $sub.ref(0, 236821));
procedure  devirtbounce.5(funcPtr: ref, arg: ref, arg1: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i12 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i12} true;
  goto $bb5, $bb9;
$bb2:
  assume ($i9 == 1);
  call $i1 := atm_tc_enqueue(arg, arg1);
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i10 == 1);
  $p2 := $bitcast.ref.ref(arg);
  $p3 := $bitcast.ref.ref(arg1);
  call $i4 := atm_tc_init($p2, $p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i11 == 1);
  $p5 := $bitcast.ref.ref(arg);
  $p6 := $bitcast.ref.ref(arg1);
  call $i7 := atm_tc_dump($p5, $p6);
  $r := $i7;
  $exn := false;
  return;
$bb5:
  assume ($i12 == 1);
  call $i8 := __builtinx_memcpy();
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume !(($i9 == 1));
  assume false;
$bb7:
  assume !(($i10 == 1));
  $i9 := $eq.ref(atm_tc_enqueue, $p0);
  assume {:branchcond $i9} true;
  goto $bb2, $bb6;
$bb8:
  assume !(($i11 == 1));
  $i10 := $eq.ref(atm_tc_init, $p0);
  assume {:branchcond $i10} true;
  goto $bb3, $bb7;
$bb9:
  assume !(($i12 == 1));
  $i11 := $eq.ref(atm_tc_dump, $p0);
  assume {:branchcond $i11} true;
  goto $bb4, $bb8;
}
const devirtbounce.6: ref;
axiom (devirtbounce.6 == $sub.ref(0, 237853));
procedure  devirtbounce.6(funcPtr: ref, arg: ref, arg1: i64, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i5 := $eq.ref(atm_tc_dump_class_stats, $p0);
  assume {:branchcond $i5} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i4 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i5 == 1);
  $p2 := $bitcast.ref.ref(arg2);
  call $i3 := atm_tc_dump_class_stats(arg, arg1, $p2);
  $r := $i3;
  $exn := false;
  return;
$bb4:
  assume !(($i4 == 1));
  assume false;
$bb5:
  assume !(($i5 == 1));
  $i4 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i4} true;
  goto $bb2, $bb4;
}
const devirtbounce.7: ref;
axiom (devirtbounce.7 == $sub.ref(0, 238885));
procedure  devirtbounce.7(funcPtr: ref, arg: ref, arg1: ref)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(sch_atm_pop, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  $p1 := $bitcast.ref.ref(arg);
  $p2 := $bitcast.ref.ref(arg1);
  call atm_tc_walk($p1, $p2);
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call sch_atm_pop(arg, arg1);
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(atm_tc_walk, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
