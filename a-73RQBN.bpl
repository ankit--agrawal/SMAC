// generated by SMACK version 1.9.0 for corral
// via ../smack/smack/bin/smack -x=svcomp --time-limit 900 /benchmark_testing/ldv/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c --verifier-options  /di /staticInlining /trackAllVars /useArrayTheory --unroll 32

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (11 regions)
var $M.0: [ref] i8;
var $M.1: [ref] i64;
var $M.2: [ref] i64;
var $M.3: [ref] i32;
var $M.4: [ref] i64;
var $M.5: [ref] i64;
var $M.6: i32;
var $M.7: [ref] i8;
var $M.8: i32;
var $M.9: i32;
var $M.10: [ref] i8;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 137140));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32784));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 1028));
const ldv_mutex: ref;
axiom (ldv_mutex == $sub.ref(0, 2056));
const {:count 5} llvm.used: ref;
axiom (llvm.used == $sub.ref(0, 3120));
const {:count 31} __mod_description657: ref;
axiom (__mod_description657 == $sub.ref(0, 4175));
const {:count 42} __mod_author658: ref;
axiom (__mod_author658 == $sub.ref(0, 5241));
const {:count 12} __mod_license659: ref;
axiom (__mod_license659 == $sub.ref(0, 6277));
const {:count 27} __mod_alias660: ref;
axiom (__mod_alias660 == $sub.ref(0, 7328));
const {:count 23} __mod_alias661: ref;
axiom (__mod_alias661 == $sub.ref(0, 8375));
const altera_uart_ops: ref;
axiom (altera_uart_ops == $sub.ref(0, 9591));
const {:count 4} altera_uart_ports: ref;
axiom (altera_uart_ports == $sub.ref(0, 11991));
const altera_uart_platform_driver: ref;
axiom (altera_uart_platform_driver == $sub.ref(0, 13175));
const altera_uart_driver: ref;
axiom (altera_uart_driver == $sub.ref(0, 14263));
const res_altera_uart_probe_30: ref;
axiom (res_altera_uart_probe_30 == $sub.ref(0, 15291));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32776));
const .str: ref;
axiom (.str == $sub.ref(0, 16327));
const {:count 6} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 17357));
const {:count 12} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 18393));
const jiffies: ref;
axiom (jiffies == $sub.ref(0, 32784));
const {:count 69} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 19486));
const {:count 14} .str.2.8: ref;
axiom (.str.2.8 == $sub.ref(0, 20524));
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 21556));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const altera_uart_init: ref;
axiom (altera_uart_init == $sub.ref(0, 22588));
procedure  altera_uart_init()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i32;
  var $i4: i1;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5157, 8} true;
  assume {:verifier.code 0} true;
  call $i0 := uart_register_driver(altera_uart_driver);
  // WARNING: %1 = call i32 @uart_register_driver(%struct.uart_driver* @altera_uart_driver), !dbg !4007, !verifier.code !4010
  call {:cexpr "rc"} boogie_si_record_i32($i0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5159, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5159, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5160, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $i0;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5177, 1} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5165, 8} true;
  assume {:verifier.code 0} true;
  call $i3 := platform_driver_register(altera_uart_platform_driver);
  // WARNING: %6 = call i32 @platform_driver_register(%struct.platform_driver* @altera_uart_platform_driver), !dbg !4019, !verifier.code !4010
  call {:cexpr "rc"} boogie_si_record_i32($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5167, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5167, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i4 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5169, 5} true;
  assume {:verifier.code 0} true;
  call uart_unregister_driver(altera_uart_driver);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5171, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb6:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5175, 3} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  goto $bb3;
}
const uart_register_driver: ref;
axiom (uart_register_driver == $sub.ref(0, 23620));
procedure  uart_register_driver($p0: ref)
  returns ($r: i32);
const platform_driver_register: ref;
axiom (platform_driver_register == $sub.ref(0, 24652));
procedure  platform_driver_register($p0: ref)
  returns ($r: i32);
const uart_unregister_driver: ref;
axiom (uart_unregister_driver == $sub.ref(0, 25684));
procedure  uart_unregister_driver($p0: ref);
const altera_uart_probe: ref;
axiom (altera_uart_probe == $sub.ref(0, 26716));
procedure  altera_uart_probe($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i1;
  var $i22: i32;
  var $i23: i32;
  var $i14: i32;
  var $i24: i32;
  var $i25: i1;
  var $i27: i1;
  var $i28: i64;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $i33: i1;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i64;
  var $p38: ref;
  var $i39: i1;
  var $i40: i64;
  var $i41: i64;
  var $p42: ref;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $i46: i1;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i64;
  var $i51: i32;
  var $p52: ref;
  var $i53: i1;
  var $i54: i64;
  var $i55: i64;
  var $i56: i64;
  var $i57: i64;
  var $p58: ref;
  var $i59: i32;
  var $p60: ref;
  var $i61: i1;
  var $i62: i64;
  var $i63: i64;
  var $i64: i64;
  var $i65: i64;
  var $p66: ref;
  var $i67: i32;
  var $p68: ref;
  var $i69: i32;
  var $i70: i1;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $i74: i64;
  var $p75: ref;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i64;
  var $i80: i64;
  var $p81: ref;
  var $p82: ref;
  var $i83: i1;
  var $i84: i1;
  var $i85: i64;
  var $i86: i64;
  var $i87: i64;
  var $i88: i64;
  var $p89: ref;
  var $i90: i32;
  var $i91: i8;
  var $p92: ref;
  var $i93: i64;
  var $i94: i64;
  var $p95: ref;
  var $i96: i64;
  var $i97: i64;
  var $p98: ref;
  var $i99: i64;
  var $i100: i64;
  var $p101: ref;
  var $i102: i64;
  var $i103: i64;
  var $p104: ref;
  var $i105: i64;
  var $i106: i64;
  var $p107: ref;
  var $i108: i64;
  var $i109: i64;
  var $p110: ref;
  var $i111: i64;
  var $i112: i64;
  var $p113: ref;
  var $p114: ref;
  var $i115: i32;
  var $i116: i32;
  var $i26: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.platform_device* %0, i64 0, metadata !4031, metadata !4012), !dbg !4032, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4945, 17} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.platform_device* %0 to i64, !dbg !4013, !verifier.code !4010
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4946, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 200);
  // WARNING: %3 = add i64 %2, 200, !dbg !4017, !verifier.code !4010
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4947, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4947, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4948, 11} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4949, 17} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p0);
  // WARNING: %7 = ptrtoint %struct.platform_device* %0 to i64, !dbg !4027, !verifier.code !4010
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4950, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i6, 8);
  // WARNING: %8 = add i64 %7, 8, !dbg !4030, !verifier.code !4010
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4951, 9} true;
  assume {:verifier.code 0} true;
  $p8 := $i2p.i64.ref($i7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4951, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  // WARNING: %10 = load i32, i32* %9, align 4, !dbg !4034, !verifier.code !4010
  call {:cexpr "i"} boogie_si_record_i32($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4952, 9} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i9, $sub.i32(0, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4952, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4955, 5} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i24 := $i9;
  goto $bb12;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4955, 15} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4957, 13} true;
  assume {:verifier.code 0} true;
  $i12 := $slt.i32($i11, 4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4957, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $i11;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4959, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4960, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $i13;
  goto $bb8;
$bb7:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4964, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4964, 23} true;
  assume {:verifier.code 0} true;
  $i16 := $mul.i64($i15, 344);
  // WARNING: %20 = mul i64 %19, 344, !dbg !4057, !verifier.code !4010
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4965, 33} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 224);
  // WARNING: %21 = add i64 %20, 224, !dbg !4060, !verifier.code !4010
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i17);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4966, 57} true;
  assume {:verifier.code 0} true;
  $i18 := $add.i64($p2i.ref.i64(altera_uart_ports), $i17);
  // WARNING: %22 = add i64 ptrtoint ([4 x %struct.altera_uart]* @altera_uart_ports to i64), %21, !dbg !4063, !verifier.code !4010
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4967, 23} true;
  assume {:verifier.code 0} true;
  $p19 := $i2p.i64.ref($i18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4967, 21} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.0, $p19);
  // WARNING: %24 = load i64, i64* %23, align 8, !dbg !4067, !verifier.code !4010
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4968, 23} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i64($i20, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4968, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $i11;
  assume {:branchcond $i21} true;
  goto $bb9, $bb10;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4978, 3} true;
  assume {:verifier.code 0} true;
  $i24 := $i14;
  goto $bb12;
$bb9:
  assume ($i21 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4969, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $i22;
  goto $bb8;
$bb10:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4974, 13} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i32($i11, 1);
  // WARNING: %29 = add nsw i32 %.01, 1, !dbg !4075, !verifier.code !4010
  call {:cexpr "i"} boogie_si_record_i32($i23);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4955, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $i23;
  goto $bb3;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4981, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $slt.i32($i24, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4981, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i25 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4982, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, 22);
  goto $bb15;
$bb14:
  assume !(($i25 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4984, 9} true;
  assume {:verifier.code 0} true;
  $i27 := $sge.i32($i24, 4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4984, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb16, $bb17;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5099, 1} true;
  assume {:verifier.code 0} true;
  $r := $i26;
  $exn := false;
  return;
$bb16:
  assume ($i27 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4985, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, 22);
  goto $bb15;
$bb17:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4990, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i24);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4990, 19} true;
  assume {:verifier.code 0} true;
  $i29 := $mul.i64($i28, 344);
  // WARNING: %42 = mul i64 %41, 344, !dbg !4092, !verifier.code !4010
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i29);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4991, 53} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($p2i.ref.i64(altera_uart_ports), $i29);
  // WARNING: %43 = add i64 ptrtoint ([4 x %struct.altera_uart]* @altera_uart_ports to i64), %42, !dbg !4095, !verifier.code !4010
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i30);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4992, 10} true;
  assume {:verifier.code 0} true;
  $p31 := $i2p.i64.ref($i30);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4993, 13} true;
  assume {:verifier.code 0} true;
  call $p32 := platform_get_resource($p0, 512, 0);
  assume $isExternal($p32);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4995, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.ref($p32, $0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4995, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i33 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4996, 19} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p31);
  // WARNING: %48 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4107, !verifier.code !4010
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i34);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4997, 31} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 224);
  // WARNING: %49 = add i64 %48, 224, !dbg !4111, !verifier.code !4010
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i35);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4998, 41} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4998, 41} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i64($M.0, $p36);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4998, 7} true;
  assume {:verifier.code 0} true;
  $p38 := $i2p.i64.ref($i35);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4998, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p38, $i37);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4999, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i33 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5000, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.ref($p5, $0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5000, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb23, $bb24;
$bb22:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5009, 13} true;
  assume {:verifier.code 0} true;
  call $p45 := platform_get_resource($p0, 1024, 0);
  assume $isExternal($p45);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5011, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.ref($p45, $0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5011, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb26, $bb27;
$bb23:
  assume ($i39 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5001, 19} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p31);
  // WARNING: %56 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4121, !verifier.code !4010
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i40);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5002, 31} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i64($i40, 224);
  // WARNING: %57 = add i64 %56, 224, !dbg !4125, !verifier.code !4010
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i41);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5003, 19} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5003, 19} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i64($M.0, $p42);
  // WARNING: %59 = load i64, i64* %58, align 8, !dbg !4128, !verifier.code !4010
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i43);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5004, 7} true;
  assume {:verifier.code 0} true;
  $p44 := $i2p.i64.ref($i41);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5004, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p44, $i43);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5005, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i39 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5006, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, 22);
  goto $bb15;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb26:
  assume ($i46 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5012, 19} true;
  assume {:verifier.code 0} true;
  $i47 := $p2i.ref.i64($p31);
  // WARNING: %67 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4143, !verifier.code !4010
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i47);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5013, 31} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 80);
  // WARNING: %68 = add i64 %67, 80, !dbg !4147, !verifier.code !4010
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i48);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5014, 19} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p45);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5014, 19} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i64($M.0, $p49);
  // WARNING: %70 = load i64, i64* %69, align 8, !dbg !4150, !verifier.code !4010
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i50);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5015, 38} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i64.i32($i50);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5015, 7} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i48);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5015, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p52, $i51);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5016, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i46 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5017, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.ref($p5, $0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5017, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb29, $bb30;
$bb28:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5026, 7} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.ref($p5, $0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5026, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb32, $bb33;
$bb29:
  assume ($i53 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5018, 19} true;
  assume {:verifier.code 0} true;
  $i54 := $p2i.ref.i64($p31);
  // WARNING: %76 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4160, !verifier.code !4010
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i54);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5019, 31} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i54, 80);
  // WARNING: %77 = add i64 %76, 80, !dbg !4164, !verifier.code !4010
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i55);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5020, 19} true;
  assume {:verifier.code 0} true;
  $i56 := $p2i.ref.i64($p5);
  // WARNING: %78 = ptrtoint %struct.altera_uart_platform_uart* %6 to i64, !dbg !4167, !verifier.code !4010
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i56);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5021, 31} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i64($i56, 8);
  // WARNING: %79 = add i64 %78, 8, !dbg !4170, !verifier.code !4010
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i57);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5022, 40} true;
  assume {:verifier.code 0} true;
  $p58 := $i2p.i64.ref($i57);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5022, 38} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5022, 7} true;
  assume {:verifier.code 0} true;
  $p60 := $i2p.i64.ref($i55);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5022, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, $i59);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5023, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i53 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb28;
$bb32:
  assume ($i61 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5027, 19} true;
  assume {:verifier.code 0} true;
  $i62 := $p2i.ref.i64($p31);
  // WARNING: %88 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4181, !verifier.code !4010
  call {:cexpr "__cil_tmp34"} boogie_si_record_i64($i62);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5028, 31} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i64($i62, 96);
  // WARNING: %89 = add i64 %88, 96, !dbg !4185, !verifier.code !4010
  call {:cexpr "__cil_tmp35"} boogie_si_record_i64($i63);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5029, 19} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p5);
  // WARNING: %90 = ptrtoint %struct.altera_uart_platform_uart* %6 to i64, !dbg !4188, !verifier.code !4010
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i64);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5030, 31} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i64, 12);
  // WARNING: %91 = add i64 %90, 12, !dbg !4191, !verifier.code !4010
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i65);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5031, 40} true;
  assume {:verifier.code 0} true;
  $p66 := $i2p.i64.ref($i65);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5031, 38} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5031, 7} true;
  assume {:verifier.code 0} true;
  $p68 := $i2p.i64.ref($i63);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5031, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p68, $i67);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5032, 3} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i61 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5034, 11} true;
  assume {:verifier.code 0} true;
  call $i69 := altera_uart_get_of_uartclk($p0, $p31);
  // WARNING: %96 = call i32 @altera_uart_get_of_uartclk(%struct.platform_device* %0, %struct.uart_port* %44), !dbg !4199, !verifier.code !4010
  call {:cexpr "ret"} boogie_si_record_i32($i69);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5036, 9} true;
  assume {:verifier.code 0} true;
  $i70 := $ne.i32($i69, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5036, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb35, $bb36;
$bb34:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5043, 17} true;
  assume {:verifier.code 0} true;
  $i71 := $p2i.ref.i64($p31);
  // WARNING: %102 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4209, !verifier.code !4010
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i71);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5044, 29} true;
  assume {:verifier.code 0} true;
  $i72 := $add.i64($i71, 224);
  // WARNING: %103 = add i64 %102, 224, !dbg !4213, !verifier.code !4010
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i72);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5045, 19} true;
  assume {:verifier.code 0} true;
  $p73 := $i2p.i64.ref($i72);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5045, 17} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i64($M.0, $p73);
  // WARNING: %105 = load i64, i64* %104, align 8, !dbg !4217, !verifier.code !4010
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i74);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5046, 13} true;
  assume {:verifier.code 0} true;
  call $p75 := ioremap($i74, 32);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5047, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p31);
  // WARNING: %107 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4223, !verifier.code !4010
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i76);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5048, 29} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 32);
  // WARNING: %108 = add i64 %107, 32, !dbg !4226, !verifier.code !4010
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i77);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5049, 5} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5049, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p78, $p75);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5052, 17} true;
  assume {:verifier.code 0} true;
  $i79 := $p2i.ref.i64($p31);
  // WARNING: %110 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4231, !verifier.code !4010
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i79);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5053, 29} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i64($i79, 32);
  // WARNING: %111 = add i64 %110, 32, !dbg !4235, !verifier.code !4010
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i80);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5054, 19} true;
  assume {:verifier.code 0} true;
  $p81 := $i2p.i64.ref($i80);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5054, 17} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5055, 9} true;
  assume {:verifier.code 0} true;
  $i83 := $ne.ref($p82, $0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5055, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb38, $bb39;
$bb35:
  assume ($i70 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5037, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $i69;
  goto $bb15;
$bb36:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  goto $bb34;
$bb38:
  assume ($i83 == 1);
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i83 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5056, 5} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, 12);
  goto $bb15;
$bb40:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5061, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $ne.ref($p5, $0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5061, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb41, $bb42;
$bb41:
  assume ($i84 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5062, 19} true;
  assume {:verifier.code 0} true;
  $i85 := $p2i.ref.i64($p31);
  // WARNING: %120 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4250, !verifier.code !4010
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i85);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5063, 31} true;
  assume {:verifier.code 0} true;
  $i86 := $add.i64($i85, 105);
  // WARNING: %121 = add i64 %120, 105, !dbg !4254, !verifier.code !4010
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i86);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5064, 19} true;
  assume {:verifier.code 0} true;
  $i87 := $p2i.ref.i64($p5);
  // WARNING: %122 = ptrtoint %struct.altera_uart_platform_uart* %6 to i64, !dbg !4257, !verifier.code !4010
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i87);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5065, 31} true;
  assume {:verifier.code 0} true;
  $i88 := $add.i64($i87, 16);
  // WARNING: %123 = add i64 %122, 16, !dbg !4260, !verifier.code !4010
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i88);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5066, 21} true;
  assume {:verifier.code 0} true;
  $p89 := $i2p.i64.ref($i88);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5066, 19} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i32($M.0, $p89);
  // WARNING: %125 = load i32, i32* %124, align 4, !dbg !4264, !verifier.code !4010
  call {:cexpr "__cil_tmp50"} boogie_si_record_i32($i90);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5067, 39} true;
  assume {:verifier.code 0} true;
  $i91 := $trunc.i32.i8($i90);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5067, 7} true;
  assume {:verifier.code 0} true;
  $p92 := $i2p.i64.ref($i86);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5067, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p92, $i91);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5068, 3} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i84 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5069, 19} true;
  assume {:verifier.code 0} true;
  $i93 := $p2i.ref.i64($p31);
  // WARNING: %129 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4271, !verifier.code !4010
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i93);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5070, 31} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i64($i93, 105);
  // WARNING: %130 = add i64 %129, 105, !dbg !4275, !verifier.code !4010
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i94);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5071, 7} true;
  assume {:verifier.code 0} true;
  $p95 := $i2p.i64.ref($i94);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5071, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p95, 0);
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5074, 17} true;
  assume {:verifier.code 0} true;
  $i96 := $p2i.ref.i64($p31);
  // WARNING: %133 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4280, !verifier.code !4010
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i96);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5075, 29} true;
  assume {:verifier.code 0} true;
  $i97 := $add.i64($i96, 220);
  // WARNING: %134 = add i64 %133, 220, !dbg !4284, !verifier.code !4010
  call {:cexpr "__cil_tmp54"} boogie_si_record_i64($i97);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5076, 5} true;
  assume {:verifier.code 0} true;
  $p98 := $i2p.i64.ref($i97);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5076, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p98, $i24);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5077, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $p2i.ref.i64($p31);
  // WARNING: %136 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4289, !verifier.code !4010
  call {:cexpr "__cil_tmp55"} boogie_si_record_i64($i99);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5078, 29} true;
  assume {:verifier.code 0} true;
  $i100 := $add.i64($i99, 204);
  // WARNING: %137 = add i64 %136, 204, !dbg !4292, !verifier.code !4010
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i100);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5079, 5} true;
  assume {:verifier.code 0} true;
  $p101 := $i2p.i64.ref($i100);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5079, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p101, 92);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5080, 17} true;
  assume {:verifier.code 0} true;
  $i102 := $p2i.ref.i64($p31);
  // WARNING: %139 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4297, !verifier.code !4010
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i102);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5081, 29} true;
  assume {:verifier.code 0} true;
  $i103 := $add.i64($i102, 106);
  // WARNING: %140 = add i64 %139, 106, !dbg !4300, !verifier.code !4010
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i103);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5082, 5} true;
  assume {:verifier.code 0} true;
  $p104 := $i2p.i64.ref($i103);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5082, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p104, 2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5083, 17} true;
  assume {:verifier.code 0} true;
  $i105 := $p2i.ref.i64($p31);
  // WARNING: %142 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4305, !verifier.code !4010
  call {:cexpr "__cil_tmp59"} boogie_si_record_i64($i105);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5084, 29} true;
  assume {:verifier.code 0} true;
  $i106 := $add.i64($i105, 208);
  // WARNING: %143 = add i64 %142, 208, !dbg !4308, !verifier.code !4010
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i106);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5085, 5} true;
  assume {:verifier.code 0} true;
  $p107 := $i2p.i64.ref($i106);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5085, 46} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p107, altera_uart_ops);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5086, 17} true;
  assume {:verifier.code 0} true;
  $i108 := $p2i.ref.i64($p31);
  // WARNING: %145 = ptrtoint %struct.uart_port* %44 to i64, !dbg !4313, !verifier.code !4010
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i108);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5087, 29} true;
  assume {:verifier.code 0} true;
  $i109 := $add.i64($i108, 192);
  // WARNING: %146 = add i64 %145, 192, !dbg !4316, !verifier.code !4010
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i109);
  // WARNING: call void @llvm.dbg.value(metadata i64 %146, i64 0, metadata !4339, metadata !4012), !dbg !4340, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5089, 5} true;
  assume {:verifier.code 0} true;
  $p110 := $i2p.i64.ref($i109);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5089, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p110, 268435456);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5090, 17} true;
  assume {:verifier.code 0} true;
  $i111 := $p2i.ref.i64($p0);
  // WARNING: %148 = ptrtoint %struct.platform_device* %0 to i64, !dbg !4323, !verifier.code !4010
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i111);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5091, 29} true;
  assume {:verifier.code 0} true;
  $i112 := $add.i64($i111, 16);
  // WARNING: %149 = add i64 %148, 16, !dbg !4326, !verifier.code !4010
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i112);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5092, 17} true;
  assume {:verifier.code 0} true;
  $p113 := $i2p.i64.ref($i112);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5093, 17} true;
  assume {:verifier.code 0} true;
  $p114 := $bitcast.ref.ref($p31);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5094, 3} true;
  assume {:verifier.code 0} true;
  call $i115 := dev_set_drvdata($p113, $p114);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5095, 3} true;
  assume {:verifier.code 0} true;
  call $i116 := uart_add_one_port(altera_uart_driver, $p31);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5097, 3} true;
  assume {:verifier.code 0} true;
  $i26 := 0;
  goto $bb15;
}
const altera_uart_remove: ref;
axiom (altera_uart_remove == $sub.ref(0, 27748));
procedure  altera_uart_remove($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5118, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.platform_device* %0 to i64, !dbg !4011, !verifier.code !4010
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5119, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 16);
  // WARNING: %3 = add i64 %2, 16, !dbg !4016, !verifier.code !4010
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5120, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5122, 13} true;
  assume {:verifier.code 0} true;
  call $p4 := dev_get_drvdata($p3);
  assume $isExternal($p4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5123, 10} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5125, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.ref($p5, $0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5125, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5127, 5} true;
  assume {:verifier.code 0} true;
  call $i7 := uart_remove_one_port(altera_uart_driver, $p5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5128, 18} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p0);
  // WARNING: %10 = ptrtoint %struct.platform_device* %0 to i64, !dbg !4036, !verifier.code !4010
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5129, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 16);
  // WARNING: %11 = add i64 %10, 16, !dbg !4039, !verifier.code !4010
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5130, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5132, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := dev_set_drvdata($p10, $0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5133, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p5);
  // WARNING: %14 = ptrtoint %struct.uart_port* %6 to i64, !dbg !4048, !verifier.code !4010
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5134, 31} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 224);
  // WARNING: %15 = add i64 %14, 224, !dbg !4051, !verifier.code !4010
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5135, 7} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5135, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p14, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5137, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5140, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const dev_get_drvdata: ref;
axiom (dev_get_drvdata == $sub.ref(0, 28780));
procedure  dev_get_drvdata($p0: ref)
  returns ($r: ref);
const uart_remove_one_port: ref;
axiom (uart_remove_one_port == $sub.ref(0, 29812));
procedure  uart_remove_one_port($p0: ref, $p1: ref)
  returns ($r: i32);
const dev_set_drvdata: ref;
axiom (dev_set_drvdata == $sub.ref(0, 30844));
procedure  dev_set_drvdata($p0: ref, $p1: ref)
  returns ($r: i32);
const platform_get_resource: ref;
axiom (platform_get_resource == $sub.ref(0, 31876));
procedure  platform_get_resource($p0: ref, $i1: i32, $i2: i32)
  returns ($r: ref);
const altera_uart_get_of_uartclk: ref;
axiom (altera_uart_get_of_uartclk == $sub.ref(0, 32908));
procedure  altera_uart_get_of_uartclk($p0: ref, $p1: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4870, 3} true;
  assume {:verifier.code 0} true;
  $r := $sub.i32(0, 19);
  $exn := false;
  return;
}
const ioremap: ref;
axiom (ioremap == $sub.ref(0, 33940));
procedure  ioremap($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !4423, metadata !4012), !dbg !4424, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3314, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ioremap_nocache($i0, $i1);
  assume $isExternal($p2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3316, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const uart_add_one_port: ref;
axiom (uart_add_one_port == $sub.ref(0, 34972));
procedure  uart_add_one_port($p0: ref, $p1: ref)
  returns ($r: i32);
const ioremap_nocache: ref;
axiom (ioremap_nocache == $sub.ref(0, 36004));
procedure  ioremap_nocache($i0: i64, $i1: i64)
  returns ($r: ref);
const altera_uart_tx_empty: ref;
axiom (altera_uart_tx_empty == $sub.ref(0, 37036));
procedure  altera_uart_tx_empty($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3499, 13} true;
  assume {:verifier.code 0} true;
  call $i1 := altera_uart_readl($p0, 8);
  // WARNING: %2 = call i32 @altera_uart_readl(%struct.uart_port* %0, i32 8), !dbg !4011, !verifier.code !4010
  call {:cexpr "tmp___9"} boogie_si_record_i32($i1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3501, 15} true;
  assume {:verifier.code 0} true;
  $i2 := $and.i32($i1, 32);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3501, 15} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3501, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3503, 3} true;
  assume {:verifier.code 0} true;
  $i4 := 1;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3506, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const altera_uart_set_mctrl: ref;
axiom (altera_uart_set_mctrl == $sub.ref(0, 38068));
procedure  altera_uart_set_mctrl($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i64;
  var $i15: i64;
  var $i16: i64;
  var $i17: i64;
  var $p18: ref;
  var $i19: i16;
  var $i20: i32;
  var $i21: i32;
  var $i22: i16;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i64;
  var $p28: ref;
  var $i29: i16;
  var $i30: i32;
  var $i31: i32;
  var $i32: i16;
  var $p33: ref;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i16;
  var $i38: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !4450, metadata !4012), !dbg !4451, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3580, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3581, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i32($p2);
  // WARNING: %4 = ptrtoint %struct.uart_port* %3 to i32, !dbg !4021, !verifier.code !4010
  call {:cexpr "__cil_tmp7"} boogie_si_record_i32($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3582, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3583, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3583, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i64(0, $i5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3583, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, $mul.ref($i6, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3584, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3585, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  // WARNING: %10 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4033, !verifier.code !4010
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3586, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 336);
  // WARNING: %11 = add i64 %10, 336, !dbg !4036, !verifier.code !4010
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3587, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3587, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3588, 12} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i1, 4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3588, 12} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3588, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3589, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p8);
  // WARNING: %16 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4044, !verifier.code !4010
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3590, 31} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, 340);
  // WARNING: %17 = add i64 %16, 340, !dbg !4048, !verifier.code !4010
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3591, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p8);
  // WARNING: %18 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4051, !verifier.code !4010
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3592, 31} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 340);
  // WARNING: %19 = add i64 %18, 340, !dbg !4054, !verifier.code !4010
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i17);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3593, 21} true;
  assume {:verifier.code 0} true;
  $p18 := $i2p.i64.ref($i17);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3593, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i16($M.0, $p18);
  // WARNING: %21 = load i16, i16* %20, align 2, !dbg !4058, !verifier.code !4010
  call {:cexpr "__cil_tmp16"} boogie_si_record_i16($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3594, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i16.i32($i19);
  // WARNING: %22 = zext i16 %21 to i32, !dbg !4061, !verifier.code !4010
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3595, 31} true;
  assume {:verifier.code 0} true;
  $i21 := $or.i32($i20, 2048);
  // WARNING: %23 = or i32 %22, 2048, !dbg !4064, !verifier.code !4010
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3596, 40} true;
  assume {:verifier.code 0} true;
  $i22 := $trunc.i32.i16($i21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3596, 7} true;
  assume {:verifier.code 0} true;
  $p23 := $i2p.i64.ref($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3596, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p23, $i22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3597, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3598, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p8);
  // WARNING: %27 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4071, !verifier.code !4010
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i24);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3599, 31} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 340);
  // WARNING: %28 = add i64 %27, 340, !dbg !4075, !verifier.code !4010
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i25);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3600, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p8);
  // WARNING: %29 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4078, !verifier.code !4010
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i26);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3601, 31} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i64($i26, 340);
  // WARNING: %30 = add i64 %29, 340, !dbg !4081, !verifier.code !4010
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i27);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3602, 21} true;
  assume {:verifier.code 0} true;
  $p28 := $i2p.i64.ref($i27);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3602, 19} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i16($M.0, $p28);
  // WARNING: %32 = load i16, i16* %31, align 2, !dbg !4085, !verifier.code !4010
  call {:cexpr "__cil_tmp23"} boogie_si_record_i16($i29);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3603, 19} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i16.i32($i29);
  // WARNING: %33 = zext i16 %32 to i32, !dbg !4088, !verifier.code !4010
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i30);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3604, 31} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i32($i30, $sub.i32(0, 2049));
  // WARNING: %34 = and i32 %33, -2049, !dbg !4091, !verifier.code !4010
  call {:cexpr "__cil_tmp25"} boogie_si_record_i32($i31);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3605, 40} true;
  assume {:verifier.code 0} true;
  $i32 := $trunc.i32.i16($i31);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3605, 7} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.i64.ref($i25);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3605, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p33, $i32);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3608, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p8);
  // WARNING: %38 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4097, !verifier.code !4010
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i34);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3609, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 340);
  // WARNING: %39 = add i64 %38, 340, !dbg !4101, !verifier.code !4010
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i35);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3610, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $i2p.i64.ref($i35);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3610, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i16($M.0, $p36);
  // WARNING: %41 = load i16, i16* %40, align 2, !dbg !4105, !verifier.code !4010
  call {:cexpr "__cil_tmp28"} boogie_si_record_i16($i37);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3611, 17} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i16.i32($i37);
  // WARNING: %42 = zext i16 %41 to i32, !dbg !4108, !verifier.code !4010
  call {:cexpr "__cil_tmp29"} boogie_si_record_i32($i38);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3612, 3} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p0, $i38, 12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3614, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_get_mctrl: ref;
axiom (altera_uart_get_mctrl == $sub.ref(0, 39100));
procedure  altera_uart_get_mctrl($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i64;
  var $i13: i64;
  var $p14: ref;
  var $i15: i32;
  var $i16: i32;
  var $i17: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3528, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3529, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4020, !verifier.code !4010
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3530, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3531, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3531, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3531, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3532, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3533, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := altera_uart_readl($p0, 8);
  // WARNING: %9 = call i32 @altera_uart_readl(%struct.uart_port* %0, i32 8), !dbg !4032, !verifier.code !4010
  call {:cexpr "tmp___8"} boogie_si_record_i32($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3535, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8, 2048);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3535, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3535, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3537, 3} true;
  assume {:verifier.code 0} true;
  $i11 := 32;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  $i11 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3540, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $p2i.ref.i64($p7);
  // WARNING: %15 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4042, !verifier.code !4010
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3541, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i12, 336);
  // WARNING: %16 = add i64 %15, 336, !dbg !4045, !verifier.code !4010
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3542, 19} true;
  assume {:verifier.code 0} true;
  $p14 := $i2p.i64.ref($i13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3542, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  // WARNING: %18 = load i32, i32* %17, align 4, !dbg !4049, !verifier.code !4010
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3543, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i15, 4);
  // WARNING: %19 = and i32 %18, 4, !dbg !4052, !verifier.code !4010
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3544, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i32($i11, $i16);
  // WARNING: %20 = or i32 %.0, %19, !dbg !4055, !verifier.code !4010
  call {:cexpr "sigs"} boogie_si_record_i32($i17);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3545, 3} true;
  assume {:verifier.code 0} true;
  $r := $i17;
  $exn := false;
  return;
}
const altera_uart_stop_tx: ref;
axiom (altera_uart_stop_tx == $sub.ref(0, 40132));
procedure  altera_uart_stop_tx($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i16;
  var $i14: i32;
  var $i15: i32;
  var $i16: i16;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i16;
  var $i22: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3687, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3688, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4020, !verifier.code !4010
  call {:cexpr "__cil_tmp6"} boogie_si_record_i32($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3689, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3690, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3690, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3690, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3691, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3692, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4032, !verifier.code !4010
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3693, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 340);
  // WARNING: %10 = add i64 %9, 340, !dbg !4035, !verifier.code !4010
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3694, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p7);
  // WARNING: %11 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4038, !verifier.code !4010
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3695, 29} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 340);
  // WARNING: %12 = add i64 %11, 340, !dbg !4041, !verifier.code !4010
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3696, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3696, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i16($M.0, $p12);
  // WARNING: %14 = load i16, i16* %13, align 2, !dbg !4045, !verifier.code !4010
  call {:cexpr "__cil_tmp13"} boogie_si_record_i16($i13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3697, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i16.i32($i13);
  // WARNING: %15 = zext i16 %14 to i32, !dbg !4048, !verifier.code !4010
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3698, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i14, $sub.i32(0, 65));
  // WARNING: %16 = and i32 %15, -65, !dbg !4051, !verifier.code !4010
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3699, 38} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i16($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3699, 5} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3699, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p17, $i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3700, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p7);
  // WARNING: %19 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4057, !verifier.code !4010
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3701, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 340);
  // WARNING: %20 = add i64 %19, 340, !dbg !4060, !verifier.code !4010
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3702, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3702, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i16($M.0, $p20);
  // WARNING: %22 = load i16, i16* %21, align 2, !dbg !4064, !verifier.code !4010
  call {:cexpr "__cil_tmp18"} boogie_si_record_i16($i21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3703, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i16.i32($i21);
  // WARNING: %23 = zext i16 %22 to i32, !dbg !4067, !verifier.code !4010
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3704, 3} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p0, $i22, 12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3706, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_start_tx: ref;
axiom (altera_uart_start_tx == $sub.ref(0, 41164));
procedure  altera_uart_start_tx($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i16;
  var $i14: i32;
  var $i15: i32;
  var $i16: i16;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i16;
  var $i22: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3641, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3642, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4020, !verifier.code !4010
  call {:cexpr "__cil_tmp6"} boogie_si_record_i32($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3643, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3644, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3644, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3644, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3645, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3646, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4032, !verifier.code !4010
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3647, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 340);
  // WARNING: %10 = add i64 %9, 340, !dbg !4035, !verifier.code !4010
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3648, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p7);
  // WARNING: %11 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4038, !verifier.code !4010
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3649, 29} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 340);
  // WARNING: %12 = add i64 %11, 340, !dbg !4041, !verifier.code !4010
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3650, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3650, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i16($M.0, $p12);
  // WARNING: %14 = load i16, i16* %13, align 2, !dbg !4045, !verifier.code !4010
  call {:cexpr "__cil_tmp13"} boogie_si_record_i16($i13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3651, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i16.i32($i13);
  // WARNING: %15 = zext i16 %14 to i32, !dbg !4048, !verifier.code !4010
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3652, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $or.i32($i14, 64);
  // WARNING: %16 = or i32 %15, 64, !dbg !4051, !verifier.code !4010
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3653, 38} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i16($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3653, 5} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3653, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p17, $i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3654, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p7);
  // WARNING: %19 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4057, !verifier.code !4010
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3655, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 340);
  // WARNING: %20 = add i64 %19, 340, !dbg !4060, !verifier.code !4010
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3656, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3656, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i16($M.0, $p20);
  // WARNING: %22 = load i16, i16* %21, align 2, !dbg !4064, !verifier.code !4010
  call {:cexpr "__cil_tmp18"} boogie_si_record_i16($i21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3657, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i16.i32($i21);
  // WARNING: %23 = zext i16 %22 to i32, !dbg !4067, !verifier.code !4010
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3658, 3} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p0, $i22, 12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3660, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_stop_rx: ref;
axiom (altera_uart_stop_rx == $sub.ref(0, 42196));
procedure  altera_uart_stop_rx($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i16;
  var $i14: i32;
  var $i15: i32;
  var $i16: i16;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i16;
  var $i22: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3733, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3734, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4020, !verifier.code !4010
  call {:cexpr "__cil_tmp6"} boogie_si_record_i32($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3735, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3736, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3736, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3736, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3737, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3738, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  // WARNING: %9 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4032, !verifier.code !4010
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3739, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 340);
  // WARNING: %10 = add i64 %9, 340, !dbg !4035, !verifier.code !4010
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3740, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p7);
  // WARNING: %11 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4038, !verifier.code !4010
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3741, 29} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 340);
  // WARNING: %12 = add i64 %11, 340, !dbg !4041, !verifier.code !4010
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3742, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3742, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i16($M.0, $p12);
  // WARNING: %14 = load i16, i16* %13, align 2, !dbg !4045, !verifier.code !4010
  call {:cexpr "__cil_tmp13"} boogie_si_record_i16($i13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3743, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i16.i32($i13);
  // WARNING: %15 = zext i16 %14 to i32, !dbg !4048, !verifier.code !4010
  call {:cexpr "__cil_tmp14"} boogie_si_record_i32($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3744, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i32($i14, $sub.i32(0, 129));
  // WARNING: %16 = and i32 %15, -129, !dbg !4051, !verifier.code !4010
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3745, 38} true;
  assume {:verifier.code 0} true;
  $i16 := $trunc.i32.i16($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3745, 5} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3745, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p17, $i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3746, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p7);
  // WARNING: %19 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4057, !verifier.code !4010
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3747, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 340);
  // WARNING: %20 = add i64 %19, 340, !dbg !4060, !verifier.code !4010
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3748, 19} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3748, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i16($M.0, $p20);
  // WARNING: %22 = load i16, i16* %21, align 2, !dbg !4064, !verifier.code !4010
  call {:cexpr "__cil_tmp18"} boogie_si_record_i16($i21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3749, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i16.i32($i21);
  // WARNING: %23 = zext i16 %22 to i32, !dbg !4067, !verifier.code !4010
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3750, 3} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p0, $i22, 12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3752, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_enable_ms: ref;
axiom (altera_uart_enable_ms == $sub.ref(0, 43228));
procedure  altera_uart_enable_ms($p0: ref)
{
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3848, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_break_ctl: ref;
axiom (altera_uart_break_ctl == $sub.ref(0, 44260));
procedure  altera_uart_break_ctl($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i64;
  var $i12: i1;
  var $i13: i64;
  var $i14: i64;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i16;
  var $i19: i32;
  var $i20: i32;
  var $i21: i16;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i16;
  var $i29: i32;
  var $i30: i32;
  var $i31: i16;
  var $p32: ref;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i16;
  var $i37: i32;
  var $p38: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !4801, metadata !4012), !dbg !4802, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3789, 17} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3790, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i32($p2);
  // WARNING: %4 = ptrtoint %struct.uart_port* %3 to i32, !dbg !4021, !verifier.code !4010
  call {:cexpr "__cil_tmp11"} boogie_si_record_i32($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3791, 17} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3792, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3792, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i64(0, $i5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3792, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, $mul.ref($i6, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3793, 8} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3795, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3795, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3798, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3798, 15} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3801, 21} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3802, 17} true;
  assume {:verifier.code 0} true;
  call $p10 := spinlock_check($p9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3803, 15} true;
  assume {:verifier.code 0} true;
  call $i11 := _raw_spin_lock_irqsave($p10);
  // WARNING: %16 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %15), !dbg !4051, !verifier.code !4010
  call {:cexpr "flags"} boogie_si_record_i64($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3805, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3809, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3813, 19} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i1, $sub.i32(0, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3813, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i12 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3814, 19} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p8);
  // WARNING: %21 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4059, !verifier.code !4010
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3815, 31} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 340);
  // WARNING: %22 = add i64 %21, 340, !dbg !4063, !verifier.code !4010
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3816, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p8);
  // WARNING: %23 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4066, !verifier.code !4010
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3817, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 340);
  // WARNING: %24 = add i64 %23, 340, !dbg !4069, !verifier.code !4010
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3818, 21} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3818, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i16($M.0, $p17);
  // WARNING: %26 = load i16, i16* %25, align 2, !dbg !4073, !verifier.code !4010
  call {:cexpr "__cil_tmp19"} boogie_si_record_i16($i18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3819, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i16.i32($i18);
  // WARNING: %27 = zext i16 %26 to i32, !dbg !4076, !verifier.code !4010
  call {:cexpr "__cil_tmp20"} boogie_si_record_i32($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3820, 31} true;
  assume {:verifier.code 0} true;
  $i20 := $or.i32($i19, 512);
  // WARNING: %28 = or i32 %27, 512, !dbg !4079, !verifier.code !4010
  call {:cexpr "__cil_tmp21"} boogie_si_record_i32($i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3821, 40} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i16($i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3821, 7} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3821, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p22, $i21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3822, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i12 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3823, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $p2i.ref.i64($p8);
  // WARNING: %32 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4086, !verifier.code !4010
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i23);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3824, 31} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23, 340);
  // WARNING: %33 = add i64 %32, 340, !dbg !4090, !verifier.code !4010
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i24);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3825, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p8);
  // WARNING: %34 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4093, !verifier.code !4010
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i25);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3826, 31} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i64($i25, 340);
  // WARNING: %35 = add i64 %34, 340, !dbg !4096, !verifier.code !4010
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i26);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3827, 21} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i26);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3827, 19} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i16($M.0, $p27);
  // WARNING: %37 = load i16, i16* %36, align 2, !dbg !4100, !verifier.code !4010
  call {:cexpr "__cil_tmp26"} boogie_si_record_i16($i28);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3828, 19} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i16.i32($i28);
  // WARNING: %38 = zext i16 %37 to i32, !dbg !4103, !verifier.code !4010
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i29);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3829, 31} true;
  assume {:verifier.code 0} true;
  $i30 := $and.i32($i29, $sub.i32(0, 513));
  // WARNING: %39 = and i32 %38, -513, !dbg !4106, !verifier.code !4010
  call {:cexpr "__cil_tmp28"} boogie_si_record_i32($i30);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3830, 40} true;
  assume {:verifier.code 0} true;
  $i31 := $trunc.i32.i16($i30);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3830, 7} true;
  assume {:verifier.code 0} true;
  $p32 := $i2p.i64.ref($i24);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3830, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p32, $i31);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3833, 17} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p8);
  // WARNING: %43 = ptrtoint %struct.altera_uart* %9 to i64, !dbg !4112, !verifier.code !4010
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i33);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3834, 29} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i33, 340);
  // WARNING: %44 = add i64 %43, 340, !dbg !4116, !verifier.code !4010
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i34);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3835, 19} true;
  assume {:verifier.code 0} true;
  $p35 := $i2p.i64.ref($i34);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3835, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i16($M.0, $p35);
  // WARNING: %46 = load i16, i16* %45, align 2, !dbg !4120, !verifier.code !4010
  call {:cexpr "__cil_tmp31"} boogie_si_record_i16($i36);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3836, 17} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i16.i32($i36);
  // WARNING: %47 = zext i16 %46 to i32, !dbg !4123, !verifier.code !4010
  call {:cexpr "__cil_tmp32"} boogie_si_record_i32($i37);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3837, 3} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p0, $i37, 12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3838, 17} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3839, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p38, $i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3841, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_startup: ref;
axiom (altera_uart_startup == $sub.ref(0, 45292));
procedure  altera_uart_startup($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i32;
  var $i21: i64;
  var $i22: i64;
  var $p23: ref;
  var $i24: i64;
  var $i25: i64;
  var $i26: i64;
  var $i27: i64;
  var $i28: i64;
  var $i29: i32;
  var $i31: i64;
  var $i32: i64;
  var $p33: ref;
  var $i34: i32;
  var $p35: ref;
  var $i36: i32;
  var $i37: i1;
  var $i38: i64;
  var $i39: i64;
  var $p40: ref;
  var $i41: i32;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $i45: i32;
  var $i46: i32;
  var $p47: ref;
  var $p48: ref;
  var $i49: i64;
  var $i50: i64;
  var $i51: i64;
  var $p52: ref;
  var $i53: i64;
  var $i54: i64;
  var $p55: ref;
  var $i56: i16;
  var $i57: i32;
  var $i58: i64;
  var $i59: i64;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i30: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4539, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4540, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i32($p3);
  // WARNING: %5 = ptrtoint %struct.uart_port* %4 to i32, !dbg !4024, !verifier.code !4007
  call {:cexpr "__cil_tmp12"} boogie_si_record_i32($i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4541, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4542, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i32.i64($i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4542, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, $i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4542, 29} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p5, $mul.ref($i7, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4543, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4545, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p0);
  // WARNING: %11 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4036, !verifier.code !4007
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4546, 29} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i64($i10, 80);
  // WARNING: %12 = add i64 %11, 80, !dbg !4040, !verifier.code !4007
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4547, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $i2p.i64.ref($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4547, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  // WARNING: %14 = load i32, i32* %13, align 4, !dbg !4044, !verifier.code !4007
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4548, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4548, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:verifier.code 0} true;
  goto $bb4;
$bb2:
  assume !(($i14 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4550, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p9);
  // WARNING: %17 = ptrtoint %struct.altera_uart* %10 to i64, !dbg !4050, !verifier.code !4007
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4551, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 256);
  // WARNING: %18 = add i64 %17, 256, !dbg !4055, !verifier.code !4007
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4552, 19} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4556, 19} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4557, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p0);
  // WARNING: %21 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4070, !verifier.code !4007
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4558, 5} true;
  assume {:verifier.code 0} true;
  call setup_timer_key($p17, $0.ref, $p18, altera_uart_timer, $i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4559, 15} true;
  assume {:verifier.code 0} true;
  call $i20 := uart_poll_timeout($p0);
  // WARNING: %22 = call i32 @uart_poll_timeout(%struct.uart_port* %0), !dbg !4074, !verifier.code !4007
  call {:cexpr "tmp___7"} boogie_si_record_i32($i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4560, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p9);
  // WARNING: %23 = ptrtoint %struct.altera_uart* %10 to i64, !dbg !4077, !verifier.code !4007
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4561, 31} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i64($i21, 256);
  // WARNING: %24 = add i64 %23, 256, !dbg !4080, !verifier.code !4007
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4562, 19} true;
  assume {:verifier.code 0} true;
  $p23 := $i2p.i64.ref($i22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4563, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4563, 17} true;
  assume {:verifier.code 0} true;
  $M.1 := $store.i64($M.1, $p1, $i24);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4564, 19} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i64($M.0, jiffies);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4564, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i64($M.1, $p1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4564, 27} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i64($i25, $i26);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4564, 17} true;
  assume {:verifier.code 0} true;
  $M.2 := $store.i64($M.2, $p2, $i27);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4565, 35} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.2, $p2);
  // WARNING: %30 = load volatile i64, i64* %3, align 8, !dbg !4092, !verifier.code !4007
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i28);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4566, 5} true;
  assume {:verifier.code 0} true;
  call $i29 := mod_timer($p23, $i28);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4568, 5} true;
  assume {:verifier.code 0} true;
  $i30 := 0;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4634, 1} true;
  assume {:verifier.code 0} true;
  $r := $i30;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4574, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p0);
  // WARNING: %34 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4097, !verifier.code !4007
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i31);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4575, 29} true;
  assume {:verifier.code 0} true;
  $i32 := $add.i64($i31, 80);
  // WARNING: %35 = add i64 %34, 80, !dbg !4101, !verifier.code !4007
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i32);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4576, 19} true;
  assume {:verifier.code 0} true;
  $p33 := $i2p.i64.ref($i32);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4576, 17} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  // WARNING: %37 = load i32, i32* %36, align 4, !dbg !4105, !verifier.code !4007
  call {:cexpr "__cil_tmp34"} boogie_si_record_i32($i34);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4577, 17} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4578, 15} true;
  assume {:verifier.code 0} true;
  call $i36 := request_irq($i34, altera_uart_interrupt, 0, .str, $p35);
  // WARNING: %39 = call i32 @request_irq(i32 %37, i32 (i32, i8*)* @altera_uart_interrupt, i64 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* %38), !dbg !4111, !verifier.code !4007
  call {:cexpr "ret"} boogie_si_record_i32($i36);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4581, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4581, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i37 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4583, 19} true;
  assume {:verifier.code 0} true;
  $i38 := $p2i.ref.i64($p0);
  // WARNING: %42 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4117, !verifier.code !4007
  call {:cexpr "__cil_tmp36"} boogie_si_record_i64($i38);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4584, 31} true;
  assume {:verifier.code 0} true;
  $i39 := $add.i64($i38, 220);
  // WARNING: %43 = add i64 %42, 220, !dbg !4122, !verifier.code !4007
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i39);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4585, 21} true;
  assume {:verifier.code 0} true;
  $p40 := $i2p.i64.ref($i39);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4585, 19} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  // WARNING: %45 = load i32, i32* %44, align 4, !dbg !4126, !verifier.code !4007
  call {:cexpr "__cil_tmp38"} boogie_si_record_i32($i41);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4586, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p0);
  // WARNING: %46 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4129, !verifier.code !4007
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i42);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4587, 31} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i64($i42, 80);
  // WARNING: %47 = add i64 %46, 80, !dbg !4132, !verifier.code !4007
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i43);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4588, 21} true;
  assume {:verifier.code 0} true;
  $p44 := $i2p.i64.ref($i43);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4588, 19} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  // WARNING: %49 = load i32, i32* %48, align 4, !dbg !4136, !verifier.code !4007
  call {:cexpr "__cil_tmp41"} boogie_si_record_i32($i45);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4589, 5} true;
  assume {:verifier.code 0} true;
  call $i46 := printk.ref.i32.i32(.str.2, $i41, $i45);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4592, 5} true;
  assume {:verifier.code 0} true;
  $i30 := $i36;
  goto $bb3;
$bb6:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4597, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4597, 13} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4600, 5} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4600, 15} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4603, 21} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4604, 17} true;
  assume {:verifier.code 0} true;
  call $p48 := spinlock_check($p47);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4605, 15} true;
  assume {:verifier.code 0} true;
  call $i49 := _raw_spin_lock_irqsave($p48);
  // WARNING: %59 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %58), !dbg !4159, !verifier.code !4007
  call {:cexpr "flags"} boogie_si_record_i64($i49);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4607, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4611, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4616, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $p2i.ref.i64($p9);
  // WARNING: %62 = ptrtoint %struct.altera_uart* %10 to i64, !dbg !4164, !verifier.code !4007
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i50);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4617, 29} true;
  assume {:verifier.code 0} true;
  $i51 := $add.i64($i50, 340);
  // WARNING: %63 = add i64 %62, 340, !dbg !4168, !verifier.code !4007
  call {:cexpr "__cil_tmp44"} boogie_si_record_i64($i51);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4618, 5} true;
  assume {:verifier.code 0} true;
  $p52 := $i2p.i64.ref($i51);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4618, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p52, 128);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4619, 17} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p9);
  // WARNING: %65 = ptrtoint %struct.altera_uart* %10 to i64, !dbg !4173, !verifier.code !4007
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i53);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4620, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $add.i64($i53, 340);
  // WARNING: %66 = add i64 %65, 340, !dbg !4176, !verifier.code !4007
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i54);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4621, 19} true;
  assume {:verifier.code 0} true;
  $p55 := $i2p.i64.ref($i54);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4621, 17} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i16($M.0, $p55);
  // WARNING: %68 = load i16, i16* %67, align 2, !dbg !4180, !verifier.code !4007
  call {:cexpr "__cil_tmp47"} boogie_si_record_i16($i56);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4622, 17} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i16.i32($i56);
  // WARNING: %69 = zext i16 %68 to i32, !dbg !4183, !verifier.code !4007
  call {:cexpr "__cil_tmp48"} boogie_si_record_i32($i57);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4623, 17} true;
  assume {:verifier.code 0} true;
  $i58 := $p2i.ref.i64($p0);
  // WARNING: %70 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4186, !verifier.code !4007
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i58);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4624, 29} true;
  assume {:verifier.code 0} true;
  $i59 := $add.i64($i58, 32);
  // WARNING: %71 = add i64 %70, 32, !dbg !4189, !verifier.code !4007
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i59);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4625, 19} true;
  assume {:verifier.code 0} true;
  $p60 := $i2p.i64.ref($i59);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4625, 17} true;
  assume {:verifier.code 0} true;
  $p61 := $load.ref($M.0, $p60);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4626, 29} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p61, 12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4628, 3} true;
  assume {:verifier.code 0} true;
  call writel($i57, $p62);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4629, 17} true;
  assume {:verifier.code 0} true;
  $p63 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4630, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p63, $i49);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4632, 3} true;
  assume {:verifier.code 0} true;
  $i30 := 0;
  goto $bb3;
}
const altera_uart_shutdown: ref;
axiom (altera_uart_shutdown == $sub.ref(0, 46324));
procedure  altera_uart_shutdown($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i16;
  var $i18: i32;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $i26: i64;
  var $p27: ref;
  var $i28: i32;
  var $i29: i1;
  var $i30: i64;
  var $i31: i64;
  var $p32: ref;
  var $i33: i32;
  var $p34: ref;
  var $i35: i64;
  var $i36: i64;
  var $p37: ref;
  var $i38: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4671, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4672, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i32($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i32, !dbg !4019, !verifier.code !4010
  call {:cexpr "__cil_tmp10"} boogie_si_record_i32($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4673, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4674, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4674, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, $i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4674, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, $mul.ref($i5, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4675, 8} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4677, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4677, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4680, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4680, 15} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4683, 21} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4684, 17} true;
  assume {:verifier.code 0} true;
  call $p9 := spinlock_check($p8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4685, 15} true;
  assume {:verifier.code 0} true;
  call $i10 := _raw_spin_lock_irqsave($p9);
  // WARNING: %15 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %14), !dbg !4049, !verifier.code !4010
  call {:cexpr "flags"} boogie_si_record_i64($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4687, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4691, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4696, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p7);
  // WARNING: %18 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4054, !verifier.code !4010
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4697, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 340);
  // WARNING: %19 = add i64 %18, 340, !dbg !4058, !verifier.code !4010
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4698, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4698, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p13, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4699, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p7);
  // WARNING: %21 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4063, !verifier.code !4010
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4700, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, 340);
  // WARNING: %22 = add i64 %21, 340, !dbg !4066, !verifier.code !4010
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4701, 19} true;
  assume {:verifier.code 0} true;
  $p16 := $i2p.i64.ref($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4701, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i16($M.0, $p16);
  // WARNING: %24 = load i16, i16* %23, align 2, !dbg !4070, !verifier.code !4010
  call {:cexpr "__cil_tmp18"} boogie_si_record_i16($i17);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4702, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i16.i32($i17);
  // WARNING: %25 = zext i16 %24 to i32, !dbg !4073, !verifier.code !4010
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4703, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p0);
  // WARNING: %26 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4076, !verifier.code !4010
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4704, 29} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 32);
  // WARNING: %27 = add i64 %26, 32, !dbg !4079, !verifier.code !4010
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4705, 19} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4705, 17} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4706, 29} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, 12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4708, 3} true;
  assume {:verifier.code 0} true;
  call writel($i18, $p23);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4709, 17} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4710, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p24, $i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4713, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $p2i.ref.i64($p0);
  // WARNING: %32 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4096, !verifier.code !4010
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i25);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4714, 29} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i64($i25, 80);
  // WARNING: %33 = add i64 %32, 80, !dbg !4100, !verifier.code !4010
  call {:cexpr "__cil_tmp27"} boogie_si_record_i64($i26);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4715, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $i2p.i64.ref($i26);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4715, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.0, $p27);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4715, 7} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4715, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i29 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4717, 19} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p0);
  // WARNING: %38 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4107, !verifier.code !4010
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i30);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4718, 31} true;
  assume {:verifier.code 0} true;
  $i31 := $add.i64($i30, 80);
  // WARNING: %39 = add i64 %38, 80, !dbg !4112, !verifier.code !4010
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i31);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4719, 21} true;
  assume {:verifier.code 0} true;
  $p32 := $i2p.i64.ref($i31);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4719, 19} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  // WARNING: %41 = load i32, i32* %40, align 4, !dbg !4116, !verifier.code !4010
  call {:cexpr "__cil_tmp30"} boogie_si_record_i32($i33);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4720, 19} true;
  assume {:verifier.code 0} true;
  $p34 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4721, 5} true;
  assume {:verifier.code 0} true;
  call free_irq($i33, $p34);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4723, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i29 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4725, 19} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p7);
  // WARNING: %44 = ptrtoint %struct.altera_uart* %8 to i64, !dbg !4124, !verifier.code !4010
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i35);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4726, 31} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, 256);
  // WARNING: %45 = add i64 %44, 256, !dbg !4129, !verifier.code !4010
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i36);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4727, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $i2p.i64.ref($i36);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4728, 5} true;
  assume {:verifier.code 0} true;
  call $i38 := del_timer_sync($p37);
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4732, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_set_termios: ref;
axiom (altera_uart_set_termios == $sub.ref(0, 47356));
procedure  altera_uart_set_termios($p0: ref, $p1: ref, $p2: ref)
{
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i32;
  var $p17: ref;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3868, 10} true;
  assume {:verifier.code 0} true;
  call $i3 := uart_get_baud_rate($p0, $p1, $p2, 0, 4000000);
  // WARNING: %4 = call i32 @uart_get_baud_rate(%struct.uart_port* %0, %struct.ktermios* %1, %struct.ktermios* %2, i32 0, i32 4000000), !dbg !4015, !verifier.code !4010
  call {:cexpr "baud"} boogie_si_record_i32($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3869, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p0);
  // WARNING: %5 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4020, !verifier.code !4010
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3870, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, 96);
  // WARNING: %6 = add i64 %5, 96, !dbg !4023, !verifier.code !4010
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3871, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3871, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i32($M.0, $p6);
  // WARNING: %8 = load i32, i32* %7, align 4, !dbg !4027, !verifier.code !4010
  call {:cexpr "__cil_tmp12"} boogie_si_record_i32($i7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3872, 25} true;
  assume {:verifier.code 0} true;
  $i8 := $udiv.i32($i7, $i3);
  // WARNING: %9 = udiv i32 %8, %4, !dbg !4030, !verifier.code !4010
  call {:cexpr "baudclk"} boogie_si_record_i32($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3874, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.ref($p2, $0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3874, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3876, 5} true;
  assume {:verifier.code 0} true;
  call tty_termios_copy_hw($p1, $p2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3878, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3882, 3} true;
  assume {:verifier.code 0} true;
  call tty_termios_encode_baud_rate($p1, $i3, $i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3885, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3885, 13} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3888, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3888, 15} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3891, 21} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3892, 17} true;
  assume {:verifier.code 0} true;
  call $p11 := spinlock_check($p10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3893, 15} true;
  assume {:verifier.code 0} true;
  call $i12 := _raw_spin_lock_irqsave($p11);
  // WARNING: %20 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %19), !dbg !4060, !verifier.code !4010
  call {:cexpr "flags"} boogie_si_record_i64($i12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3895, 7} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3899, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3904, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p1);
  // WARNING: %23 = ptrtoint %struct.ktermios* %1 to i64, !dbg !4065, !verifier.code !4010
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3905, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i64($i13, 8);
  // WARNING: %24 = add i64 %23, 8, !dbg !4069, !verifier.code !4010
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3906, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $i2p.i64.ref($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3906, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  // WARNING: %26 = load i32, i32* %25, align 4, !dbg !4073, !verifier.code !4010
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3907, 3} true;
  assume {:verifier.code 0} true;
  call uart_update_timeout($p0, $i16, $i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3908, 3} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p0, $i8, 16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3909, 17} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3910, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock_irqrestore($p17, $i12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3912, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_type: ref;
axiom (altera_uart_type == $sub.ref(0, 48388));
procedure  altera_uart_type($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4744, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4011, !verifier.code !4010
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4745, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 204);
  // WARNING: %3 = add i64 %2, 204, !dbg !4016, !verifier.code !4010
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4746, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4746, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  // WARNING: %5 = load i32, i32* %4, align 4, !dbg !4020, !verifier.code !4010
  call {:cexpr "__cil_tmp5"} boogie_si_record_i32($i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4747, 18} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 92);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4747, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4749, 3} true;
  assume {:verifier.code 0} true;
  $p6 := .str.3;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $p6 := $0.ref;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4754, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const altera_uart_release_port: ref;
axiom (altera_uart_release_port == $sub.ref(0, 49420));
procedure  altera_uart_release_port($p0: ref)
{
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4768, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_request_port: ref;
axiom (altera_uart_request_port == $sub.ref(0, 50452));
procedure  altera_uart_request_port($p0: ref)
  returns ($r: i32)
{
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4761, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const altera_uart_config_port: ref;
axiom (altera_uart_config_port == $sub.ref(0, 51484));
procedure  altera_uart_config_port($p0: ref, $i1: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !5361, metadata !4012), !dbg !5362, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4472, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4013, !verifier.code !4010
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4473, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 204);
  // WARNING: %4 = add i64 %3, 204, !dbg !4018, !verifier.code !4010
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4474, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4474, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 92);
  // WARNING: store i32 92, i32* %5, align 4, !dbg !4022, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4476, 3} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p0, 0, 12);
  // WARNING: call void @altera_uart_writel(%struct.uart_port* %0, i32 0, i32 12), !dbg !4025, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4478, 3} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p0, 0, 8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4480, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_verify_port: ref;
axiom (altera_uart_verify_port == $sub.ref(0, 52516));
procedure  altera_uart_verify_port($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $p5: ref;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4777, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4777, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.3, $p2);
  // WARNING: %4 = load i32, i32* %3, align 4, !dbg !4013, !verifier.code !4010
  call {:cexpr "__cil_tmp3"} boogie_si_record_i32($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4778, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4778, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4780, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4780, 18} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.3, $p5);
  // WARNING: %8 = load i32, i32* %7, align 4, !dbg !4021, !verifier.code !4010
  call {:cexpr "__cil_tmp4"} boogie_si_record_i32($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4781, 20} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 92);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4781, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i7 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4782, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 22);
  goto $bb5;
$bb4:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4793, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4787, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4791, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb5;
}
const altera_uart_poll_put_char: ref;
axiom (altera_uart_poll_put_char == $sub.ref(0, 53548));
procedure  altera_uart_poll_put_char($p0: ref, $i1: i8)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !5409, metadata !4012), !dbg !5410, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4828, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4828, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4831, 15} true;
  assume {:verifier.code 0} true;
  call $i2 := altera_uart_readl($p0, 8);
  // WARNING: %5 = call i32 @altera_uart_readl(%struct.uart_port* %0, i32 8), !dbg !4018, !verifier.code !4010
  call {:cexpr "tmp___7"} boogie_si_record_i32($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4833, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i2, 64);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4833, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4833, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i4 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4834, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4845, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i8.i32($i1);
  // WARNING: %12 = zext i8 %1 to i32, !dbg !4033, !verifier.code !4010
  call {:cexpr "__cil_tmp4"} boogie_si_record_i32($i5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4846, 3} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p0, $i5, 4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4848, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4839, 5} true;
  assume {:verifier.code 0} true;
  call cpu_relax();
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4828, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
}
const altera_uart_poll_get_char: ref;
axiom (altera_uart_poll_get_char == $sub.ref(0, 54580));
procedure  altera_uart_poll_get_char($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4800, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4800, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4803, 15} true;
  assume {:verifier.code 0} true;
  call $i1 := altera_uart_readl($p0, 8);
  // WARNING: %4 = call i32 @altera_uart_readl(%struct.uart_port* %0, i32 8), !dbg !4016, !verifier.code !4010
  call {:cexpr "tmp___7"} boogie_si_record_i32($i1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4805, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $and.i32($i1, 128);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4805, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4805, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i3 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4806, 7} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4817, 13} true;
  assume {:verifier.code 0} true;
  call $i4 := altera_uart_readl($p0, 0);
  // WARNING: %11 = call i32 @altera_uart_readl(%struct.uart_port* %0, i32 0), !dbg !4031, !verifier.code !4010
  call {:cexpr "tmp___8"} boogie_si_record_i32($i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4819, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb6:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4811, 5} true;
  assume {:verifier.code 0} true;
  call cpu_relax();
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4800, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
}
const altera_uart_readl: ref;
axiom (altera_uart_readl == $sub.ref(0, 55612));
procedure  altera_uart_readl($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $i12: i64;
  var $p13: ref;
  var $i14: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !5470, metadata !4012), !dbg !5471, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3449, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p0);
  // WARNING: %3 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4015, !verifier.code !4012
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3450, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 105);
  // WARNING: %4 = add i64 %3, 105, !dbg !4020, !verifier.code !4012
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3451, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3451, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.0, $p4);
  // WARNING: %6 = load i8, i8* %5, align 1, !dbg !4024, !verifier.code !4012
  call {:cexpr "__cil_tmp6"} boogie_si_record_i8($i5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3452, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  // WARNING: %7 = zext i8 %6 to i32, !dbg !4027, !verifier.code !4012
  call {:cexpr "__cil_tmp7"} boogie_si_record_i32($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3453, 20} true;
  assume {:verifier.code 0} true;
  $i7 := $shl.i32($i1, $i6);
  // WARNING: %8 = shl i32 %1, %7, !dbg !4030, !verifier.code !4012
  call {:cexpr "__cil_tmp8"} boogie_si_record_i32($i7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3454, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p0);
  // WARNING: %9 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4033, !verifier.code !4012
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3455, 28} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 32);
  // WARNING: %10 = add i64 %9, 32, !dbg !4036, !verifier.code !4012
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3456, 19} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3456, 17} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3457, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3457, 29} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p11, $mul.ref($i12, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3459, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := readl($p13);
  // WARNING: %15 = call i32 @readl(i8* %14), !dbg !4048, !verifier.code !4012
  call {:cexpr "tmp___7"} boogie_si_record_i32($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3461, 3} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
}
const cpu_relax: ref;
axiom (cpu_relax == $sub.ref(0, 56644));
procedure  cpu_relax()
{
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3188, 3} true;
  assume {:verifier.code 0} true;
  call rep_nop();
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3190, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const rep_nop: ref;
axiom (rep_nop == $sub.ref(0, 57676));
procedure  rep_nop()
{
$bb0:
  call devirtbounce(0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3179, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const readl: ref;
axiom (readl == $sub.ref(0, 58708));
procedure  readl($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3288, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  call $i2 := devirtbounce.1(0, $p1);
  // WARNING: %3 = call i32 @devirtbounce.1(i32 (i32*)* asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}", i32* %2)
  call {:cexpr "ret"} boogie_si_record_i32($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3292, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const altera_uart_writel: ref;
axiom (altera_uart_writel == $sub.ref(0, 59740));
procedure  altera_uart_writel($p0: ref, $i1: i32, $i2: i32)
{
  var $i3: i64;
  var $i4: i64;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i32;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $p14: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_port* %0, i64 0, metadata !5534, metadata !4012), !dbg !5535, !verifier.code !4010
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !5536, metadata !4012), !dbg !5537, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3478, 16} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p0);
  // WARNING: %4 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4017, !verifier.code !4012
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3479, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i64($i3, 105);
  // WARNING: %5 = add i64 %4, 105, !dbg !4022, !verifier.code !4012
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3480, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $i2p.i64.ref($i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3480, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  // WARNING: %7 = load i8, i8* %6, align 1, !dbg !4026, !verifier.code !4012
  call {:cexpr "__cil_tmp6"} boogie_si_record_i8($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3481, 16} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  // WARNING: %8 = zext i8 %7 to i32, !dbg !4029, !verifier.code !4012
  call {:cexpr "__cil_tmp7"} boogie_si_record_i32($i7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3482, 20} true;
  assume {:verifier.code 0} true;
  $i8 := $shl.i32($i2, $i7);
  // WARNING: %9 = shl i32 %2, %8, !dbg !4032, !verifier.code !4012
  call {:cexpr "__cil_tmp8"} boogie_si_record_i32($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3483, 16} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p0);
  // WARNING: %10 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4035, !verifier.code !4012
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3484, 28} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 32);
  // WARNING: %11 = add i64 %10, 32, !dbg !4038, !verifier.code !4012
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3485, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3485, 17} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3486, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3486, 29} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p12, $mul.ref($i13, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3488, 3} true;
  assume {:verifier.code 0} true;
  call writel($i1, $p14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3490, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const writel: ref;
axiom (writel == $sub.ref(0, 60772));
procedure  writel($i0: i32, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3300, 16} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  call devirtbounce.2(0, $i0, $p2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3304, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const uart_get_baud_rate: ref;
axiom (uart_get_baud_rate == $sub.ref(0, 61804));
procedure  uart_get_baud_rate($p0: ref, $p1: ref, $p2: ref, $i3: i32, $i4: i32)
  returns ($r: i32);
const tty_termios_copy_hw: ref;
axiom (tty_termios_copy_hw == $sub.ref(0, 62836));
procedure  tty_termios_copy_hw($p0: ref, $p1: ref);
const tty_termios_encode_baud_rate: ref;
axiom (tty_termios_encode_baud_rate == $sub.ref(0, 63868));
procedure  tty_termios_encode_baud_rate($p0: ref, $i1: i32, $i2: i32);
const spinlock_check: ref;
axiom (spinlock_check == $sub.ref(0, 64900));
procedure  spinlock_check($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3202, 11} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3202, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const _raw_spin_lock_irqsave: ref;
axiom (_raw_spin_lock_irqsave == $sub.ref(0, 65932));
procedure  _raw_spin_lock_irqsave($p0: ref)
  returns ($r: i64);
const uart_update_timeout: ref;
axiom (uart_update_timeout == $sub.ref(0, 66964));
procedure  uart_update_timeout($p0: ref, $i1: i32, $i2: i32);
const spin_unlock_irqrestore: ref;
axiom (spin_unlock_irqrestore == $sub.ref(0, 67996));
procedure  spin_unlock_irqrestore($p0: ref, $i1: i64)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.spinlock* %0, i64 0, metadata !5598, metadata !4012), !dbg !5599, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3235, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3235, 13} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3238, 18} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3239, 5} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock_irqrestore($p2, $i1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3241, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3245, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock_irqrestore: ref;
axiom (_raw_spin_unlock_irqrestore == $sub.ref(0, 69028));
procedure  _raw_spin_unlock_irqrestore($p0: ref, $i1: i64);
const free_irq: ref;
axiom (free_irq == $sub.ref(0, 70060));
procedure  free_irq($i0: i32, $p1: ref);
const del_timer_sync: ref;
axiom (del_timer_sync == $sub.ref(0, 71092));
procedure  del_timer_sync($p0: ref)
  returns ($r: i32);
const altera_uart_timer: ref;
axiom (altera_uart_timer == $sub.ref(0, 72124));
procedure  altera_uart_timer($i0: i64)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $p17: ref;
  var $i18: i64;
  var $i19: i64;
  var $i20: i64;
  var $i21: i64;
  var $i22: i64;
  var $i23: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: %3 = alloca i64, align 8, !verifier.code !4007
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4441, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4442, 10} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4445, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4446, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i32($p5);
  // WARNING: %7 = ptrtoint %struct.uart_port* %6 to i32, !dbg !4031, !verifier.code !4007
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4447, 17} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4448, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i32.i64($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4448, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i64(0, $i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4448, 29} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p7, $mul.ref($i9, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4449, 8} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4450, 17} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4451, 3} true;
  assume {:verifier.code 0} true;
  call $i13 := altera_uart_interrupt(0, $p12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4452, 13} true;
  assume {:verifier.code 0} true;
  call $i14 := uart_poll_timeout($p4);
  // WARNING: %15 = call i32 @uart_poll_timeout(%struct.uart_port* %5), !dbg !4047, !verifier.code !4007
  call {:cexpr "tmp___7"} boogie_si_record_i32($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4453, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $p2i.ref.i64($p11);
  // WARNING: %16 = ptrtoint %struct.altera_uart* %12 to i64, !dbg !4050, !verifier.code !4007
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4454, 29} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i64($i15, 256);
  // WARNING: %17 = add i64 %16, 256, !dbg !4053, !verifier.code !4007
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4455, 17} true;
  assume {:verifier.code 0} true;
  $p17 := $i2p.i64.ref($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4456, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4456, 15} true;
  assume {:verifier.code 0} true;
  $M.4 := $store.i64($M.4, $p1, $i18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4457, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i64($M.0, jiffies);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4457, 27} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i64($M.4, $p1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4457, 25} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i64($i19, $i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4457, 15} true;
  assume {:verifier.code 0} true;
  $M.5 := $store.i64($M.5, $p2, $i21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4458, 33} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.5, $p2);
  // WARNING: %23 = load volatile i64, i64* %3, align 8, !dbg !4065, !verifier.code !4007
  call {:cexpr "__cil_tmp18"} boogie_si_record_i64($i22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4459, 3} true;
  assume {:verifier.code 0} true;
  call $i23 := mod_timer($p17, $i22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4461, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const setup_timer_key: ref;
axiom (setup_timer_key == $sub.ref(0, 73156));
procedure  setup_timer_key($p0: ref, $p1: ref, $p2: ref, $p3: ref, $i4: i64)
{
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i64;
  var $i9: i64;
  var $p10: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata void (i64)* %3, i64 0, metadata !5685, metadata !4012), !dbg !5686, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3263, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  // WARNING: %6 = ptrtoint %struct.timer_list* %0 to i64, !dbg !4021, !verifier.code !4012
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3264, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 32);
  // WARNING: %7 = add i64 %6, 32, !dbg !4026, !verifier.code !4012
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3265, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3265, 45} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p7, $p3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3266, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p0);
  // WARNING: %9 = ptrtoint %struct.timer_list* %0 to i64, !dbg !4031, !verifier.code !4012
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3267, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $add.i64($i8, 40);
  // WARNING: %10 = add i64 %9, 40, !dbg !4034, !verifier.code !4012
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3268, 5} true;
  assume {:verifier.code 0} true;
  $p10 := $i2p.i64.ref($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3268, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p10, $i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3269, 3} true;
  assume {:verifier.code 0} true;
  call init_timer_key($p0, $p1, $p2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3271, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const uart_poll_timeout: ref;
axiom (uart_poll_timeout == $sub.ref(0, 74188));
procedure  uart_poll_timeout($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i32;
  var $i8: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3377, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4011, !verifier.code !4010
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3378, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 200);
  // WARNING: %3 = add i64 %2, 200, !dbg !4015, !verifier.code !4010
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3379, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3379, 16} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  // WARNING: %5 = load i32, i32* %4, align 4, !dbg !4019, !verifier.code !4010
  call {:cexpr "__cil_tmp6"} boogie_si_record_i32($i4);
  // WARNING: call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !5721, metadata !4012), !dbg !5722, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3381, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $sgt.i32($i4, 6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3381, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3382, 26} true;
  assume {:verifier.code 0} true;
  $i6 := $sdiv.i32($i4, 2);
  // WARNING: %8 = sdiv i32 %5, 2, !dbg !4027, !verifier.code !4010
  call {:cexpr "__cil_tmp7"} boogie_si_record_i32($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3383, 26} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i32($i6, 2);
  // WARNING: %9 = sub nsw i32 %8, 2, !dbg !4031, !verifier.code !4010
  call {:cexpr "tmp___7"} boogie_si_record_i32($i7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3384, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i7;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  $i8 := 1;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3387, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const mod_timer: ref;
axiom (mod_timer == $sub.ref(0, 75220));
procedure  mod_timer($p0: ref, $i1: i64)
  returns ($r: i32);
const altera_uart_interrupt: ref;
axiom (altera_uart_interrupt == $sub.ref(0, 76252));
procedure  altera_uart_interrupt($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $p13: ref;
  var $i14: i16;
  var $i15: i32;
  var $i16: i32;
  var $p17: ref;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $i23: i1;
  var $i24: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4379, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4382, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4383, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i32($p3);
  // WARNING: %5 = ptrtoint %struct.uart_port* %4 to i32, !dbg !4025, !verifier.code !4010
  call {:cexpr "__cil_tmp10"} boogie_si_record_i32($i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4384, 17} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4385, 29} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i32.i64($i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4385, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, $i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4385, 29} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p5, $mul.ref($i7, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4386, 8} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4387, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := altera_uart_readl($p2, 8);
  // WARNING: %11 = call i32 @altera_uart_readl(%struct.uart_port* %3, i32 8), !dbg !4037, !verifier.code !4010
  call {:cexpr "tmp___7"} boogie_si_record_i32($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4388, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p9);
  // WARNING: %12 = ptrtoint %struct.altera_uart* %10 to i64, !dbg !4040, !verifier.code !4010
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4389, 29} true;
  assume {:verifier.code 0} true;
  $i12 := $add.i64($i11, 340);
  // WARNING: %13 = add i64 %12, 340, !dbg !4043, !verifier.code !4010
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4390, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $i2p.i64.ref($i12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4390, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i16($M.0, $p13);
  // WARNING: %15 = load i16, i16* %14, align 2, !dbg !4047, !verifier.code !4010
  call {:cexpr "__cil_tmp15"} boogie_si_record_i16($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4391, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i16.i32($i14);
  // WARNING: %16 = zext i16 %15 to i32, !dbg !4050, !verifier.code !4010
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4392, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $and.i32($i10, $i15);
  // WARNING: %17 = and i32 %11, %16, !dbg !4053, !verifier.code !4010
  call {:cexpr "isr"} boogie_si_record_i32($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4393, 17} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4394, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock($p17);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4396, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $and.i32($i16, 128);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4396, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4396, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i19 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4398, 5} true;
  assume {:verifier.code 0} true;
  call altera_uart_rx_chars($p9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4400, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4403, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i32($i16, 64);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4403, 11} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4403, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i21 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4405, 5} true;
  assume {:verifier.code 0} true;
  call altera_uart_tx_chars($p9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4407, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4411, 17} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4412, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock($p22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4415, 21} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i16, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4415, 21} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i1.i32($i23);
  // WARNING: %31 = zext i1 %30 to i32, !dbg !4079, !verifier.code !4010
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i24);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4416, 3} true;
  assume {:verifier.code 0} true;
  $r := $i24;
  $exn := false;
  return;
}
const request_irq: ref;
axiom (request_irq == $sub.ref(0, 77284));
procedure  request_irq($i0: i32, $p1: ref, $i2: i64, $p3: ref, $p4: ref)
  returns ($r: i32)
{
  var $p5: ref;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 (i32, i8*)* %1, i64 0, metadata !5818, metadata !4012), !dbg !5819, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3346, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($0.ref);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3347, 15} true;
  assume {:verifier.code 0} true;
  call $i6 := request_threaded_irq($i0, $p1, $p5, $i2, $p3, $p4);
  // WARNING: %7 = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* %6, i64 %2, i8* %3, i8* %4), !dbg !4028, !verifier.code !4012
  call {:cexpr "tmp"} boogie_si_record_i32($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3349, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const printk: ref;
axiom (printk == $sub.ref(0, 78316));
procedure  printk.ref.i32.i32($p0: ref, p.1: i32, p.2: i32)
  returns ($r: i32);
const request_threaded_irq: ref;
axiom (request_threaded_irq == $sub.ref(0, 79348));
procedure  request_threaded_irq($i0: i32, $p1: ref, $p2: ref, $i3: i64, $p4: ref, $p5: ref)
  returns ($r: i32);
const spin_lock: ref;
axiom (spin_lock == $sub.ref(0, 80380));
procedure  spin_lock($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3211, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3212, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock($p1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3214, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const altera_uart_rx_chars: ref;
axiom (altera_uart_rx_chars == $sub.ref(0, 81412));
procedure  altera_uart_rx_chars($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i16;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i7: i16;
  var $i9: i32;
  var $i10: i16;
  var $i11: i32;
  var $i12: i32;
  var $i13: i1;
  var $i8: i16;
  var $i14: i32;
  var $i15: i8;
  var $i16: i64;
  var $i17: i64;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $p23: ref;
  var $i24: i32;
  var $i25: i32;
  var $i26: i1;
  var $i29: i32;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $i35: i64;
  var $i36: i64;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $i40: i32;
  var $i41: i32;
  var $p42: ref;
  var $i43: i32;
  var $i44: i1;
  var $i45: i16;
  var $i46: i8;
  var $i33: i16;
  var $i34: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $i52: i64;
  var $i53: i64;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $i57: i32;
  var $i58: i32;
  var $p59: ref;
  var $i60: i32;
  var $i61: i32;
  var $i62: i1;
  var $i63: i64;
  var $i64: i64;
  var $i65: i64;
  var $i66: i64;
  var $p67: ref;
  var $i68: i32;
  var $i69: i32;
  var $p70: ref;
  var $i71: i32;
  var $i72: i32;
  var $i73: i1;
  var $i74: i64;
  var $i75: i64;
  var $i76: i64;
  var $i77: i64;
  var $p78: ref;
  var $i79: i32;
  var $i80: i32;
  var $p81: ref;
  var $i47: i16;
  var $i48: i8;
  var $i82: i64;
  var $i83: i64;
  var $p84: ref;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i16;
  var $i89: i32;
  var $i90: i32;
  var $i91: i1;
  var $i93: i32;
  var $i94: i32;
  var $i95: i1;
  var $i97: i32;
  var $i98: i32;
  var $i99: i1;
  var $i100: i8;
  var $i96: i8;
  var $i92: i8;
  var $i27: i16;
  var $i28: i8;
  var $i101: i8;
  var $i102: i8;
  var $i103: i16;
  var $i104: i32;
  var $i105: i32;
  var $i106: i32;
  var $i107: i32;
  var $i108: i16;
  var $i109: i32;
  var $i110: i32;
  var $i111: i1;
  var $i112: i64;
  var $i113: i64;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3982, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3987, 15} true;
  assume {:verifier.code 0} true;
  call $i2 := altera_uart_readl($p1, 8);
  // WARNING: %3 = call i32 @altera_uart_readl(%struct.uart_port* %2, i32 8), !dbg !4017, !verifier.code !4012
  call {:cexpr "tmp___9"} boogie_si_record_i32($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3988, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i32.i16($i2);
  // WARNING: %4 = trunc i32 %3 to i16, !dbg !4023, !verifier.code !4012
  call {:cexpr "status"} boogie_si_record_i16($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3991, 18} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i16.i32($i3);
  // WARNING: %5 = zext i16 %4 to i32, !dbg !4026, !verifier.code !4012
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 20} true;
  assume {:verifier.code 0} true;
  $i5 := $and.i32($i4, 128);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $i3;
  goto $bb4;
$bb2:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $i7;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3994, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i44 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3987, 15} true;
  assume {:verifier.code 0} true;
  call $i9 := altera_uart_readl($p1, 8);
  // WARNING: %10 = call i32 @altera_uart_readl(%struct.uart_port* %2, i32 8), !dbg !4017, !verifier.code !4012
  call {:cexpr "tmp___9"} boogie_si_record_i32($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3988, 14} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i32.i16($i9);
  // WARNING: %11 = trunc i32 %10 to i16, !dbg !4023, !verifier.code !4012
  call {:cexpr "status"} boogie_si_record_i16($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3991, 18} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i16.i32($i10);
  // WARNING: %12 = zext i16 %11 to i32, !dbg !4026, !verifier.code !4012
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i11, 128);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 20} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $i10;
  assume {:branchcond $i13} true;
  goto $bb7, $bb8;
$bb7:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  assume ($i13 == 1);
  goto $bb5;
$bb8:
  assume !(($i13 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb9:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3999, 15} true;
  assume {:verifier.code 0} true;
  call $i14 := altera_uart_readl($p1, 0);
  // WARNING: %19 = call i32 @altera_uart_readl(%struct.uart_port* %2, i32 0), !dbg !4037, !verifier.code !4012
  call {:cexpr "tmp___7"} boogie_si_record_i32($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4000, 10} true;
  assume {:verifier.code 0} true;
  $i15 := $trunc.i32.i8($i14);
  // WARNING: %20 = trunc i32 %19 to i8, !dbg !4041, !verifier.code !4012
  call {:cexpr "ch"} boogie_si_record_i8($i15);
  // WARNING: call void @llvm.dbg.value(metadata i8 %20, i64 0, metadata !5883, metadata !4012), !dbg !5884, !verifier.code !4010
  // WARNING: call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5885, metadata !4012), !dbg !5886, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4003, 19} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p1);
  // WARNING: %21 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4048, !verifier.code !4012
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4004, 31} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i64($i16, 144);
  // WARNING: %22 = add i64 %21, 144, !dbg !4051, !verifier.code !4012
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i17);
  // WARNING: call void @llvm.dbg.value(metadata i64 %22, i64 0, metadata !5893, metadata !4012), !dbg !5894, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4006, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p1);
  // WARNING: %23 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4056, !verifier.code !4012
  call {:cexpr "__cil_tmp14"} boogie_si_record_i64($i18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4007, 31} true;
  assume {:verifier.code 0} true;
  $i19 := $add.i64($i18, 144);
  // WARNING: %24 = add i64 %23, 144, !dbg !4059, !verifier.code !4012
  call {:cexpr "__cil_tmp15"} boogie_si_record_i64($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4008, 21} true;
  assume {:verifier.code 0} true;
  $p20 := $i2p.i64.ref($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4008, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  // WARNING: %26 = load i32, i32* %25, align 4, !dbg !4063, !verifier.code !4012
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4009, 43} true;
  assume {:verifier.code 0} true;
  $i22 := $add.i32($i21, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4009, 7} true;
  assume {:verifier.code 0} true;
  $p23 := $i2p.i64.ref($i17);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4009, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p23, $i22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4012, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i16.i32($i8);
  // WARNING: %29 = zext i16 %16 to i32, !dbg !4069, !verifier.code !4012
  call {:cexpr "__cil_tmp17"} boogie_si_record_i32($i24);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4013, 21} true;
  assume {:verifier.code 0} true;
  $i25 := $and.i32($i24, 256);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4013, 21} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4013, 9} true;
  assume {:verifier.code 0} true;
  $i27, $i28 := $i8, $i15;
  assume {:branchcond $i26} true;
  goto $bb13, $bb14;
$bb10:
  assume !(($i111 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb11:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3995, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4125, 17} true;
  assume {:verifier.code 0} true;
  $i112 := $p2i.ref.i64($p1);
  // WARNING: %133 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4280, !verifier.code !4012
  call {:cexpr "__cil_tmp62"} boogie_si_record_i64($i112);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4126, 29} true;
  assume {:verifier.code 0} true;
  $i113 := $add.i64($i112, 120);
  // WARNING: %134 = add i64 %133, 120, !dbg !4284, !verifier.code !4012
  call {:cexpr "__cil_tmp63"} boogie_si_record_i64($i113);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4127, 19} true;
  assume {:verifier.code 0} true;
  $p114 := $i2p.i64.ref($i113);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4127, 17} true;
  assume {:verifier.code 0} true;
  $p115 := $load.ref($M.0, $p114);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4128, 17} true;
  assume {:verifier.code 0} true;
  $p116 := $bitcast.ref.ref($p115);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4128, 17} true;
  assume {:verifier.code 0} true;
  $p117 := $load.ref($M.0, $p116);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4129, 3} true;
  assume {:verifier.code 0} true;
  call tty_flip_buffer_push($p117);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4131, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb13:
  assume ($i26 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4015, 21} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i16.i32($i8);
  // WARNING: %33 = zext i16 %16 to i32, !dbg !4076, !verifier.code !4012
  call {:cexpr "__cil_tmp18"} boogie_si_record_i32($i29);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4016, 7} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p1, $i29, 8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4019, 21} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i16.i32($i8);
  // WARNING: %34 = zext i16 %16 to i32, !dbg !4082, !verifier.code !4012
  call {:cexpr "__cil_tmp19"} boogie_si_record_i32($i30);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4020, 23} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i32($i30, 4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4020, 23} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4020, 11} true;
  assume {:verifier.code 0} true;
  $i33, $i34 := $i8, $i15;
  assume {:branchcond $i32} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i101, $i102, $i103 := $i28, 0, $i27;
  goto $bb38;
$bb15:
  assume ($i32 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4023, 23} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p1);
  // WARNING: %38 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4091, !verifier.code !4012
  call {:cexpr "__cil_tmp21"} boogie_si_record_i64($i35);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4024, 35} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i64($i35, 164);
  // WARNING: %39 = add i64 %38, 164, !dbg !4096, !verifier.code !4012
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i36);
  // WARNING: call void @llvm.dbg.value(metadata i64 %39, i64 0, metadata !5938, metadata !4012), !dbg !5939, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4026, 23} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p1);
  // WARNING: %40 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4101, !verifier.code !4012
  call {:cexpr "__cil_tmp24"} boogie_si_record_i64($i37);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4027, 35} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i64($i37, 164);
  // WARNING: %41 = add i64 %40, 164, !dbg !4104, !verifier.code !4012
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i38);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4028, 25} true;
  assume {:verifier.code 0} true;
  $p39 := $i2p.i64.ref($i38);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4028, 23} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  // WARNING: %43 = load i32, i32* %42, align 4, !dbg !4108, !verifier.code !4012
  call {:cexpr "__cil_tmp26"} boogie_si_record_i32($i40);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4029, 47} true;
  assume {:verifier.code 0} true;
  $i41 := $add.i32($i40, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4029, 11} true;
  assume {:verifier.code 0} true;
  $p42 := $i2p.i64.ref($i36);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4029, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, $i41);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4030, 19} true;
  assume {:verifier.code 0} true;
  call $i43 := uart_handle_break($p1);
  // WARNING: %46 = call i32 @uart_handle_break(%struct.uart_port* %2), !dbg !4114, !verifier.code !4012
  call {:cexpr "tmp___8"} boogie_si_record_i32($i43);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4032, 13} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i32($i43, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4032, 13} true;
  assume {:verifier.code 0} true;
  $i45, $i46 := $i8, $i15;
  assume {:branchcond $i44} true;
  goto $bb6, $bb17;
$bb16:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4039, 23} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i16.i32($i33);
  // WARNING: %51 = zext i16 %.lcssa6 to i32, !dbg !4121, !verifier.code !4012
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i49);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4040, 25} true;
  assume {:verifier.code 0} true;
  $i50 := $and.i32($i49, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4040, 25} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i32($i50, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4040, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb20, $bb21;
$bb17:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4037, 7} true;
  assume {:verifier.code 0} true;
  $i47, $i48 := $i45, $i46;
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4083, 21} true;
  assume {:verifier.code 0} true;
  $i82 := $p2i.ref.i64($p1);
  // WARNING: %96 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4220, !verifier.code !4012
  call {:cexpr "__cil_tmp51"} boogie_si_record_i64($i82);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4084, 33} true;
  assume {:verifier.code 0} true;
  $i83 := $add.i64($i82, 108);
  // WARNING: %97 = add i64 %96, 108, !dbg !4223, !verifier.code !4012
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i83);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4085, 23} true;
  assume {:verifier.code 0} true;
  $p84 := $i2p.i64.ref($i83);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4085, 21} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i32($M.0, $p84);
  // WARNING: %99 = load i32, i32* %98, align 4, !dbg !4227, !verifier.code !4012
  call {:cexpr "__cil_tmp53"} boogie_si_record_i32($i85);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4086, 21} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i16.i32($i47);
  // WARNING: %100 = zext i16 %94 to i32, !dbg !4230, !verifier.code !4012
  call {:cexpr "__cil_tmp54"} boogie_si_record_i32($i86);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4087, 33} true;
  assume {:verifier.code 0} true;
  $i87 := $and.i32($i86, $i85);
  // WARNING: %101 = and i32 %100, %99, !dbg !4233, !verifier.code !4012
  call {:cexpr "__cil_tmp55"} boogie_si_record_i32($i87);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4088, 16} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i16($i87);
  // WARNING: %102 = trunc i32 %101 to i16, !dbg !4236, !verifier.code !4012
  call {:cexpr "status"} boogie_si_record_i16($i88);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4090, 21} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i16.i32($i88);
  // WARNING: %103 = zext i16 %102 to i32, !dbg !4237, !verifier.code !4012
  call {:cexpr "__cil_tmp56"} boogie_si_record_i32($i89);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4091, 23} true;
  assume {:verifier.code 0} true;
  $i90 := $and.i32($i89, 4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4091, 23} true;
  assume {:verifier.code 0} true;
  $i91 := $ne.i32($i90, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4091, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb29, $bb30;
$bb20:
  assume ($i51 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4042, 25} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p1);
  // WARNING: %55 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4131, !verifier.code !4012
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i52);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4043, 37} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, 160);
  // WARNING: %56 = add i64 %55, 160, !dbg !4135, !verifier.code !4012
  call {:cexpr "__cil_tmp30"} boogie_si_record_i64($i53);
  // WARNING: call void @llvm.dbg.value(metadata i64 %56, i64 0, metadata !5977, metadata !4012), !dbg !5978, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4045, 25} true;
  assume {:verifier.code 0} true;
  $i54 := $p2i.ref.i64($p1);
  // WARNING: %57 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4140, !verifier.code !4012
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i54);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4046, 37} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i54, 160);
  // WARNING: %58 = add i64 %57, 160, !dbg !4143, !verifier.code !4012
  call {:cexpr "__cil_tmp33"} boogie_si_record_i64($i55);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4047, 27} true;
  assume {:verifier.code 0} true;
  $p56 := $i2p.i64.ref($i55);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4047, 25} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  // WARNING: %60 = load i32, i32* %59, align 4, !dbg !4147, !verifier.code !4012
  call {:cexpr "__cil_tmp34"} boogie_si_record_i32($i57);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4048, 49} true;
  assume {:verifier.code 0} true;
  $i58 := $add.i32($i57, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4048, 13} true;
  assume {:verifier.code 0} true;
  $p59 := $i2p.i64.ref($i53);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4048, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p59, $i58);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4049, 9} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i51 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4051, 25} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i16.i32($i33);
  // WARNING: %64 = zext i16 %.lcssa6 to i32, !dbg !4154, !verifier.code !4012
  call {:cexpr "__cil_tmp35"} boogie_si_record_i32($i60);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4052, 27} true;
  assume {:verifier.code 0} true;
  $i61 := $and.i32($i60, 8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4052, 27} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i32($i61, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4052, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb23, $bb24;
$bb22:
  assume {:verifier.code 0} true;
  $i47, $i48 := $i33, $i34;
  goto $bb19;
$bb23:
  assume ($i62 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4054, 27} true;
  assume {:verifier.code 0} true;
  $i63 := $p2i.ref.i64($p1);
  // WARNING: %68 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4164, !verifier.code !4012
  call {:cexpr "__cil_tmp37"} boogie_si_record_i64($i63);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4055, 39} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63, 156);
  // WARNING: %69 = add i64 %68, 156, !dbg !4168, !verifier.code !4012
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i64);
  // WARNING: call void @llvm.dbg.value(metadata i64 %69, i64 0, metadata !6010, metadata !4012), !dbg !6011, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4057, 27} true;
  assume {:verifier.code 0} true;
  $i65 := $p2i.ref.i64($p1);
  // WARNING: %70 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4173, !verifier.code !4012
  call {:cexpr "__cil_tmp40"} boogie_si_record_i64($i65);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4058, 39} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i64($i65, 156);
  // WARNING: %71 = add i64 %70, 156, !dbg !4176, !verifier.code !4012
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i66);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4059, 29} true;
  assume {:verifier.code 0} true;
  $p67 := $i2p.i64.ref($i66);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4059, 27} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p67);
  // WARNING: %73 = load i32, i32* %72, align 4, !dbg !4180, !verifier.code !4012
  call {:cexpr "__cil_tmp42"} boogie_si_record_i32($i68);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4060, 51} true;
  assume {:verifier.code 0} true;
  $i69 := $add.i32($i68, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4060, 15} true;
  assume {:verifier.code 0} true;
  $p70 := $i2p.i64.ref($i64);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4060, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p70, $i69);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4061, 11} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i62 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4063, 27} true;
  assume {:verifier.code 0} true;
  $i71 := $zext.i16.i32($i33);
  // WARNING: %77 = zext i16 %.lcssa6 to i32, !dbg !4187, !verifier.code !4012
  call {:cexpr "__cil_tmp43"} boogie_si_record_i32($i71);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4064, 29} true;
  assume {:verifier.code 0} true;
  $i72 := $and.i32($i71, 2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4064, 29} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i72, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4064, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb26, $bb27;
$bb25:
  assume {:verifier.code 0} true;
  goto $bb22;
$bb26:
  assume ($i73 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4066, 29} true;
  assume {:verifier.code 0} true;
  $i74 := $p2i.ref.i64($p1);
  // WARNING: %81 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4197, !verifier.code !4012
  call {:cexpr "__cil_tmp45"} boogie_si_record_i64($i74);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4067, 41} true;
  assume {:verifier.code 0} true;
  $i75 := $add.i64($i74, 152);
  // WARNING: %82 = add i64 %81, 152, !dbg !4201, !verifier.code !4012
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i75);
  // WARNING: call void @llvm.dbg.value(metadata i64 %82, i64 0, metadata !6043, metadata !4012), !dbg !6044, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4069, 29} true;
  assume {:verifier.code 0} true;
  $i76 := $p2i.ref.i64($p1);
  // WARNING: %83 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4206, !verifier.code !4012
  call {:cexpr "__cil_tmp48"} boogie_si_record_i64($i76);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4070, 41} true;
  assume {:verifier.code 0} true;
  $i77 := $add.i64($i76, 152);
  // WARNING: %84 = add i64 %83, 152, !dbg !4209, !verifier.code !4012
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i77);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4071, 31} true;
  assume {:verifier.code 0} true;
  $p78 := $i2p.i64.ref($i77);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4071, 29} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  // WARNING: %86 = load i32, i32* %85, align 4, !dbg !4213, !verifier.code !4012
  call {:cexpr "__cil_tmp50"} boogie_si_record_i32($i79);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4072, 53} true;
  assume {:verifier.code 0} true;
  $i80 := $add.i32($i79, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4072, 17} true;
  assume {:verifier.code 0} true;
  $p81 := $i2p.i64.ref($i75);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4072, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, $i80);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4073, 13} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i73 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb29:
  assume ($i91 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4093, 7} true;
  assume {:verifier.code 0} true;
  $i92 := 1;
  goto $bb31;
$bb30:
  assume !(($i91 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4095, 23} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i16.i32($i88);
  // WARNING: %108 = zext i16 %102 to i32, !dbg !4246, !verifier.code !4012
  call {:cexpr "__cil_tmp57"} boogie_si_record_i32($i93);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4096, 25} true;
  assume {:verifier.code 0} true;
  $i94 := $and.i32($i93, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4096, 25} true;
  assume {:verifier.code 0} true;
  $i95 := $ne.i32($i94, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4096, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb32, $bb33;
$bb31:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4111, 5} true;
  assume {:verifier.code 0} true;
  $i101, $i102, $i103 := $i48, $i92, $i88;
  goto $bb38;
$bb32:
  assume ($i95 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4098, 9} true;
  assume {:verifier.code 0} true;
  $i96 := 3;
  goto $bb34;
$bb33:
  assume !(($i95 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4100, 25} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i16.i32($i88);
  // WARNING: %113 = zext i16 %102 to i32, !dbg !4256, !verifier.code !4012
  call {:cexpr "__cil_tmp58"} boogie_si_record_i32($i97);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4101, 27} true;
  assume {:verifier.code 0} true;
  $i98 := $and.i32($i97, 2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4101, 27} true;
  assume {:verifier.code 0} true;
  $i99 := $ne.i32($i98, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4101, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb35, $bb36;
$bb34:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i92 := $i96;
  goto $bb31;
$bb35:
  assume ($i99 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4103, 11} true;
  assume {:verifier.code 0} true;
  $i100 := 2;
  goto $bb37;
$bb36:
  assume !(($i99 == 1));
  assume {:verifier.code 0} true;
  $i100 := 0;
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i96 := $i100;
  goto $bb34;
$bb38:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4116, 19} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.i16.i32($i103);
  // WARNING: %124 = zext i16 %.0 to i32, !dbg !4267, !verifier.code !4012
  call {:cexpr "__cil_tmp59"} boogie_si_record_i32($i104);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4117, 19} true;
  assume {:verifier.code 0} true;
  $i105 := $zext.i8.i32($i101);
  // WARNING: %125 = zext i8 %123 to i32, !dbg !4271, !verifier.code !4012
  call {:cexpr "__cil_tmp60"} boogie_si_record_i32($i105);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4118, 19} true;
  assume {:verifier.code 0} true;
  $i106 := $zext.i8.i32($i102);
  // WARNING: %126 = zext i8 %.3 to i32, !dbg !4274, !verifier.code !4012
  call {:cexpr "__cil_tmp61"} boogie_si_record_i32($i106);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4119, 5} true;
  assume {:verifier.code 0} true;
  call uart_insert_char($p1, $i104, 8, $i105, $i106);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3987, 15} true;
  assume {:verifier.code 0} true;
  call $i107 := altera_uart_readl($p1, 8);
  // WARNING: %127 = call i32 @altera_uart_readl(%struct.uart_port* %2, i32 8), !dbg !4017, !verifier.code !4012
  call {:cexpr "tmp___9"} boogie_si_record_i32($i107);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3988, 14} true;
  assume {:verifier.code 0} true;
  $i108 := $trunc.i32.i16($i107);
  // WARNING: %128 = trunc i32 %127 to i16, !dbg !4023, !verifier.code !4012
  call {:cexpr "status"} boogie_si_record_i16($i108);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3991, 18} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i16.i32($i108);
  // WARNING: %129 = zext i16 %128 to i32, !dbg !4026, !verifier.code !4012
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i109);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 20} true;
  assume {:verifier.code 0} true;
  $i110 := $and.i32($i109, 128);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 20} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.i32($i110, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $i108;
  assume {:branchcond $i111} true;
  goto $bb39, $bb10;
$bb39:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3992, 9} true;
  assume {:verifier.code 0} true;
  assume ($i111 == 1);
  goto $bb4;
}
const altera_uart_tx_chars: ref;
axiom (altera_uart_tx_chars == $sub.ref(0, 82444));
procedure  altera_uart_tx_chars($p0: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i64;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $i7: i64;
  var $p8: ref;
  var $i9: i64;
  var $i10: i64;
  var $p11: ref;
  var $i12: i8;
  var $i13: i1;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $i24: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i32;
  var $i28: i32;
  var $p29: ref;
  var $i30: i32;
  var $i31: i32;
  var $i32: i1;
  var $i33: i64;
  var $i34: i64;
  var $p35: ref;
  var $i36: i32;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $i40: i32;
  var $i41: i1;
  var $i42: i64;
  var $i43: i64;
  var $p44: ref;
  var $i45: i32;
  var $p46: ref;
  var $p47: ref;
  var $i48: i64;
  var $p49: ref;
  var $i50: i8;
  var $i51: i32;
  var $i52: i64;
  var $i53: i64;
  var $i54: i64;
  var $i55: i64;
  var $i56: i64;
  var $p57: ref;
  var $i58: i32;
  var $i59: i32;
  var $i60: i64;
  var $i61: i64;
  var $i62: i32;
  var $p63: ref;
  var $i64: i64;
  var $i65: i64;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $i69: i32;
  var $i70: i32;
  var $p71: ref;
  var $i72: i64;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $i76: i32;
  var $i77: i64;
  var $i78: i64;
  var $p79: ref;
  var $i80: i32;
  var $i81: i32;
  var $i82: i64;
  var $i83: i64;
  var $i84: i1;
  var $i85: i64;
  var $i86: i64;
  var $p87: ref;
  var $i88: i32;
  var $i89: i64;
  var $i90: i64;
  var $p91: ref;
  var $i92: i32;
  var $i93: i1;
  var $i94: i64;
  var $i95: i64;
  var $i96: i64;
  var $i97: i64;
  var $p98: ref;
  var $i99: i16;
  var $i100: i32;
  var $i101: i32;
  var $i102: i16;
  var $p103: ref;
  var $i104: i64;
  var $i105: i64;
  var $p106: ref;
  var $i107: i16;
  var $i108: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4218, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4219, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  // WARNING: %3 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4017, !verifier.code !4012
  call {:cexpr "__cil_tmp5"} boogie_si_record_i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4220, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $add.i64($i2, 120);
  // WARNING: %4 = add i64 %3, 120, !dbg !4020, !verifier.code !4012
  call {:cexpr "__cil_tmp6"} boogie_si_record_i64($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4221, 18} true;
  assume {:verifier.code 0} true;
  $p4 := $i2p.i64.ref($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4221, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4222, 16} true;
  assume {:verifier.code 0} true;
  $i6 := $p2i.ref.i64($p5);
  // WARNING: %7 = ptrtoint %struct.uart_state* %6 to i64, !dbg !4027, !verifier.code !4012
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4223, 27} true;
  assume {:verifier.code 0} true;
  $i7 := $add.i64($i6, 360);
  // WARNING: %8 = add i64 %7, 360, !dbg !4030, !verifier.code !4012
  call {:cexpr "__cil_tmp9"} boogie_si_record_i64($i7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4224, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $i2p.i64.ref($i7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4226, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p1);
  // WARNING: %10 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4036, !verifier.code !4012
  call {:cexpr "__cil_tmp10"} boogie_si_record_i64($i9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4227, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $add.i64($i9, 104);
  // WARNING: %11 = add i64 %10, 104, !dbg !4040, !verifier.code !4012
  call {:cexpr "__cil_tmp11"} boogie_si_record_i64($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4228, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4228, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i8($M.0, $p11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4228, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i8($i12, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4228, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4230, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p1);
  // WARNING: %16 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4047, !verifier.code !4012
  call {:cexpr "__cil_tmp12"} boogie_si_record_i64($i14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4231, 31} true;
  assume {:verifier.code 0} true;
  $i15 := $add.i64($i14, 104);
  // WARNING: %17 = add i64 %16, 104, !dbg !4052, !verifier.code !4012
  call {:cexpr "__cil_tmp13"} boogie_si_record_i64($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4232, 21} true;
  assume {:verifier.code 0} true;
  $p16 := $i2p.i64.ref($i15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4232, 19} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  // WARNING: %19 = load i8, i8* %18, align 1, !dbg !4056, !verifier.code !4012
  call {:cexpr "__cil_tmp14"} boogie_si_record_i8($i17);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4233, 19} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  // WARNING: %20 = zext i8 %19 to i32, !dbg !4059, !verifier.code !4012
  call {:cexpr "__cil_tmp15"} boogie_si_record_i32($i18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4234, 5} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p1, $i18, 4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4235, 19} true;
  assume {:verifier.code 0} true;
  $i19 := $p2i.ref.i64($p1);
  // WARNING: %21 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4063, !verifier.code !4012
  call {:cexpr "__cil_tmp16"} boogie_si_record_i64($i19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4236, 31} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 104);
  // WARNING: %22 = add i64 %21, 104, !dbg !4066, !verifier.code !4012
  call {:cexpr "__cil_tmp17"} boogie_si_record_i64($i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4237, 7} true;
  assume {:verifier.code 0} true;
  $p21 := $i2p.i64.ref($i20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4237, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p21, 0);
  // WARNING: store i8 0, i8* %23, align 1, !dbg !4070, !verifier.code !4012
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4239, 19} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p1);
  // WARNING: %24 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4073, !verifier.code !4012
  call {:cexpr "__cil_tmp19"} boogie_si_record_i64($i22);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4240, 31} true;
  assume {:verifier.code 0} true;
  $i23 := $add.i64($i22, 148);
  // WARNING: %25 = add i64 %24, 148, !dbg !4076, !verifier.code !4012
  call {:cexpr "__cil_tmp20"} boogie_si_record_i64($i23);
  // WARNING: call void @llvm.dbg.value(metadata i64 %25, i64 0, metadata !6204, metadata !4012), !dbg !6205, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4242, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p1);
  // WARNING: %26 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4081, !verifier.code !4012
  call {:cexpr "__cil_tmp22"} boogie_si_record_i64($i24);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4243, 31} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i64($i24, 148);
  // WARNING: %27 = add i64 %26, 148, !dbg !4084, !verifier.code !4012
  call {:cexpr "__cil_tmp23"} boogie_si_record_i64($i25);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4244, 21} true;
  assume {:verifier.code 0} true;
  $p26 := $i2p.i64.ref($i25);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4244, 19} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  // WARNING: %29 = load i32, i32* %28, align 4, !dbg !4088, !verifier.code !4012
  call {:cexpr "__cil_tmp24"} boogie_si_record_i32($i27);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4245, 43} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i27, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4245, 7} true;
  assume {:verifier.code 0} true;
  $p29 := $i2p.i64.ref($i23);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4245, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p29, $i28);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4247, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4357, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4253, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4253, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4256, 15} true;
  assume {:verifier.code 0} true;
  call $i30 := altera_uart_readl($p1, 8);
  // WARNING: %36 = call i32 @altera_uart_readl(%struct.uart_port* %2, i32 8), !dbg !4099, !verifier.code !4012
  call {:cexpr "tmp___7"} boogie_si_record_i32($i30);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4258, 17} true;
  assume {:verifier.code 0} true;
  $i31 := $and.i32($i30, 64);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4258, 17} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i31, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4258, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i32 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4260, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i32 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4261, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4264, 19} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p8);
  // WARNING: %42 = ptrtoint %struct.circ_buf* %9 to i64, !dbg !4111, !verifier.code !4012
  call {:cexpr "__cil_tmp25"} boogie_si_record_i64($i33);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4265, 31} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i64($i33, 12);
  // WARNING: %43 = add i64 %42, 12, !dbg !4115, !verifier.code !4012
  call {:cexpr "__cil_tmp26"} boogie_si_record_i64($i34);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4266, 21} true;
  assume {:verifier.code 0} true;
  $p35 := $i2p.i64.ref($i34);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4266, 19} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  // WARNING: %45 = load i32, i32* %44, align 4, !dbg !4119, !verifier.code !4012
  call {:cexpr "__cil_tmp27"} boogie_si_record_i32($i36);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4267, 19} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p8);
  // WARNING: %46 = ptrtoint %struct.circ_buf* %9 to i64, !dbg !4122, !verifier.code !4012
  call {:cexpr "__cil_tmp28"} boogie_si_record_i64($i37);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4268, 31} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i64($i37, 8);
  // WARNING: %47 = add i64 %46, 8, !dbg !4125, !verifier.code !4012
  call {:cexpr "__cil_tmp29"} boogie_si_record_i64($i38);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4269, 21} true;
  assume {:verifier.code 0} true;
  $p39 := $i2p.i64.ref($i38);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4269, 19} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  // WARNING: %49 = load i32, i32* %48, align 4, !dbg !4129, !verifier.code !4012
  call {:cexpr "__cil_tmp30"} boogie_si_record_i32($i40);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4270, 21} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i32($i40, $i36);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4270, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb11, $bb12;
$bb10:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4310, 29} true;
  assume {:verifier.code 0} true;
  $i72 := $sub.i64(4096, 1);
  // WARNING: %85 = sub i64 4096, 1, !dbg !4222, !verifier.code !4012
  call {:cexpr "__cil_tmp56"} boogie_si_record_i64($i72);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4311, 17} true;
  assume {:verifier.code 0} true;
  $i73 := $p2i.ref.i64($p8);
  // WARNING: %86 = ptrtoint %struct.circ_buf* %9 to i64, !dbg !4226, !verifier.code !4012
  call {:cexpr "__cil_tmp57"} boogie_si_record_i64($i73);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4312, 29} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73, 12);
  // WARNING: %87 = add i64 %86, 12, !dbg !4229, !verifier.code !4012
  call {:cexpr "__cil_tmp58"} boogie_si_record_i64($i74);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4313, 19} true;
  assume {:verifier.code 0} true;
  $p75 := $i2p.i64.ref($i74);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4313, 17} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i32($M.0, $p75);
  // WARNING: %89 = load i32, i32* %88, align 4, !dbg !4233, !verifier.code !4012
  call {:cexpr "__cil_tmp59"} boogie_si_record_i32($i76);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4314, 17} true;
  assume {:verifier.code 0} true;
  $i77 := $p2i.ref.i64($p8);
  // WARNING: %90 = ptrtoint %struct.circ_buf* %9 to i64, !dbg !4236, !verifier.code !4012
  call {:cexpr "__cil_tmp60"} boogie_si_record_i64($i77);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4315, 29} true;
  assume {:verifier.code 0} true;
  $i78 := $add.i64($i77, 8);
  // WARNING: %91 = add i64 %90, 8, !dbg !4239, !verifier.code !4012
  call {:cexpr "__cil_tmp61"} boogie_si_record_i64($i78);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4316, 19} true;
  assume {:verifier.code 0} true;
  $p79 := $i2p.i64.ref($i78);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4316, 17} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i32($M.0, $p79);
  // WARNING: %93 = load i32, i32* %92, align 4, !dbg !4243, !verifier.code !4012
  call {:cexpr "__cil_tmp62"} boogie_si_record_i32($i80);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4317, 29} true;
  assume {:verifier.code 0} true;
  $i81 := $sub.i32($i80, $i76);
  // WARNING: %94 = sub nsw i32 %93, %89, !dbg !4246, !verifier.code !4012
  call {:cexpr "__cil_tmp63"} boogie_si_record_i32($i81);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4318, 17} true;
  assume {:verifier.code 0} true;
  $i82 := $sext.i32.i64($i81);
  // WARNING: %95 = sext i32 %94 to i64, !dbg !4249, !verifier.code !4012
  call {:cexpr "__cil_tmp64"} boogie_si_record_i64($i82);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4319, 29} true;
  assume {:verifier.code 0} true;
  $i83 := $and.i64($i82, $i72);
  // WARNING: %96 = and i64 %95, %85, !dbg !4252, !verifier.code !4012
  call {:cexpr "__cil_tmp65"} boogie_si_record_i64($i83);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4320, 19} true;
  assume {:verifier.code 0} true;
  $i84 := $ult.i64($i83, 256);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4320, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb14, $bb15;
$bb11:
  assume ($i41 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4271, 7} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb12:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4277, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $p2i.ref.i64($p8);
  // WARNING: %54 = ptrtoint %struct.circ_buf* %9 to i64, !dbg !4137, !verifier.code !4012
  call {:cexpr "__cil_tmp31"} boogie_si_record_i64($i42);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4278, 31} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i64($i42, 12);
  // WARNING: %55 = add i64 %54, 12, !dbg !4141, !verifier.code !4012
  call {:cexpr "__cil_tmp32"} boogie_si_record_i64($i43);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4279, 21} true;
  assume {:verifier.code 0} true;
  $p44 := $i2p.i64.ref($i43);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4279, 19} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  // WARNING: %57 = load i32, i32* %56, align 4, !dbg !4145, !verifier.code !4012
  call {:cexpr "__cil_tmp33"} boogie_si_record_i32($i45);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4280, 19} true;
  assume {:verifier.code 0} true;
  $p46 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4280, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4281, 31} true;
  assume {:verifier.code 0} true;
  $i48 := $sext.i32.i64($i45);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4281, 31} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p47, $mul.ref($i48, 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4282, 19} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i8($M.0, $p49);
  // WARNING: %62 = load i8, i8* %61, align 1, !dbg !4154, !verifier.code !4012
  call {:cexpr "__cil_tmp36"} boogie_si_record_i8($i50);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4283, 19} true;
  assume {:verifier.code 0} true;
  $i51 := $sext.i8.i32($i50);
  // WARNING: %63 = sext i8 %62 to i32, !dbg !4157, !verifier.code !4012
  call {:cexpr "__cil_tmp37"} boogie_si_record_i32($i51);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4284, 5} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p1, $i51, 4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4285, 19} true;
  assume {:verifier.code 0} true;
  $i52 := $p2i.ref.i64($p8);
  // WARNING: %64 = ptrtoint %struct.circ_buf* %9 to i64, !dbg !4161, !verifier.code !4012
  call {:cexpr "__cil_tmp38"} boogie_si_record_i64($i52);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4286, 31} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, 12);
  // WARNING: %65 = add i64 %64, 12, !dbg !4164, !verifier.code !4012
  call {:cexpr "__cil_tmp39"} boogie_si_record_i64($i53);
  // WARNING: call void @llvm.dbg.value(metadata i64 %65, i64 0, metadata !6292, metadata !4012), !dbg !6293, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4288, 31} true;
  assume {:verifier.code 0} true;
  $i54 := $sub.i64(4096, 1);
  // WARNING: %66 = sub i64 4096, 1, !dbg !4169, !verifier.code !4012
  call {:cexpr "__cil_tmp41"} boogie_si_record_i64($i54);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4289, 19} true;
  assume {:verifier.code 0} true;
  $i55 := $p2i.ref.i64($p8);
  // WARNING: %67 = ptrtoint %struct.circ_buf* %9 to i64, !dbg !4172, !verifier.code !4012
  call {:cexpr "__cil_tmp42"} boogie_si_record_i64($i55);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4290, 31} true;
  assume {:verifier.code 0} true;
  $i56 := $add.i64($i55, 12);
  // WARNING: %68 = add i64 %67, 12, !dbg !4175, !verifier.code !4012
  call {:cexpr "__cil_tmp43"} boogie_si_record_i64($i56);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4291, 21} true;
  assume {:verifier.code 0} true;
  $p57 := $i2p.i64.ref($i56);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4291, 19} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  // WARNING: %70 = load i32, i32* %69, align 4, !dbg !4179, !verifier.code !4012
  call {:cexpr "__cil_tmp44"} boogie_si_record_i32($i58);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4292, 31} true;
  assume {:verifier.code 0} true;
  $i59 := $add.i32($i58, 1);
  // WARNING: %71 = add nsw i32 %70, 1, !dbg !4182, !verifier.code !4012
  call {:cexpr "__cil_tmp45"} boogie_si_record_i32($i59);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4293, 19} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i32.i64($i59);
  // WARNING: %72 = sext i32 %71 to i64, !dbg !4185, !verifier.code !4012
  call {:cexpr "__cil_tmp46"} boogie_si_record_i64($i60);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4294, 31} true;
  assume {:verifier.code 0} true;
  $i61 := $and.i64($i60, $i54);
  // WARNING: %73 = and i64 %72, %66, !dbg !4188, !verifier.code !4012
  call {:cexpr "__cil_tmp47"} boogie_si_record_i64($i61);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4295, 29} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.i64.i32($i61);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4295, 7} true;
  assume {:verifier.code 0} true;
  $p63 := $i2p.i64.ref($i53);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4295, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p63, $i62);
  // WARNING: store i32 %74, i32* %75, align 4, !dbg !4193, !verifier.code !4012
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4297, 19} true;
  assume {:verifier.code 0} true;
  $i64 := $p2i.ref.i64($p1);
  // WARNING: %76 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4196, !verifier.code !4012
  call {:cexpr "__cil_tmp49"} boogie_si_record_i64($i64);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4298, 31} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i64, 148);
  // WARNING: %77 = add i64 %76, 148, !dbg !4199, !verifier.code !4012
  call {:cexpr "__cil_tmp50"} boogie_si_record_i64($i65);
  // WARNING: call void @llvm.dbg.value(metadata i64 %77, i64 0, metadata !6327, metadata !4012), !dbg !6328, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4300, 19} true;
  assume {:verifier.code 0} true;
  $i66 := $p2i.ref.i64($p1);
  // WARNING: %78 = ptrtoint %struct.uart_port* %2 to i64, !dbg !4204, !verifier.code !4012
  call {:cexpr "__cil_tmp52"} boogie_si_record_i64($i66);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4301, 31} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i64($i66, 148);
  // WARNING: %79 = add i64 %78, 148, !dbg !4207, !verifier.code !4012
  call {:cexpr "__cil_tmp53"} boogie_si_record_i64($i67);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4302, 21} true;
  assume {:verifier.code 0} true;
  $p68 := $i2p.i64.ref($i67);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4302, 19} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i32($M.0, $p68);
  // WARNING: %81 = load i32, i32* %80, align 4, !dbg !4211, !verifier.code !4012
  call {:cexpr "__cil_tmp54"} boogie_si_record_i32($i69);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4303, 43} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i32($i69, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4303, 7} true;
  assume {:verifier.code 0} true;
  $p71 := $i2p.i64.ref($i65);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4303, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p71, $i70);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4253, 3} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb14:
  assume ($i84 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4322, 5} true;
  assume {:verifier.code 0} true;
  call uart_write_wakeup($p1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4324, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4329, 17} true;
  assume {:verifier.code 0} true;
  $i85 := $p2i.ref.i64($p8);
  // WARNING: %101 = ptrtoint %struct.circ_buf* %9 to i64, !dbg !4262, !verifier.code !4012
  call {:cexpr "__cil_tmp66"} boogie_si_record_i64($i85);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4330, 29} true;
  assume {:verifier.code 0} true;
  $i86 := $add.i64($i85, 12);
  // WARNING: %102 = add i64 %101, 12, !dbg !4266, !verifier.code !4012
  call {:cexpr "__cil_tmp67"} boogie_si_record_i64($i86);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4331, 19} true;
  assume {:verifier.code 0} true;
  $p87 := $i2p.i64.ref($i86);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4331, 17} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i32($M.0, $p87);
  // WARNING: %104 = load i32, i32* %103, align 4, !dbg !4270, !verifier.code !4012
  call {:cexpr "__cil_tmp68"} boogie_si_record_i32($i88);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4332, 17} true;
  assume {:verifier.code 0} true;
  $i89 := $p2i.ref.i64($p8);
  // WARNING: %105 = ptrtoint %struct.circ_buf* %9 to i64, !dbg !4273, !verifier.code !4012
  call {:cexpr "__cil_tmp69"} boogie_si_record_i64($i89);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4333, 29} true;
  assume {:verifier.code 0} true;
  $i90 := $add.i64($i89, 8);
  // WARNING: %106 = add i64 %105, 8, !dbg !4276, !verifier.code !4012
  call {:cexpr "__cil_tmp70"} boogie_si_record_i64($i90);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4334, 19} true;
  assume {:verifier.code 0} true;
  $p91 := $i2p.i64.ref($i90);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4334, 17} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i32($M.0, $p91);
  // WARNING: %108 = load i32, i32* %107, align 4, !dbg !4280, !verifier.code !4012
  call {:cexpr "__cil_tmp71"} boogie_si_record_i32($i92);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4335, 19} true;
  assume {:verifier.code 0} true;
  $i93 := $eq.i32($i92, $i88);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4335, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i93 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4337, 19} true;
  assume {:verifier.code 0} true;
  $i94 := $p2i.ref.i64($p0);
  // WARNING: %111 = ptrtoint %struct.altera_uart* %0 to i64, !dbg !4286, !verifier.code !4012
  call {:cexpr "__cil_tmp72"} boogie_si_record_i64($i94);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4338, 31} true;
  assume {:verifier.code 0} true;
  $i95 := $add.i64($i94, 340);
  // WARNING: %112 = add i64 %111, 340, !dbg !4291, !verifier.code !4012
  call {:cexpr "__cil_tmp73"} boogie_si_record_i64($i95);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4339, 19} true;
  assume {:verifier.code 0} true;
  $i96 := $p2i.ref.i64($p0);
  // WARNING: %113 = ptrtoint %struct.altera_uart* %0 to i64, !dbg !4294, !verifier.code !4012
  call {:cexpr "__cil_tmp74"} boogie_si_record_i64($i96);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4340, 31} true;
  assume {:verifier.code 0} true;
  $i97 := $add.i64($i96, 340);
  // WARNING: %114 = add i64 %113, 340, !dbg !4297, !verifier.code !4012
  call {:cexpr "__cil_tmp75"} boogie_si_record_i64($i97);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4341, 21} true;
  assume {:verifier.code 0} true;
  $p98 := $i2p.i64.ref($i97);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4341, 19} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i16($M.0, $p98);
  // WARNING: %116 = load i16, i16* %115, align 2, !dbg !4301, !verifier.code !4012
  call {:cexpr "__cil_tmp76"} boogie_si_record_i16($i99);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4342, 19} true;
  assume {:verifier.code 0} true;
  $i100 := $zext.i16.i32($i99);
  // WARNING: %117 = zext i16 %116 to i32, !dbg !4304, !verifier.code !4012
  call {:cexpr "__cil_tmp77"} boogie_si_record_i32($i100);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4343, 31} true;
  assume {:verifier.code 0} true;
  $i101 := $and.i32($i100, $sub.i32(0, 65));
  // WARNING: %118 = and i32 %117, -65, !dbg !4307, !verifier.code !4012
  call {:cexpr "__cil_tmp78"} boogie_si_record_i32($i101);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4344, 40} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i32.i16($i101);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4344, 7} true;
  assume {:verifier.code 0} true;
  $p103 := $i2p.i64.ref($i95);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4344, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p103, $i102);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4345, 19} true;
  assume {:verifier.code 0} true;
  $i104 := $p2i.ref.i64($p0);
  // WARNING: %121 = ptrtoint %struct.altera_uart* %0 to i64, !dbg !4313, !verifier.code !4012
  call {:cexpr "__cil_tmp79"} boogie_si_record_i64($i104);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4346, 31} true;
  assume {:verifier.code 0} true;
  $i105 := $add.i64($i104, 340);
  // WARNING: %122 = add i64 %121, 340, !dbg !4316, !verifier.code !4012
  call {:cexpr "__cil_tmp80"} boogie_si_record_i64($i105);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4347, 21} true;
  assume {:verifier.code 0} true;
  $p106 := $i2p.i64.ref($i105);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4347, 19} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i16($M.0, $p106);
  // WARNING: %124 = load i16, i16* %123, align 2, !dbg !4320, !verifier.code !4012
  call {:cexpr "__cil_tmp81"} boogie_si_record_i16($i107);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4348, 19} true;
  assume {:verifier.code 0} true;
  $i108 := $zext.i16.i32($i107);
  // WARNING: %125 = zext i16 %124 to i32, !dbg !4323, !verifier.code !4012
  call {:cexpr "__cil_tmp82"} boogie_si_record_i32($i108);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4349, 5} true;
  assume {:verifier.code 0} true;
  call altera_uart_writel($p1, $i108, 12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4351, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i93 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 4355, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const spin_unlock: ref;
axiom (spin_unlock == $sub.ref(0, 83476));
procedure  spin_unlock($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3223, 16} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3224, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock($p1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3226, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock: ref;
axiom (_raw_spin_unlock == $sub.ref(0, 84508));
procedure  _raw_spin_unlock($p0: ref);
const uart_write_wakeup: ref;
axiom (uart_write_wakeup == $sub.ref(0, 85540));
procedure  uart_write_wakeup($p0: ref);
const uart_handle_break: ref;
axiom (uart_handle_break == $sub.ref(0, 86572));
procedure  uart_handle_break($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i64;
  var $i6: i64;
  var $p7: ref;
  var $i8: i32;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3409, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  // WARNING: %2 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4011, !verifier.code !4010
  call {:cexpr "__cil_tmp3"} boogie_si_record_i64($i1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3410, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 120);
  // WARNING: %3 = add i64 %2, 120, !dbg !4015, !verifier.code !4010
  call {:cexpr "__cil_tmp4"} boogie_si_record_i64($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3411, 13} true;
  assume {:verifier.code 0} true;
  $p3 := $i2p.i64.ref($i2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3411, 11} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  // WARNING: call void @llvm.dbg.value(metadata %struct.uart_state* %5, i64 0, metadata !6479, metadata !4012), !dbg !6480, !verifier.code !4010
  // WARNING: call void @llvm.dbg.value(metadata i32 4, i64 0, metadata !6481, metadata !4012), !dbg !6482, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3415, 16} true;
  assume {:verifier.code 0} true;
  $i5 := $p2i.ref.i64($p0);
  // WARNING: %6 = ptrtoint %struct.uart_port* %0 to i64, !dbg !4026, !verifier.code !4010
  call {:cexpr "__cil_tmp7"} boogie_si_record_i64($i5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3416, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 192);
  // WARNING: %7 = add i64 %6, 192, !dbg !4030, !verifier.code !4010
  call {:cexpr "__cil_tmp8"} boogie_si_record_i64($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3417, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $i2p.i64.ref($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3417, 16} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  // WARNING: %9 = load i32, i32* %8, align 4, !dbg !4034, !verifier.code !4010
  call {:cexpr "__cil_tmp9"} boogie_si_record_i32($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3418, 18} true;
  assume {:verifier.code 0} true;
  $i9 := $and.i32($i8, 4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3418, 18} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3418, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3420, 19} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3420, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3421, 5} true;
  assume {:verifier.code 0} true;
  call do_SAK($p12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3423, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 3427, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const uart_insert_char: ref;
axiom (uart_insert_char == $sub.ref(0, 87604));
procedure  uart_insert_char($p0: ref, $i1: i32, $i2: i32, $i3: i32, $i4: i32);
const tty_flip_buffer_push: ref;
axiom (tty_flip_buffer_push == $sub.ref(0, 88636));
procedure  tty_flip_buffer_push($p0: ref);
const do_SAK: ref;
axiom (do_SAK == $sub.ref(0, 89668));
procedure  do_SAK($p0: ref);
const _raw_spin_lock: ref;
axiom (_raw_spin_lock == $sub.ref(0, 90700));
procedure  _raw_spin_lock($p0: ref);
const init_timer_key: ref;
axiom (init_timer_key == $sub.ref(0, 91732));
procedure  init_timer_key($p0: ref, $p1: ref, $p2: ref);
const altera_uart_exit: ref;
axiom (altera_uart_exit == $sub.ref(0, 92764));
procedure  altera_uart_exit()
{
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5184, 3} true;
  assume {:verifier.code 0} true;
  call platform_driver_unregister(altera_uart_platform_driver);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5185, 3} true;
  assume {:verifier.code 0} true;
  call uart_unregister_driver(altera_uart_driver);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5187, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const platform_driver_unregister: ref;
axiom (platform_driver_unregister == $sub.ref(0, 93796));
procedure  platform_driver_unregister($p0: ref);
const main: ref;
axiom (main == $sub.ref(0, 94828));
procedure {:entrypoint} main()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i1;
  var $i5: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i1;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
  var $i22: i1;
  var $i23: i1;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
  var $i29: i1;
  var $i30: i1;
  var $i31: i32;
  var $i33: i32;
  var $i34: i32;
  var $p35: ref;
  var $i36: i32;
  var $i37: i32;
  var $i38: i32;
  var $i39: i1;
  var $i40: i32;
  var $i41: i32;
  var $i42: i32;
  var $i43: i1;
  var $i44: i32;
  var $i45: i32;
  var $i32: i32;
$bb0:
  call $initialize();
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5281, 20} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5281, 20} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5282, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5283, 13} true;
  assume {:verifier.code 0} true;
  call $i0 := altera_uart_init();
  // WARNING: %1 = call i32 @altera_uart_init(), !dbg !4012, !verifier.code !4010
  call {:cexpr "tmp___7"} boogie_si_record_i32($i0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5285, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5285, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5286, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5514, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5516, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5292, 3} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5292, 13} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5295, 15} true;
  assume {:verifier.code 1} true;
  call $i3 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i3);
  // WARNING: %8 = call i32 @__VERIFIER_nondet_int(), !dbg !4027, !verifier.code !4030
  call {:cexpr "tmp___9"} boogie_si_record_i32($i3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5297, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5297, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i4 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5299, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i4 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5301, 71} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i2, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5301, 71} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  // WARNING: %13 = zext i1 %12 to i32, !dbg !4038, !verifier.code !4010
  call {:cexpr "__cil_tmp16"} boogie_si_record_i32($i6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5302, 13} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5302, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5310, 15} true;
  assume {:verifier.code 1} true;
  call $i8 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i8);
  // WARNING: %19 = call i32 @__VERIFIER_nondet_int(), !dbg !4050, !verifier.code !4030
  call {:cexpr "tmp___8"} boogie_si_record_i32($i8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5312, 17} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5312, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb14, $bb15;
$bb10:
  assume ($i7 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5305, 9} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb11:
  assume !(($i7 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5304, 7} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb13:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5507, 3} true;
  assume {:verifier.code 0} true;
  goto $bb89;
$bb14:
  assume ($i9 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5313, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i9 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5315, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i32($i8, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5315, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb17, $bb18;
$bb16:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5383, 9} true;
  assume {:verifier.code 0} true;
  call $i31 := altera_uart_tx_empty($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5385, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb17:
  assume ($i10 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5316, 7} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i10 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5318, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i8, 2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5318, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5388, 9} true;
  assume {:verifier.code 0} true;
  call $i33 := altera_uart_get_mctrl($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5390, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb20:
  assume ($i11 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5319, 7} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i11 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5321, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i8, 3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5321, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb23, $bb24;
$bb22:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5393, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_set_mctrl($u0, $u1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5395, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb23:
  assume ($i12 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5322, 7} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i12 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5324, 17} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i8, 4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5324, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb26, $bb27;
$bb25:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5398, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_start_tx($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5400, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb26:
  assume ($i13 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5325, 7} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i13 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5327, 17} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i32($i8, 5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5327, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb29, $bb30;
$bb28:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5403, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_stop_tx($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5405, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb29:
  assume ($i14 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5328, 7} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i14 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5330, 17} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i8, 6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5330, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb32, $bb33;
$bb31:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5408, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_stop_rx($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5410, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb32:
  assume ($i15 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5331, 7} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i15 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5333, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i8, 7);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5333, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb35, $bb36;
$bb34:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5413, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_enable_ms($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5415, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb35:
  assume ($i16 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5334, 7} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i16 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5336, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i32($i8, 8);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5336, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb38, $bb39;
$bb37:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5418, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_break_ctl($u0, $u1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5420, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb38:
  assume ($i17 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5337, 7} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i17 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5339, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $eq.i32($i8, 9);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5339, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb41, $bb42;
$bb40:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5423, 9} true;
  assume {:verifier.code 0} true;
  call $i34 := altera_uart_startup($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5425, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb41:
  assume ($i18 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5340, 7} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i18 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5342, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $eq.i32($i8, 10);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5342, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb44, $bb45;
$bb43:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5428, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_shutdown($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5430, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb44:
  assume ($i19 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5343, 7} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i19 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5345, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i8, 11);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5345, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb47, $bb48;
$bb46:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5433, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_set_termios($u0, $u2, $u2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5435, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb47:
  assume ($i20 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5346, 7} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume !(($i20 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5348, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i8, 12);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5348, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb50, $bb51;
$bb49:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5438, 9} true;
  assume {:verifier.code 0} true;
  call $p35 := altera_uart_type($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5440, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb50:
  assume ($i21 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5349, 7} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume !(($i21 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5351, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i8, 13);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5351, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb53, $bb54;
$bb52:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5443, 9} true;
  assume {:verifier.code 0} true;
  call $i36 := altera_uart_request_port($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5445, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb53:
  assume ($i22 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5352, 7} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb54:
  assume !(($i22 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5354, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i32($i8, 14);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5354, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb56, $bb57;
$bb55:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5448, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_release_port($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5450, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb56:
  assume ($i23 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5355, 7} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb57:
  assume !(($i23 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5357, 17} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i8, 15);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5357, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb59, $bb60;
$bb58:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5453, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_config_port($u0, $u1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5455, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb59:
  assume ($i24 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5358, 7} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb60:
  assume !(($i24 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5360, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i8, 16);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5360, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb62, $bb63;
$bb61:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5458, 9} true;
  assume {:verifier.code 0} true;
  call $i37 := altera_uart_verify_port($u0, $u3);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5460, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb62:
  assume ($i25 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5361, 7} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb63:
  assume !(($i25 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5363, 17} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i8, 17);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5363, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb65, $bb66;
$bb64:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5463, 9} true;
  assume {:verifier.code 0} true;
  call $i38 := altera_uart_poll_get_char($u0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5465, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb65:
  assume ($i26 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5364, 7} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb66:
  assume !(($i26 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5366, 17} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i8, 18);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5366, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb68, $bb69;
$bb67:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5468, 9} true;
  assume {:verifier.code 0} true;
  call altera_uart_poll_put_char($u0, $u4);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5470, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb68:
  assume ($i27 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5367, 7} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb69:
  assume !(($i27 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5369, 17} true;
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i8, 19);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5369, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb71, $bb72;
$bb70:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5472, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb71:
  assume ($i28 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5370, 7} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i28 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5372, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i8, 20);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5372, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb74, $bb75;
$bb73:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5474, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb74:
  assume ($i29 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5373, 7} true;
  assume {:verifier.code 0} true;
  goto $bb76;
$bb75:
  assume !(($i29 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5375, 17} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i8, 21);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5375, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb77, $bb78;
$bb76:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5476, 63} true;
  assume {:verifier.code 0} true;
  $i39 := $eq.i32($i2, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5476, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb85, $bb86;
$bb77:
  assume ($i30 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5376, 7} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb78:
  assume !(($i30 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5379, 7} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb79:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5493, 26} true;
  assume {:verifier.code 0} true;
  $M.6 := 2;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(2);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5494, 9} true;
  assume {:verifier.code 0} true;
  call $i45 := altera_uart_interrupt($u1, $u6);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5495, 26} true;
  assume {:verifier.code 0} true;
  $M.6 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5497, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb80:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5499, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i2;
  goto $bb84;
$bb81:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5380, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond 0} true;
  goto $bb82, $bb83;
$bb82:
  assume (0 == 1);
  assume {:verifier.code 0} true;
  assume false;
$bb83:
  assume !((0 == 1));
  assume {:verifier.code 0} true;
  assume false;
$bb84:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb92;
$bb85:
  assume ($i39 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5478, 38} true;
  assume {:verifier.code 0} true;
  call $i40 := altera_uart_probe($u5);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5478, 36} true;
  assume {:verifier.code 0} true;
  $M.8 := $i40;
  call {:cexpr "res_altera_uart_probe_30"} boogie_si_record_i32($i40);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5479, 34} true;
  assume {:verifier.code 0} true;
  $i41 := $M.8;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5479, 11} true;
  assume {:verifier.code 0} true;
  call ldv_check_return_value($i41);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5481, 15} true;
  assume {:verifier.code 0} true;
  $i42 := $M.8;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5481, 15} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i32($i42, 0);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5481, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb87, $bb88;
$bb86:
  assume !(($i39 == 1));
  assume {:verifier.code 0} true;
  $i44 := $i2;
  goto $bb91;
$bb87:
  assume ($i43 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5482, 13} true;
  assume {:verifier.code 0} true;
  goto $bb89;
$bb88:
  assume !(($i43 == 1));
  assume {:verifier.code 0} true;
  goto $bb90;
$bb89:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5510, 3} true;
  assume {:verifier.code 0} true;
  call altera_uart_exit();
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5511, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb90:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5487, 9} true;
  assume {:verifier.code 0} true;
  $i44 := 0;
  goto $bb91;
$bb91:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5490, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $i44;
  goto $bb84;
$bb92:
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:verifier.code 0} true;
  goto $bb95;
$bb95:
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:verifier.code 0} true;
  goto $bb98;
$bb98:
  assume {:verifier.code 0} true;
  goto $bb99;
$bb99:
  assume {:verifier.code 0} true;
  goto $bb100;
$bb100:
  assume {:verifier.code 0} true;
  goto $bb101;
$bb101:
  assume {:verifier.code 0} true;
  goto $bb102;
$bb102:
  assume {:verifier.code 0} true;
  goto $bb103;
$bb103:
  assume {:verifier.code 0} true;
  goto $bb104;
$bb104:
  assume {:verifier.code 0} true;
  goto $bb105;
$bb105:
  assume {:verifier.code 0} true;
  goto $bb106;
$bb106:
  assume {:verifier.code 0} true;
  goto $bb107;
$bb107:
  assume {:verifier.code 0} true;
  goto $bb108;
$bb108:
  assume {:verifier.code 0} true;
  goto $bb109;
$bb109:
  assume {:verifier.code 0} true;
  goto $bb110;
$bb110:
  assume {:verifier.code 0} true;
  goto $bb111;
$bb111:
  assume {:verifier.code 0} true;
  goto $bb112;
$bb112:
  assume {:verifier.code 0} true;
  goto $bb113;
$bb113:
  assume {:verifier.code 0} true;
  goto $bb114;
$bb114:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5292, 3} true;
  assume {:verifier.code 0} true;
  $i2 := $i32;
  goto $bb5;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 95860));
procedure  ldv_initialize();
const ldv_check_return_value: ref;
axiom (ldv_check_return_value == $sub.ref(0, 96892));
procedure  ldv_check_return_value($i0: i32);
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 97924));
procedure  ldv_check_final_state()
{
  var $i0: i32;
  var $i1: i1;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5651, 7} true;
  assume {:verifier.code 0} true;
  $i0 := $M.9;
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5651, 17} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32($i0, 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5651, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5653, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5655, 5} true;
  assume {:verifier.code 0} true;
  call ldv_blast_assert();
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5658, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_blast_assert: ref;
axiom (ldv_blast_assert == $sub.ref(0, 98956));
procedure  ldv_blast_assert()
{
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5522, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5523, 10} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/home/ankit--agrawal/smac/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out-0DtvHP.c", 5525, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 99988));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !6781, metadata !4012), !dbg !6782, !verifier.code !4010
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 101020));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 102052));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 103084));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 104116));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 105148));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 106180));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 107212));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 108244));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 109276));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 110308));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 111340));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 112372));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !4007, !verifier.code !4008
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 113404));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 114436));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 115468));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 116500));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 117532));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 118564));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 119596));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 120628));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 121660));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 122692));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 123724));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 124756));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 125788));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 126820));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 127852));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 128884));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 129916));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 130948));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 131980));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/home/ankit--agrawal/smack/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 133012));
procedure  llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 134044));
procedure  __SMACK_static_init()
{
$bb0:
  $M.6 := 0;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(0);
  $M.9 := 1;
  call {:cexpr "ldv_mutex"} boogie_si_record_i32(1);
  $M.0 := $store.ref($M.0, llvm.used, __mod_description657);
  $M.0 := $store.ref($M.0, $add.ref(llvm.used, 8), __mod_author658);
  $M.0 := $store.ref($M.0, $add.ref(llvm.used, 16), __mod_license659);
  $M.0 := $store.ref($M.0, $add.ref(llvm.used, 24), __mod_alias660);
  $M.0 := $store.ref($M.0, $add.ref(llvm.used, 32), __mod_alias661);
  $M.0 := $store.i8($M.0, __mod_description657, 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 1), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 2), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 3), 99);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 4), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 5), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 6), 112);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 7), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 8), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 9), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 10), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 11), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 12), 65);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 13), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 14), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 15), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 16), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 17), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 18), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 19), 85);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 20), 65);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 21), 82);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 22), 84);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 23), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 24), 100);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 25), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 26), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 27), 118);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 28), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 29), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_description657, 30), 0);
  $M.0 := $store.i8($M.0, __mod_author658, 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 1), 117);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 2), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 3), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 4), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 5), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 6), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 7), 84);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 8), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 9), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 10), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 11), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 12), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 13), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 14), 67);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 15), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 16), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 17), 117);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 18), 32);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 19), 60);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 20), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 21), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 22), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 23), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 24), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 25), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 26), 64);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 27), 119);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 28), 121);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 29), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 30), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 31), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 32), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 33), 46);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 34), 99);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 35), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 36), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 37), 46);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 38), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 39), 119);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 40), 62);
  $M.0 := $store.i8($M.0, $add.ref(__mod_author658, 41), 0);
  $M.0 := $store.i8($M.0, __mod_license659, 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 1), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 2), 99);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 3), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 4), 110);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 5), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 6), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 7), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 8), 71);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 9), 80);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 10), 76);
  $M.0 := $store.i8($M.0, $add.ref(__mod_license659, 11), 0);
  $M.0 := $store.i8($M.0, __mod_alias660, 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 1), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 2), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 3), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 4), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 5), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 6), 112);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 7), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 8), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 9), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 10), 102);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 11), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 12), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 13), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 14), 58);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 15), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 16), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 17), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 18), 101);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 19), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 20), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 21), 95);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 22), 117);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 23), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 24), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 25), 116);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias660, 26), 0);
  $M.0 := $store.i8($M.0, __mod_alias661, 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 1), 108);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 2), 105);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 3), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 4), 115);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 5), 61);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 6), 99);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 7), 104);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 8), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 9), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 10), 45);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 11), 109);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 12), 97);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 13), 106);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 14), 111);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 15), 114);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 16), 45);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 17), 50);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 18), 48);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 19), 52);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 20), 45);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 21), 42);
  $M.0 := $store.i8($M.0, $add.ref(__mod_alias661, 22), 0);
  $M.0 := $store.ref($M.0, altera_uart_ops, altera_uart_tx_empty);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 8), altera_uart_set_mctrl);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 16), altera_uart_get_mctrl);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 24), altera_uart_stop_tx);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 32), altera_uart_start_tx);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 48), altera_uart_stop_rx);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 56), altera_uart_enable_ms);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 64), altera_uart_break_ctl);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 72), altera_uart_startup);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 80), altera_uart_shutdown);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 96), altera_uart_set_termios);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 128), altera_uart_type);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 136), altera_uart_release_port);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 144), altera_uart_request_port);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 152), altera_uart_config_port);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 160), altera_uart_verify_port);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 176), altera_uart_poll_put_char);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_ops, 184), altera_uart_poll_get_char);
  $M.10 := $store.i32($M.10, altera_uart_ports, 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 4), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 8), 0);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 16), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref(altera_uart_ports, 24), 0);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 32), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 40), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 48), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 56), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 64), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 72), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 80), 0);
  $M.10 := $store.i64($M.10, $add.ref(altera_uart_ports, 88), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 96), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 100), 0);
  $M.10 := $store.i8($M.10, $add.ref(altera_uart_ports, 104), 0);
  $M.10 := $store.i8($M.10, $add.ref(altera_uart_ports, 105), 0);
  $M.10 := $store.i8($M.10, $add.ref(altera_uart_ports, 106), 0);
  $M.10 := $store.i8($M.10, $add.ref(altera_uart_ports, 107), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 108), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 112), 0);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 120), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 128), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 128), 4), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 128), 8), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 128), 12), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 128), 16), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 128), 20), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 128), 24), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 128), 28), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 128), 32), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 128), 36), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 128), 40), 0);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 176), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref(altera_uart_ports, 184), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 192), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 196), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 200), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 204), 0);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 208), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 216), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 220), 0);
  $M.10 := $store.i64($M.10, $add.ref(altera_uart_ports, 224), 0);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 232), $0.ref);
  $M.10 := $store.i8($M.10, $add.ref(altera_uart_ports, 240), 0);
  $M.10 := $store.i8($M.10, $add.ref(altera_uart_ports, 241), 0);
  $M.10 := $store.i8($M.10, $add.ref(altera_uart_ports, 242), 0);
  $M.10 := $store.i8($M.10, $add.ref(altera_uart_ports, 243), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 243), 1), 0);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 248), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref(altera_uart_ports, 256), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 256), 8), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 256), 16), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 256), 24), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 256), 32), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 256), 40), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 256), 48), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 256), 52), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 256), 56), $0.ref);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 256), 64), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 1), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 2), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 3), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 4), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 5), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 6), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 7), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 8), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 9), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 10), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 11), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 12), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 13), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 14), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 256), 64), 15), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 336), 0);
  $M.10 := $store.i16($M.10, $add.ref(altera_uart_ports, 340), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 344), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 4), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 8), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 16), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 344), 24), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 32), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 40), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 48), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 56), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 64), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 72), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 80), 0);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 344), 88), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 96), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 100), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 344), 104), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 344), 105), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 344), 106), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 344), 107), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 108), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 112), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 120), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 128), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 128), 4), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 128), 8), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 128), 12), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 128), 16), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 128), 20), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 128), 24), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 128), 28), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 128), 32), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 128), 36), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 128), 40), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 176), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 344), 184), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 192), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 196), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 200), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 204), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 208), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 216), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 220), 0);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 344), 224), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 232), $0.ref);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 344), 240), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 344), 241), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 344), 242), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 344), 243), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 243), 1), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 248), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 344), 256), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 8), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 16), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 24), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 32), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 40), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 48), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 52), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 56), $0.ref);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 1), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 2), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 3), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 4), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 5), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 6), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 7), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 8), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 9), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 10), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 11), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 12), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 13), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 14), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 344), 256), 64), 15), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 344), 336), 0);
  $M.10 := $store.i16($M.10, $add.ref($add.ref(altera_uart_ports, 344), 340), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 688), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 4), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 8), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 16), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 688), 24), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 32), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 40), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 48), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 56), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 64), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 72), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 80), 0);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 688), 88), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 96), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 100), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 688), 104), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 688), 105), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 688), 106), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 688), 107), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 108), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 112), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 120), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 128), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 128), 4), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 128), 8), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 128), 12), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 128), 16), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 128), 20), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 128), 24), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 128), 28), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 128), 32), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 128), 36), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 128), 40), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 176), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 688), 184), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 192), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 196), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 200), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 204), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 208), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 216), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 220), 0);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 688), 224), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 232), $0.ref);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 688), 240), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 688), 241), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 688), 242), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 688), 243), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 243), 1), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 248), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 688), 256), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 8), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 16), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 24), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 32), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 40), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 48), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 52), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 56), $0.ref);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 1), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 2), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 3), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 4), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 5), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 6), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 7), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 8), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 9), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 10), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 11), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 12), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 13), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 14), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 688), 256), 64), 15), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 688), 336), 0);
  $M.10 := $store.i16($M.10, $add.ref($add.ref(altera_uart_ports, 688), 340), 0);
  $M.10 := $store.i32($M.10, $add.ref(altera_uart_ports, 1032), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 4), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 8), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 16), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 24), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 32), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 40), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 48), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 56), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 64), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 72), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 80), 0);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 88), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 96), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 100), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 104), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 105), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 106), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 107), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 108), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 112), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 120), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 128), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 128), 4), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 128), 8), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 128), 12), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 128), 16), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 128), 20), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 128), 24), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 128), 28), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 128), 32), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 128), 36), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 128), 40), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 176), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 184), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 192), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 196), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 200), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 204), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 208), $0.ref);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 216), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 220), 0);
  $M.10 := $store.i64($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 224), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 232), $0.ref);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 240), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 241), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 242), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 243), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 243), 1), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 248), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 256), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 8), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 16), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 24), $0.ref);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 32), $0.ref);
  $M.10 := $store.i64($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 40), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 48), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 52), 0);
  $M.10 := $store.ref($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 56), $0.ref);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 1), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 2), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 3), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 4), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 5), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 6), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 7), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 8), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 9), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 10), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 11), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 12), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 13), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 14), 0);
  $M.10 := $store.i8($M.10, $add.ref($add.ref($add.ref($add.ref(altera_uart_ports, 1032), 256), 64), 15), 0);
  $M.10 := $store.i32($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 336), 0);
  $M.10 := $store.i16($M.10, $add.ref($add.ref(altera_uart_ports, 1032), 340), 0);
  $M.0 := $store.ref($M.0, altera_uart_platform_driver, altera_uart_probe);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_platform_driver, 8), altera_uart_remove);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_platform_driver, 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_platform_driver, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_platform_driver, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_platform_driver, 40), .str);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 16), __this_module);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 24), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 32), 0);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(altera_uart_platform_driver, 40), 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_platform_driver, 152), $0.ref);
  $M.0 := $store.ref($M.0, altera_uart_driver, __this_module);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_driver, 8), .str);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_driver, 16), .str.1);
  $M.0 := $store.i32($M.0, $add.ref(altera_uart_driver, 24), 204);
  $M.0 := $store.i32($M.0, $add.ref(altera_uart_driver, 28), 213);
  $M.0 := $store.i32($M.0, $add.ref(altera_uart_driver, 32), 4);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_driver, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_driver, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(altera_uart_driver, 56), $0.ref);
  $M.8 := 0;
  call {:cexpr "res_altera_uart_probe_30"} boogie_si_record_i32(0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 135076));
procedure  devirtbounce(funcPtr: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 136108));
procedure  devirtbounce.1(funcPtr: ref, arg: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $i6: i32;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i32;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i1;
  var $i19: i1;
  var $i20: i1;
  var $i21: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i21 := $eq.ref(altera_uart_poll_get_char, $p0);
  assume {:branchcond $i21} true;
  goto $bb8, $bb15;
$bb2:
  assume ($i15 == 1);
  $p1 := $bitcast.ref.ref(arg);
  call $i2 := altera_uart_probe($p1);
  $r := $i2;
  $exn := false;
  return;
$bb3:
  assume ($i16 == 1);
  $p3 := $bitcast.ref.ref(arg);
  call $i4 := altera_uart_remove($p3);
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume ($i17 == 1);
  $p5 := $bitcast.ref.ref(arg);
  call $i6 := altera_uart_tx_empty($p5);
  $r := $i6;
  $exn := false;
  return;
$bb5:
  assume ($i18 == 1);
  $p7 := $bitcast.ref.ref(arg);
  call $i8 := altera_uart_get_mctrl($p7);
  $r := $i8;
  $exn := false;
  return;
$bb6:
  assume ($i19 == 1);
  $p9 := $bitcast.ref.ref(arg);
  call $i10 := altera_uart_startup($p9);
  $r := $i10;
  $exn := false;
  return;
$bb7:
  assume ($i20 == 1);
  $p11 := $bitcast.ref.ref(arg);
  call $i12 := altera_uart_request_port($p11);
  $r := $i12;
  $exn := false;
  return;
$bb8:
  assume ($i21 == 1);
  $p13 := $bitcast.ref.ref(arg);
  call $i14 := altera_uart_poll_get_char($p13);
  $r := $i14;
  $exn := false;
  return;
$bb9:
  assume !(($i15 == 1));
  assume false;
$bb10:
  assume !(($i16 == 1));
  $i15 := $eq.ref(altera_uart_probe, $p0);
  assume {:branchcond $i15} true;
  goto $bb2, $bb9;
$bb11:
  assume !(($i17 == 1));
  $i16 := $eq.ref(altera_uart_remove, $p0);
  assume {:branchcond $i16} true;
  goto $bb3, $bb10;
$bb12:
  assume !(($i18 == 1));
  $i17 := $eq.ref(altera_uart_tx_empty, $p0);
  assume {:branchcond $i17} true;
  goto $bb4, $bb11;
$bb13:
  assume !(($i19 == 1));
  $i18 := $eq.ref(altera_uart_get_mctrl, $p0);
  assume {:branchcond $i18} true;
  goto $bb5, $bb12;
$bb14:
  assume !(($i20 == 1));
  $i19 := $eq.ref(altera_uart_startup, $p0);
  assume {:branchcond $i19} true;
  goto $bb6, $bb13;
$bb15:
  assume !(($i21 == 1));
  $i20 := $eq.ref(altera_uart_request_port, $p0);
  assume {:branchcond $i20} true;
  goto $bb7, $bb14;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 137140));
procedure  devirtbounce.2(funcPtr: ref, arg: i32, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const $u0: ref;
const $u1: i32;
const $u2: ref;
const $u3: ref;
const $u4: i8;
const $u5: ref;
const $u6: ref;
procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
