// generated by SMACK version 1.9.0 for corral
// via /mnt/local/smack-project/smack/bin/smack -x=svcomp --time-limit 1800 /proj/SMACK/sv-benchmarks/c/ldv-linux-4.2-rc1/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out.c --verifier-options  /bopt:boolControlVC /bopt:z3opt:SMT.MBQI=false /deepAsserts /noCallTreeReuse /noInitPruning /trackAllVars /noArrayTheory --unroll 16

// Basic types
type i1 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type ref = i64;
type float = i32;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $2.ref: ref;
axiom ($2.ref == 2);
const $3.ref: ref;
axiom ($3.ref == 3);
const $4.ref: ref;
axiom ($4.ref == 4);
const $5.ref: ref;
axiom ($5.ref == 5);
const $6.ref: ref;
axiom ($6.ref == 6);
const $7.ref: ref;
axiom ($7.ref == 7);
const $8.ref: ref;
axiom ($8.ref == 8);
const $9.ref: ref;
axiom ($9.ref == 9);
const $10.ref: ref;
axiom ($10.ref == 10);
const $11.ref: ref;
axiom ($11.ref == 11);
const $12.ref: ref;
axiom ($12.ref == 12);
const $13.ref: ref;
axiom ($13.ref == 13);
const $14.ref: ref;
axiom ($14.ref == 14);
const $1024.ref: ref;
axiom ($1024.ref == 1024);

// Memory maps (63 regions)
var $M.0: [ref] i8;
var $M.1: i32;
var $M.2: i32;
var $M.3: i32;
var $M.4: [ref] i8;
var $M.5: [ref] ref;
var $M.6: [ref] ref;
var $M.7: [ref] ref;
var $M.8: [ref] ref;
var $M.9: [ref] ref;
var $M.10: [ref] ref;
var $M.11: i32;
var $M.12: i32;
var $M.13: i32;
var $M.14: [ref] i32;
var $M.15: [ref] i8;
var $M.16: [ref] i8;
var $M.17: [ref] i32;
var $M.18: i32;
var $M.19: i32;
var $M.20: ref;
var $M.21: [ref] i8;
var $M.22: ref;
var $M.23: ref;
var $M.24: ref;
var $M.25: i32;
var $M.26: i32;
var $M.27: i32;
var $M.28: i32;
var $M.29: i32;
var $M.30: i32;
var $M.31: i32;
var $M.32: i32;
var $M.33: i32;
var $M.34: i32;
var $M.35: i32;
var $M.36: i32;
var $M.37: i32;
var $M.38: i32;
var $M.39: i32;
var $M.40: i32;
var $M.41: i32;
var $M.42: i32;
var $M.43: i32;
var $M.44: i32;
var $M.45: i32;
var $M.46: i32;
var $M.47: i32;
var $M.48: i32;
var $M.49: i32;
var $M.50: i32;
var $M.51: i32;
var $M.52: i32;
var $M.53: i32;
var $M.54: i32;
var $M.55: [ref] i8;
var $M.56: [ref] i8;
var $M.57: [ref] i8;
var $M.58: [ref] i8;
var $M.59: [ref] i8;
var $M.60: [ref] i8;
var $M.61: [ref] i8;
var $M.62: [ref] i8;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 579026));
axiom ($EXTERNS_BOTTOM == $sub.ref(0, 32800));
axiom ($MALLOC_TOP == 9223372036854775807);

// Bitstd::vector-integer conversions
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2int"} $bv2int.64(i: bv64) returns (i64);

// Pointer-number conversions
function {:inline} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:inline} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:inline} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:inline} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:inline} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:inline} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:inline} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:inline} $i2p.i64.ref(i: i64) returns (ref) { i }

// Pointer predicates
function {:inline} $eq.ref(p1: ref, p2: ref) returns (i1) { if $eq.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:inline} $ne.ref(p1: ref, p2: ref) returns (i1) { if $ne.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:inline} $ugt.ref(p1: ref, p2: ref) returns (i1) { if $ugt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:inline} $uge.ref(p1: ref, p2: ref) returns (i1) { if $uge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:inline} $ult.ref(p1: ref, p2: ref) returns (i1) { if $ult.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:inline} $ule.ref(p1: ref, p2: ref) returns (i1) { if $ule.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:inline} $sgt.ref(p1: ref, p2: ref) returns (i1) { if $sgt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:inline} $sge.ref(p1: ref, p2: ref) returns (i1) { if $sge.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:inline} $slt.ref(p1: ref, p2: ref) returns (i1) { if $slt.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:inline} $sle.ref(p1: ref, p2: ref) returns (i1) { if $sle.i64.bool(p1, p2) then 1 else 0 }
function {:inline} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer operations
function {:inline} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:inline} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:inline} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

const LDV_IN_INTERRUPT: ref;
axiom (LDV_IN_INTERRUPT == $sub.ref(0, 1028));
const st_fops_group1: ref;
axiom (st_fops_group1 == $sub.ref(0, 2060));
const st_fops_group2: ref;
axiom (st_fops_group2 == $sub.ref(0, 3092));
const st_template_group0: ref;
axiom (st_template_group0 == $sub.ref(0, 4124));
const ldv_state_variable_11: ref;
axiom (ldv_state_variable_11 == $sub.ref(0, 5152));
const ldv_state_variable_21: ref;
axiom (ldv_state_variable_21 == $sub.ref(0, 6180));
const ldv_state_variable_7: ref;
axiom (ldv_state_variable_7 == $sub.ref(0, 7208));
const ldv_state_variable_17: ref;
axiom (ldv_state_variable_17 == $sub.ref(0, 8236));
const ldv_state_variable_2: ref;
axiom (ldv_state_variable_2 == $sub.ref(0, 9264));
const ldv_state_variable_1: ref;
axiom (ldv_state_variable_1 == $sub.ref(0, 10292));
const ldv_state_variable_18: ref;
axiom (ldv_state_variable_18 == $sub.ref(0, 11320));
const ref_cnt: ref;
axiom (ref_cnt == $sub.ref(0, 12348));
const ldv_state_variable_0: ref;
axiom (ldv_state_variable_0 == $sub.ref(0, 13376));
const ldv_state_variable_16: ref;
axiom (ldv_state_variable_16 == $sub.ref(0, 14404));
const ldv_state_variable_13: ref;
axiom (ldv_state_variable_13 == $sub.ref(0, 15432));
const ldv_state_variable_6: ref;
axiom (ldv_state_variable_6 == $sub.ref(0, 16460));
const ldv_state_variable_3: ref;
axiom (ldv_state_variable_3 == $sub.ref(0, 17488));
const ldv_state_variable_9: ref;
axiom (ldv_state_variable_9 == $sub.ref(0, 18516));
const ldv_state_variable_12: ref;
axiom (ldv_state_variable_12 == $sub.ref(0, 19544));
const ldv_state_variable_20: ref;
axiom (ldv_state_variable_20 == $sub.ref(0, 20572));
const ldv_state_variable_14: ref;
axiom (ldv_state_variable_14 == $sub.ref(0, 21600));
const ldv_state_variable_15: ref;
axiom (ldv_state_variable_15 == $sub.ref(0, 22628));
const ldv_state_variable_8: ref;
axiom (ldv_state_variable_8 == $sub.ref(0, 23656));
const ldv_state_variable_4: ref;
axiom (ldv_state_variable_4 == $sub.ref(0, 24684));
const ldv_state_variable_19: ref;
axiom (ldv_state_variable_19 == $sub.ref(0, 25712));
const ldv_state_variable_10: ref;
axiom (ldv_state_variable_10 == $sub.ref(0, 26740));
const ldv_state_variable_5: ref;
axiom (ldv_state_variable_5 == $sub.ref(0, 27768));
const ldv_retval_0: ref;
axiom (ldv_retval_0 == $sub.ref(0, 28796));
const ldv_retval_1: ref;
axiom (ldv_retval_1 == $sub.ref(0, 29824));
const ldv_retval_2: ref;
axiom (ldv_retval_2 == $sub.ref(0, 30852));
const ldv_spin: ref;
axiom (ldv_spin == $sub.ref(0, 31880));
const st_use_lock: ref;
axiom (st_use_lock == $sub.ref(0, 32976));
const try_wdio: ref;
axiom (try_wdio == $sub.ref(0, 34004));
const try_rdio: ref;
axiom (try_rdio == $sub.ref(0, 35032));
const modes_defined: ref;
axiom (modes_defined == $sub.ref(0, 36060));
const debug_flag: ref;
axiom (debug_flag == $sub.ref(0, 37088));
const verstr: ref;
axiom (verstr == $sub.ref(0, 38120));
const max_sg_segs: ref;
axiom (max_sg_segs == $sub.ref(0, 39148));
const buffer_kbs: ref;
axiom (buffer_kbs == $sub.ref(0, 40176));
const driver_attr_try_direct_io: ref;
axiom (driver_attr_try_direct_io == $sub.ref(0, 41248));
const driver_attr_fixed_buffer_size: ref;
axiom (driver_attr_fixed_buffer_size == $sub.ref(0, 42320));
const driver_attr_max_sg_segs: ref;
axiom (driver_attr_max_sg_segs == $sub.ref(0, 43392));
const driver_attr_version: ref;
axiom (driver_attr_version == $sub.ref(0, 44464));
const st_fixed_buffer_size: ref;
axiom (st_fixed_buffer_size == $sub.ref(0, 45492));
const st_ref_mutex: ref;
axiom (st_ref_mutex == $sub.ref(0, 46676));
const dev_attr_resid_cnt: ref;
axiom (dev_attr_resid_cnt == $sub.ref(0, 47748));
const dev_attr_other_cnt: ref;
axiom (dev_attr_other_cnt == $sub.ref(0, 48820));
const dev_attr_io_ns: ref;
axiom (dev_attr_io_ns == $sub.ref(0, 49892));
const dev_attr_in_flight: ref;
axiom (dev_attr_in_flight == $sub.ref(0, 50964));
const dev_attr_write_ns: ref;
axiom (dev_attr_write_ns == $sub.ref(0, 52036));
const dev_attr_write_byte_cnt: ref;
axiom (dev_attr_write_byte_cnt == $sub.ref(0, 53108));
const dev_attr_write_cnt: ref;
axiom (dev_attr_write_cnt == $sub.ref(0, 54180));
const dev_attr_read_ns: ref;
axiom (dev_attr_read_ns == $sub.ref(0, 55252));
const dev_attr_read_byte_cnt: ref;
axiom (dev_attr_read_byte_cnt == $sub.ref(0, 56324));
const dev_attr_read_cnt: ref;
axiom (dev_attr_read_cnt == $sub.ref(0, 57396));
const {:count 11} st_stats_attrs: ref;
axiom (st_stats_attrs == $sub.ref(0, 58508));
const stats_group: ref;
axiom (stats_group == $sub.ref(0, 59564));
const dev_attr_options: ref;
axiom (dev_attr_options == $sub.ref(0, 60636));
const dev_attr_default_compression: ref;
axiom (dev_attr_default_compression == $sub.ref(0, 61708));
const dev_attr_default_density: ref;
axiom (dev_attr_default_density == $sub.ref(0, 62780));
const dev_attr_default_blksize: ref;
axiom (dev_attr_default_blksize == $sub.ref(0, 63852));
const dev_attr_defined: ref;
axiom (dev_attr_defined == $sub.ref(0, 64924));
const {:count 6} st_dev_attrs: ref;
axiom (st_dev_attrs == $sub.ref(0, 65996));
const st_group: ref;
axiom (st_group == $sub.ref(0, 67052));
const {:count 3} st_dev_groups: ref;
axiom (st_dev_groups == $sub.ref(0, 68100));
const st_sysfs_class: ref;
axiom (st_sysfs_class == $sub.ref(0, 69244));
const {:count 16} st_formats: ref;
axiom (st_formats == $sub.ref(0, 70396));
const st_fops: ref;
axiom (st_fops == $sub.ref(0, 71644));
const st_index_idr: ref;
axiom (st_index_idr == $sub.ref(0, 72780));
const st_index_lock: ref;
axiom (st_index_lock == $sub.ref(0, 73876));
const try_direct_io: ref;
axiom (try_direct_io == $sub.ref(0, 74904));
const st_template: ref;
axiom (st_template == $sub.ref(0, 76088));
const st_max_sg_segs: ref;
axiom (st_max_sg_segs == $sub.ref(0, 77116));
const {:count 6} reject_list: ref;
axiom (reject_list == $sub.ref(0, 78332));
const debugging: ref;
axiom (debugging == $sub.ref(0, 79360));
const {:count 9} .str.18: ref;
axiom (.str.18 == $sub.ref(0, 80393));
const {:count 4} .str.19: ref;
axiom (.str.19 == $sub.ref(0, 81421));
const .str.20: ref;
axiom (.str.20 == $sub.ref(0, 82446));
const {:count 5} .str.21: ref;
axiom (.str.21 == $sub.ref(0, 83475));
const {:count 4} .str.22: ref;
axiom (.str.22 == $sub.ref(0, 84503));
const {:count 4} .str.23: ref;
axiom (.str.23 == $sub.ref(0, 85531));
const {:count 4} .str.24: ref;
axiom (.str.24 == $sub.ref(0, 86559));
const {:count 4} .str.25: ref;
axiom (.str.25 == $sub.ref(0, 87587));
const {:count 3} .str.27: ref;
axiom (.str.27 == $sub.ref(0, 88614));
const __this_module: ref;
axiom (__this_module == $sub.ref(0, 32776));
const {:count 21} .str.74: ref;
axiom (.str.74 == $sub.ref(0, 89659));
const {:count 5} .str.30: ref;
axiom (.str.30 == $sub.ref(0, 90688));
const {:count 2} .str.1: ref;
axiom (.str.1 == $sub.ref(0, 91714));
const {:count 25} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 92763));
const {:count 33} .str.3: ref;
axiom (.str.3 == $sub.ref(0, 93820));
const {:count 2} .str.4: ref;
axiom (.str.4 == $sub.ref(0, 94846));
const {:count 58} .str.5: ref;
axiom (.str.5 == $sub.ref(0, 95928));
const {:count 41} .str.6: ref;
axiom (.str.6 == $sub.ref(0, 96993));
const {:count 39} .str.7: ref;
axiom (.str.7 == $sub.ref(0, 98056));
const {:count 12} .str.8: ref;
axiom (.str.8 == $sub.ref(0, 99092));
const {:count 32} .str.9: ref;
axiom (.str.9 == $sub.ref(0, 100148));
const {:count 5} .str.10: ref;
axiom (.str.10 == $sub.ref(0, 101177));
const {:count 32} .str.11: ref;
axiom (.str.11 == $sub.ref(0, 102233));
const {:count 2} .str.12: ref;
axiom (.str.12 == $sub.ref(0, 103259));
const {:count 23} .str.13: ref;
axiom (.str.13 == $sub.ref(0, 104306));
const {:count 4} .str.15: ref;
axiom (.str.15 == $sub.ref(0, 105334));
const {:count 3} .str.16: ref;
axiom (.str.16 == $sub.ref(0, 106361));
const {:count 41} .str.14: ref;
axiom (.str.14 == $sub.ref(0, 107426));
const {:count 44} .str.31: ref;
axiom (.str.31 == $sub.ref(0, 108494));
const {:count 4} .str.33: ref;
axiom (.str.33 == $sub.ref(0, 109522));
const {:count 5} .str.34: ref;
axiom (.str.34 == $sub.ref(0, 110551));
const {:count 36} .str.32: ref;
axiom (.str.32 == $sub.ref(0, 111611));
const {:count 29} .str.35: ref;
axiom (.str.35 == $sub.ref(0, 112664));
const {:count 2} .str.37: ref;
axiom (.str.37 == $sub.ref(0, 113690));
const {:count 7} .str.36: ref;
axiom (.str.36 == $sub.ref(0, 114721));
const {:count 3} .str.38: ref;
axiom (.str.38 == $sub.ref(0, 115748));
const {:count 29} .str.39: ref;
axiom (.str.39 == $sub.ref(0, 116801));
const __preempt_count: ref;
axiom (__preempt_count == $sub.ref(0, 32784));
const {:count 38} .str.26: ref;
axiom (.str.26 == $sub.ref(0, 117863));
const {:count 8} .str.17: ref;
axiom (.str.17 == $sub.ref(0, 118895));
const {:count 14} .str.28: ref;
axiom (.str.28 == $sub.ref(0, 119933));
const {:count 18} .str.29: ref;
axiom (.str.29 == $sub.ref(0, 120975));
const {:count 2} .str.103: ref;
axiom (.str.103 == $sub.ref(0, 122001));
const {:count 4} .str.104: ref;
axiom (.str.104 == $sub.ref(0, 123029));
const {:count 22} .str.102: ref;
axiom (.str.102 == $sub.ref(0, 124075));
const {:count 35} .str.157: ref;
axiom (.str.157 == $sub.ref(0, 125134));
const {:count 2} .str.158: ref;
axiom (.str.158 == $sub.ref(0, 126160));
const {:count 54} .str.159: ref;
axiom (.str.159 == $sub.ref(0, 127238));
const {:count 36} .str.160: ref;
axiom (.str.160 == $sub.ref(0, 128298));
const {:count 26} .str.161: ref;
axiom (.str.161 == $sub.ref(0, 129348));
const {:count 35} .str.162: ref;
axiom (.str.162 == $sub.ref(0, 130407));
const {:count 196} .str.111: ref;
axiom (.str.111 == $sub.ref(0, 131627));
const {:count 10} .str.112: ref;
axiom (.str.112 == $sub.ref(0, 132661));
const {:count 7} .str.113: ref;
axiom (.str.113 == $sub.ref(0, 133692));
const {:count 9} .str.114: ref;
axiom (.str.114 == $sub.ref(0, 134725));
const {:count 23} .str.115: ref;
axiom (.str.115 == $sub.ref(0, 135772));
const {:count 22} .str.116: ref;
axiom (.str.116 == $sub.ref(0, 136818));
const {:count 17} .str.117: ref;
axiom (.str.117 == $sub.ref(0, 137859));
const {:count 16} .str.118: ref;
axiom (.str.118 == $sub.ref(0, 138899));
const {:count 20} .str.119: ref;
axiom (.str.119 == $sub.ref(0, 139943));
const {:count 36} .str.120: ref;
axiom (.str.120 == $sub.ref(0, 141003));
const {:count 15} .str.121: ref;
axiom (.str.121 == $sub.ref(0, 142042));
const {:count 2} .str.89: ref;
axiom (.str.89 == $sub.ref(0, 143068));
const {:count 21} .str.122: ref;
axiom (.str.122 == $sub.ref(0, 144113));
const {:count 33} .str.123: ref;
axiom (.str.123 == $sub.ref(0, 145170));
const {:count 29} .str.124: ref;
axiom (.str.124 == $sub.ref(0, 146223));
const {:count 34} .str.125: ref;
axiom (.str.125 == $sub.ref(0, 147281));
const {:count 9} .str.109: ref;
axiom (.str.109 == $sub.ref(0, 148314));
const {:count 8} .str.108: ref;
axiom (.str.108 == $sub.ref(0, 149346));
const {:count 29} .str.126: ref;
axiom (.str.126 == $sub.ref(0, 150399));
const {:count 28} .str.107: ref;
axiom (.str.107 == $sub.ref(0, 151451));
const {:count 35} .str.110: ref;
axiom (.str.110 == $sub.ref(0, 152510));
const {:count 31} .str.143: ref;
axiom (.str.143 == $sub.ref(0, 153565));
const {:count 35} .str.134: ref;
axiom (.str.134 == $sub.ref(0, 154624));
const {:count 42} .str.135: ref;
axiom (.str.135 == $sub.ref(0, 155690));
const {:count 5} .str.136: ref;
axiom (.str.136 == $sub.ref(0, 156719));
const {:count 6} .str.137: ref;
axiom (.str.137 == $sub.ref(0, 157749));
const {:count 6} .str.138: ref;
axiom (.str.138 == $sub.ref(0, 158779));
const {:count 26} .str.139: ref;
axiom (.str.139 == $sub.ref(0, 159829));
const scsi_command_size_tbl: ref;
axiom (scsi_command_size_tbl == $sub.ref(0, 32792));
const {:count 9} .str.145: ref;
axiom (.str.145 == $sub.ref(0, 160862));
const {:count 25} .str.144: ref;
axiom (.str.144 == $sub.ref(0, 161911));
const current_task: ref;
axiom (current_task == $sub.ref(0, 32800));
const {:count 42} .str.97: ref;
axiom (.str.97 == $sub.ref(0, 162977));
const {:count 42} .str.98: ref;
axiom (.str.98 == $sub.ref(0, 164043));
const {:count 42} .str.99: ref;
axiom (.str.99 == $sub.ref(0, 165109));
const {:count 28} .str.100: ref;
axiom (.str.100 == $sub.ref(0, 166161));
const {:count 31} .str.101: ref;
axiom (.str.101 == $sub.ref(0, 167216));
const {:count 20} .str.105: ref;
axiom (.str.105 == $sub.ref(0, 168260));
const {:count 17} .str.106: ref;
axiom (.str.106 == $sub.ref(0, 169301));
const {:count 40} .str.133: ref;
axiom (.str.133 == $sub.ref(0, 170365));
const {:count 24} .str.163: ref;
axiom (.str.163 == $sub.ref(0, 171413));
const {:count 38} .str.164: ref;
axiom (.str.164 == $sub.ref(0, 172475));
const {:count 28} .str.166: ref;
axiom (.str.166 == $sub.ref(0, 173527));
const {:count 29} .str.167: ref;
axiom (.str.167 == $sub.ref(0, 174580));
const {:count 26} .str.168: ref;
axiom (.str.168 == $sub.ref(0, 175630));
const {:count 16} .str.169: ref;
axiom (.str.169 == $sub.ref(0, 176670));
const {:count 50} .str.170: ref;
axiom (.str.170 == $sub.ref(0, 177744));
const {:count 45} .str.171: ref;
axiom (.str.171 == $sub.ref(0, 178813));
const {:count 58} .str.172: ref;
axiom (.str.172 == $sub.ref(0, 179895));
const {:count 46} .str.173: ref;
axiom (.str.173 == $sub.ref(0, 180965));
const {:count 17} .str.174: ref;
axiom (.str.174 == $sub.ref(0, 182006));
const {:count 38} .str.175: ref;
axiom (.str.175 == $sub.ref(0, 183068));
const {:count 42} .str.176: ref;
axiom (.str.176 == $sub.ref(0, 184134));
const {:count 58} .str.127: ref;
axiom (.str.127 == $sub.ref(0, 185216));
const {:count 19} .str.96: ref;
axiom (.str.96 == $sub.ref(0, 186259));
const {:count 39} .str.177: ref;
axiom (.str.177 == $sub.ref(0, 187322));
const {:count 33} .str.140: ref;
axiom (.str.140 == $sub.ref(0, 188379));
const {:count 38} .str.128: ref;
axiom (.str.128 == $sub.ref(0, 189441));
const {:count 26} .str.129: ref;
axiom (.str.129 == $sub.ref(0, 190491));
const {:count 28} .str.130: ref;
axiom (.str.130 == $sub.ref(0, 191543));
const {:count 28} .str.131: ref;
axiom (.str.131 == $sub.ref(0, 192595));
const {:count 34} .str.132: ref;
axiom (.str.132 == $sub.ref(0, 193653));
const {:count 3} .str.205: ref;
axiom (.str.205 == $sub.ref(0, 194680));
const {:count 28} .str.204: ref;
axiom (.str.204 == $sub.ref(0, 195732));
const {:count 17} .str.206: ref;
axiom (.str.206 == $sub.ref(0, 196773));
const {:count 15} .str.207: ref;
axiom (.str.207 == $sub.ref(0, 197812));
const {:count 33} .str.198: ref;
axiom (.str.198 == $sub.ref(0, 198869));
const {:count 36} .str.199: ref;
axiom (.str.199 == $sub.ref(0, 199929));
const {:count 40} .str.200: ref;
axiom (.str.200 == $sub.ref(0, 200993));
const {:count 37} .str.201: ref;
axiom (.str.201 == $sub.ref(0, 202054));
const {:count 50} .str.202: ref;
axiom (.str.202 == $sub.ref(0, 203128));
const {:count 30} .str.203: ref;
axiom (.str.203 == $sub.ref(0, 204182));
const {:count 35} .str.196: ref;
axiom (.str.196 == $sub.ref(0, 205241));
const {:count 26} .str.197: ref;
axiom (.str.197 == $sub.ref(0, 206291));
const {:count 44} .str.178: ref;
axiom (.str.178 == $sub.ref(0, 207359));
const {:count 30} .str.179: ref;
axiom (.str.179 == $sub.ref(0, 208413));
const {:count 37} .str.180: ref;
axiom (.str.180 == $sub.ref(0, 209474));
const {:count 33} .str.181: ref;
axiom (.str.181 == $sub.ref(0, 210531));
const {:count 35} .str.182: ref;
axiom (.str.182 == $sub.ref(0, 211590));
const {:count 49} .str.183: ref;
axiom (.str.183 == $sub.ref(0, 212663));
const {:count 27} .str.184: ref;
axiom (.str.184 == $sub.ref(0, 213714));
const {:count 27} .str.185: ref;
axiom (.str.185 == $sub.ref(0, 214765));
const {:count 32} .str.186: ref;
axiom (.str.186 == $sub.ref(0, 215821));
const {:count 32} .str.187: ref;
axiom (.str.187 == $sub.ref(0, 216877));
const {:count 31} .str.188: ref;
axiom (.str.188 == $sub.ref(0, 217932));
const {:count 36} .str.189: ref;
axiom (.str.189 == $sub.ref(0, 218992));
const {:count 31} .str.190: ref;
axiom (.str.190 == $sub.ref(0, 220047));
const {:count 70} .str.191: ref;
axiom (.str.191 == $sub.ref(0, 221141));
const {:count 62} .str.192: ref;
axiom (.str.192 == $sub.ref(0, 222227));
const {:count 70} .str.193: ref;
axiom (.str.193 == $sub.ref(0, 223321));
const {:count 54} .str.194: ref;
axiom (.str.194 == $sub.ref(0, 224399));
const {:count 19} .str.195: ref;
axiom (.str.195 == $sub.ref(0, 225442));
const {:count 40} .str.90: ref;
axiom (.str.90 == $sub.ref(0, 226506));
const {:count 32} .str.91: ref;
axiom (.str.91 == $sub.ref(0, 227562));
const {:count 17} .str.92: ref;
axiom (.str.92 == $sub.ref(0, 228603));
const {:count 30} .str.93: ref;
axiom (.str.93 == $sub.ref(0, 229657));
const {:count 33} .str.94: ref;
axiom (.str.94 == $sub.ref(0, 230714));
const {:count 21} .str.95: ref;
axiom (.str.95 == $sub.ref(0, 231759));
const {:count 40} .str.142: ref;
axiom (.str.142 == $sub.ref(0, 232823));
const {:count 37} .str.141: ref;
axiom (.str.141 == $sub.ref(0, 233884));
const {:count 32} .str.146: ref;
axiom (.str.146 == $sub.ref(0, 234940));
const {:count 34} .str.147: ref;
axiom (.str.147 == $sub.ref(0, 235998));
const {:count 35} .str.156: ref;
axiom (.str.156 == $sub.ref(0, 237057));
const {:count 40} .str.148: ref;
axiom (.str.148 == $sub.ref(0, 238121));
const {:count 53} .str.149: ref;
axiom (.str.149 == $sub.ref(0, 239198));
const {:count 23} .str.150: ref;
axiom (.str.150 == $sub.ref(0, 240245));
const {:count 38} .str.151: ref;
axiom (.str.151 == $sub.ref(0, 241307));
const {:count 31} .str.152: ref;
axiom (.str.152 == $sub.ref(0, 242362));
const {:count 31} .str.153: ref;
axiom (.str.153 == $sub.ref(0, 243417));
const {:count 27} .str.154: ref;
axiom (.str.154 == $sub.ref(0, 244468));
const {:count 48} .str.155: ref;
axiom (.str.155 == $sub.ref(0, 245540));
const {:count 2} .str.40: ref;
axiom (.str.40 == $sub.ref(0, 246566));
const {:count 2} .str.41: ref;
axiom (.str.41 == $sub.ref(0, 247592));
const {:count 2} .str.42: ref;
axiom (.str.42 == $sub.ref(0, 248618));
const {:count 2} .str.43: ref;
axiom (.str.43 == $sub.ref(0, 249644));
const {:count 2} .str.44: ref;
axiom (.str.44 == $sub.ref(0, 250670));
const {:count 2} .str.45: ref;
axiom (.str.45 == $sub.ref(0, 251696));
const {:count 2} .str.46: ref;
axiom (.str.46 == $sub.ref(0, 252722));
const {:count 2} .str.47: ref;
axiom (.str.47 == $sub.ref(0, 253748));
const {:count 2} .str.48: ref;
axiom (.str.48 == $sub.ref(0, 254774));
const {:count 2} .str.49: ref;
axiom (.str.49 == $sub.ref(0, 255800));
const {:count 2} .str.50: ref;
axiom (.str.50 == $sub.ref(0, 256826));
const {:count 2} .str.51: ref;
axiom (.str.51 == $sub.ref(0, 257852));
const {:count 2} .str.52: ref;
axiom (.str.52 == $sub.ref(0, 258878));
const {:count 2} .str.53: ref;
axiom (.str.53 == $sub.ref(0, 259904));
const {:count 2} .str.54: ref;
axiom (.str.54 == $sub.ref(0, 260930));
const {:count 10} .str.55: ref;
axiom (.str.55 == $sub.ref(0, 261964));
const {:count 8} .str.56: ref;
axiom (.str.56 == $sub.ref(0, 262996));
const {:count 4} .str.76: ref;
axiom (.str.76 == $sub.ref(0, 264024));
const {:count 16} .str.57: ref;
axiom (.str.57 == $sub.ref(0, 265064));
const {:count 16} .str.58: ref;
axiom (.str.58 == $sub.ref(0, 266104));
const {:count 8} .str.88: ref;
axiom (.str.88 == $sub.ref(0, 267136));
const {:count 20} .str.59: ref;
axiom (.str.59 == $sub.ref(0, 268180));
const {:count 8} .str.60: ref;
axiom (.str.60 == $sub.ref(0, 269212));
const .str: ref;
axiom (.str == $sub.ref(0, 270244));
const {:count 6} .str.61: ref;
axiom (.str.61 == $sub.ref(0, 271274));
const {:count 9} .str.62: ref;
axiom (.str.62 == $sub.ref(0, 272307));
const {:count 5} .str.75: ref;
axiom (.str.75 == $sub.ref(0, 273336));
const {:count 14} .str.63: ref;
axiom (.str.63 == $sub.ref(0, 274374));
const {:count 8} .str.64: ref;
axiom (.str.64 == $sub.ref(0, 275406));
const {:count 10} .str.65: ref;
axiom (.str.65 == $sub.ref(0, 276440));
const {:count 15} .str.66: ref;
axiom (.str.66 == $sub.ref(0, 277479));
const {:count 9} .str.67: ref;
axiom (.str.67 == $sub.ref(0, 278512));
const {:count 10} .str.68: ref;
axiom (.str.68 == $sub.ref(0, 279546));
const {:count 6} .str.69: ref;
axiom (.str.69 == $sub.ref(0, 280576));
const {:count 10} .str.70: ref;
axiom (.str.70 == $sub.ref(0, 281610));
const {:count 10} .str.71: ref;
axiom (.str.71 == $sub.ref(0, 282644));
const {:count 23} .str.72: ref;
axiom (.str.72 == $sub.ref(0, 283691));
const {:count 13} .str.73: ref;
axiom (.str.73 == $sub.ref(0, 284728));
const {:count 8} .str.78: ref;
axiom (.str.78 == $sub.ref(0, 285760));
const {:count 6} .str.87: ref;
axiom (.str.87 == $sub.ref(0, 286790));
const {:count 12} .str.79: ref;
axiom (.str.79 == $sub.ref(0, 287826));
const {:count 18} .str.80: ref;
axiom (.str.80 == $sub.ref(0, 288868));
const {:count 14} .str.81: ref;
axiom (.str.81 == $sub.ref(0, 289906));
const {:count 9} .str.86: ref;
axiom (.str.86 == $sub.ref(0, 290939));
const {:count 12} .str.165: ref;
axiom (.str.165 == $sub.ref(0, 291975));
const {:count 48} .str.82: ref;
axiom (.str.82 == $sub.ref(0, 293047));
const {:count 40} .str.83: ref;
axiom (.str.83 == $sub.ref(0, 294111));
const {:count 45} .str.84: ref;
axiom (.str.84 == $sub.ref(0, 295180));
const {:count 40} .str.85: ref;
axiom (.str.85 == $sub.ref(0, 296244));
const {:count 16} .str.77: ref;
axiom (.str.77 == $sub.ref(0, 297284));
const {:count 14} .str.2.212: ref;
axiom (.str.2.212 == $sub.ref(0, 298322));
const llvm.dbg.declare: ref;
axiom (llvm.dbg.declare == $sub.ref(0, 299354));
procedure  llvm.dbg.declare($p0: ref, $p1: ref, $p2: ref);
const malloc: ref;
axiom (malloc == $sub.ref(0, 300386));
procedure  malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const st_probe: ref;
axiom (st_probe == $sub.ref(0, 301418));
procedure  st_probe($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $i12: i32;
  var $p13: ref;
  var $p14: ref;
  var $i15: i16;
  var $i16: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i20: i32;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i16;
  var $i25: i16;
  var $i26: i16;
  var $i27: i8;
  var $i28: i32;
  var $p29: ref;
  var $i30: i64;
  var $i31: i1;
  var $p32: ref;
  var $i33: i64;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $i37: i64;
  var $i38: i1;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i1;
  var $i50: i8;
  var $i51: i1;
  var $i52: i32;
  var $i53: i1;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i8;
  var $i58: i32;
  var $i59: i1;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i16;
  var $i74: i16;
  var $i75: i16;
  var $i76: i8;
  var $p77: ref;
  var $p78: ref;
  var $i79: i8;
  var $i80: i32;
  var $i81: i1;
  var $i82: i32;
  var $i83: i8;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $i88: i8;
  var $i89: i32;
  var $i90: i1;
  var $i91: i32;
  var $i92: i8;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $i110: i32;
  var $i111: i1;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i8;
  var $i118: i32;
  var $i119: i1;
  var $i112: i1;
  var $i120: i32;
  var $i121: i8;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $i152: i32;
  var $i153: i1;
  var $i154: i32;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
  var $i159: i32;
  var $i160: i32;
  var $p161: ref;
  var $p162: ref;
  var $p163: ref;
  var $p164: ref;
  var $p165: ref;
  var $i166: i64;
  var $i167: i1;
  var $p168: ref;
  var $i169: i32;
  var $i170: i1;
  var $p171: ref;
  var $p172: ref;
  var $p173: ref;
  var $i174: i32;
  var $p175: ref;
  var $p176: ref;
  var $i177: i8;
  var $i178: i32;
  var $i179: i1;
  var $p180: ref;
  var $i181: i32;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $p185: ref;
  var $i186: i32;
  var $p187: ref;
  var $p188: ref;
  var $p189: ref;
  var $p190: ref;
  var $i8: i32;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $p194: ref;
  var $p195: ref;
  var $p196: ref;
  var $p197: ref;
  var $p198: ref;
  var $p199: ref;
  var $p200: ref;
  var $p201: ref;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $p212: ref;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $p217: ref;
  var $p218: ref;
  var $p219: ref;
  var $p220: ref;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $p225: ref;
  var $p226: ref;
  var $p227: ref;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $p231: ref;
  var $p232: ref;
  var $p233: ref;
  var $p234: ref;
  var $p235: ref;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $p240: ref;
  var $p241: ref;
  var $p242: ref;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $p250: ref;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $p254: ref;
  var $p255: ref;
  var $p256: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10560, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10560, 38} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, $mul.ref($sub.ref(0, 472), 3496));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10563, 33} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 472), 3496)), 232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10563, 33} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10563, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10563, 39} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10563, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10564, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 19);
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10761, 1} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10568, 9} true;
  assume {:verifier.code 0} true;
  call $p9 := st_incompatible($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10569, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10569, 27} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10569, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10570, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.1, $p3, $0.ref, .str.2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10572, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.ref(.str.1, $p3, $0.ref, .str.3, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10574, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 19);
  goto $bb3;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10578, 3} true;
  assume {:verifier.code 0} true;
  call $i12 := scsi_autopm_get_device($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10579, 33} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 472), 3496)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10579, 33} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10579, 9} true;
  assume {:verifier.code 0} true;
  call $i15 := queue_max_segments($p14);
  // WARNING: %21 = call zeroext i16 @queue_max_segments(%struct.request_queue* %20), !dbg !5812, !verifier.code !5775
  call {:cexpr "tmp"} boogie_si_record_i16($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10580, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i16.i32($i15);
  // WARNING: %22 = zext i16 %21 to i32, !dbg !5815, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10581, 7} true;
  assume {:verifier.code 0} true;
  $i17 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10581, 22} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i17, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10581, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10582, 9} true;
  assume {:verifier.code 0} true;
  $i19 := $M.1;
  // WARNING: %26 = load i32, i32* @st_max_sg_segs, align 4, !dbg !5822, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10583, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i19;
  goto $bb10;
$bb9:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  $i20 := $i16;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10586, 40} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p2, $mul.ref($sub.ref(0, 472), 3496));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10586, 40} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10586, 47} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, 856);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10586, 47} true;
  assume {:verifier.code 0} true;
  $i24 := $load.i16($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10586, 47} true;
  assume {:verifier.code 0} true;
  $i25 := $lshr.i16($i24, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10586, 47} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i16($i25, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10586, 47} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i16.i8($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10586, 28} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10586, 12} true;
  assume {:verifier.code 0} true;
  call $p29 := new_tape_buffer($i28, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10587, 7} true;
  assume {:verifier.code 0} true;
  $i30 := $p2i.ref.i64($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10587, 30} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i64($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10587, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10588, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.4, $p3, $0.ref, .str.5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10590, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10758, 3} true;
  assume {:verifier.code 0} true;
  call scsi_autopm_put_device($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10759, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $sub.i32(0, 19);
  goto $bb3;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10594, 10} true;
  assume {:verifier.code 0} true;
  call $p32 := alloc_disk(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10595, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $p2i.ref.i64($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10595, 28} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i64($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10595, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10596, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.4, $p3, $0.ref, .str.6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10598, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10756, 9} true;
  assume {:verifier.code 0} true;
  $p190 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10756, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10756, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10602, 13} true;
  assume {:verifier.code 0} true;
  call $p35 := kmalloc(736, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10603, 10} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10604, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10604, 28} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i64($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10604, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10605, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.4, $p3, $0.ref, .str.7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10607, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10753, 3} true;
  assume {:verifier.code 0} true;
  call put_disk($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10754, 9} true;
  assume {:verifier.code 0} true;
  $p189 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10754, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10754, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10611, 21} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p36, 720);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10611, 3} true;
  assume {:verifier.code 0} true;
  call kref_init($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10612, 9} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p36, 712);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10612, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p40, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10613, 41} true;
  assume {:verifier.code 0} true;
  $p41 := $p36;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10613, 24} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10613, 9} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p32, 1680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10613, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p43, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10614, 22} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 472), 3496)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10614, 22} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10614, 9} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p32, 1672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10614, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p46, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10615, 33} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p32, 1672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10615, 33} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10615, 13} true;
  assume {:verifier.code 0} true;
  call $i49 := blk_get_queue($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10615, 11} true;
  assume {:verifier.code 0} true;
  $i50 := $zext.i1.i8($i49);
  // WARNING: %67 = zext i1 %66 to i8, !dbg !5870, !verifier.code !5775
  call {:cexpr "tmp___1"} boogie_si_record_i8($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10616, 7} true;
  assume {:verifier.code 0} true;
  $i51 := $trunc.i8.i1($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10616, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10618, 3} true;
  assume {:verifier.code 0} true;
  $i52 := 0;
  goto $bb25;
$bb24:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  $i52 := 1;
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10621, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.i32($i52, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10621, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10622, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb27:
  assume !(($i53 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10626, 9} true;
  assume {:verifier.code 0} true;
  $p54 := $p36;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10626, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p54, st_template);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10627, 9} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p36, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10627, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p55, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10628, 33} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 472), 3496)), 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10628, 33} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i8($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10628, 7} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i8.i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10628, 45} true;
  assume {:verifier.code 0} true;
  $i59 := $sle.i32($i58, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10628, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10629, 11} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p36, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10629, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, 113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10630, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i59 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10631, 11} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p36, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10631, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p61, 114);
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10633, 9} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p36, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10633, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p62, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10634, 10} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p36, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10634, 10} true;
  assume {:verifier.code 0} true;
  $p64 := $load.ref($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10634, 19} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p64, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10634, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p65, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10635, 9} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p36, 637);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10635, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10636, 9} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p36, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10636, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p67, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10637, 9} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p36, 628);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10637, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10638, 9} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p36, 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10638, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p69, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10639, 27} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p2, $mul.ref($sub.ref(0, 472), 3496));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10639, 27} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10639, 34} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p71, 856);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10639, 34} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i16($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10639, 34} true;
  assume {:verifier.code 0} true;
  $i74 := $lshr.i16($i73, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10639, 34} true;
  assume {:verifier.code 0} true;
  $i75 := $and.i16($i74, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10639, 34} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i16.i8($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10639, 9} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p36, 291);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10639, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p77, $i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10640, 44} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 472), 3496)), 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10640, 44} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i8($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10640, 18} true;
  assume {:verifier.code 0} true;
  $i80 := $sext.i8.i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10640, 56} true;
  assume {:verifier.code 0} true;
  $i81 := $sgt.i32($i80, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10640, 56} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.i1.i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10640, 18} true;
  assume {:verifier.code 0} true;
  $i83 := $trunc.i32.i8($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10640, 9} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p36, 297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10640, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p84, $i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10641, 9} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($p36, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10641, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p85, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10642, 9} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p36, 285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10642, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p86, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10643, 45} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 472), 3496)), 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10643, 45} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i8($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10643, 19} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i8.i32($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10643, 57} true;
  assume {:verifier.code 0} true;
  $i90 := $sgt.i32($i89, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10643, 57} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i1.i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10643, 19} true;
  assume {:verifier.code 0} true;
  $i92 := $trunc.i32.i8($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10643, 9} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p36, 286);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10643, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p93, $i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10644, 9} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p36, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10644, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p94, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10645, 9} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p36, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10645, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p95, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10646, 9} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p36, 289);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10646, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p96, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10647, 9} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p36, 292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10647, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p97, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10648, 9} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p36, 302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10648, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p98, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10649, 9} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p36, 290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10649, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p99, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10650, 9} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p36, 303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10650, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p100, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10651, 9} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p36, 293);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10651, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p101, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10652, 9} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p36, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10652, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p102, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10653, 9} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p36, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10653, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p103, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10654, 9} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p36, 556);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10654, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p104, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10655, 31} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p36, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10655, 31} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10655, 40} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p106, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10655, 40} true;
  assume {:verifier.code 0} true;
  $p108 := $load.ref($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10655, 3} true;
  assume {:verifier.code 0} true;
  call blk_queue_rq_timeout($p108, 225000);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10656, 9} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p36, 308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10656, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p109, 3500000);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 36} true;
  assume {:verifier.code 0} true;
  $i110 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 50} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.i32($i110, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 55} true;
  assume {:verifier.code 0} true;
  $i112 := 0;
  assume {:branchcond $i111} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 97} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p2, $mul.ref($sub.ref(0, 472), 3496));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 97} true;
  assume {:verifier.code 0} true;
  $p114 := $load.ref($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 75} true;
  assume {:verifier.code 0} true;
  $p115 := $bitcast.ref.ref($p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 102} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p115, 856);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 73} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i8($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 58} true;
  assume {:verifier.code 0} true;
  $i118 := $zext.i8.i32($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 111} true;
  assume {:verifier.code 0} true;
  $i119 := $eq.i32($i118, 0);
  assume {:verifier.code 0} true;
  $i112 := $i119;
  goto $bb34;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 55} true;
  assume {:verifier.code 0} true;
  assume !(($i111 == 1));
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 55} true;
  assume {:verifier.code 0} true;
  $i120 := $zext.i1.i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 19} true;
  assume {:verifier.code 0} true;
  $i121 := $trunc.i32.i8($i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 9} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p36, 298);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10657, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p122, $i121);
  // WARNING: store i8 %148, i8* %149, align 2, !dbg !5973, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10674, 7} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10675, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 39} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p36, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 9} true;
  assume {:verifier.code 0} true;
  $p124 := $bitcast.ref.ref($p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10662, 8} true;
  assume {:verifier.code 0} true;
  $p125 := $p124;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10662, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p125, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10663, 8} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p124, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10663, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p126, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10664, 8} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p124, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10664, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p127, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10665, 8} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p124, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10665, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p128, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10666, 8} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p124, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10666, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p129, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10667, 8} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p124, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10667, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p130, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10668, 8} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p124, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10668, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p131, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10669, 8} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p124, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10669, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p132, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10670, 8} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p124, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10670, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p133, $sub.i16(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10671, 8} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p124, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10671, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p134, $p35);
  // WARNING: store %struct.scsi_tape* %50, %struct.scsi_tape** %162, align 8, !dbg !5998, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10675, 5} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 39} true;
  assume {:verifier.code 0} true;
  $p218 := $add.ref($p36, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 9} true;
  assume {:verifier.code 0} true;
  $p219 := $bitcast.ref.ref($p218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 46} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p219, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10662, 8} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p219, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10662, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p221, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10663, 8} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($add.ref($p219, 56), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10663, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p222, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10664, 8} true;
  assume {:verifier.code 0} true;
  $p223 := $add.ref($add.ref($p219, 56), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10664, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p223, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10665, 8} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($add.ref($p219, 56), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10665, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p224, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10666, 8} true;
  assume {:verifier.code 0} true;
  $p225 := $add.ref($add.ref($p219, 56), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10666, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p225, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10667, 8} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($add.ref($p219, 56), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10667, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p226, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10668, 8} true;
  assume {:verifier.code 0} true;
  $p227 := $add.ref($add.ref($p219, 56), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10668, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p227, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10669, 8} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($add.ref($p219, 56), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10669, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p228, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10670, 8} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($add.ref($p219, 56), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10670, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p229, $sub.i16(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10671, 8} true;
  assume {:verifier.code 0} true;
  $p230 := $add.ref($add.ref($p219, 56), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10671, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p230, $p35);
  // WARNING: store %struct.scsi_tape* %50, %struct.scsi_tape** %283, align 8, !dbg !5998, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10675, 5} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10691, 7} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10692, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 41} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p36, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 10} true;
  assume {:verifier.code 0} true;
  $p136 := $bitcast.ref.ref($p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10683, 9} true;
  assume {:verifier.code 0} true;
  $p137 := $p136;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10683, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p137, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10684, 9} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p136, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10684, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p138, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10685, 9} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p136, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10685, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p139, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10686, 9} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p136, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10686, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p140, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10687, 9} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p136, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10687, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p141, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10688, 9} true;
  assume {:verifier.code 0} true;
  $p142 := $add.ref($p136, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10688, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p142, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %173, align 4, !dbg !6018, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10692, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 41} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p36, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 10} true;
  assume {:verifier.code 0} true;
  $p192 := $bitcast.ref.ref($p191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 45} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p192, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10683, 9} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p192, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10683, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p194, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10684, 9} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($add.ref($p192, 16), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10684, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p195, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10685, 9} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($add.ref($p192, 16), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10685, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p196, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10686, 9} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($add.ref($p192, 16), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10686, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p197, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10687, 9} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($add.ref($p192, 16), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10687, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p198, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10688, 9} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($add.ref($p192, 16), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10688, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p199, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %249, align 4, !dbg !6018, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10692, 5} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10696, 9} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p36, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10696, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p143, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10697, 9} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($p36, 320);
  $p145 := $add.ref($p36, 320);
  $p146 := $add.ref($p36, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10697, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p146, 1);
  // WARNING: store i8 1, i8* %179, align 8, !dbg !6025, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10699, 9} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p36, 629);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10699, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p147, 0);
  // WARNING: store i8 0, i8* %180, align 1, !dbg !6029, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10701, 9} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p36, 631);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10701, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p148, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10702, 9} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p36, 630);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10702, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p149, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10703, 24} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p36, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10703, 3} true;
  assume {:verifier.code 0} true;
  call __mutex_init($p150, .str.8, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10704, 3} true;
  assume {:verifier.code 0} true;
  call idr_preload(208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10705, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(st_index_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10706, 37} true;
  assume {:verifier.code 0} true;
  $p151 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10706, 11} true;
  assume {:verifier.code 0} true;
  call $i152 := idr_alloc(st_index_idr, $p151, 0, 131073, 0);
  // WARNING: %185 = call i32 @idr_alloc(%struct.idr* @st_index_idr, i8* %184, i32 0, i32 131073, i32 0), !dbg !6041, !verifier.code !5775
  call {:cexpr "error"} boogie_si_record_i32($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10707, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(st_index_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10708, 3} true;
  assume {:verifier.code 0} true;
  call idr_preload_end();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10709, 13} true;
  assume {:verifier.code 0} true;
  $i153 := $slt.i32($i152, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10709, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i153} true;
  goto $bb43, $bb44;
$bb43:
  assume ($i153 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10710, 5} true;
  assume {:verifier.code 0} true;
  call $i154 := printk.ref.i32(.str.9, $i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10711, 5} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !(($i153 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10751, 23} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p32, 1672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10751, 23} true;
  assume {:verifier.code 0} true;
  $p188 := $load.ref($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10751, 3} true;
  assume {:verifier.code 0} true;
  call blk_put_queue($p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10751, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10715, 9} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p36, 280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10715, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p155, $i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10716, 28} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p32, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10716, 11} true;
  assume {:verifier.code 0} true;
  $p157 := $bitcast.ref.ref($p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10716, 54} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p36, 280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10716, 54} true;
  assume {:verifier.code 0} true;
  $i159 := $load.i32($M.0, $p158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10716, 3} true;
  assume {:verifier.code 0} true;
  call $i160 := sprintf.ref.ref.i32($p157, .str.10, $i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10717, 13} true;
  assume {:verifier.code 0} true;
  call $p161 := kmalloc(112, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10718, 17} true;
  assume {:verifier.code 0} true;
  $p162 := $bitcast.ref.ref($p161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10718, 9} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p36, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10718, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p163, $p161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10719, 29} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p36, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10719, 29} true;
  assume {:verifier.code 0} true;
  $p165 := $load.ref($M.0, $p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10719, 7} true;
  assume {:verifier.code 0} true;
  $i166 := $p2i.ref.i64($p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10719, 35} true;
  assume {:verifier.code 0} true;
  $i167 := $eq.i64($i166, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10719, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i167} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i167 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10720, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.4, $p3, $0.ref, .str.11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10722, 5} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume !(($i167 == 1));
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10747, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(st_index_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10748, 36} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p36, 280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10748, 36} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i32($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10748, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove(st_index_idr, $i186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10749, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(st_index_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10749, 3} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10726, 24} true;
  assume {:verifier.code 0} true;
  $p168 := $bitcast.ref.ref($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10726, 3} true;
  assume {:verifier.code 0} true;
  call dev_set_drvdata($p0, $p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10727, 11} true;
  assume {:verifier.code 0} true;
  call $i169 := create_cdevs($p36);
  // WARNING: %208 = call i32 @create_cdevs(%struct.scsi_tape* %50), !dbg !6074, !verifier.code !5775
  call {:cexpr "error"} boogie_si_record_i32($i169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10728, 13} true;
  assume {:verifier.code 0} true;
  $i170 := $ne.i32($i169, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10728, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i170 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10729, 5} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb52:
  assume !(($i170 == 1));
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10744, 3} true;
  assume {:verifier.code 0} true;
  call remove_cdevs($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10745, 31} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p36, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10745, 31} true;
  assume {:verifier.code 0} true;
  $p183 := $load.ref($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10745, 9} true;
  assume {:verifier.code 0} true;
  $p184 := $bitcast.ref.ref($p183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10745, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10745, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10733, 3} true;
  assume {:verifier.code 0} true;
  call scsi_autopm_put_device($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10734, 13} true;
  assume {:verifier.code 0} true;
  call $p171 := tape_name($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10735, 3} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.ref(.str.12, $p3, $0.ref, .str.13, $p171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10737, 38} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($add.ref($p2, $mul.ref($sub.ref(0, 472), 3496)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10737, 38} true;
  assume {:verifier.code 0} true;
  $p173 := $load.ref($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10737, 13} true;
  assume {:verifier.code 0} true;
  call $i174 := queue_dma_alignment($p173);
  // WARNING: %216 = call i32 @queue_dma_alignment(%struct.request_queue* %215), !dbg !6086, !verifier.code !5775
  call {:cexpr "tmp___7"} boogie_si_record_i32($i174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10738, 13} true;
  assume {:verifier.code 0} true;
  call $p175 := tape_name($p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10740, 97} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p36, 298);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10740, 97} true;
  assume {:verifier.code 0} true;
  $i177 := $load.i8($M.0, $p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10740, 76} true;
  assume {:verifier.code 0} true;
  $i178 := $zext.i8.i32($i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10740, 105} true;
  assume {:verifier.code 0} true;
  $i179 := $ne.i32($i178, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10740, 76} true;
  assume {:verifier.code 0} true;
  havoc $p180;
  assume ((($i179 == 1) ==> ($p180 == .str.15)) && (($i179 != 1) ==> ($p180 == .str.16)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10741, 30} true;
  assume {:verifier.code 0} true;
  $i181 := $add.i32($i174, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10739, 3} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.ref.ref.i32(.str.1, $p3, $0.ref, .str.14, $p175, $p180, $i181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10742, 3} true;
  assume {:verifier.code 0} true;
  $i8 := 0;
  goto $bb3;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 41} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($p36, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 10} true;
  assume {:verifier.code 0} true;
  $p201 := $bitcast.ref.ref($p200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 45} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($p201, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10683, 9} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p201, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10683, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p203, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10684, 9} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($add.ref($p201, 32), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10684, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p204, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10685, 9} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($add.ref($p201, 32), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10685, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p205, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10686, 9} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($add.ref($p201, 32), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10686, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p206, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10687, 9} true;
  assume {:verifier.code 0} true;
  $p207 := $add.ref($add.ref($p201, 32), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10687, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p207, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10688, 9} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($add.ref($p201, 32), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10688, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p208, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %259, align 4, !dbg !6018, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10692, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 41} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($p36, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 10} true;
  assume {:verifier.code 0} true;
  $p210 := $bitcast.ref.ref($p209);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10682, 45} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p210, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10683, 9} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($p210, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10683, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p212, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10684, 9} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($add.ref($p210, 48), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10684, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p213, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10685, 9} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($add.ref($p210, 48), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10685, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p214, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10686, 9} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($add.ref($p210, 48), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10686, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p215, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10687, 9} true;
  assume {:verifier.code 0} true;
  $p216 := $add.ref($add.ref($p210, 48), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10687, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p216, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10688, 9} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($add.ref($p210, 48), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10688, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p217, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %269, align 4, !dbg !6018, !verifier.code !5775
  assume {:verifier.code 0} true;
  goto $bb42;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 39} true;
  assume {:verifier.code 0} true;
  $p231 := $add.ref($p36, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 9} true;
  assume {:verifier.code 0} true;
  $p232 := $bitcast.ref.ref($p231);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 46} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p232, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10662, 8} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p232, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10662, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p234, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10663, 8} true;
  assume {:verifier.code 0} true;
  $p235 := $add.ref($add.ref($p232, 112), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10663, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p235, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10664, 8} true;
  assume {:verifier.code 0} true;
  $p236 := $add.ref($add.ref($p232, 112), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10664, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p236, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10665, 8} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($add.ref($p232, 112), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10665, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p237, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10666, 8} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($add.ref($p232, 112), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10666, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p238, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10667, 8} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($add.ref($p232, 112), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10667, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p239, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10668, 8} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($add.ref($p232, 112), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10668, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p240, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10669, 8} true;
  assume {:verifier.code 0} true;
  $p241 := $add.ref($add.ref($p232, 112), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10669, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p241, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10670, 8} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($add.ref($p232, 112), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10670, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p242, $sub.i16(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10671, 8} true;
  assume {:verifier.code 0} true;
  $p243 := $add.ref($add.ref($p232, 112), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10671, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p243, $p35);
  // WARNING: store %struct.scsi_tape* %50, %struct.scsi_tape** %297, align 8, !dbg !5998, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10675, 5} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 39} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p36, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 9} true;
  assume {:verifier.code 0} true;
  $p245 := $bitcast.ref.ref($p244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10661, 46} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($p245, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10662, 8} true;
  assume {:verifier.code 0} true;
  $p247 := $add.ref($p245, 168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10662, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p247, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10663, 8} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($add.ref($p245, 168), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10663, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p248, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10664, 8} true;
  assume {:verifier.code 0} true;
  $p249 := $add.ref($add.ref($p245, 168), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10664, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p249, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10665, 8} true;
  assume {:verifier.code 0} true;
  $p250 := $add.ref($add.ref($p245, 168), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10665, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p250, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10666, 8} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($add.ref($p245, 168), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10666, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p251, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10667, 8} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($add.ref($p245, 168), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10667, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p252, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10668, 8} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($add.ref($p245, 168), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10668, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p253, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10669, 8} true;
  assume {:verifier.code 0} true;
  $p254 := $add.ref($add.ref($p245, 168), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10669, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p254, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10670, 8} true;
  assume {:verifier.code 0} true;
  $p255 := $add.ref($add.ref($p245, 168), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10670, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p255, $sub.i16(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10671, 8} true;
  assume {:verifier.code 0} true;
  $p256 := $add.ref($add.ref($p245, 168), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10671, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p256, $p35);
  // WARNING: store %struct.scsi_tape* %50, %struct.scsi_tape** %311, align 8, !dbg !5998, !verifier.code !5775
  assume {:verifier.code 0} true;
  goto $bb38;
}
const st_remove: ref;
axiom (st_remove == $sub.ref(0, 302450));
procedure  st_remove($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $p5: ref;
  var $p6: ref;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10770, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10771, 10} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10772, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10772, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  // WARNING: %5 = load i32, i32* %4, align 8, !dbg !5786, !verifier.code !5778
  call {:cexpr "index"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10774, 26} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10774, 55} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, $mul.ref($sub.ref(0, 472), 3496));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10774, 3} true;
  assume {:verifier.code 0} true;
  call $i7 := scsi_autopm_get_device($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10775, 3} true;
  assume {:verifier.code 0} true;
  call remove_cdevs($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10776, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(st_ref_mutex, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10777, 20} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p2, 720);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10777, 3} true;
  assume {:verifier.code 0} true;
  call $i9 := kref_put($p8, scsi_tape_release);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10778, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(st_ref_mutex);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10779, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(st_index_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10780, 3} true;
  assume {:verifier.code 0} true;
  call idr_remove(st_index_idr, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10781, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(st_index_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10782, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const dev_get_drvdata: ref;
axiom (dev_get_drvdata == $sub.ref(0, 303482));
procedure  dev_get_drvdata($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5036, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5036, 24} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5036, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const scsi_autopm_get_device: ref;
axiom (scsi_autopm_get_device == $sub.ref(0, 304514));
procedure  scsi_autopm_get_device($p0: ref)
  returns ($r: i32);
const remove_cdevs: ref;
axiom (remove_cdevs == $sub.ref(0, 305546));
procedure  remove_cdevs($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i64;
  var $i27: i1;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i64;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $i46: i1;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i64;
  var $i54: i1;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i64;
  var $i62: i1;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i64;
  var $i70: i1;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $i80: i64;
  var $i81: i1;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $i88: i64;
  var $i89: i1;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $i96: i64;
  var $i97: i1;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $i104: i64;
  var $i105: i1;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $i115: i64;
  var $i116: i1;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $i123: i64;
  var $i124: i1;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $i131: i64;
  var $i132: i1;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $i139: i64;
  var $i140: i1;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10498, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10498, 30} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10498, 39} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 472);
  $p4 := $add.ref($add.ref($p2, 472), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10498, 3} true;
  assume {:verifier.code 0} true;
  call sysfs_remove_link($p4, .str.30);
  // WARNING: call void @sysfs_remove_link(%struct.kobject* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0)), !dbg !5784, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10525, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10526, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 39} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p5);
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_modedef* %8, i64 0, metadata !6167, metadata !5777), !dbg !6168, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10518, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10519, 5} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 40);
  $p8 := $add.ref($p6, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 23} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 39} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i64($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p6, 40);
  $p13 := $add.ref($p6, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 14} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 5} true;
  assume {:verifier.code 0} true;
  call cdev_del($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10508, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 28} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p6, 24);
  $p16 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 23} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $p2i.ref.i64($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 38} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i64($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 28} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p6, 24);
  $p21 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 23} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 5} true;
  assume {:verifier.code 0} true;
  call device_unregister($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10513, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10519, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 28} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p6, 40);
  $p24 := $add.ref($add.ref($p6, 40), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 23} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  $i26 := $p2i.ref.i64($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 39} true;
  assume {:verifier.code 0} true;
  $i27 := $ne.i64($i26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb15, $bb16;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10526, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 39} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 9} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 46} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p40, 56);
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_modedef* %8, i64 0, metadata !6167, metadata !5777), !dbg !6168, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10518, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10531, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb15:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 19} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p6, 40);
  $p29 := $add.ref($add.ref($p6, 40), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 14} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 5} true;
  assume {:verifier.code 0} true;
  call cdev_del($p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10508, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume !(($i27 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 28} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p6, 24);
  $p32 := $add.ref($add.ref($p6, 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 23} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 38} true;
  assume {:verifier.code 0} true;
  $i35 := $ne.i64($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 28} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p6, 24);
  $p37 := $add.ref($add.ref($p6, 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 23} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 5} true;
  assume {:verifier.code 0} true;
  call device_unregister($p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10513, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10519, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 28} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($add.ref($p40, 56), 40);
  $p43 := $add.ref($add.ref($p40, 56), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 23} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  $i45 := $p2i.ref.i64($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 39} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i64($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 19} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p40, 56), 40);
  $p48 := $add.ref($add.ref($p40, 56), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 14} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 5} true;
  assume {:verifier.code 0} true;
  call cdev_del($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10508, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 28} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p40, 56), 24);
  $p51 := $add.ref($add.ref($p40, 56), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 23} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $p2i.ref.i64($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 38} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i64($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 28} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p40, 56), 24);
  $p56 := $add.ref($add.ref($p40, 56), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 23} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 5} true;
  assume {:verifier.code 0} true;
  call device_unregister($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10513, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10519, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 28} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p40, 56), 40);
  $p59 := $add.ref($add.ref($add.ref($p40, 56), 40), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 23} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  $i61 := $p2i.ref.i64($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 39} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i64($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 19} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p40, 56), 40);
  $p64 := $add.ref($add.ref($add.ref($p40, 56), 40), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 14} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 5} true;
  assume {:verifier.code 0} true;
  call cdev_del($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10508, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 28} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p40, 56), 24);
  $p67 := $add.ref($add.ref($add.ref($p40, 56), 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 23} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  $i69 := $p2i.ref.i64($p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 38} true;
  assume {:verifier.code 0} true;
  $i70 := $ne.i64($i69, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i70 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 28} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p40, 56), 24);
  $p72 := $add.ref($add.ref($add.ref($p40, 56), 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 23} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 5} true;
  assume {:verifier.code 0} true;
  call device_unregister($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10513, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10526, 5} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 39} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p0, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 9} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 46} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p75, 112);
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_modedef* %8, i64 0, metadata !6167, metadata !5777), !dbg !6168, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10518, 7} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10519, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 28} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($add.ref($p75, 112), 40);
  $p78 := $add.ref($add.ref($p75, 112), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 23} true;
  assume {:verifier.code 0} true;
  $p79 := $load.ref($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  $i80 := $p2i.ref.i64($p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 39} true;
  assume {:verifier.code 0} true;
  $i81 := $ne.i64($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 19} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($add.ref($p75, 112), 40);
  $p83 := $add.ref($add.ref($p75, 112), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 14} true;
  assume {:verifier.code 0} true;
  $p84 := $load.ref($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 5} true;
  assume {:verifier.code 0} true;
  call cdev_del($p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10508, 3} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb41:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 28} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p75, 112), 24);
  $p86 := $add.ref($add.ref($p75, 112), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 23} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  $i88 := $p2i.ref.i64($p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 38} true;
  assume {:verifier.code 0} true;
  $i89 := $ne.i64($i88, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb43, $bb44;
$bb43:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 28} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p75, 112), 24);
  $p91 := $add.ref($add.ref($p75, 112), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 23} true;
  assume {:verifier.code 0} true;
  $p92 := $load.ref($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 5} true;
  assume {:verifier.code 0} true;
  call device_unregister($p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10513, 3} true;
  assume {:verifier.code 0} true;
  goto $bb45;
$bb44:
  assume !(($i89 == 1));
  assume {:verifier.code 0} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10519, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 28} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($add.ref($p75, 112), 40);
  $p94 := $add.ref($add.ref($add.ref($p75, 112), 40), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 23} true;
  assume {:verifier.code 0} true;
  $p95 := $load.ref($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  $i96 := $p2i.ref.i64($p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 39} true;
  assume {:verifier.code 0} true;
  $i97 := $ne.i64($i96, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i97 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 19} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($add.ref($p75, 112), 40);
  $p99 := $add.ref($add.ref($add.ref($p75, 112), 40), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 14} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 5} true;
  assume {:verifier.code 0} true;
  call cdev_del($p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10508, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb48:
  assume !(($i97 == 1));
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 28} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($add.ref($p75, 112), 24);
  $p102 := $add.ref($add.ref($add.ref($p75, 112), 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 23} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $p2i.ref.i64($p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 38} true;
  assume {:verifier.code 0} true;
  $i105 := $ne.i64($i104, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i105 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 28} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p75, 112), 24);
  $p107 := $add.ref($add.ref($add.ref($p75, 112), 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 23} true;
  assume {:verifier.code 0} true;
  $p108 := $load.ref($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 5} true;
  assume {:verifier.code 0} true;
  call device_unregister($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10513, 3} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume !(($i105 == 1));
  assume {:verifier.code 0} true;
  goto $bb52;
$bb52:
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10526, 5} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 39} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p0, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 9} true;
  assume {:verifier.code 0} true;
  $p110 := $bitcast.ref.ref($p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10502, 46} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p110, 168);
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_modedef* %8, i64 0, metadata !6167, metadata !5777), !dbg !6168, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10518, 7} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10519, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 28} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p110, 168), 40);
  $p113 := $add.ref($add.ref($p110, 168), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 23} true;
  assume {:verifier.code 0} true;
  $p114 := $load.ref($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  $i115 := $p2i.ref.i64($p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 39} true;
  assume {:verifier.code 0} true;
  $i116 := $ne.i64($i115, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i116 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 19} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($add.ref($p110, 168), 40);
  $p118 := $add.ref($add.ref($p110, 168), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 14} true;
  assume {:verifier.code 0} true;
  $p119 := $load.ref($M.0, $p118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 5} true;
  assume {:verifier.code 0} true;
  call cdev_del($p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10508, 3} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i116 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 28} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($add.ref($p110, 168), 24);
  $p121 := $add.ref($add.ref($p110, 168), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 23} true;
  assume {:verifier.code 0} true;
  $p122 := $load.ref($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  $i123 := $p2i.ref.i64($p122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 38} true;
  assume {:verifier.code 0} true;
  $i124 := $ne.i64($i123, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb60, $bb61;
$bb60:
  assume ($i124 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 28} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($add.ref($p110, 168), 24);
  $p126 := $add.ref($add.ref($p110, 168), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 23} true;
  assume {:verifier.code 0} true;
  $p127 := $load.ref($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 5} true;
  assume {:verifier.code 0} true;
  call device_unregister($p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10513, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb61:
  assume !(($i124 == 1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10519, 5} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 28} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($add.ref($p110, 168), 40);
  $p129 := $add.ref($add.ref($add.ref($p110, 168), 40), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 23} true;
  assume {:verifier.code 0} true;
  $p130 := $load.ref($M.0, $p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  $i131 := $p2i.ref.i64($p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 39} true;
  assume {:verifier.code 0} true;
  $i132 := $ne.i64($i131, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10506, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i132} true;
  goto $bb64, $bb65;
$bb64:
  assume ($i132 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 19} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($add.ref($p110, 168), 40);
  $p134 := $add.ref($add.ref($add.ref($p110, 168), 40), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 14} true;
  assume {:verifier.code 0} true;
  $p135 := $load.ref($M.0, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10507, 5} true;
  assume {:verifier.code 0} true;
  call cdev_del($p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10508, 3} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb65:
  assume !(($i132 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 28} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($add.ref($p110, 168), 24);
  $p137 := $add.ref($add.ref($add.ref($p110, 168), 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 23} true;
  assume {:verifier.code 0} true;
  $p138 := $load.ref($M.0, $p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  $i139 := $p2i.ref.i64($p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 38} true;
  assume {:verifier.code 0} true;
  $i140 := $ne.i64($i139, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10511, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb67, $bb68;
$bb67:
  assume ($i140 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 28} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($add.ref($p110, 168), 24);
  $p142 := $add.ref($add.ref($add.ref($p110, 168), 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 23} true;
  assume {:verifier.code 0} true;
  $p143 := $load.ref($M.0, $p142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10512, 5} true;
  assume {:verifier.code 0} true;
  call device_unregister($p143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10513, 3} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb68:
  assume !(($i140 == 1));
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:verifier.code 0} true;
  goto $bb14;
}
const mutex_lock_nested: ref;
axiom (mutex_lock_nested == $sub.ref(0, 306578));
procedure  mutex_lock_nested($p0: ref, $i1: i32);
const scsi_tape_release: ref;
axiom (scsi_tape_release == $sub.ref(0, 307610));
procedure  scsi_tape_release($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10793, 10} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10793, 37} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, $mul.ref($sub.ref(0, 720), 736));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10794, 16} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 720), 736)), 712);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10794, 16} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10795, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 720), 736)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10795, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10796, 29} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 720), 736)), 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10796, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10796, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $p2i.ref.i64($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10796, 36} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10796, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10797, 28} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 720), 736)), 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10797, 28} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10797, 5} true;
  assume {:verifier.code 0} true;
  call normalize_buffer($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10798, 34} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 720), 736)), 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10798, 34} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10798, 43} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10798, 43} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10798, 11} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10798, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10799, 33} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 720), 736)), 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10799, 33} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10799, 11} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10799, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10800, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10803, 9} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p4, 1680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10803, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p20, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10804, 3} true;
  assume {:verifier.code 0} true;
  call put_disk($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10805, 31} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p1, $mul.ref($sub.ref(0, 720), 736)), 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10805, 31} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10805, 9} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10805, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10806, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10806, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10807, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kref_put: ref;
axiom (kref_put == $sub.ref(0, 308642));
procedure  kref_put($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4927, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := kref_sub($p0, 1, $p1);
  // WARNING: %3 = call i32 @kref_sub(%struct.qspinlock* %0, i32 1, void (%struct.qspinlock*)* %1), !dbg !5783, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4928, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const mutex_unlock: ref;
axiom (mutex_unlock == $sub.ref(0, 309674));
procedure  mutex_unlock($p0: ref);
const spin_lock: ref;
axiom (spin_lock == $sub.ref(0, 310706));
procedure  spin_lock($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12349, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12350, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_lock_5($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12351, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const idr_remove: ref;
axiom (idr_remove == $sub.ref(0, 311738));
procedure  idr_remove($p0: ref, $i1: i32);
const spin_unlock: ref;
axiom (spin_unlock == $sub.ref(0, 312770));
procedure  spin_unlock($p0: ref)
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12359, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12360, 3} true;
  assume {:verifier.code 0} true;
  call ldv_spin_unlock_9($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12361, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock: ref;
axiom (ldv_spin_unlock == $sub.ref(0, 313802));
procedure  ldv_spin_unlock()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12502, 12} true;
  assume {:verifier.code 0} true;
  $M.3 := 0;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12503, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_unlock_9: ref;
axiom (ldv_spin_unlock_9 == $sub.ref(0, 314834));
procedure  ldv_spin_unlock_9($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4778, 28} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4778, 47} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4778, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_unlock($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4779, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_unlock: ref;
axiom (_raw_spin_unlock == $sub.ref(0, 315866));
procedure  _raw_spin_unlock($p0: ref);
const ldv_spin_lock: ref;
axiom (ldv_spin_lock == $sub.ref(0, 316898));
procedure  ldv_spin_lock()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12493, 12} true;
  assume {:verifier.code 0} true;
  $M.3 := 1;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12494, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_spin_lock_5: ref;
axiom (ldv_spin_lock_5 == $sub.ref(0, 317930));
procedure  ldv_spin_lock_5($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4768, 26} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4768, 45} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4768, 3} true;
  assume {:verifier.code 0} true;
  call _raw_spin_lock($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4769, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _raw_spin_lock: ref;
axiom (_raw_spin_lock == $sub.ref(0, 318962));
procedure  _raw_spin_lock($p0: ref);
const kref_sub: ref;
axiom (kref_sub == $sub.ref(0, 319994));
procedure  kref_sub($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32)
{
  var $i3: i64;
  var $i4: i1;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $i8: i64;
  var $i9: i64;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $p15: ref;
  var $i16: i32;
  var $i17: i1;
  var $i18: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.qspinlock* %0, i64 0, metadata !6297, metadata !5777), !dbg !6298, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4904, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4904, 43} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4904, 43} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i1.i32($i4);
  // WARNING: %6 = zext i1 %5 to i32, !dbg !5787, !verifier.code !5780
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4905, 43} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4905, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4905, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4905, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := ldv__builtin_expect($i8, 0);
  // WARNING: %10 = call i64 @ldv__builtin_expect(i64 %9, i64 0), !dbg !5792, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4906, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4906, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4907, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.74, 71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4908, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4911, 37} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4911, 37} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4911, 23} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4911, 3} true;
  assume {:verifier.code 0} true;
  call $i14 := ldv__builtin_expect($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4912, 54} true;
  assume {:verifier.code 0} true;
  $p15 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4912, 13} true;
  assume {:verifier.code 0} true;
  call $i16 := atomic_sub_and_test($i1, $p15);
  // WARNING: %20 = call i32 @atomic_sub_and_test(i32 %1, %struct.__anonstruct_kuid_t_46* %19), !dbg !5805, !verifier.code !5780
  call {:cexpr "tmp___0"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4913, 15} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4913, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i17 == 1);
  call devirtbounce($p2, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4915, 5} true;
  assume {:verifier.code 0} true;
  $i18 := 1;
  goto $bb6;
$bb5:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4921, 1} true;
  assume {:verifier.code 0} true;
  $r := $i18;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4919, 3} true;
  assume {:verifier.code 0} true;
  $i18 := 0;
  goto $bb6;
}
const ldv__builtin_expect: ref;
axiom (ldv__builtin_expect == $sub.ref(0, 321026));
procedure  ldv__builtin_expect($i0: i64, $i1: i64)
  returns ($r: i64)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !6336, metadata !5777), !dbg !6337, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4552, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const warn_slowpath_null: ref;
axiom (warn_slowpath_null == $sub.ref(0, 322058));
procedure  warn_slowpath_null($p0: ref, $i1: i32);
const atomic_sub_and_test: ref;
axiom (atomic_sub_and_test == $sub.ref(0, 323090));
procedure  atomic_sub_and_test($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i8;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(1, $zext.i32.i64(1)));
  // WARNING: %3 = alloca i8, align 1, !verifier.code !5778
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4614, 142} true;
  assume {:verifier.code 0} true;
  $p3 := $p1;
  call devirtbounce.1(0, $p3, $p2, $i0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4616, 32} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i8($M.4, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4616, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $sext.i8.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4616, 35} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4616, 35} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i1.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4616, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
}
const normalize_buffer: ref;
axiom (normalize_buffer == $sub.ref(0, 324122));
procedure  normalize_buffer($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i16;
  var $i5: i32;
  var $i6: i1;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i32;
  var $i18: i32;
  var $p19: ref;
  var $i20: i32;
  var $i21: i16;
  var $i22: i32;
  var $i23: i1;
  var $i7: i32;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10140, 21} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10140, 21} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  // WARNING: %3 = load i32, i32* %2, align 8, !dbg !5781, !verifier.code !5780
  call {:cexpr "order"} boogie_si_record_i32($i2);
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !6365, metadata !5777), !dbg !6366, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 23} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 23} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i16.i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 32} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 7} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10149, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10144, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10144, 28} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10144, 45} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10144, 43} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p9, $mul.ref($i10, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10144, 16} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10144, 3} true;
  assume {:verifier.code 0} true;
  call __free_pages($p12, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10145, 59} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10145, 59} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10145, 96} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10145, 96} true;
  assume {:verifier.code 0} true;
  $i16 := $shl.i64(4096, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10145, 73} true;
  assume {:verifier.code 0} true;
  $i17 := $trunc.i64.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10145, 71} true;
  assume {:verifier.code 0} true;
  $i18 := $sub.i32($i14, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10145, 13} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10145, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10146, 9} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i32($i7, 1);
  // WARNING: %21 = add nsw i32 %.01, 1, !dbg !5803, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 23} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i16($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i16.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 32} true;
  assume {:verifier.code 0} true;
  $i23 := $sgt.i32($i22, $i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i20;
  assume {:branchcond $i23} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 7} true;
  assume {:verifier.code 0} true;
  assume ($i23 == 1);
  goto $bb4;
$bb7:
  assume !(($i23 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10148, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10153, 13} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10153, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10154, 13} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10154, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10155, 13} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10155, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10156, 13} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 104);
  $p28 := $add.ref($add.ref($p0, 104), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10156, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10157, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const kfree: ref;
axiom (kfree == $sub.ref(0, 325154));
procedure  kfree($p0: ref);
const put_disk: ref;
axiom (put_disk == $sub.ref(0, 326186));
procedure  put_disk($p0: ref);
const __free_pages: ref;
axiom (__free_pages == $sub.ref(0, 327218));
procedure  __free_pages($p0: ref, $i1: i32);
const sysfs_remove_link: ref;
axiom (sysfs_remove_link == $sub.ref(0, 328250));
procedure  sysfs_remove_link($p0: ref, $p1: ref);
const cdev_del: ref;
axiom (cdev_del == $sub.ref(0, 329282));
procedure  cdev_del($p0: ref);
const device_unregister: ref;
axiom (device_unregister == $sub.ref(0, 330314));
procedure  device_unregister($p0: ref);
const st_incompatible: ref;
axiom (st_incompatible == $sub.ref(0, 331346));
procedure  st_incompatible($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $i22: i1;
  var $p23: ref;
  var $p24: ref;
  var $i25: i64;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i30: i32;
  var $i31: i1;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i64;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i64;
  var $i44: i1;
  var $p4: ref;
  var $p39: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 27} true;
  assume {:verifier.code 0} true;
  $p1 := $load.ref($M.5, reject_list);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 34} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 7} true;
  assume {:verifier.code 0} true;
  $p4 := reject_list;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5291, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5265, 36} true;
  assume {:verifier.code 0} true;
  $p5 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5265, 36} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.5, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5265, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := strlen($p6);
  // WARNING: %8 = call i64 @strlen(i8* %7), !dbg !5790, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5266, 41} true;
  assume {:verifier.code 0} true;
  $p8 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5266, 41} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.5, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5266, 54} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 248);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5266, 54} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5266, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := strncmp($p9, $p11, $i7);
  // WARNING: %13 = call i32 @strncmp(i8* %10, i8* %12, i64 %8), !dbg !5795, !verifier.code !5780
  call {:cexpr "tmp___0"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5267, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5267, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5268, 42} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5268, 42} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.6, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5268, 15} true;
  assume {:verifier.code 0} true;
  call $i16 := strlen($p15);
  // WARNING: %18 = call i64 @strlen(i8* %17), !dbg !5803, !verifier.code !5780
  call {:cexpr "tmp___1"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5269, 43} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5269, 43} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.6, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5269, 55} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5269, 55} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5269, 15} true;
  assume {:verifier.code 0} true;
  call $i21 := strncmp($p18, $p20, $i16);
  // WARNING: %23 = call i32 @strncmp(i8* %20, i8* %22, i64 %18), !dbg !5808, !verifier.code !5780
  call {:cexpr "tmp___2"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5270, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5270, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb8, $bb9;
$bb7:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb8:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5271, 44} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5271, 44} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.7, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5271, 17} true;
  assume {:verifier.code 0} true;
  call $i25 := strlen($p24);
  // WARNING: %28 = call i64 @strlen(i8* %27), !dbg !5816, !verifier.code !5780
  call {:cexpr "tmp___3"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5272, 45} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5272, 45} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.7, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5272, 55} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 264);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5272, 55} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5272, 17} true;
  assume {:verifier.code 0} true;
  call $i30 := strncmp($p27, $p29, $i25);
  // WARNING: %33 = call i32 @strncmp(i8* %30, i8* %32, i64 %28), !dbg !5821, !verifier.code !5780
  call {:cexpr "tmp___4"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5273, 19} true;
  assume {:verifier.code 0} true;
  $i31 := $eq.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5273, 11} true;
  assume {:verifier.code 0} true;
  $p32 := $p4;
  assume {:branchcond $i31} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb10:
  assume ($i31 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5274, 33} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5274, 33} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.8, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5274, 13} true;
  assume {:verifier.code 0} true;
  $i35 := $p2i.ref.i64($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5274, 45} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i64($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5274, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb12:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5275, 23} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p32, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5275, 23} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.8, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5275, 11} true;
  assume {:verifier.code 0} true;
  $p39 := $p38;
  goto $bb14;
$bb13:
  assume !(($i36 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5277, 11} true;
  assume {:verifier.code 0} true;
  $p39 := .str.17;
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5298, 1} true;
  assume {:verifier.code 0} true;
  $r := $p39;
  $exn := false;
  return;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5282, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5285, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5288, 11} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 27} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p4, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 27} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.5, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $p2i.ref.i64($p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 34} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i64($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 7} true;
  assume {:verifier.code 0} true;
  $p4 := $p40;
  assume {:branchcond $i44} true;
  goto $bb18, $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 7} true;
  assume {:verifier.code 0} true;
  assume ($i44 == 1);
  goto $bb4;
$bb19:
  assume !(($i44 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5290, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5296, 3} true;
  assume {:verifier.code 0} true;
  $p39 := $0.ref;
  goto $bb14;
}
const sdev_prefix_printk: ref;
axiom (sdev_prefix_printk == $sub.ref(0, 332378));
procedure  sdev_prefix_printk.ref.ref.ref.ref($p0: ref, $p1: ref, $p2: ref, $p3: ref);
procedure  sdev_prefix_printk.ref.ref.ref.ref.i32($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: i32);
procedure  sdev_prefix_printk.ref.ref.ref.ref.i64.i32($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: i64, p.5: i32);
procedure  sdev_prefix_printk.ref.ref.ref.ref.i32.i32($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: i32, p.5: i32);
procedure  sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32.i32.i32.i32.i32.i32($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: i32, p.5: i32, p.6: i32, p.7: i32, p.8: i32, p.9: i32, p.10: i32, p.11: i32);
procedure  sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: i32, p.5: i32, p.6: i32);
procedure  sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32.i32($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: i32, p.5: i32, p.6: i32, p.7: i32);
procedure  sdev_prefix_printk.ref.ref.ref.ref.ref.i32($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: ref, p.5: i32);
procedure  sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32.i32.i32.i32.i32($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: i32, p.5: i32, p.6: i32, p.7: i32, p.8: i32, p.9: i32, p.10: i32);
procedure  sdev_prefix_printk.ref.ref.ref.ref.ref($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: ref);
procedure  sdev_prefix_printk.ref.ref.ref.ref.ref.i32.ref($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: ref, p.5: i32, p.6: ref);
procedure  sdev_prefix_printk.ref.ref.ref.ref.ref.ref.i32($p0: ref, $p1: ref, $p2: ref, $p3: ref, p.4: ref, p.5: ref, p.6: i32);
const queue_max_segments: ref;
axiom (queue_max_segments == $sub.ref(0, 333410));
procedure  queue_max_segments($p0: ref)
  returns ($r: i16)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i16;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5114, 14} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 3488);
  $p2 := $add.ref($add.ref($p0, 3488), 66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5114, 21} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i16($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5114, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const new_tape_buffer: ref;
axiom (new_tape_buffer == $sub.ref(0, 334442));
procedure  new_tape_buffer($i0: i32, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i64;
  var $i5: i1;
  var $i6: i32;
  var $p8: ref;
  var $i9: i16;
  var $p10: ref;
  var $i11: i8;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $p23: ref;
  var $p7: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !6478, metadata !5777), !dbg !6479, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9996, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := kmalloc(152, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9997, 8} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9998, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $p2i.ref.i64($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9998, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i64($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9998, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9999, 5} true;
  assume {:verifier.code 0} true;
  call $i6 := printk.ref(.str.26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10000, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10018, 1} true;
  assume {:verifier.code 0} true;
  $r := $p7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10004, 7} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10004, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10005, 16} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i32.i16($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10005, 7} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p3, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10005, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p10, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10006, 13} true;
  assume {:verifier.code 0} true;
  $i11 := $trunc.i32.i8($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10006, 7} true;
  assume {:verifier.code 0} true;
  $p12 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10006, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10007, 7} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10007, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10008, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10008, 44} true;
  assume {:verifier.code 0} true;
  $i15 := $mul.i64($i14, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10008, 13} true;
  assume {:verifier.code 0} true;
  call $p16 := kmalloc($i15, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10009, 24} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10009, 7} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p3, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10009, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p18, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10010, 27} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p3, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10010, 27} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10010, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10010, 42} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10010, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10011, 11} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10011, 5} true;
  assume {:verifier.code 0} true;
  call kfree($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10012, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $0.ref;
  goto $bb3;
$bb6:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10016, 3} true;
  assume {:verifier.code 0} true;
  $p7 := $p2;
  goto $bb3;
}
const alloc_disk: ref;
axiom (alloc_disk == $sub.ref(0, 335474));
procedure  alloc_disk($i0: i32)
  returns ($r: ref);
const kmalloc: ref;
axiom (kmalloc == $sub.ref(0, 336506));
procedure  kmalloc($i0: i64, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !6528, metadata !5777), !dbg !6529, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12379, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12380, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_undef_ptr();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12381, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const kref_init: ref;
axiom (kref_init == $sub.ref(0, 337538));
procedure  kref_init($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4858, 22} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4858, 3} true;
  assume {:verifier.code 0} true;
  call atomic_set($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4859, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const blk_get_queue: ref;
axiom (blk_get_queue == $sub.ref(0, 338570));
procedure  blk_get_queue($p0: ref)
  returns ($r: i1);
const blk_queue_rq_timeout: ref;
axiom (blk_queue_rq_timeout == $sub.ref(0, 339602));
procedure  blk_queue_rq_timeout($p0: ref, $i1: i32);
const __mutex_init: ref;
axiom (__mutex_init == $sub.ref(0, 340634));
procedure  __mutex_init($p0: ref, $p1: ref, $p2: ref);
const idr_preload: ref;
axiom (idr_preload == $sub.ref(0, 341666));
procedure  idr_preload($i0: i32);
const idr_alloc: ref;
axiom (idr_alloc == $sub.ref(0, 342698));
procedure  idr_alloc($p0: ref, $p1: ref, $i2: i32, $i3: i32, $i4: i32)
  returns ($r: i32);
const idr_preload_end: ref;
axiom (idr_preload_end == $sub.ref(0, 343730));
procedure  idr_preload_end()
{
$bb0:
  call devirtbounce.2(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4814, 3} true;
  assume {:verifier.code 0} true;
  call __preempt_count_sub(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4815, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const printk: ref;
axiom (printk == $sub.ref(0, 344762));
procedure  printk.ref($p0: ref)
  returns ($r: i32);
procedure  printk.ref.i32($p0: ref, p.1: i32)
  returns ($r: i32);
procedure  printk.ref.ref.i32.i32($p0: ref, p.1: ref, p.2: i32, p.3: i32)
  returns ($r: i32);
procedure  printk.ref.i32.ref.i32($p0: ref, p.1: i32, p.2: ref, p.3: i32)
  returns ($r: i32);
const sprintf: ref;
axiom (sprintf == $sub.ref(0, 345794));
procedure  sprintf.ref.ref.i64($p0: ref, $p1: ref, p.2: i64)
  returns ($r: i32);
procedure  sprintf.ref.ref.i32($p0: ref, $p1: ref, p.2: i32)
  returns ($r: i32);
const dev_set_drvdata: ref;
axiom (dev_set_drvdata == $sub.ref(0, 346826));
procedure  dev_set_drvdata($p0: ref, $p1: ref)
{
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5044, 8} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5044, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p2, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5045, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const create_cdevs: ref;
axiom (create_cdevs == $sub.ref(0, 347858));
procedure  create_cdevs($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i5: i32;
  var $i6: i1;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i4: i32;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $i22: i1;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $i26: i1;
  var $i27: i32;
  var $i28: i1;
  var $i29: i32;
  var $i30: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !6563, metadata !5777), !dbg !6564, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10481, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10482, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10467, 11} true;
  assume {:verifier.code 0} true;
  call $i1 := create_one_cdev($p0, 0, 0);
  // WARNING: %3 = call i32 @create_one_cdev(%struct.scsi_tape* %0, i32 0, i32 0), !dbg !5785, !verifier.code !5780
  call {:cexpr "error"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 13} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $i1;
  assume {:branchcond $i2} true;
  goto $bb3, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 7} true;
  assume {:verifier.code 0} true;
  assume ($i2 == 1);
  goto $bb4;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10469, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i3;
  goto $bb6;
$bb5:
  assume !(($i2 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10490, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10473, 11} true;
  assume {:verifier.code 0} true;
  call $i5 := create_one_cdev($p0, 0, 1);
  // WARNING: %8 = call i32 @create_one_cdev(%struct.scsi_tape* %0, i32 0, i32 1), !dbg !5793, !verifier.code !5780
  call {:cexpr "error"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 13} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i5;
  assume {:branchcond $i6} true;
  goto $bb8, $bb10;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 7} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10475, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i7;
  goto $bb6;
$bb10:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10482, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10467, 11} true;
  assume {:verifier.code 0} true;
  call $i19 := create_one_cdev($p0, 1, 0);
  // WARNING: %28 = call i32 @create_one_cdev(%struct.scsi_tape* %0, i32 1, i32 0), !dbg !5785, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 13} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $i19;
  assume {:branchcond $i20} true;
  goto $bb14, $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10486, 36} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10486, 36} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10486, 45} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 472);
  $p11 := $add.ref($add.ref($p9, 472), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10486, 72} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 320);
  $p13 := $add.ref($p0, 320);
  $p14 := $add.ref($add.ref($p0, 320), 24);
  $p15 := $add.ref($add.ref($p0, 320), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10486, 66} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10486, 91} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10486, 9} true;
  assume {:verifier.code 0} true;
  call $i18 := sysfs_create_link($p11, $p17, .str.30);
  // WARNING: %25 = call i32 @sysfs_create_link(%struct.kobject* %18, %struct.kobject* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0)), !dbg !5807, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10488, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i18;
  goto $bb6;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 7} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb4;
$bb15:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10473, 11} true;
  assume {:verifier.code 0} true;
  call $i21 := create_one_cdev($p0, 1, 1);
  // WARNING: %32 = call i32 @create_one_cdev(%struct.scsi_tape* %0, i32 1, i32 1), !dbg !5793, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i21;
  assume {:branchcond $i22} true;
  goto $bb17, $bb18;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 7} true;
  assume {:verifier.code 0} true;
  assume ($i22 == 1);
  goto $bb9;
$bb18:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10482, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10467, 11} true;
  assume {:verifier.code 0} true;
  call $i23 := create_one_cdev($p0, 2, 0);
  // WARNING: %37 = call i32 @create_one_cdev(%struct.scsi_tape* %0, i32 2, i32 0), !dbg !5785, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 13} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $i23;
  assume {:branchcond $i24} true;
  goto $bb21, $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 7} true;
  assume {:verifier.code 0} true;
  assume ($i24 == 1);
  goto $bb4;
$bb22:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10473, 11} true;
  assume {:verifier.code 0} true;
  call $i25 := create_one_cdev($p0, 2, 1);
  // WARNING: %41 = call i32 @create_one_cdev(%struct.scsi_tape* %0, i32 2, i32 1), !dbg !5793, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 13} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i25;
  assume {:branchcond $i26} true;
  goto $bb24, $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 7} true;
  assume {:verifier.code 0} true;
  assume ($i26 == 1);
  goto $bb9;
$bb25:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10482, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10467, 11} true;
  assume {:verifier.code 0} true;
  call $i27 := create_one_cdev($p0, 3, 0);
  // WARNING: %46 = call i32 @create_one_cdev(%struct.scsi_tape* %0, i32 3, i32 0), !dbg !5785, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $i27;
  assume {:branchcond $i28} true;
  goto $bb28, $bb29;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10468, 7} true;
  assume {:verifier.code 0} true;
  assume ($i28 == 1);
  goto $bb4;
$bb29:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10473, 11} true;
  assume {:verifier.code 0} true;
  call $i29 := create_one_cdev($p0, 3, 1);
  // WARNING: %50 = call i32 @create_one_cdev(%struct.scsi_tape* %0, i32 3, i32 1), !dbg !5793, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i32($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i29;
  assume {:branchcond $i30} true;
  goto $bb31, $bb32;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10474, 7} true;
  assume {:verifier.code 0} true;
  assume ($i30 == 1);
  goto $bb9;
$bb32:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  goto $bb13;
}
const scsi_autopm_put_device: ref;
axiom (scsi_autopm_put_device == $sub.ref(0, 348890));
procedure  scsi_autopm_put_device($p0: ref);
const tape_name: ref;
axiom (tape_name == $sub.ref(0, 349922));
procedure  tape_name($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5304, 29} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 712);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5304, 29} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5304, 36} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5304, 11} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5304, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const queue_dma_alignment: ref;
axiom (queue_dma_alignment == $sub.ref(0, 350954));
procedure  queue_dma_alignment($p0: ref)
  returns ($r: i32)
{
  var $i1: i64;
  var $i2: i1;
  var $p3: ref;
  var $i4: i32;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5122, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5122, 29} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5122, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5122, 87} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 3244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5122, 87} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5122, 11} true;
  assume {:verifier.code 0} true;
  $i5 := $i4;
  goto $bb3;
$bb2:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5122, 11} true;
  assume {:verifier.code 0} true;
  $i5 := 511;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5122, 11} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const blk_put_queue: ref;
axiom (blk_put_queue == $sub.ref(0, 351986));
procedure  blk_put_queue($p0: ref);
const create_one_cdev: ref;
axiom (create_one_cdev == $sub.ref(0, 353018));
procedure  create_one_cdev($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i64;
  var $i22: i1;
  var $i23: i32;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $i29: i1;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $i34: i64;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $p38: ref;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i64;
  var $p46: ref;
  var $p47: ref;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $i59: i1;
  var $i60: i8;
  var $i61: i1;
  var $i62: i32;
  var $p63: ref;
  var $i64: i64;
  var $i65: i32;
  var $i66: i64;
  var $p67: ref;
  var $p68: ref;
  var $i33: i32;
  var $i70: i64;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i64;
  var $p75: ref;
  var $p76: ref;
  var $i24: i32;
  var $i69: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(10, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !6623, metadata !5777), !dbg !6624, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !6625, metadata !5777), !dbg !6626, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10411, 39} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10411, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10411, 48} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10411, 46} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p5, $mul.ref($i6, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10412, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10412, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  // WARNING: %10 = load i32, i32* %9, align 8, !dbg !5795, !verifier.code !5777
  call {:cexpr "dev_num"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10413, 38} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, $sub.i32(0, 32));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10413, 45} true;
  assume {:verifier.code 0} true;
  $i11 := $shl.i32($i10, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10413, 62} true;
  assume {:verifier.code 0} true;
  $i12 := $and.i32($i9, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10413, 51} true;
  assume {:verifier.code 0} true;
  $i13 := $or.i32($i11, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10413, 77} true;
  assume {:verifier.code 0} true;
  $i14 := $shl.i32($i1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10413, 69} true;
  assume {:verifier.code 0} true;
  $i15 := $or.i32($i13, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10413, 91} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10413, 87} true;
  assume {:verifier.code 0} true;
  havoc $i17;
  assume ((($i16 == 1) ==> ($i17 == 128)) && (($i16 != 1) ==> ($i17 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10413, 84} true;
  assume {:verifier.code 0} true;
  $i18 := $or.i32($i15, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10413, 108} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i18, 9437184);
  // WARNING: %20 = or i32 %19, 9437184, !dbg !5807, !verifier.code !5777
  call {:cexpr "cdev_devno"} boogie_si_record_i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10414, 10} true;
  assume {:verifier.code 0} true;
  call $p20 := cdev_alloc();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10415, 7} true;
  assume {:verifier.code 0} true;
  $i21 := $p2i.ref.i64($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10415, 28} true;
  assume {:verifier.code 0} true;
  $i22 := $eq.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10415, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10416, 5} true;
  assume {:verifier.code 0} true;
  call $i23 := printk.ref.i32(.str.31, $i9);
  // WARNING: %25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i32 0, i32 0), i32 %10), !dbg !5817, !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10418, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32(0, 12);
  goto $bb3;
$bb2:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10454, 3} true;
  assume {:verifier.code 0} true;
  $i69 := $i24;
  goto $bb12;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10422, 9} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p20, 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10422, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p25, __this_module);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10423, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p20, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10423, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p26, st_fops);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10424, 11} true;
  assume {:verifier.code 0} true;
  call $i27 := cdev_add($p20, $i19, 1);
  // WARNING: %30 = call i32 @cdev_add(%struct.cdev* %21, i32 %20, i32 1), !dbg !5826, !verifier.code !5777
  call {:cexpr "error"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10425, 13} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10425, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10426, 67} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10426, 63} true;
  assume {:verifier.code 0} true;
  havoc $p30;
  assume ((($i29 == 1) ==> ($p30 == .str.33)) && (($i29 != 1) ==> ($p30 == .str.34)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10426, 5} true;
  assume {:verifier.code 0} true;
  call $i31 := printk.ref.i32.ref.i32(.str.32, $i9, $p30, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10428, 5} true;
  assume {:verifier.code 0} true;
  call $i32 := printk.ref.i32(.str.35, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10429, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $i27;
  goto $bb7;
$bb6:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10451, 12} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10451, 17} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($add.ref($p5, $mul.ref($i6, 56)), 40);
  $p72 := $add.ref($add.ref($add.ref($p5, $mul.ref($i6, 56)), 40), $mul.ref($i70, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10451, 12} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10451, 3} true;
  assume {:verifier.code 0} true;
  call cdev_del($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10452, 3} true;
  assume {:verifier.code 0} true;
  $i74 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10452, 8} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($add.ref($p5, $mul.ref($i6, 56)), 40);
  $p76 := $add.ref($add.ref($add.ref($p5, $mul.ref($i6, 56)), 40), $mul.ref($i74, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10452, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p76, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10452, 3} true;
  assume {:verifier.code 0} true;
  $i24 := $i33;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10433, 3} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10433, 8} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($add.ref($p5, $mul.ref($i6, 56)), 40);
  $p36 := $add.ref($add.ref($add.ref($p5, $mul.ref($i6, 56)), 40), $mul.ref($i34, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10433, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p36, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10434, 12} true;
  assume {:verifier.code 0} true;
  $i37 := $shl.i32($i1, 2);
  // WARNING: %42 = shl i32 %1, 2, !dbg !5839, !verifier.code !5777
  call {:cexpr "i"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10435, 12} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10435, 50} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10435, 46} true;
  assume {:verifier.code 0} true;
  havoc $p40;
  assume ((($i39 == 1) ==> ($p40 == .str.37)) && (($i39 != 1) ==> ($p40 == .str.20)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10436, 30} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 712);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10436, 30} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10436, 37} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p42, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10436, 12} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10436, 49} true;
  assume {:verifier.code 0} true;
  $i45 := $sext.i32.i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10436, 49} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref(st_formats, $mul.ref($i45, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10436, 49} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.9, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10435, 3} true;
  assume {:verifier.code 0} true;
  call $i48 := snprintf.ref.i64.ref.ref.ref.ref($p38, 10, .str.36, $p40, $p44, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10437, 50} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10437, 50} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10437, 59} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p50, 472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10438, 40} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10438, 23} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10438, 49} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10438, 47} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p53, $mul.ref($i54, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10438, 77} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10437, 9} true;
  assume {:verifier.code 0} true;
  call $p57 := device_create.ref.ref.i32.ref.ref.ref(st_sysfs_class, $p51, $i19, $p55, .str.38, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10439, 20} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10439, 13} true;
  assume {:verifier.code 0} true;
  call $i59 := IS_ERR($p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10439, 11} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i1.i8($i59);
  // WARNING: %65 = zext i1 %64 to i8, !dbg !5862, !verifier.code !5777
  call {:cexpr "tmp___0"} boogie_si_record_i8($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10440, 13} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i8.i1($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10440, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10441, 5} true;
  assume {:verifier.code 0} true;
  call $i62 := printk.ref.i32(.str.39, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10442, 19} true;
  assume {:verifier.code 0} true;
  $p63 := $bitcast.ref.ref($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10442, 11} true;
  assume {:verifier.code 0} true;
  call $i64 := PTR_ERR($p63);
  // WARNING: %70 = call i64 @PTR_ERR(i8* %69), !dbg !5871, !verifier.code !5777
  call {:cexpr "tmp"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10443, 13} true;
  assume {:verifier.code 0} true;
  $i65 := $trunc.i64.i32($i64);
  // WARNING: %71 = trunc i64 %70 to i32, !dbg !5874, !verifier.code !5777
  call {:cexpr "error"} boogie_si_record_i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10444, 5} true;
  assume {:verifier.code 0} true;
  $i33 := $i65;
  goto $bb7;
$bb10:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10448, 3} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10448, 8} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($add.ref($p5, $mul.ref($i6, 56)), 24);
  $p68 := $add.ref($add.ref($add.ref($p5, $mul.ref($i6, 56)), 24), $mul.ref($i66, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10448, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p68, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10449, 3} true;
  assume {:verifier.code 0} true;
  $i69 := 0;
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10456, 1} true;
  assume {:verifier.code 0} true;
  $r := $i69;
  $exn := false;
  return;
}
const sysfs_create_link: ref;
axiom (sysfs_create_link == $sub.ref(0, 354050));
procedure  sysfs_create_link($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i32);
const cdev_alloc: ref;
axiom (cdev_alloc == $sub.ref(0, 355082));
procedure  cdev_alloc()
  returns ($r: ref);
const cdev_add: ref;
axiom (cdev_add == $sub.ref(0, 356114));
procedure  cdev_add($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32);
const snprintf: ref;
axiom (snprintf == $sub.ref(0, 357146));
procedure  snprintf.ref.i64.ref.i32($p0: ref, $i1: i64, $p2: ref, p.3: i32)
  returns ($r: i32);
procedure  snprintf.ref.i64.ref.ref($p0: ref, $i1: i64, $p2: ref, p.3: ref)
  returns ($r: i32);
procedure  snprintf.ref.i64.ref.ref.ref.ref($p0: ref, $i1: i64, $p2: ref, p.3: ref, p.4: ref, p.5: ref)
  returns ($r: i32);
const device_create: ref;
axiom (device_create == $sub.ref(0, 358178));
procedure  device_create.ref.ref.i32.ref.ref.ref($p0: ref, $p1: ref, $i2: i32, $p3: ref, $p4: ref, p.5: ref)
  returns ($r: ref);
const IS_ERR: ref;
axiom (IS_ERR == $sub.ref(0, 359210));
procedure  IS_ERR($p0: ref)
  returns ($r: i1)
{
  var $i1: i1;
  var $i2: i8;
  var $i3: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12340, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_is_err($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12340, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $zext.i1.i8($i1);
  // WARNING: %3 = zext i1 %2 to i8, !dbg !5783, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12341, 11} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i8.i1($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12341, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const PTR_ERR: ref;
axiom (PTR_ERR == $sub.ref(0, 360242));
procedure  PTR_ERR($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12331, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := ldv_ptr_err($p0);
  // WARNING: %2 = call i64 @ldv_ptr_err(i8* %0), !dbg !5781, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12332, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const ldv_ptr_err: ref;
axiom (ldv_ptr_err == $sub.ref(0, 361274));
procedure  ldv_ptr_err($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
  var $i2: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12424, 28} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12424, 26} true;
  assume {:verifier.code 0} true;
  $i2 := $sub.i64(2012, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12424, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const ldv_is_err: ref;
axiom (ldv_is_err == $sub.ref(0, 362306));
procedure  ldv_is_err($p0: ref)
  returns ($r: i1)
{
  var $i1: i64;
  var $i2: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12408, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12408, 31} true;
  assume {:verifier.code 0} true;
  $i2 := $ugt.i64($i1, 2012);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12408, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const __preempt_count_sub: ref;
axiom (__preempt_count_sub == $sub.ref(0, 363338));
procedure  __preempt_count_sub($i0: i32)
{
  var $i1: i1;
  var $i2: i1;
  var $i3: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !6769, metadata !5777), !dbg !6770, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4735, 16} true;
  assume {:verifier.code 0} true;
  $i1 := $eq.i32(0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4735, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  call devirtbounce.3(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4737, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4738, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $eq.i32(0, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4738, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4743, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i2 == 1);
  call devirtbounce.3(0, __preempt_count, __preempt_count);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4740, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i2 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4741, 65} true;
  assume {:verifier.code 0} true;
  $i3 := $sub.i32(0, $i0);
  call devirtbounce.4(0, __preempt_count, $i3, __preempt_count);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb3;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4758, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const atomic_set: ref;
axiom (atomic_set == $sub.ref(0, 364370));
procedure  atomic_set($p0: ref, $i1: i32)
{
  var $p2: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.__anonstruct_kuid_t_46* %0, i64 0, metadata !6791, metadata !5777), !dbg !6792, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4605, 6} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4605, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4606, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_check_alloc_flags: ref;
axiom (ldv_check_alloc_flags == $sub.ref(0, 365402));
procedure  ldv_check_alloc_flags($i0: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i1;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12452, 7} true;
  assume {:verifier.code 0} true;
  $i1 := $M.3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12452, 16} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12452, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i2 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12452, 31} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12452, 38} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12452, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12452, 21} true;
  assume {:verifier.code 0} true;
  assume !(($i2 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb6;
$bb4:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12453, 5} true;
  assume {:verifier.code 0} true;
  call ldv_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12454, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12452, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12457, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_undef_ptr: ref;
axiom (ldv_undef_ptr == $sub.ref(0, 366434));
procedure  ldv_undef_ptr()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4525, 9} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet_pointer();
  call {:cexpr "smack:ext:__VERIFIER_nondet_pointer"} boogie_si_record_ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4526, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const ldv_error: ref;
axiom (ldv_error == $sub.ref(0, 367466));
procedure  ldv_error()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12398, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12400, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_error();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12402, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const strlen: ref;
axiom (strlen == $sub.ref(0, 368498));
procedure  strlen($p0: ref)
  returns ($r: i64);
const strncmp: ref;
axiom (strncmp == $sub.ref(0, 369530));
procedure  strncmp($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i32);
const noop_llseek: ref;
axiom (noop_llseek == $sub.ref(0, 370562));
procedure  noop_llseek($p0: ref, $i1: i64, $i2: i32)
  returns ($r: i64);
const st_read: ref;
axiom (st_read == $sub.ref(0, 371594));
procedure  st_read($p0: ref, $p1: ref, $i2: i64, $p3: ref)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i15: i64;
  var $i16: i1;
  var $i17: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i64;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $i28: i1;
  var $p29: ref;
  var $i30: i32;
  var $i31: i64;
  var $i32: i64;
  var $i33: i1;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $i37: i1;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $i42: i32;
  var $i43: i64;
  var $p44: ref;
  var $p45: ref;
  var $i46: i8;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i50: i64;
  var $i51: i1;
  var $p52: ref;
  var $i53: i32;
  var $i54: i1;
  var $p55: ref;
  var $i56: i8;
  var $i57: i32;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $i63: i8;
  var $i64: i32;
  var $p65: ref;
  var $i66: i32;
  var $i67: i32;
  var $i68: i64;
  var $i69: i1;
  var $p70: ref;
  var $i71: i16;
  var $i72: i32;
  var $p73: ref;
  var $i74: i32;
  var $i75: i1;
  var $p76: ref;
  var $i77: i8;
  var $i78: i32;
  var $i79: i1;
  var $p80: ref;
  var $i81: i8;
  var $i82: i32;
  var $i83: i1;
  var $p84: ref;
  var $i85: i8;
  var $i86: i32;
  var $i87: i32;
  var $i88: i8;
  var $p89: ref;
  var $i90: i1;
  var $p91: ref;
  var $i92: i64;
  var $i93: i1;
  var $p94: ref;
  var $i95: i64;
  var $i96: i1;
  var $p97: ref;
  var $i98: i64;
  var $p99: ref;
  var $i100: i64;
  var $i101: i1;
  var $i102: i64;
  var $p103: ref;
  var $p104: ref;
  var $i105: i64;
  var $i106: i1;
  var $p107: ref;
  var $i108: i1;
  var $p113: ref;
  var $i114: i32;
  var $i115: i1;
  var $i116: i64;
  var $i117: i64;
  var $i118: i32;
  var $i119: i1;
  var $i120: i32;
  var $i121: i64;
  var $i122: i32;
  var $p123: ref;
  var $i124: i32;
  var $i125: i1;
  var $i126: i32;
  var $i127: i1;
  var $p128: ref;
  var $i129: i8;
  var $i130: i32;
  var $i131: i1;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $i136: i8;
  var $i137: i32;
  var $p138: ref;
  var $i139: i32;
  var $i140: i32;
  var $i141: i32;
  var $i142: i32;
  var $p143: ref;
  var $i144: i32;
  var $i145: i64;
  var $i146: i64;
  var $i147: i1;
  var $p148: ref;
  var $i149: i32;
  var $i150: i64;
  var $i152: i64;
  var $i151: i64;
  var $i153: i1;
  var $i154: i32;
  var $i155: i32;
  var $i156: i64;
  var $i157: i64;
  var $i158: i1;
  var $i159: i64;
  var $p160: ref;
  var $i161: i64;
  var $i162: i64;
  var $p163: ref;
  var $p164: ref;
  var $i165: i32;
  var $i166: i1;
  var $i167: i64;
  var $i169: i1;
  var $p110: ref;
  var $i111: i32;
  var $i112: i64;
  var $i171: i1;
  var $i172: i64;
  var $i170: i64;
  var $i109: i64;
  var $i168: i64;
  var $i173: i1;
  var $p174: ref;
  var $i175: i8;
  var $i176: i32;
  var $i177: i1;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $i181: i32;
  var $i182: i1;
  var $p183: ref;
  var $i184: i32;
  var $i185: i32;
  var $p186: ref;
  var $p187: ref;
  var $i188: i8;
  var $i189: i32;
  var $i190: i1;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $i194: i32;
  var $i195: i1;
  var $p196: ref;
  var $i197: i32;
  var $i198: i32;
  var $p199: ref;
  var $p200: ref;
  var $i201: i8;
  var $i202: i32;
  var $i203: i1;
  var $p204: ref;
  var $p205: ref;
  var $i206: i8;
  var $i207: i32;
  var $i208: i1;
  var $p209: ref;
  var $i18: i64;
  var $i19: i32;
  var $p210: ref;
  var $i211: i64;
  var $i212: i1;
  var $p213: ref;
  var $i214: i1;
  var $p215: ref;
  var $p216: ref;
  var $i14: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !6832, metadata !5777), !dbg !6833, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %struct.st_request** %6, metadata !6840, metadata !5777), !dbg !6841, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !6842, metadata !5777), !dbg !6843, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7663, 9} true;
  assume {:verifier.code 0} true;
  $M.10 := $store.ref($M.10, $p5, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7664, 35} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7664, 35} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7664, 9} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7665, 15} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7665, 15} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7666, 48} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7666, 9} true;
  assume {:verifier.code 0} true;
  call $i12 := mutex_lock_interruptible_nested($p11, 0);
  // WARNING: %13 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %12, i32 0), !dbg !5803, !verifier.code !5775
  call {:cexpr "tmp"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7667, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7667, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7668, 5} true;
  assume {:verifier.code 0} true;
  $i14 := $sub.i64(0, 512);
  goto $bb3;
$bb2:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7865, 1} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7672, 12} true;
  assume {:verifier.code 0} true;
  call $i15 := rw_checks($p8, $p0, $i2);
  // WARNING: %18 = call i64 @rw_checks(%struct.scsi_tape* %9, %struct.file* %0, i64 %2), !dbg !5811, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7673, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i64($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7673, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7673, 20} true;
  assume {:verifier.code 0} true;
  assume ($i16 == 1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7674, 5} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $i15, 0;
  goto $bb10;
$bb7:
  assume !(($i16 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7673, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7673, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7673, 7} true;
  assume {:verifier.code 0} true;
  assume ($i17 == 1);
  goto $bb6;
$bb9:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7850, 23} true;
  assume {:verifier.code 0} true;
  $p210 := $load.ref($M.10, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7850, 7} true;
  assume {:verifier.code 0} true;
  $i211 := $p2i.ref.i64($p210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7850, 29} true;
  assume {:verifier.code 0} true;
  $i212 := $ne.i64($i211, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7850, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i212} true;
  goto $bb119, $bb120;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7678, 38} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p8, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7678, 9} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7678, 68} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p8, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7678, 68} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7678, 47} true;
  assume {:verifier.code 0} true;
  $i24 := $sext.i32.i64($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7678, 45} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p21, $mul.ref($i24, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 12} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 12} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 23} true;
  assume {:verifier.code 0} true;
  $i28 := $ne.i32($i27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 28} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i28 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 53} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 53} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 39} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i32.i64($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 37} true;
  assume {:verifier.code 0} true;
  $i32 := $urem.i64($i2, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 64} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i64($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb15, $bb16;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 28} true;
  assume {:verifier.code 0} true;
  assume !(($i28 == 1));
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  goto $bb20;
$bb15:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7680, 29} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($add.ref($p21, $mul.ref($i24, 56)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7680, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7680, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7680, 43} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7680, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb17, $bb18;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7679, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i33 == 1));
  goto $bb14;
$bb17:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7682, 7} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $sub.i64(0, 22), 0;
  goto $bb10;
$bb18:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7686, 10} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p8, 299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7686, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7687, 3} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7690, 40} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p8, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7690, 10} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7690, 67} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p8, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7690, 67} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7690, 46} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7690, 44} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p40, $mul.ref($i43, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7691, 28} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p40, $mul.ref($i43, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7691, 28} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7691, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7691, 31} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i32($i47, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7691, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7692, 15} true;
  assume {:verifier.code 0} true;
  call $i49 := flush_buffer($p8, 0);
  // WARNING: %62 = call i32 @flush_buffer(%struct.scsi_tape* %9, i32 0), !dbg !5860, !verifier.code !5775
  call {:cexpr "tmp___0"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7693, 14} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i49);
  // WARNING: %63 = sext i32 %62 to i64, !dbg !5864, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7694, 16} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i64($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7694, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb23, $bb24;
$bb22:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb23:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7695, 7} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $i50, 0;
  goto $bb10;
$bb24:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7699, 11} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p40, $mul.ref($i43, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7699, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p52, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7700, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7703, 7} true;
  assume {:verifier.code 0} true;
  $i53 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7703, 17} true;
  assume {:verifier.code 0} true;
  $i54 := $ne.i32($i53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7703, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i54 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7703, 46} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7703, 46} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i8($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7703, 25} true;
  assume {:verifier.code 0} true;
  $i57 := $zext.i8.i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7703, 50} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i32($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7703, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb30, $bb31;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7703, 22} true;
  assume {:verifier.code 0} true;
  assume !(($i54 == 1));
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb32;
$bb30:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7704, 15} true;
  assume {:verifier.code 0} true;
  call $p59 := tape_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7705, 65} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7705, 65} true;
  assume {:verifier.code 0} true;
  $p61 := $load.ref($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7706, 72} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7706, 72} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i8($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7706, 60} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i8.i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7706, 83} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p10, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7706, 83} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7705, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.12, $p61, $p59, .str.146, $i64, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7707, 3} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7703, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i58 == 1));
  goto $bb29;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7710, 13} true;
  assume {:verifier.code 0} true;
  call $i67 := setup_buffering($p8, $p1, $i2, 1);
  // WARNING: %89 = call i32 @setup_buffering(%struct.scsi_tape* %9, i8* %1, i64 %2, i32 1), !dbg !5892, !verifier.code !5775
  call {:cexpr "tmp___2"} boogie_si_record_i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7711, 12} true;
  assume {:verifier.code 0} true;
  $i68 := $sext.i32.i64($i67);
  // WARNING: %90 = sext i32 %89 to i64, !dbg !5895, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7712, 14} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i64($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7712, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7713, 5} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $i68, 0;
  goto $bb10;
$bb34:
  assume !(($i69 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7717, 24} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p10, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7717, 24} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i16($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7717, 12} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i16.i32($i71);
  // WARNING: %97 = zext i16 %96 to i32, !dbg !5902, !verifier.code !5775
  call {:cexpr "do_dio"} boogie_si_record_i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 13} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p10, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 13} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 26} true;
  assume {:verifier.code 0} true;
  $i75 := $eq.i32($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 55} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 55} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i8($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 34} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i8.i32($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 59} true;
  assume {:verifier.code 0} true;
  $i79 := $ugt.i32($i78, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb39, $bb40;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i75 == 1));
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  goto $bb44;
$bb39:
  assume ($i79 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7719, 30} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7719, 30} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i8($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7719, 9} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.i8.i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7719, 34} true;
  assume {:verifier.code 0} true;
  $i83 := $ule.i32($i82, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7719, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb41, $bb42;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7718, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i79 == 1));
  goto $bb38;
$bb41:
  assume ($i83 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7720, 40} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7720, 40} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i8($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7720, 19} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7720, 44} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7720, 19} true;
  assume {:verifier.code 0} true;
  $i88 := $trunc.i32.i8($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7720, 13} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7720, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p89, $i88);
  // WARNING: store i8 %116, i8* %117, align 1, !dbg !5923, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7722, 7} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := 0, $i72;
  goto $bb10;
$bb42:
  assume !(($i83 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7727, 5} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $sub.i64(0, 5), $i72;
  goto $bb10;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7731, 14} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i32($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7731, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7732, 30} true;
  assume {:verifier.code 0} true;
  $p91 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7732, 15} true;
  assume {:verifier.code 0} true;
  call $i92 := copy_from_user($p91, $p1, 1);
  // WARNING: %125 = call i64 @copy_from_user(i8* %124, i8* %1, i64 1), !dbg !5931, !verifier.code !5775
  call {:cexpr "tmp___3"} boogie_si_record_i64($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7733, 17} true;
  assume {:verifier.code 0} true;
  $i93 := $ne.i64($i92, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7733, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb47, $bb48;
$bb46:
  assume !(($i90 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb47:
  assume ($i93 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7735, 7} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $sub.i64(0, 14), $i72;
  goto $bb10;
$bb48:
  assume !(($i93 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7737, 43} true;
  assume {:verifier.code 0} true;
  $p94 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7737, 17} true;
  assume {:verifier.code 0} true;
  call $i95 := copy_to_user($p1, $p94, 1);
  // WARNING: %130 = call i64 @copy_to_user(i8* %1, i8* %129, i64 1), !dbg !5941, !verifier.code !5775
  call {:cexpr "tmp___4"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7738, 19} true;
  assume {:verifier.code 0} true;
  $i96 := $ne.i64($i95, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7738, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7740, 9} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $sub.i64(0, 14), $i72;
  goto $bb10;
$bb50:
  assume !(($i96 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7742, 34} true;
  assume {:verifier.code 0} true;
  $p97 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7742, 79} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i64($i2, $sub.i64(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7742, 70} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p1, $mul.ref($i98, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7742, 19} true;
  assume {:verifier.code 0} true;
  call $i100 := copy_from_user($p97, $p99, 1);
  // WARNING: %137 = call i64 @copy_from_user(i8* %134, i8* %136, i64 1), !dbg !5953, !verifier.code !5775
  call {:cexpr "tmp___5"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7744, 21} true;
  assume {:verifier.code 0} true;
  $i101 := $ne.i64($i100, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7744, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i101 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7746, 11} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $sub.i64(0, 14), $i72;
  goto $bb10;
$bb52:
  assume !(($i101 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7748, 56} true;
  assume {:verifier.code 0} true;
  $i102 := $add.i64($i2, $sub.i64(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7748, 47} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p1, $mul.ref($i102, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7748, 82} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7748, 21} true;
  assume {:verifier.code 0} true;
  call $i105 := copy_to_user($p103, $p104, 1);
  // WARNING: %144 = call i64 @copy_to_user(i8* %142, i8* %143, i64 1), !dbg !5965, !verifier.code !5775
  call {:cexpr "tmp___6"} boogie_si_record_i64($i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7750, 23} true;
  assume {:verifier.code 0} true;
  $i106 := $ne.i64($i105, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7750, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i106} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i106 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7752, 13} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $sub.i64(0, 14), $i72;
  goto $bb10;
$bb54:
  assume !(($i106 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:verifier.code 0} true;
  goto $bb57;
$bb57:
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7759, 3} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7762, 9} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p40, $mul.ref($i43, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7762, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p107, 1);
  // WARNING: store i8 1, i8* %154, align 4, !dbg !5975, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !7029, metadata !5777), !dbg !7030, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 29} true;
  assume {:verifier.code 0} true;
  $i108 := $ult.i64(0, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 37} true;
  assume {:verifier.code 0} true;
  $i109 := 0;
  assume {:branchcond $i108} true;
  goto $bb60, $bb61;
$bb60:
  assume ($i108 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 37} true;
  assume {:verifier.code 0} true;
  $p110, $i111, $i112 := $p1, 0, 0;
  goto $bb63;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i108 == 1));
  goto $bb62;
$bb62:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb63:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 48} true;
  assume {:verifier.code 0} true;
  $i171 := $eq.i32($i111, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 7} true;
  assume {:verifier.code 0} true;
  $i172 := $i112;
  assume {:branchcond $i171} true;
  goto $bb95, $bb96;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7767, 13} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p10, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7767, 13} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i32($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7767, 26} true;
  assume {:verifier.code 0} true;
  $i115 := $eq.i32($i114, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7767, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i115} true;
  goto $bb65, $bb66;
$bb65:
  assume ($i115 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7768, 44} true;
  assume {:verifier.code 0} true;
  $i116 := $sub.i64($i2, $i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7768, 15} true;
  assume {:verifier.code 0} true;
  call $i117 := read_tape($p8, $i116, $p5);
  // WARNING: %162 = call i64 @read_tape(%struct.scsi_tape* %9, i64 %161, %struct.st_request** %6), !dbg !5989, !verifier.code !5775
  call {:cexpr "tmp___7"} boogie_si_record_i64($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7769, 15} true;
  assume {:verifier.code 0} true;
  $i118 := $trunc.i64.i32($i117);
  // WARNING: %163 = trunc i64 %162 to i32, !dbg !5992, !verifier.code !5775
  call {:cexpr "special"} boogie_si_record_i32($i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7770, 17} true;
  assume {:verifier.code 0} true;
  $i119 := $slt.i32($i118, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7770, 9} true;
  assume {:verifier.code 0} true;
  $i120 := $i118;
  assume {:branchcond $i119} true;
  goto $bb67, $bb68;
$bb66:
  assume !(($i115 == 1));
  assume {:verifier.code 0} true;
  $i122 := $i111;
  goto $bb70;
$bb67:
  assume ($i119 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7771, 16} true;
  assume {:verifier.code 0} true;
  $i121 := $sext.i32.i64($i120);
  // WARNING: %166 = sext i32 %.lcssa to i64, !dbg !5996, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7772, 7} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $i121, $i72;
  goto $bb10;
$bb68:
  assume !(($i119 == 1));
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7776, 3} true;
  assume {:verifier.code 0} true;
  $i122 := $i118;
  goto $bb70;
$bb70:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7779, 13} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p10, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7779, 13} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i32($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7779, 26} true;
  assume {:verifier.code 0} true;
  $i125 := $sgt.i32($i124, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7779, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb71, $bb72;
$bb71:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7780, 9} true;
  assume {:verifier.code 0} true;
  $i126 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7780, 19} true;
  assume {:verifier.code 0} true;
  $i127 := $ne.i32($i126, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7780, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb73, $bb74;
$bb72:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  $i162, $p163 := $i112, $p110;
  goto $bb88;
$bb73:
  assume ($i127 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7780, 48} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7780, 48} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i8($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7780, 27} true;
  assume {:verifier.code 0} true;
  $i130 := $zext.i8.i32($i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7780, 52} true;
  assume {:verifier.code 0} true;
  $i131 := $ne.i32($i130, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7780, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb76, $bb77;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7780, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i127 == 1));
  goto $bb75;
$bb75:
  assume {:verifier.code 0} true;
  goto $bb78;
$bb76:
  assume ($i131 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7781, 17} true;
  assume {:verifier.code 0} true;
  call $p132 := tape_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7782, 67} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7782, 67} true;
  assume {:verifier.code 0} true;
  $p134 := $load.ref($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7783, 76} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7783, 76} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i8($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7783, 64} true;
  assume {:verifier.code 0} true;
  $i137 := $zext.i8.i32($i136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7783, 87} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p10, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7783, 87} true;
  assume {:verifier.code 0} true;
  $i139 := $load.i32($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7784, 33} true;
  assume {:verifier.code 0} true;
  $i140 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7784, 56} true;
  assume {:verifier.code 0} true;
  $i141 := $trunc.i64.i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7784, 54} true;
  assume {:verifier.code 0} true;
  $i142 := $sub.i32($i140, $i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7782, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32(.str.12, $p134, $p132, .str.147, $i137, $i139, $i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7785, 5} true;
  assume {:verifier.code 0} true;
  goto $bb78;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7780, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i131 == 1));
  goto $bb75;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 49} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p10, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 49} true;
  assume {:verifier.code 0} true;
  $i144 := $load.i32($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 27} true;
  assume {:verifier.code 0} true;
  $i145 := $sext.i32.i64($i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 70} true;
  assume {:verifier.code 0} true;
  $i146 := $sub.i64($i2, $i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 62} true;
  assume {:verifier.code 0} true;
  $i147 := $ult.i64($i145, $i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 27} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i147} true;
  goto $bb79, $bb80;
$bb79:
  assume ($i147 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 118} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($p10, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 118} true;
  assume {:verifier.code 0} true;
  $i149 := $load.i32($M.0, $p148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 96} true;
  assume {:verifier.code 0} true;
  $i150 := $sext.i32.i64($i149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 27} true;
  assume {:verifier.code 0} true;
  $i151 := $i150;
  goto $bb81;
$bb80:
  assume !(($i147 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 139} true;
  assume {:verifier.code 0} true;
  $i152 := $sub.i64($i2, $i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 27} true;
  assume {:verifier.code 0} true;
  $i151 := $i152;
  goto $bb81;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7788, 27} true;
  assume {:verifier.code 0} true;
  // WARNING: %208 = phi i64 [ %204, %201 ], [ %206, %205 ], !dbg !6038, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7789, 16} true;
  assume {:verifier.code 0} true;
  $i153 := $eq.i32($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7789, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i153} true;
  goto $bb82, $bb83;
$bb82:
  assume ($i153 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7790, 40} true;
  assume {:verifier.code 0} true;
  $i154 := $trunc.i64.i32($i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7790, 17} true;
  assume {:verifier.code 0} true;
  call $i155 := from_buffer($p10, $p110, $i154);
  // WARNING: %212 = call i32 @from_buffer(%struct.st_buffer* %11, i8* %.113, i32 %211), !dbg !6047, !verifier.code !5775
  call {:cexpr "tmp___9"} boogie_si_record_i32($i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7791, 11} true;
  assume {:verifier.code 0} true;
  $i156 := $sext.i32.i64($i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7791, 9} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p4, $i156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7792, 11} true;
  assume {:verifier.code 0} true;
  $i157 := $load.i64($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7792, 13} true;
  assume {:verifier.code 0} true;
  $i158 := $ne.i64($i157, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7792, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i158} true;
  goto $bb84, $bb85;
$bb83:
  assume !(($i153 == 1));
  assume {:verifier.code 0} true;
  goto $bb87;
$bb84:
  assume ($i158 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7793, 18} true;
  assume {:verifier.code 0} true;
  $i159 := $load.i64($M.0, $p4);
  // WARNING: %217 = load i64, i64* %5, align 8, !dbg !6056, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7794, 9} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $i159, $i72;
  goto $bb10;
$bb85:
  assume !(($i158 == 1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7798, 5} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7801, 15} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p110, $mul.ref($i151, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7802, 19} true;
  assume {:verifier.code 0} true;
  $i161 := $add.i64($i112, $i151);
  // WARNING: %223 = add nsw i64 %.1711, %208, !dbg !6061, !verifier.code !5775
  call {:cexpr "total"} boogie_si_record_i64($i161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7803, 3} true;
  assume {:verifier.code 0} true;
  $i162, $p163 := $i161, $p160;
  goto $bb88;
$bb88:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7806, 12} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7806, 12} true;
  assume {:verifier.code 0} true;
  $i165 := $load.i32($M.0, $p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7806, 23} true;
  assume {:verifier.code 0} true;
  $i166 := $eq.i32($i165, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7806, 7} true;
  assume {:verifier.code 0} true;
  $i167 := $i162;
  assume {:branchcond $i166} true;
  goto $bb89, $bb90;
$bb89:
  assume ($i166 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7807, 5} true;
  assume {:verifier.code 0} true;
  $i168 := $i167;
  goto $bb91;
$bb90:
  assume !(($i166 == 1));
  assume {:verifier.code 0} true;
  goto $bb92;
$bb91:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7818, 13} true;
  assume {:verifier.code 0} true;
  $i173 := $eq.i64($i168, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7818, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i173} true;
  goto $bb98, $bb99;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 29} true;
  assume {:verifier.code 0} true;
  $i169 := $ult.i64($i162, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 37} true;
  assume {:verifier.code 0} true;
  $p110, $i111, $i112, $i170 := $p163, $i122, $i162, $i162;
  assume {:branchcond $i169} true;
  goto $bb93, $bb94;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 37} true;
  assume {:verifier.code 0} true;
  assume ($i169 == 1);
  goto $bb63;
$bb94:
  assume !(($i169 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 37} true;
  assume {:verifier.code 0} true;
  $i109 := $i170;
  goto $bb62;
$bb95:
  assume ($i171 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7813, 5} true;
  assume {:verifier.code 0} true;
  goto $bb64;
$bb96:
  assume !(($i171 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $i172;
  goto $bb62;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7812, 51} true;
  assume {:verifier.code 0} true;
  $i168 := $i109;
  goto $bb91;
$bb98:
  assume ($i173 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7819, 30} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7819, 30} true;
  assume {:verifier.code 0} true;
  $i175 := $load.i8($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7819, 9} true;
  assume {:verifier.code 0} true;
  $i176 := $zext.i8.i32($i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7819, 34} true;
  assume {:verifier.code 0} true;
  $i177 := $eq.i32($i176, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7819, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i177} true;
  goto $bb100, $bb101;
$bb99:
  assume !(($i173 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7843, 28} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7843, 28} true;
  assume {:verifier.code 0} true;
  $i206 := $load.i8($M.0, $p205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7843, 7} true;
  assume {:verifier.code 0} true;
  $i207 := $zext.i8.i32($i206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7843, 32} true;
  assume {:verifier.code 0} true;
  $i208 := $eq.i32($i207, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7843, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i208} true;
  goto $bb116, $bb117;
$bb100:
  assume ($i177 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7820, 13} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7820, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p178, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7821, 13} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7821, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p179, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7822, 17} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7822, 17} true;
  assume {:verifier.code 0} true;
  $i181 := $load.i32($M.0, $p180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7822, 26} true;
  assume {:verifier.code 0} true;
  $i182 := $sge.i32($i181, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7822, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i182} true;
  goto $bb102, $bb103;
$bb101:
  assume !(($i177 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7828, 30} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7828, 30} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i8($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7828, 9} true;
  assume {:verifier.code 0} true;
  $i189 := $zext.i8.i32($i188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7828, 34} true;
  assume {:verifier.code 0} true;
  $i190 := $eq.i32($i189, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7828, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i190} true;
  goto $bb106, $bb107;
$bb102:
  assume ($i182 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7823, 32} true;
  assume {:verifier.code 0} true;
  $p183 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7823, 32} true;
  assume {:verifier.code 0} true;
  $i184 := $load.i32($M.0, $p183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7823, 41} true;
  assume {:verifier.code 0} true;
  $i185 := $add.i32($i184, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7823, 15} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7823, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p186, $i185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7824, 7} true;
  assume {:verifier.code 0} true;
  goto $bb104;
$bb103:
  assume !(($i182 == 1));
  assume {:verifier.code 0} true;
  goto $bb104;
$bb104:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7827, 5} true;
  assume {:verifier.code 0} true;
  goto $bb105;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7842, 3} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb106:
  assume ($i190 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7829, 13} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7829, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p191, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7830, 13} true;
  assume {:verifier.code 0} true;
  $p192 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7830, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p192, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7831, 17} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7831, 17} true;
  assume {:verifier.code 0} true;
  $i194 := $load.i32($M.0, $p193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7831, 26} true;
  assume {:verifier.code 0} true;
  $i195 := $sge.i32($i194, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7831, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i195} true;
  goto $bb108, $bb109;
$bb107:
  assume !(($i190 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7837, 30} true;
  assume {:verifier.code 0} true;
  $p200 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7837, 30} true;
  assume {:verifier.code 0} true;
  $i201 := $load.i8($M.0, $p200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7837, 9} true;
  assume {:verifier.code 0} true;
  $i202 := $zext.i8.i32($i201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7837, 34} true;
  assume {:verifier.code 0} true;
  $i203 := $eq.i32($i202, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7837, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i203} true;
  goto $bb112, $bb113;
$bb108:
  assume ($i195 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7832, 32} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7832, 32} true;
  assume {:verifier.code 0} true;
  $i197 := $load.i32($M.0, $p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7832, 41} true;
  assume {:verifier.code 0} true;
  $i198 := $add.i32($i197, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7832, 15} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7832, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p199, $i198);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7833, 7} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb109:
  assume !(($i195 == 1));
  assume {:verifier.code 0} true;
  goto $bb110;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7836, 5} true;
  assume {:verifier.code 0} true;
  goto $bb111;
$bb111:
  assume {:verifier.code 0} true;
  goto $bb105;
$bb112:
  assume ($i203 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7838, 13} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7838, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p204, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7839, 5} true;
  assume {:verifier.code 0} true;
  goto $bb114;
$bb113:
  assume !(($i203 == 1));
  assume {:verifier.code 0} true;
  goto $bb114;
$bb114:
  assume {:verifier.code 0} true;
  goto $bb111;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7848, 3} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $i168, $i72;
  goto $bb10;
$bb116:
  assume ($i208 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7844, 11} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($add.ref($p40, $mul.ref($i43, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7844, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p209, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7845, 3} true;
  assume {:verifier.code 0} true;
  goto $bb118;
$bb117:
  assume !(($i208 == 1));
  assume {:verifier.code 0} true;
  goto $bb118;
$bb118:
  assume {:verifier.code 0} true;
  goto $bb115;
$bb119:
  assume ($i212 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7851, 24} true;
  assume {:verifier.code 0} true;
  $p213 := $load.ref($M.10, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7851, 5} true;
  assume {:verifier.code 0} true;
  call st_release_request($p213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7852, 11} true;
  assume {:verifier.code 0} true;
  $M.10 := $store.ref($M.10, $p5, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7853, 3} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb120:
  assume !(($i212 == 1));
  assume {:verifier.code 0} true;
  goto $bb121;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7856, 14} true;
  assume {:verifier.code 0} true;
  $i214 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7856, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i214} true;
  goto $bb122, $bb123;
$bb122:
  assume ($i214 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7857, 5} true;
  assume {:verifier.code 0} true;
  call release_buffering($p8, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7858, 11} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p10, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7858, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p215, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7859, 3} true;
  assume {:verifier.code 0} true;
  goto $bb124;
$bb123:
  assume !(($i214 == 1));
  assume {:verifier.code 0} true;
  goto $bb124;
$bb124:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7862, 23} true;
  assume {:verifier.code 0} true;
  $p216 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7862, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7863, 3} true;
  assume {:verifier.code 0} true;
  $i14 := $i18;
  goto $bb3;
}
const st_write: ref;
axiom (st_write == $sub.ref(0, 372626));
procedure  st_write($p0: ref, $p1: ref, $i2: i64, $p3: ref)
  returns ($r: i64)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $i13: i64;
  var $i14: i1;
  var $i15: i1;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $i22: i32;
  var $i23: i64;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $i39: i64;
  var $p40: ref;
  var $p41: ref;
  var $i42: i8;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $i46: i8;
  var $i47: i32;
  var $i48: i1;
  var $i49: i32;
  var $i50: i64;
  var $i51: i1;
  var $p52: ref;
  var $p53: ref;
  var $i54: i8;
  var $i55: i32;
  var $i56: i1;
  var $p57: ref;
  var $i58: i32;
  var $i59: i1;
  var $p60: ref;
  var $i61: i32;
  var $i62: i1;
  var $i63: i32;
  var $i64: i64;
  var $i65: i1;
  var $p66: ref;
  var $i67: i8;
  var $i68: i32;
  var $i69: i1;
  var $p70: ref;
  var $i71: i8;
  var $i72: i32;
  var $i73: i1;
  var $p74: ref;
  var $i75: i8;
  var $i76: i32;
  var $i77: i1;
  var $i78: i32;
  var $i79: i32;
  var $i80: i1;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $p87: ref;
  var $i88: i32;
  var $i89: i64;
  var $i90: i64;
  var $i91: i1;
  var $i92: i64;
  var $i93: i1;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $i97: i8;
  var $i98: i32;
  var $i99: i1;
  var $p100: ref;
  var $p101: ref;
  var $i102: i8;
  var $i103: i32;
  var $i104: i1;
  var $p105: ref;
  var $i106: i32;
  var $i107: i1;
  var $p108: ref;
  var $i109: i16;
  var $i110: i32;
  var $i111: i1;
  var $p112: ref;
  var $i113: i64;
  var $i114: i1;
  var $p115: ref;
  var $i116: i64;
  var $p117: ref;
  var $i118: i64;
  var $i119: i1;
  var $i120: i32;
  var $i121: i64;
  var $i122: i1;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $i126: i32;
  var $i127: i1;
  var $i128: i32;
  var $i129: i8;
  var $p130: ref;
  var $p131: ref;
  var $i132: i1;
  var $p140: ref;
  var $i141: i16;
  var $i142: i32;
  var $i143: i1;
  var $p146: ref;
  var $i147: i32;
  var $i148: i1;
  var $p150: ref;
  var $i151: i32;
  var $p152: ref;
  var $i153: i32;
  var $i154: i32;
  var $p155: ref;
  var $i156: i32;
  var $i157: i32;
  var $i158: i64;
  var $i159: i1;
  var $i160: i64;
  var $i149: i64;
  var $i161: i32;
  var $i162: i32;
  var $i163: i64;
  var $i164: i64;
  var $i165: i1;
  var $p166: ref;
  var $i167: i64;
  var $p144: ref;
  var $i145: i64;
  var $i168: i64;
  var $p169: ref;
  var $p170: ref;
  var $i171: i32;
  var $i172: i1;
  var $p174: ref;
  var $i175: i16;
  var $i176: i32;
  var $i177: i1;
  var $p178: ref;
  var $i179: i8;
  var $i180: i32;
  var $i181: i1;
  var $p182: ref;
  var $i183: i8;
  var $i184: i32;
  var $i185: i1;
  var $i173: i1;
  var $i186: i32;
  var $p187: ref;
  var $i188: i32;
  var $i189: i1;
  var $p191: ref;
  var $i192: i8;
  var $i193: i32;
  var $i194: i1;
  var $p195: ref;
  var $i196: i8;
  var $i197: i32;
  var $i198: i1;
  var $i199: i32;
  var $i200: i1;
  var $p201: ref;
  var $i202: i8;
  var $i203: i32;
  var $i204: i1;
  var $p205: ref;
  var $i206: i32;
  var $p207: ref;
  var $i208: i32;
  var $i209: i1;
  var $p210: ref;
  var $i211: i1;
  var $i212: i1;
  var $p213: ref;
  var $i214: i64;
  var $p190: ref;
  var $p217: ref;
  var $i218: i32;
  var $p219: ref;
  var $p220: ref;
  var $i221: i32;
  var $i222: i1;
  var $p225: ref;
  var $i226: i16;
  var $i227: i32;
  var $i228: i1;
  var $p229: ref;
  var $i230: i32;
  var $i231: i64;
  var $i232: i64;
  var $p233: ref;
  var $i234: i32;
  var $i235: i64;
  var $i236: i64;
  var $p237: ref;
  var $i238: i32;
  var $i239: i64;
  var $i240: i64;
  var $i223: i64;
  var $i224: i64;
  var $i241: i64;
  var $i242: i8;
  var $p243: ref;
  var $i244: i64;
  var $i245: i8;
  var $p246: ref;
  var $i247: i8;
  var $p248: ref;
  var $p249: ref;
  var $i250: i32;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $p254: ref;
  var $p255: ref;
  var $i256: i32;
  var $i257: i1;
  var $i258: i32;
  var $p259: ref;
  var $i260: i64;
  var $i261: i1;
  var $p262: ref;
  var $p263: ref;
  var $i264: i32;
  var $i265: i64;
  var $i266: i1;
  var $p267: ref;
  var $i268: i32;
  var $i269: i1;
  var $i270: i64;
  var $i271: i64;
  var $i272: i32;
  var $p273: ref;
  var $p274: ref;
  var $i275: i32;
  var $p276: ref;
  var $i277: i32;
  var $i278: i1;
  var $i279: i32;
  var $i280: i8;
  var $p281: ref;
  var $p282: ref;
  var $p283: ref;
  var $i284: i32;
  var $i285: i1;
  var $p289: ref;
  var $p290: ref;
  var $p291: ref;
  var $i292: i32;
  var $i293: i1;
  var $p294: ref;
  var $p295: ref;
  var $p296: ref;
  var $p297: ref;
  var $i298: i32;
  var $i299: i1;
  var $p303: ref;
  var $i304: i8;
  var $i305: i32;
  var $i306: i32;
  var $i307: i1;
  var $p308: ref;
  var $p309: ref;
  var $i310: i8;
  var $i311: i32;
  var $p312: ref;
  var $i313: i8;
  var $i314: i32;
  var $i315: i1;
  var $p316: ref;
  var $i317: i64;
  var $i318: i32;
  var $p320: ref;
  var $i321: i32;
  var $i322: i1;
  var $i323: i1;
  var $i324: i32;
  var $i325: i32;
  var $i319: i32;
  var $p326: ref;
  var $i327: i32;
  var $i328: i1;
  var $p329: ref;
  var $i330: i32;
  var $i331: i32;
  var $i332: i32;
  var $i333: i64;
  var $i334: i1;
  var $i335: i32;
  var $i336: i64;
  var $i337: i64;
  var $p338: ref;
  var $i339: i32;
  var $i340: i64;
  var $i341: i64;
  var $i342: i64;
  var $i343: i64;
  var $i344: i64;
  var $p345: ref;
  var $i346: i64;
  var $i347: i64;
  var $p348: ref;
  var $i349: i32;
  var $i350: i1;
  var $i351: i64;
  var $i352: i64;
  var $p353: ref;
  var $i354: i32;
  var $i355: i64;
  var $i356: i64;
  var $i357: i64;
  var $p358: ref;
  var $p359: ref;
  var $i360: i32;
  var $i361: i1;
  var $i362: i1;
  var $i363: i1;
  var $i364: i64;
  var $i365: i32;
  var $i366: i1;
  var $p367: ref;
  var $p368: ref;
  var $p369: ref;
  var $i370: i32;
  var $i378: i1;
  var $p381: ref;
  var $i382: i8;
  var $i383: i32;
  var $i384: i1;
  var $i385: i1;
  var $i386: i1;
  var $p387: ref;
  var $p388: ref;
  var $i389: i32;
  var $i390: i32;
  var $p391: ref;
  var $i392: i32;
  var $i393: i1;
  var $p394: ref;
  var $i395: i32;
  var $i396: i64;
  var $i397: i64;
  var $p398: ref;
  var $i399: i32;
  var $i400: i64;
  var $i401: i64;
  var $i402: i32;
  var $i403: i32;
  var $p404: ref;
  var $p405: ref;
  var $i406: i32;
  var $i407: i1;
  var $p408: ref;
  var $p409: ref;
  var $p410: ref;
  var $p411: ref;
  var $p412: ref;
  var $p413: ref;
  var $i414: i32;
  var $i379: i32;
  var $p380: ref;
  var $i415: i64;
  var $p416: ref;
  var $p417: ref;
  var $i418: i32;
  var $i419: i1;
  var $p420: ref;
  var $p421: ref;
  var $p422: ref;
  var $i371: i32;
  var $p372: ref;
  var $i373: i64;
  var $i374: i64;
  var $i375: i64;
  var $i376: i64;
  var $p377: ref;
  var $i300: i32;
  var $i301: i64;
  var $p302: ref;
  var $i430: i64;
  var $p431: ref;
  var $p432: ref;
  var $i433: i32;
  var $i434: i64;
  var $i423: i32;
  var $p424: ref;
  var $i425: i64;
  var $i426: i64;
  var $i427: i64;
  var $i428: i64;
  var $p429: ref;
  var $i286: i32;
  var $i287: i64;
  var $p288: ref;
  var $i435: i32;
  var $p436: ref;
  var $i437: i64;
  var $i438: i64;
  var $i439: i64;
  var $i440: i64;
  var $p441: ref;
  var $p442: ref;
  var $i443: i32;
  var $i444: i1;
  var $p445: ref;
  var $i446: i32;
  var $i447: i1;
  var $p448: ref;
  var $i449: i32;
  var $i450: i1;
  var $i451: i32;
  var $i452: i32;
  var $p453: ref;
  var $p454: ref;
  var $i455: i32;
  var $i456: i32;
  var $i457: i32;
  var $p458: ref;
  var $p459: ref;
  var $p460: ref;
  var $i461: i1;
  var $i465: i1;
  var $i462: i64;
  var $i463: i64;
  var $p464: ref;
  var $i466: i1;
  var $i467: i64;
  var $i468: i64;
  var $i469: i1;
  var $p135: ref;
  var $p136: ref;
  var $i137: i64;
  var $i138: i32;
  var $i139: i64;
  var $i472: i1;
  var $i473: i64;
  var $p474: ref;
  var $i470: i64;
  var $p471: ref;
  var $i133: i64;
  var $p134: ref;
  var $i215: i64;
  var $p216: ref;
  var $p475: ref;
  var $i476: i8;
  var $i477: i32;
  var $i478: i1;
  var $p479: ref;
  var $p480: ref;
  var $i481: i8;
  var $i482: i32;
  var $i483: i1;
  var $p484: ref;
  var $i485: i64;
  var $i16: i64;
  var $p17: ref;
  var $i486: i64;
  var $i487: i1;
  var $p488: ref;
  var $i12: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !7220, metadata !5777), !dbg !7221, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !7228, metadata !5777), !dbg !7229, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7052, 35} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7052, 35} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7052, 9} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7053, 48} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7053, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := mutex_lock_interruptible_nested($p9, 0);
  // WARNING: %11 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %10, i32 0), !dbg !5799, !verifier.code !5775
  call {:cexpr "tmp"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7054, 11} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7054, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7055, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $sub.i64(0, 512);
  goto $bb3;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7379, 1} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7059, 12} true;
  assume {:verifier.code 0} true;
  call $i13 := rw_checks($p8, $p0, $i2);
  // WARNING: %16 = call i64 @rw_checks(%struct.scsi_tape* %9, %struct.file* %0, i64 %2), !dbg !5807, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7060, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7060, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7060, 20} true;
  assume {:verifier.code 0} true;
  assume ($i14 == 1);
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7061, 5} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $i13, $0.ref;
  goto $bb10;
$bb7:
  assume !(($i14 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7060, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7060, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb8, $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7060, 7} true;
  assume {:verifier.code 0} true;
  assume ($i15 == 1);
  goto $bb6;
$bb9:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7370, 7} true;
  assume {:verifier.code 0} true;
  $i486 := $p2i.ref.i64($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7370, 29} true;
  assume {:verifier.code 0} true;
  $i487 := $ne.i64($i486, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7370, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i487} true;
  goto $bb226, $bb227;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 12} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 12} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 23} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 28} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 53} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 53} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 39} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 37} true;
  assume {:verifier.code 0} true;
  $i24 := $urem.i64($i2, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 64} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb15, $bb16;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 28} true;
  assume {:verifier.code 0} true;
  assume !(($i20 == 1));
  goto $bb14;
$bb14:
  assume {:verifier.code 0} true;
  goto $bb17;
$bb15:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7066, 15} true;
  assume {:verifier.code 0} true;
  call $p26 := tape_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7067, 65} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7067, 65} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7067, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.89, $p28, $p26, .str.90);
  // WARNING: call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.89, i32 0, i32 0), %struct.scsi_device* %35, i8* %33, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.90, i32 0, i32 0)), !dbg !5833, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7070, 5} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $sub.i64(0, 22), $0.ref;
  goto $bb10;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7065, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i25 == 1));
  goto $bb14;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7074, 38} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p8, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7074, 9} true;
  assume {:verifier.code 0} true;
  $p30 := $bitcast.ref.ref($p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7074, 68} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p8, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7074, 68} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7074, 47} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7074, 45} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p30, $mul.ref($i33, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7075, 40} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p8, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7075, 10} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7075, 67} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p8, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7075, 67} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7075, 46} true;
  assume {:verifier.code 0} true;
  $i39 := $sext.i32.i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7075, 44} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p36, $mul.ref($i39, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7076, 27} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p8, 626);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7076, 27} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i8($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7076, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7076, 38} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7076, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7078, 5} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $sub.i64(0, 13), $0.ref;
  goto $bb10;
$bb19:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7082, 28} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p36, $mul.ref($i39, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7082, 28} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7082, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7082, 31} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i32($i47, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7082, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7083, 15} true;
  assume {:verifier.code 0} true;
  call $i49 := flush_buffer($p8, 0);
  // WARNING: %62 = call i32 @flush_buffer(%struct.scsi_tape* %9, i32 0), !dbg !5861, !verifier.code !5775
  call {:cexpr "tmp___1"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7084, 14} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i49);
  // WARNING: %63 = sext i32 %62 to i64, !dbg !5865, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7085, 16} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i64($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7085, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb23, $bb24;
$bb22:
  assume !(($i48 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 29} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p36, $mul.ref($i39, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i8($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 8} true;
  assume {:verifier.code 0} true;
  $i55 := $zext.i8.i32($i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 32} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i32($i55, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 38} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb27, $bb28;
$bb23:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7086, 7} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $i50, $0.ref;
  goto $bb10;
$bb24:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7090, 11} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p36, $mul.ref($i39, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7090, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p52, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7091, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7121, 15} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p8, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7121, 15} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7122, 13} true;
  assume {:verifier.code 0} true;
  call $i88 := write_behind_check($p8);
  // WARNING: %124 = call i32 @write_behind_check(%struct.scsi_tape* %9), !dbg !5935, !verifier.code !5775
  call {:cexpr "tmp___5"} boogie_si_record_i32($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7123, 7} true;
  assume {:verifier.code 0} true;
  $i89 := $sext.i32.i64($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7123, 5} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p4, $i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7124, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i64($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7124, 9} true;
  assume {:verifier.code 0} true;
  $i91 := $ne.i64($i90, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7124, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb50, $bb51;
$bb27:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 47} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 47} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 56} true;
  assume {:verifier.code 0} true;
  $i59 := $eq.i32($i58, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 62} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb30, $bb31;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 38} true;
  assume {:verifier.code 0} true;
  assume !(($i56 == 1));
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  goto $bb49;
$bb30:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 71} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 71} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 81} true;
  assume {:verifier.code 0} true;
  $i62 := $eq.i32($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb32, $bb33;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 62} true;
  assume {:verifier.code 0} true;
  assume !(($i59 == 1));
  goto $bb29;
$bb32:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7093, 15} true;
  assume {:verifier.code 0} true;
  call $i63 := set_mode_densblk($p8, $p34);
  // WARNING: %83 = call i32 @set_mode_densblk(%struct.scsi_tape* %9, %struct.st_modedef* %43), !dbg !5887, !verifier.code !5775
  call {:cexpr "tmp___2"} boogie_si_record_i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7094, 14} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i32.i64($i63);
  // WARNING: %84 = sext i32 %83 to i64, !dbg !5891, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7095, 16} true;
  assume {:verifier.code 0} true;
  $i65 := $slt.i64($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7095, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb34, $bb35;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7092, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i62 == 1));
  goto $bb29;
$bb34:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7096, 7} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $i64, $0.ref;
  goto $bb10;
$bb35:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 29} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p30, $mul.ref($i33, 56)), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 29} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i8($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 9} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 49} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 55} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 78} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p8, 631);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 78} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i8($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 58} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 98} true;
  assume {:verifier.code 0} true;
  $i73 := $eq.i32($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb40, $bb41;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 55} true;
  assume {:verifier.code 0} true;
  assume !(($i69 == 1));
  goto $bb39;
$bb39:
  assume {:verifier.code 0} true;
  goto $bb48;
$bb40:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7101, 57} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($add.ref($p30, $mul.ref($i33, 56)), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7101, 57} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i8($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7101, 37} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i8.i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7101, 77} true;
  assume {:verifier.code 0} true;
  $i77 := $eq.i32($i76, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7101, 77} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i1.i32($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7101, 17} true;
  assume {:verifier.code 0} true;
  call $i79 := st_compression($p8, $i78);
  // WARNING: %104 = call i32 @st_compression(%struct.scsi_tape* %9, i32 %103), !dbg !5911, !verifier.code !5775
  call {:cexpr "tmp___4"} boogie_si_record_i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7102, 19} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.i32($i79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7102, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb42, $bb43;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7100, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i73 == 1));
  goto $bb39;
$bb42:
  assume ($i80 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7103, 19} true;
  assume {:verifier.code 0} true;
  call $p81 := tape_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7104, 69} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7104, 69} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7104, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.89, $p83, $p81, .str.91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7106, 13} true;
  assume {:verifier.code 0} true;
  $i84 := $M.12;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7106, 27} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7106, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb44, $bb45;
$bb43:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb44:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7108, 11} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $sub.i64(0, 22), $0.ref;
  goto $bb10;
$bb45:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7112, 7} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7115, 5} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7118, 3} true;
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:verifier.code 0} true;
  goto $bb26;
$bb50:
  assume ($i91 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7125, 9} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i64($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7125, 11} true;
  assume {:verifier.code 0} true;
  $i93 := $eq.i64($i92, $sub.i64(0, 28));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7125, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb52, $bb53;
$bb51:
  assume !(($i91 == 1));
  assume {:verifier.code 0} true;
  goto $bb55;
$bb52:
  assume ($i93 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7126, 13} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7126, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p94, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7127, 5} true;
  assume {:verifier.code 0} true;
  goto $bb54;
$bb53:
  assume !(($i93 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7128, 13} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7128, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p95, 4);
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7130, 3} true;
  assume {:verifier.code 0} true;
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7133, 28} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7133, 28} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i8($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7133, 7} true;
  assume {:verifier.code 0} true;
  $i98 := $zext.i8.i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7133, 32} true;
  assume {:verifier.code 0} true;
  $i99 := $eq.i32($i98, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7133, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7134, 11} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7134, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p100, 5);
  // WARNING: store i8 5, i8* %143, align 1, !dbg !5964, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7136, 5} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $sub.i64(0, 28), $0.ref;
  goto $bb10;
$bb57:
  assume !(($i99 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7138, 28} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7138, 28} true;
  assume {:verifier.code 0} true;
  $i102 := $load.i8($M.0, $p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7138, 7} true;
  assume {:verifier.code 0} true;
  $i103 := $zext.i8.i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7138, 32} true;
  assume {:verifier.code 0} true;
  $i104 := $eq.i32($i103, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7138, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i104} true;
  goto $bb58, $bb59;
$bb58:
  assume ($i104 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7140, 5} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $sub.i64(0, 5), $0.ref;
  goto $bb10;
$bb59:
  assume !(($i104 == 1));
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:verifier.code 0} true;
  goto $bb61;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 12} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 12} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i32($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 23} true;
  assume {:verifier.code 0} true;
  $i107 := $ne.i32($i106, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 28} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i107} true;
  goto $bb62, $bb63;
$bb62:
  assume ($i107 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 52} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p87, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 52} true;
  assume {:verifier.code 0} true;
  $i109 := $load.i16($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 31} true;
  assume {:verifier.code 0} true;
  $i110 := $zext.i16.i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 59} true;
  assume {:verifier.code 0} true;
  $i111 := $eq.i32($i110, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i111} true;
  goto $bb65, $bb66;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 28} true;
  assume {:verifier.code 0} true;
  assume !(($i107 == 1));
  goto $bb64;
$bb64:
  assume {:verifier.code 0} true;
  goto $bb73;
$bb65:
  assume ($i111 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7145, 30} true;
  assume {:verifier.code 0} true;
  $p112 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7145, 15} true;
  assume {:verifier.code 0} true;
  call $i113 := copy_from_user($p112, $p1, 1);
  // WARNING: %163 = call i64 @copy_from_user(i8* %162, i8* %1, i64 1), !dbg !5984, !verifier.code !5775
  call {:cexpr "tmp___6"} boogie_si_record_i64($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7146, 17} true;
  assume {:verifier.code 0} true;
  $i114 := $ne.i64($i113, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7146, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb67, $bb68;
$bb66:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7144, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i111 == 1));
  goto $bb64;
$bb67:
  assume ($i114 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7148, 7} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $sub.i64(0, 14), $0.ref;
  goto $bb10;
$bb68:
  assume !(($i114 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7150, 32} true;
  assume {:verifier.code 0} true;
  $p115 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7150, 77} true;
  assume {:verifier.code 0} true;
  $i116 := $add.i64($i2, $sub.i64(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7150, 68} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p1, $mul.ref($i116, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7150, 17} true;
  assume {:verifier.code 0} true;
  call $i118 := copy_from_user($p115, $p117, 1);
  // WARNING: %170 = call i64 @copy_from_user(i8* %167, i8* %169, i64 1), !dbg !5996, !verifier.code !5775
  call {:cexpr "tmp___7"} boogie_si_record_i64($i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7152, 19} true;
  assume {:verifier.code 0} true;
  $i119 := $ne.i64($i118, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7152, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb69, $bb70;
$bb69:
  assume ($i119 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7154, 9} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $sub.i64(0, 14), $0.ref;
  goto $bb10;
$bb70:
  assume !(($i119 == 1));
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:verifier.code 0} true;
  goto $bb72;
$bb72:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7159, 3} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7162, 13} true;
  assume {:verifier.code 0} true;
  call $i120 := setup_buffering($p8, $p1, $i2, 0);
  // WARNING: %178 = call i32 @setup_buffering(%struct.scsi_tape* %9, i8* %1, i64 %2, i32 0), !dbg !6005, !verifier.code !5775
  call {:cexpr "tmp___8"} boogie_si_record_i32($i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7163, 12} true;
  assume {:verifier.code 0} true;
  $i121 := $sext.i32.i64($i120);
  // WARNING: %179 = sext i32 %178 to i64, !dbg !6008, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7164, 14} true;
  assume {:verifier.code 0} true;
  $i122 := $ne.i64($i121, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7164, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb74, $bb75;
$bb74:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7165, 5} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $i121, $0.ref;
  goto $bb10;
$bb75:
  assume !(($i122 == 1));
  assume {:verifier.code 0} true;
  goto $bb76;
$bb76:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7170, 3} true;
  assume {:verifier.code 0} true;
  $p123 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7170, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p123, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7171, 3} true;
  assume {:verifier.code 0} true;
  $p124 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7171, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p124, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7172, 17} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7172, 17} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i32($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7172, 28} true;
  assume {:verifier.code 0} true;
  $i127 := $ne.i32($i126, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7172, 28} true;
  assume {:verifier.code 0} true;
  $i128 := $zext.i1.i32($i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7172, 12} true;
  assume {:verifier.code 0} true;
  $i129 := $trunc.i32.i8($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7172, 3} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7172, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p130, $i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7173, 9} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p36, $mul.ref($i39, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7173, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p131, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 13} true;
  assume {:verifier.code 0} true;
  $i132 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 20} true;
  assume {:verifier.code 0} true;
  $i133, $p134 := $i2, $0.ref;
  assume {:branchcond $i132} true;
  goto $bb77, $bb78;
$bb77:
  assume ($i132 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 20} true;
  assume {:verifier.code 0} true;
  $p135, $p136, $i137, $i138, $i139 := $0.ref, $p1, $i2, 0, $i121;
  goto $bb80;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 20} true;
  assume {:verifier.code 0} true;
  assume !(($i132 == 1));
  goto $bb79;
$bb79:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb219;
$bb80:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 33} true;
  assume {:verifier.code 0} true;
  $i472 := $eq.i32($i138, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 7} true;
  assume {:verifier.code 0} true;
  $i473, $p474 := $i137, $p135;
  assume {:branchcond $i472} true;
  goto $bb217, $bb218;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7177, 28} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p87, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7177, 28} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i16($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7177, 7} true;
  assume {:verifier.code 0} true;
  $i142 := $zext.i16.i32($i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7177, 35} true;
  assume {:verifier.code 0} true;
  $i143 := $ne.i32($i142, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7177, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb82, $bb83;
$bb82:
  assume ($i143 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7179, 3} true;
  assume {:verifier.code 0} true;
  $p144, $i145 := $p136, $i137;
  goto $bb84;
$bb83:
  assume !(($i143 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7180, 14} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7180, 14} true;
  assume {:verifier.code 0} true;
  $i147 := $load.i32($M.0, $p146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7180, 25} true;
  assume {:verifier.code 0} true;
  $i148 := $eq.i32($i147, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7180, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i148} true;
  goto $bb85, $bb86;
$bb84:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7199, 17} true;
  assume {:verifier.code 0} true;
  $i168 := $sub.i64($i137, $i145);
  // WARNING: %230 = sub i64 %.3974, %.217, !dbg !6072, !verifier.code !5775
  call {:cexpr "count"} boogie_si_record_i64($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7200, 21} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p144, $mul.ref($i145, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 24} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 24} true;
  assume {:verifier.code 0} true;
  $i171 := $load.i32($M.0, $p170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 35} true;
  assume {:verifier.code 0} true;
  $i172 := $eq.i32($i171, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 40} true;
  assume {:verifier.code 0} true;
  $i173 := 0;
  assume {:branchcond $i172} true;
  goto $bb94, $bb95;
$bb85:
  assume ($i148 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7182, 5} true;
  assume {:verifier.code 0} true;
  $i149 := $i137;
  goto $bb87;
$bb86:
  assume !(($i148 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7183, 35} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p87, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7183, 35} true;
  assume {:verifier.code 0} true;
  $i151 := $load.i32($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7183, 56} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7183, 56} true;
  assume {:verifier.code 0} true;
  $i153 := $load.i32($M.0, $p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7183, 49} true;
  assume {:verifier.code 0} true;
  $i154 := $mul.i32($i151, $i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7183, 75} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p87, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7183, 75} true;
  assume {:verifier.code 0} true;
  $i156 := $load.i32($M.0, $p155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7183, 67} true;
  assume {:verifier.code 0} true;
  $i157 := $sub.i32($i154, $i156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7183, 18} true;
  assume {:verifier.code 0} true;
  $i158 := $sext.i32.i64($i157);
  // WARNING: %214 = sext i32 %213 to i64, !dbg !6053, !verifier.code !5775
  call {:cexpr "do_count"} boogie_si_record_i64($i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7184, 36} true;
  assume {:verifier.code 0} true;
  $i159 := $ugt.i64($i158, $i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7184, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i159} true;
  goto $bb88, $bb89;
$bb87:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7190, 47} true;
  assume {:verifier.code 0} true;
  $i161 := $trunc.i64.i32($i149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7190, 15} true;
  assume {:verifier.code 0} true;
  call $i162 := append_to_buffer($p136, $p87, $i161);
  // WARNING: %221 = call i32 @append_to_buffer(i8* %.3575, %struct.st_buffer* %123, i32 %220), !dbg !6060, !verifier.code !5775
  call {:cexpr "tmp___9"} boogie_si_record_i32($i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7191, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $sext.i32.i64($i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7191, 7} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p4, $i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7192, 9} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i64($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7192, 11} true;
  assume {:verifier.code 0} true;
  $i165 := $ne.i64($i164, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7192, 9} true;
  assume {:verifier.code 0} true;
  $p166 := $p135;
  assume {:branchcond $i165} true;
  goto $bb91, $bb92;
$bb88:
  assume ($i159 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7186, 7} true;
  assume {:verifier.code 0} true;
  $i160 := $i137;
  goto $bb90;
$bb89:
  assume !(($i159 == 1));
  assume {:verifier.code 0} true;
  $i160 := $i158;
  goto $bb90;
$bb90:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i149 := $i160;
  goto $bb87;
$bb91:
  assume ($i165 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7193, 16} true;
  assume {:verifier.code 0} true;
  $i167 := $load.i64($M.0, $p4);
  // WARNING: %226 = load i64, i64* %5, align 8, !dbg !6069, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7194, 7} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $i167, $p166;
  goto $bb10;
$bb92:
  assume !(($i165 == 1));
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:verifier.code 0} true;
  $p144, $i145 := $p136, $i149;
  goto $bb84;
$bb94:
  assume ($i172 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 64} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p87, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 64} true;
  assume {:verifier.code 0} true;
  $i175 := $load.i16($M.0, $p174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 43} true;
  assume {:verifier.code 0} true;
  $i176 := $zext.i16.i32($i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 71} true;
  assume {:verifier.code 0} true;
  $i177 := $eq.i32($i176, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 78} true;
  assume {:verifier.code 0} true;
  $i173 := 0;
  assume {:branchcond $i177} true;
  goto $bb97, $bb98;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 40} true;
  assume {:verifier.code 0} true;
  assume !(($i172 == 1));
  goto $bb96;
$bb96:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 124} true;
  assume {:verifier.code 0} true;
  $i186 := $zext.i1.i32($i173);
  // WARNING: %252 = zext i1 %251 to i32, !dbg !6091, !verifier.code !5775
  call {:cexpr "async_write"} boogie_si_record_i32($i186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 15} true;
  assume {:verifier.code 0} true;
  $p187 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 15} true;
  assume {:verifier.code 0} true;
  $i188 := $load.i32($M.0, $p187);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 26} true;
  assume {:verifier.code 0} true;
  $i189 := $ne.i32($i188, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 31} true;
  assume {:verifier.code 0} true;
  $p190 := $p135;
  assume {:branchcond $i189} true;
  goto $bb101, $bb102;
$bb97:
  assume ($i177 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 101} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($add.ref($p30, $mul.ref($i33, 56)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 101} true;
  assume {:verifier.code 0} true;
  $i179 := $load.i8($M.0, $p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 81} true;
  assume {:verifier.code 0} true;
  $i180 := $zext.i8.i32($i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 117} true;
  assume {:verifier.code 0} true;
  $i181 := $ne.i32($i180, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 124} true;
  assume {:verifier.code 0} true;
  $i173 := 0;
  assume {:branchcond $i181} true;
  goto $bb99, $bb100;
$bb98:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 78} true;
  assume {:verifier.code 0} true;
  assume !(($i177 == 1));
  goto $bb96;
$bb99:
  assume ($i181 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 148} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 148} true;
  assume {:verifier.code 0} true;
  $i183 := $load.i8($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 127} true;
  assume {:verifier.code 0} true;
  $i184 := $zext.i8.i32($i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 152} true;
  assume {:verifier.code 0} true;
  $i185 := $ule.i32($i184, 2);
  assume {:verifier.code 0} true;
  $i173 := $i185;
  goto $bb96;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7201, 124} true;
  assume {:verifier.code 0} true;
  assume !(($i181 == 1));
  goto $bb96;
$bb101:
  assume ($i189 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 54} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($add.ref($p30, $mul.ref($i33, 56)), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 54} true;
  assume {:verifier.code 0} true;
  $i192 := $load.i8($M.0, $p191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 34} true;
  assume {:verifier.code 0} true;
  $i193 := $zext.i8.i32($i192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 71} true;
  assume {:verifier.code 0} true;
  $i194 := $ne.i32($i193, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 78} true;
  assume {:verifier.code 0} true;
  $p190 := $p135;
  assume {:branchcond $i194} true;
  goto $bb104, $bb105;
$bb102:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i189 == 1));
  goto $bb103;
$bb103:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $p217 := $p190;
  goto $bb122;
$bb104:
  assume ($i194 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 102} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p8, 299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 102} true;
  assume {:verifier.code 0} true;
  $i196 := $load.i8($M.0, $p195);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 82} true;
  assume {:verifier.code 0} true;
  $i197 := $zext.i8.i32($i196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 114} true;
  assume {:verifier.code 0} true;
  $i198 := $eq.i32($i197, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 120} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i198} true;
  goto $bb106, $bb108;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 78} true;
  assume {:verifier.code 0} true;
  assume !(($i194 == 1));
  goto $bb103;
$bb106:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 120} true;
  assume {:verifier.code 0} true;
  assume ($i198 == 1);
  goto $bb107;
$bb107:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 163} true;
  assume {:verifier.code 0} true;
  $p201 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 163} true;
  assume {:verifier.code 0} true;
  $i202 := $load.i8($M.0, $p201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 142} true;
  assume {:verifier.code 0} true;
  $i203 := $zext.i8.i32($i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 167} true;
  assume {:verifier.code 0} true;
  $i204 := $ule.i32($i203, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 174} true;
  assume {:verifier.code 0} true;
  $p190 := $p135;
  assume {:branchcond $i204} true;
  goto $bb111, $bb112;
$bb108:
  assume !(($i198 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 123} true;
  assume {:verifier.code 0} true;
  $i199 := $M.13;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 132} true;
  assume {:verifier.code 0} true;
  $i200 := $eq.i32($i199, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 139} true;
  assume {:verifier.code 0} true;
  $p190 := $p135;
  assume {:branchcond $i200} true;
  goto $bb109, $bb110;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 139} true;
  assume {:verifier.code 0} true;
  assume ($i200 == 1);
  goto $bb107;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 139} true;
  assume {:verifier.code 0} true;
  assume !(($i200 == 1));
  goto $bb103;
$bb111:
  assume ($i204 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 183} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p87, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 183} true;
  assume {:verifier.code 0} true;
  $i206 := $load.i32($M.0, $p205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 204} true;
  assume {:verifier.code 0} true;
  $p207 := $add.ref($p87, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 204} true;
  assume {:verifier.code 0} true;
  $i208 := $load.i32($M.0, $p207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 196} true;
  assume {:verifier.code 0} true;
  $i209 := $slt.i32($i206, $i208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 7} true;
  assume {:verifier.code 0} true;
  $p190 := $p135;
  assume {:branchcond $i209} true;
  goto $bb113, $bb114;
$bb112:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 174} true;
  assume {:verifier.code 0} true;
  assume !(($i204 == 1));
  goto $bb103;
$bb113:
  assume ($i209 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7203, 10} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p8, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7203, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p210, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7204, 21} true;
  assume {:verifier.code 0} true;
  $i211 := $eq.i32($i186, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7204, 26} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb115, $bb116;
$bb114:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i209 == 1));
  goto $bb103;
$bb115:
  assume ($i211 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7204, 35} true;
  assume {:verifier.code 0} true;
  $i212 := $eq.i64($i168, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7204, 9} true;
  assume {:verifier.code 0} true;
  $p213, $i214 := $p135, $i168;
  assume {:branchcond $i212} true;
  goto $bb118, $bb119;
$bb116:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7204, 26} true;
  assume {:verifier.code 0} true;
  assume !(($i211 == 1));
  goto $bb117;
$bb117:
  assume {:verifier.code 0} true;
  goto $bb121;
$bb118:
  assume ($i212 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7205, 7} true;
  assume {:verifier.code 0} true;
  $i215, $p216 := $i214, $p213;
  goto $bb120;
$bb119:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7204, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i212 == 1));
  goto $bb117;
$bb120:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7360, 28} true;
  assume {:verifier.code 0} true;
  $p475 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7360, 28} true;
  assume {:verifier.code 0} true;
  $i476 := $load.i8($M.0, $p475);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7360, 7} true;
  assume {:verifier.code 0} true;
  $i477 := $zext.i8.i32($i476);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7360, 32} true;
  assume {:verifier.code 0} true;
  $i478 := $eq.i32($i477, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7360, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i478} true;
  goto $bb220, $bb221;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7209, 3} true;
  assume {:verifier.code 0} true;
  $p217 := $p135;
  goto $bb122;
$bb122:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7202, 204} true;
  assume {:verifier.code 0} true;
  $i218, $p219 := $i138, $p217;
  goto $bb123;
$bb123:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7213, 12} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7213, 12} true;
  assume {:verifier.code 0} true;
  $i221 := $load.i32($M.0, $p220);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7213, 23} true;
  assume {:verifier.code 0} true;
  $i222 := $eq.i32($i221, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7213, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i222} true;
  goto $bb124, $bb125;
$bb124:
  assume ($i222 == 1);
  // WARNING: call void @llvm.dbg.value(metadata i64 %.217, i64 0, metadata !7582, metadata !5777), !dbg !7583, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7216, 3} true;
  assume {:verifier.code 0} true;
  $i223, $i224 := $i145, $i145;
  goto $bb126;
$bb125:
  assume !(($i222 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7217, 30} true;
  assume {:verifier.code 0} true;
  $p225 := $add.ref($p87, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7217, 30} true;
  assume {:verifier.code 0} true;
  $i226 := $load.i16($M.0, $p225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7217, 9} true;
  assume {:verifier.code 0} true;
  $i227 := $zext.i16.i32($i226);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7217, 37} true;
  assume {:verifier.code 0} true;
  $i228 := $eq.i32($i227, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7217, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i228} true;
  goto $bb127, $bb128;
$bb126:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7225, 34} true;
  assume {:verifier.code 0} true;
  $i241 := $ashr.i64($i224, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7225, 12} true;
  assume {:verifier.code 0} true;
  $i242 := $trunc.i64.i8($i241);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7225, 3} true;
  assume {:verifier.code 0} true;
  $p243 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7225, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p243, $i242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7226, 34} true;
  assume {:verifier.code 0} true;
  $i244 := $ashr.i64($i224, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7226, 12} true;
  assume {:verifier.code 0} true;
  $i245 := $trunc.i64.i8($i244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7226, 3} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($p5, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7226, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p246, $i245);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7227, 12} true;
  assume {:verifier.code 0} true;
  $i247 := $trunc.i64.i8($i224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7227, 3} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7227, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p248, $i247);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7228, 34} true;
  assume {:verifier.code 0} true;
  $p249 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7228, 60} true;
  assume {:verifier.code 0} true;
  $i250 := $trunc.i64.i32($i223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7228, 92} true;
  assume {:verifier.code 0} true;
  $p251 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7228, 92} true;
  assume {:verifier.code 0} true;
  $p252 := $load.ref($M.0, $p251);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7228, 101} true;
  assume {:verifier.code 0} true;
  $p253 := $add.ref($p252, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7228, 101} true;
  assume {:verifier.code 0} true;
  $p254 := $load.ref($M.0, $p253);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7228, 117} true;
  assume {:verifier.code 0} true;
  $p255 := $add.ref($p254, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7228, 117} true;
  assume {:verifier.code 0} true;
  $i256 := $load.i32($M.0, $p255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7229, 37} true;
  assume {:verifier.code 0} true;
  $i257 := $eq.i32($i186, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7229, 37} true;
  assume {:verifier.code 0} true;
  $i258 := $zext.i1.i32($i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7228, 11} true;
  assume {:verifier.code 0} true;
  call $p259 := st_do_scsi($p219, $p8, $p249, $i250, 1, $i256, 0, $i258);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7230, 7} true;
  assume {:verifier.code 0} true;
  $i260 := $p2i.ref.i64($p259);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7230, 29} true;
  assume {:verifier.code 0} true;
  $i261 := $eq.i64($i260, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7230, 7} true;
  assume {:verifier.code 0} true;
  $p262 := $p259;
  assume {:branchcond $i261} true;
  goto $bb130, $bb131;
$bb127:
  assume ($i228 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7218, 30} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($p87, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7218, 30} true;
  assume {:verifier.code 0} true;
  $i230 := $load.i32($M.0, $p229);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7218, 14} true;
  assume {:verifier.code 0} true;
  $i231 := $sext.i32.i64($i230);
  // WARNING: %303 = sext i32 %302 to i64, !dbg !6155, !verifier.code !5775
  call {:cexpr "blks"} boogie_si_record_i64($i231);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7219, 5} true;
  assume {:verifier.code 0} true;
  $i232 := $i231;
  goto $bb129;
$bb128:
  assume !(($i228 == 1));
  assume {:verifier.code 0} true;
  $i232 := $i145;
  goto $bb129;
$bb129:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7222, 34} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7222, 34} true;
  assume {:verifier.code 0} true;
  $i234 := $load.i32($M.0, $p233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7222, 19} true;
  assume {:verifier.code 0} true;
  $i235 := $sext.i32.i64($i234);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7222, 17} true;
  assume {:verifier.code 0} true;
  $i236 := $sdiv.i64($i232, $i235);
  // WARNING: %309 = sdiv i64 %.020, %308, !dbg !6159, !verifier.code !5775
  call {:cexpr "blks"} boogie_si_record_i64($i236);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7223, 31} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7223, 31} true;
  assume {:verifier.code 0} true;
  $i238 := $load.i32($M.0, $p237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7223, 16} true;
  assume {:verifier.code 0} true;
  $i239 := $sext.i32.i64($i238);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7223, 42} true;
  assume {:verifier.code 0} true;
  $i240 := $mul.i64($i239, $i236);
  // WARNING: %313 = mul nsw i64 %312, %309, !dbg !6162, !verifier.code !5775
  call {:cexpr "transfer"} boogie_si_record_i64($i240);
  assume {:verifier.code 0} true;
  $i223, $i224 := $i240, $i236;
  goto $bb126;
$bb130:
  assume ($i261 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7231, 30} true;
  assume {:verifier.code 0} true;
  $p263 := $add.ref($p87, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7231, 30} true;
  assume {:verifier.code 0} true;
  $i264 := $load.i32($M.0, $p263);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7231, 14} true;
  assume {:verifier.code 0} true;
  $i265 := $sext.i32.i64($i264);
  // WARNING: %339 = sext i32 %338 to i64, !dbg !6187, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i265);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7232, 5} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $i265, $p262;
  goto $bb10;
$bb131:
  assume !(($i261 == 1));
  assume {:verifier.code 0} true;
  goto $bb132;
$bb132:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7236, 19} true;
  assume {:verifier.code 0} true;
  $i266 := $ne.i32($i186, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7236, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i266} true;
  goto $bb133, $bb134;
$bb133:
  assume ($i266 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7236, 33} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p87, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7236, 33} true;
  assume {:verifier.code 0} true;
  $i268 := $load.i32($M.0, $p267);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7236, 48} true;
  assume {:verifier.code 0} true;
  $i269 := $eq.i32($i268, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7236, 7} true;
  assume {:verifier.code 0} true;
  $i270, $i271 := $i168, $i223;
  assume {:branchcond $i269} true;
  goto $bb136, $bb137;
$bb134:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7236, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i266 == 1));
  goto $bb135;
$bb135:
  assume {:verifier.code 0} true;
  goto $bb138;
$bb136:
  assume ($i269 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7237, 21} true;
  assume {:verifier.code 0} true;
  $i272 := $trunc.i64.i32($i271);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7237, 11} true;
  assume {:verifier.code 0} true;
  $p273 := $add.ref($p87, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7237, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p273, $i272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7238, 24} true;
  assume {:verifier.code 0} true;
  $p274 := $add.ref($p87, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7238, 24} true;
  assume {:verifier.code 0} true;
  $i275 := $load.i32($M.0, $p274);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7238, 41} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p87, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7238, 41} true;
  assume {:verifier.code 0} true;
  $i277 := $load.i32($M.0, $p276);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7238, 32} true;
  assume {:verifier.code 0} true;
  $i278 := $ne.i32($i275, $i277);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7238, 32} true;
  assume {:verifier.code 0} true;
  $i279 := $zext.i1.i32($i278);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7238, 18} true;
  assume {:verifier.code 0} true;
  $i280 := $trunc.i32.i8($i279);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7238, 10} true;
  assume {:verifier.code 0} true;
  $p281 := $add.ref($p8, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7238, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p281, $i280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7240, 10} true;
  assume {:verifier.code 0} true;
  $p282 := $add.ref($p8, 660);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7240, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p282, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7241, 5} true;
  assume {:verifier.code 0} true;
  $i215, $p216 := $i270, $0.ref;
  goto $bb120;
$bb137:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7236, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i269 == 1));
  goto $bb135;
$bb138:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7245, 13} true;
  assume {:verifier.code 0} true;
  $p283 := $add.ref($p87, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7245, 13} true;
  assume {:verifier.code 0} true;
  $i284 := $load.i32($M.0, $p283);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7245, 28} true;
  assume {:verifier.code 0} true;
  $i285 := $ne.i32($i284, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7245, 7} true;
  assume {:verifier.code 0} true;
  $i286, $i287, $p288 := $i218, $i224, $p259;
  assume {:branchcond $i285} true;
  goto $bb139, $bb140;
$bb139:
  assume ($i285 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7246, 24} true;
  assume {:verifier.code 0} true;
  $p289 := $add.ref($p8, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7246, 24} true;
  assume {:verifier.code 0} true;
  $p290 := $load.ref($M.0, $p289);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7246, 33} true;
  assume {:verifier.code 0} true;
  $p291 := $add.ref($p290, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7247, 9} true;
  assume {:verifier.code 0} true;
  $i292 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7247, 19} true;
  assume {:verifier.code 0} true;
  $i293 := $ne.i32($i292, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7247, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i293} true;
  goto $bb141, $bb142;
$bb140:
  assume !(($i285 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i435, $p436, $i437, $i438, $i439, $i440, $p441 := $i286, $p288, $i139, $i287, $i145, $i168, $p169;
  goto $bb199;
$bb141:
  assume ($i293 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7248, 18} true;
  assume {:verifier.code 0} true;
  call $p294 := tape_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7249, 67} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7249, 67} true;
  assume {:verifier.code 0} true;
  $p296 := $load.ref($M.0, $p295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7249, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p296, $p294, .str.92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7251, 5} true;
  assume {:verifier.code 0} true;
  goto $bb143;
$bb142:
  assume !(($i293 == 1));
  assume {:verifier.code 0} true;
  goto $bb143;
$bb143:
  $p297 := $add.ref($add.ref($p290, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7254, 19} true;
  assume {:verifier.code 0} true;
  $i298 := $load.i32($M.0, $p297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7254, 30} true;
  assume {:verifier.code 0} true;
  $i299 := $ne.i32($i298, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7254, 35} true;
  assume {:verifier.code 0} true;
  $i300, $i301, $p302 := $i218, $i224, $p259;
  assume {:branchcond $i299} true;
  goto $bb144, $bb145;
$bb144:
  assume ($i299 == 1);
  $p303 := $add.ref($add.ref($p290, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7254, 55} true;
  assume {:verifier.code 0} true;
  $i304 := $load.i8($M.0, $p303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7254, 39} true;
  assume {:verifier.code 0} true;
  $i305 := $zext.i8.i32($i304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7254, 61} true;
  assume {:verifier.code 0} true;
  $i306 := $and.i32($i305, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7254, 67} true;
  assume {:verifier.code 0} true;
  $i307 := $ne.i32($i306, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7254, 9} true;
  assume {:verifier.code 0} true;
  $i300, $i301, $p302 := $i218, $i224, $p259;
  assume {:branchcond $i307} true;
  goto $bb147, $bb148;
$bb145:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7254, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i299 == 1));
  goto $bb146;
$bb146:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7325, 21} true;
  assume {:verifier.code 0} true;
  $i430 := $add.i64($i168, $i145);
  // WARNING: %522 = add i64 %230, %.217, !dbg !6393, !verifier.code !5775
  call {:cexpr "count"} boogie_si_record_i64($i430);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7326, 13} true;
  assume {:verifier.code 0} true;
  $p431 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7326, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p431, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7327, 32} true;
  assume {:verifier.code 0} true;
  $p432 := $add.ref($p87, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7327, 32} true;
  assume {:verifier.code 0} true;
  $i433 := $load.i32($M.0, $p432);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7327, 16} true;
  assume {:verifier.code 0} true;
  $i434 := $sext.i32.i64($i433);
  // WARNING: %526 = sext i32 %525 to i64, !dbg !6398, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i434);
  assume {:verifier.code 0} true;
  $i423, $p424, $i425, $i426, $i427, $i428, $p429 := $i300, $p302, $i434, $i301, $i145, $i430, $p169;
  goto $bb198;
$bb147:
  assume ($i307 == 1);
  $p308 := $add.ref($add.ref($p290, 40), 4);
  $p309 := $add.ref($add.ref($add.ref($p290, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7255, 41} true;
  assume {:verifier.code 0} true;
  $i310 := $load.i8($M.0, $p309);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7255, 15} true;
  assume {:verifier.code 0} true;
  $i311 := $zext.i8.i32($i310);
  // WARNING: %389 = zext i8 %388 to i32, !dbg !6242, !verifier.code !5775
  call {:cexpr "scode"} boogie_si_record_i32($i311);
  $p312 := $add.ref($add.ref($p290, 40), 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7256, 36} true;
  assume {:verifier.code 0} true;
  $i313 := $load.i8($M.0, $p312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7256, 11} true;
  assume {:verifier.code 0} true;
  $i314 := $zext.i8.i32($i313);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7256, 52} true;
  assume {:verifier.code 0} true;
  $i315 := $ne.i32($i314, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7256, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i315} true;
  goto $bb149, $bb150;
$bb148:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7254, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i307 == 1));
  goto $bb146;
$bb149:
  assume ($i315 == 1);
  $p316 := $add.ref($add.ref($p290, 40), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7257, 34} true;
  assume {:verifier.code 0} true;
  $i317 := $load.i64($M.0, $p316);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7257, 18} true;
  assume {:verifier.code 0} true;
  $i318 := $trunc.i64.i32($i317);
  // WARNING: %397 = trunc i64 %396 to i32, !dbg !6252, !verifier.code !5775
  call {:cexpr "undone"} boogie_si_record_i32($i318);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7258, 7} true;
  assume {:verifier.code 0} true;
  $i319 := $i318;
  goto $bb151;
$bb150:
  assume !(($i315 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7259, 16} true;
  assume {:verifier.code 0} true;
  $p320 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7259, 16} true;
  assume {:verifier.code 0} true;
  $i321 := $load.i32($M.0, $p320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7259, 27} true;
  assume {:verifier.code 0} true;
  $i322 := $eq.i32($i321, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7259, 32} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i322} true;
  goto $bb152, $bb153;
$bb151:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7264, 16} true;
  assume {:verifier.code 0} true;
  $p326 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7264, 16} true;
  assume {:verifier.code 0} true;
  $i327 := $load.i32($M.0, $p326);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7264, 27} true;
  assume {:verifier.code 0} true;
  $i328 := $ne.i32($i327, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7264, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i328} true;
  goto $bb158, $bb159;
$bb152:
  assume ($i322 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7259, 41} true;
  assume {:verifier.code 0} true;
  $i323 := $eq.i32($i311, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7259, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i323} true;
  goto $bb155, $bb156;
$bb153:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7259, 32} true;
  assume {:verifier.code 0} true;
  assume !(($i322 == 1));
  goto $bb154;
$bb154:
  assume {:verifier.code 0} true;
  $i325 := 0;
  goto $bb157;
$bb155:
  assume ($i323 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7260, 18} true;
  assume {:verifier.code 0} true;
  $i324 := $trunc.i64.i32($i223);
  // WARNING: %405 = trunc i64 %.026 to i32, !dbg !6263, !verifier.code !5775
  call {:cexpr "undone"} boogie_si_record_i32($i324);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7261, 7} true;
  assume {:verifier.code 0} true;
  $i325 := $i324;
  goto $bb157;
$bb156:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7259, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i323 == 1));
  goto $bb154;
$bb157:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i319 := $i325;
  goto $bb151;
$bb158:
  assume ($i328 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7265, 23} true;
  assume {:verifier.code 0} true;
  $p329 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7265, 23} true;
  assume {:verifier.code 0} true;
  $i330 := $load.i32($M.0, $p329);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7265, 34} true;
  assume {:verifier.code 0} true;
  $i331 := $mul.i32($i330, $i319);
  // WARNING: %415 = mul nsw i32 %414, %.113, !dbg !6272, !verifier.code !5775
  call {:cexpr "undone"} boogie_si_record_i32($i331);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7266, 7} true;
  assume {:verifier.code 0} true;
  $i332 := $i331;
  goto $bb160;
$bb159:
  assume !(($i328 == 1));
  assume {:verifier.code 0} true;
  $i332 := $i319;
  goto $bb160;
$bb160:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7269, 11} true;
  assume {:verifier.code 0} true;
  $i333 := $sext.i32.i64($i332);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7269, 28} true;
  assume {:verifier.code 0} true;
  $i334 := $sle.i64($i333, $i145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7269, 11} true;
  assume {:verifier.code 0} true;
  $i335, $i336, $i337, $p338, $i339 := $i218, $i223, $i224, $p259, $i332;
  assume {:branchcond $i334} true;
  goto $bb161, $bb162;
$bb161:
  assume ($i334 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7270, 17} true;
  assume {:verifier.code 0} true;
  $i340 := $sext.i32.i64($i339);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7270, 33} true;
  assume {:verifier.code 0} true;
  $i341 := $add.i64($i340, $i168);
  // WARNING: %422 = add i64 %421, %230, !dbg !6280, !verifier.code !5775
  call {:cexpr "count"} boogie_si_record_i64($i341);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7271, 32} true;
  assume {:verifier.code 0} true;
  $i342 := $sext.i32.i64($i339);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7271, 29} true;
  assume {:verifier.code 0} true;
  $i343 := $sub.i64(0, $i342);
  $i344 := $add.i64($i145, $i343);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7271, 27} true;
  assume {:verifier.code 0} true;
  $p345 := $add.ref($p144, $mul.ref($i344, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7272, 31} true;
  assume {:verifier.code 0} true;
  $i346 := $sext.i32.i64($i339);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7272, 29} true;
  assume {:verifier.code 0} true;
  $i347 := $sub.i64($i145, $i346);
  // WARNING: %427 = sub nsw i64 %.217, %426, !dbg !6285, !verifier.code !5775
  call {:cexpr "do_count"} boogie_si_record_i64($i347);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7273, 18} true;
  assume {:verifier.code 0} true;
  $p348 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7273, 18} true;
  assume {:verifier.code 0} true;
  $i349 := $load.i32($M.0, $p348);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7273, 29} true;
  assume {:verifier.code 0} true;
  $i350 := $ne.i32($i349, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7273, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i350} true;
  goto $bb163, $bb164;
$bb162:
  assume !(($i334 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 22} true;
  assume {:verifier.code 0} true;
  $i378 := $eq.i32($i218, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 27} true;
  assume {:verifier.code 0} true;
  $i379, $p380 := $i218, $p259;
  assume {:branchcond $i378} true;
  goto $bb178, $bb179;
$bb163:
  assume ($i350 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7274, 30} true;
  assume {:verifier.code 0} true;
  $i351 := $sext.i32.i64($i339);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7274, 28} true;
  assume {:verifier.code 0} true;
  $i352 := $sub.i64($i336, $i351);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7274, 65} true;
  assume {:verifier.code 0} true;
  $p353 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7274, 65} true;
  assume {:verifier.code 0} true;
  $i354 := $load.i32($M.0, $p353);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7274, 50} true;
  assume {:verifier.code 0} true;
  $i355 := $sext.i32.i64($i354);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7274, 48} true;
  assume {:verifier.code 0} true;
  $i356 := $sdiv.i64($i352, $i355);
  // WARNING: %437 = sdiv i64 %433, %436, !dbg !6295, !verifier.code !5775
  call {:cexpr "blks"} boogie_si_record_i64($i356);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7275, 9} true;
  assume {:verifier.code 0} true;
  $i357 := $i356;
  goto $bb165;
$bb164:
  assume !(($i350 == 1));
  assume {:verifier.code 0} true;
  $i357 := $i337;
  goto $bb165;
$bb165:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7278, 15} true;
  assume {:verifier.code 0} true;
  $p358 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7278, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p358, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 19} true;
  assume {:verifier.code 0} true;
  $p359 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 19} true;
  assume {:verifier.code 0} true;
  $i360 := $load.i32($M.0, $p359);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 30} true;
  assume {:verifier.code 0} true;
  $i361 := $eq.i32($i360, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i361} true;
  goto $bb166, $bb168;
$bb166:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 35} true;
  assume {:verifier.code 0} true;
  assume ($i361 == 1);
  goto $bb167;
$bb167:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7281, 9} true;
  assume {:verifier.code 0} true;
  $i364 := $sub.i64(0, 28);
  goto $bb173;
$bb168:
  assume !(($i361 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 45} true;
  assume {:verifier.code 0} true;
  $i362 := $sgt.i32($i339, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 50} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i362} true;
  goto $bb169, $bb170;
$bb169:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 50} true;
  assume {:verifier.code 0} true;
  assume ($i362 == 1);
  goto $bb167;
$bb170:
  assume !(($i362 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 59} true;
  assume {:verifier.code 0} true;
  $i363 := $eq.i64($i341, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i363} true;
  goto $bb171, $bb172;
$bb171:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7279, 13} true;
  assume {:verifier.code 0} true;
  assume ($i363 == 1);
  goto $bb167;
$bb172:
  assume !(($i363 == 1));
  assume {:verifier.code 0} true;
  $i364 := $i139;
  goto $bb173;
$bb173:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7284, 13} true;
  assume {:verifier.code 0} true;
  $i365 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7284, 23} true;
  assume {:verifier.code 0} true;
  $i366 := $ne.i32($i365, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7284, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i366} true;
  goto $bb174, $bb175;
$bb174:
  assume ($i366 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7285, 22} true;
  assume {:verifier.code 0} true;
  call $p367 := tape_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7286, 71} true;
  assume {:verifier.code 0} true;
  $p368 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7286, 71} true;
  assume {:verifier.code 0} true;
  $p369 := $load.ref($M.0, $p368);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7287, 64} true;
  assume {:verifier.code 0} true;
  $i370 := $trunc.i64.i32($i341);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7286, 11} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p369, $p367, .str.93, $i370);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7288, 9} true;
  assume {:verifier.code 0} true;
  goto $bb176;
$bb175:
  assume !(($i366 == 1));
  assume {:verifier.code 0} true;
  goto $bb176;
$bb176:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7291, 7} true;
  assume {:verifier.code 0} true;
  $i371, $p372, $i373, $i374, $i375, $i376, $p377 := $i335, $p338, $i364, $i357, $i347, $i341, $p345;
  goto $bb177;
$bb177:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7324, 5} true;
  assume {:verifier.code 0} true;
  $i423, $p424, $i425, $i426, $i427, $i428, $p429 := $i371, $p372, $i373, $i374, $i375, $i376, $p377;
  goto $bb198;
$bb178:
  assume ($i378 == 1);
  $p381 := $add.ref($add.ref($p290, 40), 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 55} true;
  assume {:verifier.code 0} true;
  $i382 := $load.i8($M.0, $p381);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 30} true;
  assume {:verifier.code 0} true;
  $i383 := $zext.i8.i32($i382);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 64} true;
  assume {:verifier.code 0} true;
  $i384 := $eq.i32($i383, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 71} true;
  assume {:verifier.code 0} true;
  $i379, $p380 := $i218, $p259;
  assume {:branchcond $i384} true;
  goto $bb181, $bb182;
$bb179:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 27} true;
  assume {:verifier.code 0} true;
  assume !(($i378 == 1));
  goto $bb180;
$bb180:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7310, 23} true;
  assume {:verifier.code 0} true;
  $i415 := $sub.i64($i168, $i145);
  // WARNING: %507 = sub i64 %230, %.217, !dbg !6375, !verifier.code !5775
  call {:cexpr "count"} boogie_si_record_i64($i415);
  // WARNING: call void @llvm.dbg.value(metadata i64 %507, i64 0, metadata !7222, metadata !5777), !dbg !7223, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !7477, metadata !5777), !dbg !7478, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7313, 15} true;
  assume {:verifier.code 0} true;
  $p416 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7313, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p416, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7314, 15} true;
  assume {:verifier.code 0} true;
  $p417 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7314, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p417, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %509, align 4, !dbg !6380, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7316, 13} true;
  assume {:verifier.code 0} true;
  $i418 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7316, 23} true;
  assume {:verifier.code 0} true;
  $i419 := $ne.i32($i418, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7316, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i419} true;
  goto $bb194, $bb195;
$bb181:
  assume ($i384 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 81} true;
  assume {:verifier.code 0} true;
  $i385 := $eq.i32($i311, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 86} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i385} true;
  goto $bb183, $bb185;
$bb182:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 71} true;
  assume {:verifier.code 0} true;
  assume !(($i384 == 1));
  goto $bb180;
$bb183:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 86} true;
  assume {:verifier.code 0} true;
  assume ($i385 == 1);
  goto $bb184;
$bb184:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7293, 31} true;
  assume {:verifier.code 0} true;
  $p387 := $add.ref($p8, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7293, 31} true;
  assume {:verifier.code 0} true;
  $p388 := $load.ref($M.0, $p387);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7293, 46} true;
  assume {:verifier.code 0} true;
  $i389 := $trunc.i64.i32($i223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7293, 70} true;
  assume {:verifier.code 0} true;
  $i390 := $sub.i32($i389, $i332);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7293, 9} true;
  assume {:verifier.code 0} true;
  call move_buffer_data($p388, $i390);
  // WARNING: call void @move_buffer_data(%struct.st_buffer* %473, i32 %475), !dbg !6342, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7295, 19} true;
  assume {:verifier.code 0} true;
  $p391 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7295, 19} true;
  assume {:verifier.code 0} true;
  $i392 := $load.i32($M.0, $p391);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7295, 29} true;
  assume {:verifier.code 0} true;
  $i393 := $sge.i32($i392, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7295, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i393} true;
  goto $bb188, $bb189;
$bb185:
  assume !(($i385 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 95} true;
  assume {:verifier.code 0} true;
  $i386 := $eq.i32($i311, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 11} true;
  assume {:verifier.code 0} true;
  $i379, $p380 := $i218, $p259;
  assume {:branchcond $i386} true;
  goto $bb186, $bb187;
$bb186:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 11} true;
  assume {:verifier.code 0} true;
  assume ($i386 == 1);
  goto $bb184;
$bb187:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7292, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i386 == 1));
  goto $bb180;
$bb188:
  assume ($i393 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 57} true;
  assume {:verifier.code 0} true;
  $p394 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 57} true;
  assume {:verifier.code 0} true;
  $i395 := $load.i32($M.0, $p394);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 97} true;
  assume {:verifier.code 0} true;
  $i396 := $sext.i32.i64($i332);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 95} true;
  assume {:verifier.code 0} true;
  $i397 := $sub.i64($i223, $i396);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 132} true;
  assume {:verifier.code 0} true;
  $p398 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 132} true;
  assume {:verifier.code 0} true;
  $i399 := $load.i32($M.0, $p398);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 117} true;
  assume {:verifier.code 0} true;
  $i400 := $sext.i32.i64($i399);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 115} true;
  assume {:verifier.code 0} true;
  $i401 := $sdiv.i64($i397, $i400);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 69} true;
  assume {:verifier.code 0} true;
  $i402 := $trunc.i64.i32($i401);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 67} true;
  assume {:verifier.code 0} true;
  $i403 := $add.i32($i395, $i402);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 17} true;
  assume {:verifier.code 0} true;
  $p404 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7296, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p404, $i403);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7297, 9} true;
  assume {:verifier.code 0} true;
  goto $bb190;
$bb189:
  assume !(($i393 == 1));
  assume {:verifier.code 0} true;
  goto $bb190;
$bb190:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7300, 15} true;
  assume {:verifier.code 0} true;
  $p405 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7300, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p405, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7301, 13} true;
  assume {:verifier.code 0} true;
  $i406 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7301, 23} true;
  assume {:verifier.code 0} true;
  $i407 := $ne.i32($i406, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7301, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i407} true;
  goto $bb191, $bb192;
$bb191:
  assume ($i407 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7302, 22} true;
  assume {:verifier.code 0} true;
  call $p408 := tape_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7303, 71} true;
  assume {:verifier.code 0} true;
  $p409 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7303, 71} true;
  assume {:verifier.code 0} true;
  $p410 := $load.ref($M.0, $p409);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7304, 73} true;
  assume {:verifier.code 0} true;
  $p411 := $add.ref($p8, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7304, 73} true;
  assume {:verifier.code 0} true;
  $p412 := $load.ref($M.0, $p411);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7304, 82} true;
  assume {:verifier.code 0} true;
  $p413 := $add.ref($p412, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7304, 82} true;
  assume {:verifier.code 0} true;
  $i414 := $load.i32($M.0, $p413);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7303, 11} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p410, $p408, .str.94, $i414);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7305, 9} true;
  assume {:verifier.code 0} true;
  goto $bb193;
$bb192:
  assume !(($i407 == 1));
  assume {:verifier.code 0} true;
  goto $bb193;
$bb193:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7308, 9} true;
  assume {:verifier.code 0} true;
  $i218, $p219 := 1, $p259;
  goto $bb123;
$bb194:
  assume ($i419 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7317, 22} true;
  assume {:verifier.code 0} true;
  call $p420 := tape_name($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7318, 71} true;
  assume {:verifier.code 0} true;
  $p421 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7318, 71} true;
  assume {:verifier.code 0} true;
  $p422 := $load.ref($M.0, $p421);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7318, 11} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p422, $p420, .str.95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7320, 9} true;
  assume {:verifier.code 0} true;
  goto $bb196;
$bb195:
  assume !(($i419 == 1));
  assume {:verifier.code 0} true;
  goto $bb196;
$bb196:
  assume {:verifier.code 0} true;
  goto $bb197;
$bb197:
  assume {:verifier.code 0} true;
  $i371, $p372, $i373, $i374, $i375, $i376, $p377 := $i379, $p380, $sub.i64(0, 5), 0, 0, $i415, $p169;
  goto $bb177;
$bb198:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7329, 3} true;
  assume {:verifier.code 0} true;
  $i435, $p436, $i437, $i438, $i439, $i440, $p441 := $i423, $p424, $i425, $i426, $i427, $i428, $p429;
  goto $bb199;
$bb199:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7332, 13} true;
  assume {:verifier.code 0} true;
  $p442 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7332, 13} true;
  assume {:verifier.code 0} true;
  $i443 := $load.i32($M.0, $p442);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7332, 23} true;
  assume {:verifier.code 0} true;
  $i444 := $sge.i32($i443, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7332, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i444} true;
  goto $bb200, $bb201;
$bb200:
  assume ($i444 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7333, 14} true;
  assume {:verifier.code 0} true;
  $p445 := $add.ref($p8, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7333, 14} true;
  assume {:verifier.code 0} true;
  $i446 := $load.i32($M.0, $p445);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7333, 25} true;
  assume {:verifier.code 0} true;
  $i447 := $eq.i32($i446, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7333, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i447} true;
  goto $bb202, $bb203;
$bb201:
  assume !(($i444 == 1));
  assume {:verifier.code 0} true;
  goto $bb205;
$bb202:
  assume ($i447 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7334, 31} true;
  assume {:verifier.code 0} true;
  $p448 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7334, 31} true;
  assume {:verifier.code 0} true;
  $i449 := $load.i32($M.0, $p448);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7334, 53} true;
  assume {:verifier.code 0} true;
  $i450 := $sgt.i64($i439, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7334, 53} true;
  assume {:verifier.code 0} true;
  $i451 := $zext.i1.i32($i450);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7334, 41} true;
  assume {:verifier.code 0} true;
  $i452 := $add.i32($i449, $i451);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7334, 13} true;
  assume {:verifier.code 0} true;
  $p453 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7334, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p453, $i452);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7335, 5} true;
  assume {:verifier.code 0} true;
  goto $bb204;
$bb203:
  assume !(($i447 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7336, 53} true;
  assume {:verifier.code 0} true;
  $p454 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7336, 53} true;
  assume {:verifier.code 0} true;
  $i455 := $load.i32($M.0, $p454);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7336, 65} true;
  assume {:verifier.code 0} true;
  $i456 := $trunc.i64.i32($i438);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7336, 63} true;
  assume {:verifier.code 0} true;
  $i457 := $add.i32($i455, $i456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7336, 13} true;
  assume {:verifier.code 0} true;
  $p458 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7336, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p458, $i457);
  assume {:verifier.code 0} true;
  goto $bb204;
$bb204:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7338, 3} true;
  assume {:verifier.code 0} true;
  goto $bb205;
$bb205:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7341, 9} true;
  assume {:verifier.code 0} true;
  $p459 := $add.ref($p87, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7341, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p459, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7342, 8} true;
  assume {:verifier.code 0} true;
  $p460 := $add.ref($p8, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7342, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p460, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7343, 14} true;
  assume {:verifier.code 0} true;
  $i461 := $ne.i64($i437, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7343, 20} true;
  assume {:verifier.code 0} true;
  $i462, $i463, $p464 := $i437, $i440, $p436;
  assume {:branchcond $i461} true;
  goto $bb206, $bb208;
$bb206:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7343, 20} true;
  assume {:verifier.code 0} true;
  assume ($i461 == 1);
  goto $bb207;
$bb207:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7344, 31} true;
  assume {:verifier.code 0} true;
  $i466 := $ugt.i64($i2, $i463);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7344, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i466} true;
  goto $bb211, $bb212;
$bb208:
  assume !(($i461 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7343, 33} true;
  assume {:verifier.code 0} true;
  $i465 := $ne.i32($i435, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7343, 7} true;
  assume {:verifier.code 0} true;
  $i462, $i463, $p464 := $i437, $i440, $p436;
  assume {:branchcond $i465} true;
  goto $bb209, $bb210;
$bb209:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7343, 7} true;
  assume {:verifier.code 0} true;
  assume ($i465 == 1);
  goto $bb207;
$bb210:
  assume !(($i465 == 1));
  assume {:verifier.code 0} true;
  goto $bb214;
$bb211:
  assume ($i466 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7345, 49} true;
  assume {:verifier.code 0} true;
  $i467 := $sub.i64($i2, $i463);
  // WARNING: %563 = sub i64 %2, %.28.lcssa, !dbg !6437, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i467);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7346, 5} true;
  assume {:verifier.code 0} true;
  $i468 := $i467;
  goto $bb213;
$bb212:
  assume !(($i466 == 1));
  assume {:verifier.code 0} true;
  $i468 := $i462;
  goto $bb213;
$bb213:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7349, 5} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $i468, $p464;
  goto $bb10;
$bb214:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 13} true;
  assume {:verifier.code 0} true;
  $i469 := $ne.i64($i440, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 20} true;
  assume {:verifier.code 0} true;
  $p135, $p136, $i137, $i138, $i139, $i470, $p471 := $p436, $p441, $i440, $i435, $i437, $i440, $p436;
  assume {:branchcond $i469} true;
  goto $bb215, $bb216;
$bb215:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 20} true;
  assume {:verifier.code 0} true;
  assume ($i469 == 1);
  goto $bb80;
$bb216:
  assume !(($i469 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 20} true;
  assume {:verifier.code 0} true;
  $i133, $p134 := $i470, $p471;
  goto $bb79;
$bb217:
  assume ($i472 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7355, 5} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb218:
  assume !(($i472 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 7} true;
  assume {:verifier.code 0} true;
  $i133, $p134 := $i473, $p474;
  goto $bb79;
$bb219:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7354, 36} true;
  assume {:verifier.code 0} true;
  $i215, $p216 := $i133, $p134;
  goto $bb120;
$bb220:
  assume ($i478 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7361, 11} true;
  assume {:verifier.code 0} true;
  $p479 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7361, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p479, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7362, 3} true;
  assume {:verifier.code 0} true;
  goto $bb222;
$bb221:
  assume !(($i478 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7363, 28} true;
  assume {:verifier.code 0} true;
  $p480 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7363, 28} true;
  assume {:verifier.code 0} true;
  $i481 := $load.i8($M.0, $p480);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7363, 7} true;
  assume {:verifier.code 0} true;
  $i482 := $zext.i8.i32($i481);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7363, 32} true;
  assume {:verifier.code 0} true;
  $i483 := $ne.i32($i482, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7363, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i483} true;
  goto $bb223, $bb224;
$bb222:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7368, 45} true;
  assume {:verifier.code 0} true;
  $i485 := $sub.i64($i2, $i215);
  // WARNING: %591 = sub i64 %2, %.4, !dbg !6466, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i64($i485);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7368, 3} true;
  assume {:verifier.code 0} true;
  $i16, $p17 := $i485, $p216;
  goto $bb10;
$bb223:
  assume ($i483 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7364, 11} true;
  assume {:verifier.code 0} true;
  $p484 := $add.ref($add.ref($p36, $mul.ref($i39, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7364, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p484, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7365, 3} true;
  assume {:verifier.code 0} true;
  goto $bb225;
$bb224:
  assume !(($i483 == 1));
  assume {:verifier.code 0} true;
  goto $bb225;
$bb225:
  assume {:verifier.code 0} true;
  goto $bb222;
$bb226:
  assume ($i487 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7371, 5} true;
  assume {:verifier.code 0} true;
  call st_release_request($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7372, 3} true;
  assume {:verifier.code 0} true;
  goto $bb228;
$bb227:
  assume !(($i487 == 1));
  assume {:verifier.code 0} true;
  goto $bb228;
$bb228:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7375, 3} true;
  assume {:verifier.code 0} true;
  call release_buffering($p8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7376, 23} true;
  assume {:verifier.code 0} true;
  $p488 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7376, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p488);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7377, 3} true;
  assume {:verifier.code 0} true;
  $i12 := $i16;
  goto $bb3;
}
const st_ioctl: ref;
axiom (st_ioctl == $sub.ref(0, 373658));
procedure  st_ioctl($p0: ref, $i1: i32, $i2: i64)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $i16: i32;
  var $i17: i1;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i64;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $i36: i64;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i32;
  var $i43: i1;
  var $i44: i32;
  var $i45: i1;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $i49: i1;
  var $i50: i1;
  var $i51: i32;
  var $i52: i32;
  var $i53: i1;
  var $p54: ref;
  var $i55: i64;
  var $i56: i32;
  var $i57: i1;
  var $p58: ref;
  var $i59: i16;
  var $i60: i32;
  var $i61: i1;
  var $i62: i1;
  var $i63: i8;
  var $i64: i1;
  var $i65: i32;
  var $i66: i1;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i8;
  var $i72: i32;
  var $i73: i1;
  var $p74: ref;
  var $i75: i16;
  var $i76: i32;
  var $i77: i1;
  var $p78: ref;
  var $i79: i32;
  var $i80: i32;
  var $i81: i1;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $i87: i8;
  var $i88: i32;
  var $i89: i1;
  var $p90: ref;
  var $i91: i16;
  var $i92: i32;
  var $i93: i1;
  var $p94: ref;
  var $i95: i16;
  var $i96: i32;
  var $i97: i1;
  var $p98: ref;
  var $i99: i16;
  var $i100: i32;
  var $i101: i1;
  var $p102: ref;
  var $i103: i32;
  var $i104: i32;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $i108: i1;
  var $p109: ref;
  var $i110: i32;
  var $i111: i32;
  var $p112: ref;
  var $p113: ref;
  var $i114: i16;
  var $i115: i32;
  var $i116: i1;
  var $p117: ref;
  var $i118: i16;
  var $i119: i32;
  var $i120: i1;
  var $p121: ref;
  var $i122: i32;
  var $i123: i32;
  var $p124: ref;
  var $p125: ref;
  var $i126: i32;
  var $i127: i1;
  var $p128: ref;
  var $i129: i32;
  var $i130: i32;
  var $p131: ref;
  var $p132: ref;
  var $i133: i16;
  var $i134: i32;
  var $i135: i1;
  var $p136: ref;
  var $i137: i8;
  var $i138: i32;
  var $i139: i1;
  var $p141: ref;
  var $i142: i32;
  var $p143: ref;
  var $i144: i32;
  var $i145: i1;
  var $i140: i1;
  var $i146: i32;
  var $p148: ref;
  var $i149: i16;
  var $i150: i32;
  var $i151: i1;
  var $p153: ref;
  var $i154: i16;
  var $i155: i32;
  var $i156: i1;
  var $p157: ref;
  var $i158: i16;
  var $i159: i32;
  var $i160: i1;
  var $p161: ref;
  var $i162: i16;
  var $i163: i32;
  var $i164: i1;
  var $p165: ref;
  var $i166: i16;
  var $i167: i32;
  var $i168: i1;
  var $p169: ref;
  var $i170: i16;
  var $i171: i32;
  var $i172: i1;
  var $p173: ref;
  var $i174: i16;
  var $i175: i32;
  var $i176: i1;
  var $p177: ref;
  var $i178: i16;
  var $i179: i32;
  var $i180: i1;
  var $p181: ref;
  var $i182: i16;
  var $i183: i32;
  var $i184: i1;
  var $p185: ref;
  var $i186: i16;
  var $i187: i32;
  var $i188: i1;
  var $p189: ref;
  var $i190: i16;
  var $i191: i32;
  var $i192: i1;
  var $i152: i1;
  var $i193: i32;
  var $i147: i32;
  var $i194: i32;
  var $i195: i1;
  var $p196: ref;
  var $i197: i8;
  var $i198: i32;
  var $i199: i1;
  var $p200: ref;
  var $i201: i16;
  var $i202: i32;
  var $i203: i1;
  var $p204: ref;
  var $i205: i16;
  var $i206: i32;
  var $i207: i1;
  var $p208: ref;
  var $i209: i16;
  var $i210: i32;
  var $i211: i1;
  var $p212: ref;
  var $i213: i16;
  var $i214: i32;
  var $i215: i1;
  var $p216: ref;
  var $i217: i16;
  var $i218: i32;
  var $i219: i1;
  var $i220: i32;
  var $i221: i1;
  var $p222: ref;
  var $i223: i16;
  var $i224: i32;
  var $i225: i1;
  var $p226: ref;
  var $i227: i16;
  var $i228: i32;
  var $i229: i1;
  var $p230: ref;
  var $i231: i32;
  var $i232: i32;
  var $p233: ref;
  var $p234: ref;
  var $p235: ref;
  var $i236: i16;
  var $i237: i32;
  var $i238: i1;
  var $p239: ref;
  var $i240: i16;
  var $i241: i32;
  var $i242: i1;
  var $p243: ref;
  var $i244: i16;
  var $i245: i32;
  var $i246: i1;
  var $p247: ref;
  var $i248: i16;
  var $i249: i32;
  var $i250: i1;
  var $p251: ref;
  var $i252: i16;
  var $i253: i32;
  var $i254: i1;
  var $p255: ref;
  var $i256: i16;
  var $i257: i32;
  var $i258: i1;
  var $p259: ref;
  var $p260: ref;
  var $p261: ref;
  var $p262: ref;
  var $i263: i64;
  var $i264: i64;
  var $p265: ref;
  var $i266: i16;
  var $i267: i32;
  var $i268: i1;
  var $p269: ref;
  var $i270: i16;
  var $i271: i32;
  var $i272: i1;
  var $p273: ref;
  var $i274: i16;
  var $i275: i32;
  var $i276: i1;
  var $p277: ref;
  var $i278: i16;
  var $i279: i32;
  var $i280: i1;
  var $p281: ref;
  var $i282: i16;
  var $i283: i32;
  var $i284: i1;
  var $p285: ref;
  var $i286: i16;
  var $i287: i32;
  var $i288: i1;
  var $p289: ref;
  var $p290: ref;
  var $i291: i16;
  var $i292: i32;
  var $i293: i1;
  var $p294: ref;
  var $i295: i8;
  var $i296: i32;
  var $i297: i1;
  var $i298: i32;
  var $p299: ref;
  var $i300: i16;
  var $i301: i32;
  var $i302: i1;
  var $p303: ref;
  var $i304: i32;
  var $i305: i32;
  var $i306: i1;
  var $p307: ref;
  var $i308: i32;
  var $i309: i64;
  var $i310: i32;
  var $p311: ref;
  var $i312: i16;
  var $i313: i32;
  var $i314: i1;
  var $p315: ref;
  var $i316: i8;
  var $i317: i32;
  var $i318: i1;
  var $p319: ref;
  var $i320: i32;
  var $i321: i1;
  var $p322: ref;
  var $i323: i32;
  var $i324: i1;
  var $p325: ref;
  var $i326: i32;
  var $p327: ref;
  var $i328: i32;
  var $i329: i1;
  var $i330: i32;
  var $p331: ref;
  var $i332: i1;
  var $p333: ref;
  var $i334: i32;
  var $p335: ref;
  var $i336: i32;
  var $i337: i1;
  var $p338: ref;
  var $i339: i32;
  var $p340: ref;
  var $p341: ref;
  var $i342: i16;
  var $i343: i32;
  var $i344: i1;
  var $p345: ref;
  var $i346: i8;
  var $i347: i32;
  var $i348: i1;
  var $i349: i32;
  var $i350: i1;
  var $p351: ref;
  var $i352: i32;
  var $i353: i32;
  var $i354: i1;
  var $p355: ref;
  var $p356: ref;
  var $p357: ref;
  var $p358: ref;
  var $p359: ref;
  var $p360: ref;
  var $p361: ref;
  var $p362: ref;
  var $p363: ref;
  var $p364: ref;
  var $p365: ref;
  var $p366: ref;
  var $p367: ref;
  var $p368: ref;
  var $p369: ref;
  var $i370: i16;
  var $i371: i32;
  var $i372: i1;
  var $p373: ref;
  var $i374: i32;
  var $p375: ref;
  var $i376: i32;
  var $i377: i32;
  var $p378: ref;
  var $i379: i8;
  var $i380: i32;
  var $i381: i1;
  var $p382: ref;
  var $p383: ref;
  var $p384: ref;
  var $p385: ref;
  var $i386: i16;
  var $i387: i32;
  var $i388: i1;
  var $p389: ref;
  var $i390: i16;
  var $i391: i32;
  var $i392: i1;
  var $i393: i32;
  var $p394: ref;
  var $i395: i16;
  var $i396: i32;
  var $i397: i1;
  var $p398: ref;
  var $i399: i32;
  var $i400: i1;
  var $i401: i32;
  var $i402: i32;
  var $p403: ref;
  var $i404: i16;
  var $i405: i32;
  var $i406: i1;
  var $p407: ref;
  var $i408: i16;
  var $i409: i32;
  var $i410: i1;
  var $p411: ref;
  var $i412: i16;
  var $i413: i32;
  var $i414: i1;
  var $i415: i32;
  var $i416: i32;
  var $p417: ref;
  var $i418: i8;
  var $i419: i32;
  var $i420: i1;
  var $p421: ref;
  var $i422: i8;
  var $i423: i32;
  var $i424: i1;
  var $i425: i32;
  var $i426: i1;
  var $p427: ref;
  var $i428: i16;
  var $i429: i32;
  var $i430: i1;
  var $p431: ref;
  var $i432: i32;
  var $i433: i32;
  var $i434: i32;
  var $p436: ref;
  var $i437: i16;
  var $i438: i32;
  var $p439: ref;
  var $i440: i32;
  var $i441: i64;
  var $i442: i32;
  var $i435: i32;
  var $p443: ref;
  var $i444: i8;
  var $i445: i32;
  var $i446: i1;
  var $i447: i32;
  var $i448: i1;
  var $p449: ref;
  var $i450: i8;
  var $i451: i32;
  var $i452: i1;
  var $i453: i32;
  var $i454: i1;
  var $i455: i1;
  var $i456: i1;
  var $i457: i32;
  var $i458: i32;
  var $i459: i1;
  var $p460: ref;
  var $i461: i32;
  var $i462: i64;
  var $p463: ref;
  var $p464: ref;
  var $i465: i32;
  var $i466: i32;
  var $p467: ref;
  var $i468: i8;
  var $i469: i32;
  var $i470: i32;
  var $i471: i32;
  var $i472: i64;
  var $p473: ref;
  var $p474: ref;
  var $i475: i32;
  var $p476: ref;
  var $p477: ref;
  var $i478: i32;
  var $p479: ref;
  var $p480: ref;
  var $i481: i32;
  var $i482: i1;
  var $p483: ref;
  var $i484: i8;
  var $i485: i32;
  var $i486: i1;
  var $p487: ref;
  var $i488: i32;
  var $p489: ref;
  var $p490: ref;
  var $p491: ref;
  var $i492: i32;
  var $p493: ref;
  var $i494: i32;
  var $i495: i32;
  var $i496: i32;
  var $p497: ref;
  var $p498: ref;
  var $i499: i8;
  var $i500: i32;
  var $i501: i1;
  var $p502: ref;
  var $i503: i32;
  var $p504: ref;
  var $p505: ref;
  var $p506: ref;
  var $i507: i32;
  var $p508: ref;
  var $i509: i32;
  var $i510: i32;
  var $i511: i32;
  var $p512: ref;
  var $i513: i32;
  var $i514: i32;
  var $i515: i32;
  var $p516: ref;
  var $p517: ref;
  var $p518: ref;
  var $i519: i8;
  var $i520: i32;
  var $i521: i1;
  var $p522: ref;
  var $i523: i64;
  var $i524: i64;
  var $p525: ref;
  var $p526: ref;
  var $i527: i32;
  var $i528: i1;
  var $p529: ref;
  var $i530: i32;
  var $i531: i1;
  var $p532: ref;
  var $i533: i64;
  var $i534: i64;
  var $p535: ref;
  var $p536: ref;
  var $i537: i64;
  var $i538: i64;
  var $p539: ref;
  var $p540: ref;
  var $i541: i32;
  var $i542: i64;
  var $p543: ref;
  var $p544: ref;
  var $i545: i32;
  var $i546: i64;
  var $p547: ref;
  var $p548: ref;
  var $i549: i8;
  var $i550: i32;
  var $i551: i1;
  var $p552: ref;
  var $i553: i8;
  var $i554: i32;
  var $i555: i1;
  var $p556: ref;
  var $i557: i64;
  var $i558: i64;
  var $p559: ref;
  var $p560: ref;
  var $i561: i8;
  var $i562: i32;
  var $i563: i1;
  var $p564: ref;
  var $i565: i64;
  var $i566: i64;
  var $p567: ref;
  var $p568: ref;
  var $i569: i8;
  var $i570: i32;
  var $i571: i1;
  var $p572: ref;
  var $i573: i64;
  var $i574: i64;
  var $p575: ref;
  var $p576: ref;
  var $i577: i8;
  var $i578: i32;
  var $i579: i1;
  var $p580: ref;
  var $i581: i64;
  var $i582: i64;
  var $p583: ref;
  var $p584: ref;
  var $i585: i8;
  var $i586: i32;
  var $i587: i1;
  var $p588: ref;
  var $i589: i64;
  var $i590: i64;
  var $p591: ref;
  var $p592: ref;
  var $i593: i8;
  var $i594: i32;
  var $i595: i1;
  var $p596: ref;
  var $i597: i64;
  var $i598: i64;
  var $p599: ref;
  var $p600: ref;
  var $i601: i8;
  var $i602: i32;
  var $i603: i1;
  var $p604: ref;
  var $i605: i64;
  var $i606: i64;
  var $p607: ref;
  var $p608: ref;
  var $i609: i8;
  var $i610: i32;
  var $i611: i1;
  var $p612: ref;
  var $i613: i64;
  var $i614: i64;
  var $p615: ref;
  var $p616: ref;
  var $i617: i8;
  var $i618: i32;
  var $i619: i1;
  var $p620: ref;
  var $i621: i8;
  var $i622: i32;
  var $i623: i1;
  var $p624: ref;
  var $i625: i32;
  var $i626: i1;
  var $p627: ref;
  var $i628: i8;
  var $i629: i32;
  var $i630: i1;
  var $p631: ref;
  var $i632: i64;
  var $i633: i64;
  var $p634: ref;
  var $p635: ref;
  var $i636: i8;
  var $i637: i32;
  var $i638: i1;
  var $p639: ref;
  var $i640: i64;
  var $i641: i64;
  var $p642: ref;
  var $p643: ref;
  var $i644: i64;
  var $i645: i32;
  var $i646: i1;
  var $p647: ref;
  var $i648: i1;
  var $i649: i1;
  var $i650: i32;
  var $i651: i32;
  var $i652: i1;
  var $i653: i32;
  var $i654: i1;
  var $i655: i32;
  var $i656: i64;
  var $p657: ref;
  var $p658: ref;
  var $i659: i64;
  var $i660: i32;
  var $i661: i1;
  var $i662: i32;
  var $p663: ref;
  var $i664: i1;
  var $i665: i1;
  var $i666: i1;
  var $i667: i1;
  var $i668: i1;
  var $i669: i1;
  var $i670: i1;
  var $i671: i8;
  var $i672: i1;
  var $i673: i32;
  var $i674: i1;
  var $p676: ref;
  var $p677: ref;
  var $p678: ref;
  var $p679: ref;
  var $p680: ref;
  var $p681: ref;
  var $p682: ref;
  var $i683: i32;
  var $i684: i32;
  var $i675: i32;
  var $p686: ref;
  var $p687: ref;
  var $p688: ref;
  var $p689: ref;
  var $p690: ref;
  var $p691: ref;
  var $p692: ref;
  var $i693: i32;
  var $i694: i32;
  var $i685: i32;
  var $i695: i1;
  var $i696: i64;
  var $p697: ref;
  var $p698: ref;
  var $i699: i32;
  var $i700: i1;
  var $i701: i1;
  var $p702: ref;
  var $p703: ref;
  var $i704: i64;
  var $i25: i32;
  var $p705: ref;
  var $i706: i64;
  var $i15: i64;
  var $p707: ref;
  var $p708: ref;
  var $p709: ref;
  var $p710: ref;
  var $p711: ref;
  var $p712: ref;
  var $p713: ref;
  var $p714: ref;
  var $p715: ref;
  var $p716: ref;
  var $p717: ref;
  var $p718: ref;
  var $p719: ref;
  var $p720: ref;
  var $p721: ref;
  var $p722: ref;
  var $p723: ref;
  var $p724: ref;
  var $p725: ref;
  var $p726: ref;
  var $p727: ref;
  var $p728: ref;
  var $p729: ref;
  var $p730: ref;
  var $p731: ref;
  var $p732: ref;
  var $p733: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(48, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %0, i64 0, metadata !7922, metadata !5777), !dbg !7923, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !7924, metadata !5777), !dbg !7925, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata %union.__anonunion____missing_field_name_221* %8, metadata !7950, metadata !5777), !dbg !7954, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9506, 35} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9506, 35} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9506, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9507, 7} true;
  assume {:verifier.code 0} true;
  $p11 := $i2p.i64.ref($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9508, 48} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p10, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9508, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := mutex_lock_interruptible_nested($p12, 0);
  // WARNING: %14 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %13, i32 0), !dbg !5821, !verifier.code !5775
  call {:cexpr "tmp"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9509, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9509, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9510, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i64(0, 512);
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9968, 1} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9514, 7} true;
  assume {:verifier.code 0} true;
  $i16 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9514, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i32($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9514, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9514, 45} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p10, 628);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9514, 45} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9514, 25} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9514, 52} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9514, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9514, 22} true;
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb8:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9515, 15} true;
  assume {:verifier.code 0} true;
  call $p22 := tape_name($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9516, 65} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p10, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9516, 65} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9516, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p24, $p22, .str.96);
  // WARNING: call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), %struct.scsi_device* %29, i8* %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.96, i32 0, i32 0)), !dbg !5843, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9519, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 5);
  goto $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9514, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i21 == 1));
  goto $bb7;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9965, 23} true;
  assume {:verifier.code 0} true;
  $p705 := $add.ref($p10, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9965, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p705);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9966, 11} true;
  assume {:verifier.code 0} true;
  $i706 := $sext.i32.i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9966, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i706;
  goto $bb3;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9523, 38} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p10, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9523, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9523, 68} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p10, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9523, 68} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9523, 47} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9523, 45} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p27, $mul.ref($i30, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9524, 40} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p10, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9524, 10} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9524, 67} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p10, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9524, 67} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9524, 46} true;
  assume {:verifier.code 0} true;
  $i36 := $sext.i32.i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9524, 44} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p33, $mul.ref($i36, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9525, 57} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p10, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9525, 57} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9525, 86} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9525, 86} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9525, 94} true;
  assume {:verifier.code 0} true;
  $i42 := $and.i32($i41, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9525, 103} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9525, 12} true;
  assume {:verifier.code 0} true;
  call $i44 := scsi_ioctl_block_when_processing_errors($p39, $i1, $i43);
  // WARNING: %50 = call i32 @scsi_ioctl_block_when_processing_errors(%struct.scsi_device* %45, i32 %1, i1 zeroext %49), !dbg !5863, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9526, 14} true;
  assume {:verifier.code 0} true;
  $i45 := $ne.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9526, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb12, $bb13;
$bb12:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9527, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $i44;
  goto $bb10;
$bb13:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9531, 28} true;
  assume {:verifier.code 0} true;
  $i46 := $lshr.i32($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9531, 34} true;
  assume {:verifier.code 0} true;
  $i47 := $and.i32($i46, 255);
  // WARNING: %56 = and i32 %55, 255, !dbg !5870, !verifier.code !5775
  call {:cexpr "cmd_type"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9532, 25} true;
  assume {:verifier.code 0} true;
  $i48 := $and.i32($i1, 255);
  // WARNING: %57 = and i32 %1, 255, !dbg !5873, !verifier.code !5775
  call {:cexpr "cmd_nr"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9533, 16} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i32($i47, 109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9533, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9533, 33} true;
  assume {:verifier.code 0} true;
  $i50 := $eq.i32($i48, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9533, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9533, 23} true;
  assume {:verifier.code 0} true;
  assume !(($i49 == 1));
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  goto $bb235;
$bb18:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9534, 18} true;
  assume {:verifier.code 0} true;
  $i51 := $lshr.i32($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9534, 25} true;
  assume {:verifier.code 0} true;
  $i52 := $and.i32($i51, 16383);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9534, 35} true;
  assume {:verifier.code 0} true;
  $i53 := $ne.i32($i52, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9534, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9533, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i50 == 1));
  goto $bb17;
$bb20:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9536, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 22);
  goto $bb10;
$bb21:
  assume !(($i53 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9540, 30} true;
  assume {:verifier.code 0} true;
  $p54 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9540, 15} true;
  assume {:verifier.code 0} true;
  call $i55 := copy_from_user($p54, $p11, 8);
  // WARNING: %69 = call i64 @copy_from_user(i8* %68, i8* %12, i64 8), !dbg !5891, !verifier.code !5775
  call {:cexpr "tmp___1"} boogie_si_record_i64($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9541, 9} true;
  assume {:verifier.code 0} true;
  $i56 := $trunc.i64.i32($i55);
  // WARNING: %70 = trunc i64 %69 to i32, !dbg !5894, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9542, 11} true;
  assume {:verifier.code 0} true;
  $i57 := $ne.i32($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9542, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9544, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 14);
  goto $bb10;
$bb24:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9548, 19} true;
  assume {:verifier.code 0} true;
  $p58 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9548, 19} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i16($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9548, 9} true;
  assume {:verifier.code 0} true;
  $i60 := $sext.i16.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9548, 25} true;
  assume {:verifier.code 0} true;
  $i61 := $eq.i32($i60, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9548, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb26, $bb27;
$bb26:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9549, 17} true;
  assume {:verifier.code 0} true;
  call $i62 := capable(21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9549, 15} true;
  assume {:verifier.code 0} true;
  $i63 := $zext.i1.i8($i62);
  // WARNING: %81 = zext i1 %80 to i8, !dbg !5909, !verifier.code !5775
  call {:cexpr "tmp___3"} boogie_si_record_i8($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9550, 11} true;
  assume {:verifier.code 0} true;
  $i64 := $trunc.i8.i1($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9550, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb28, $bb29;
$bb27:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb28:
  assume ($i64 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9552, 7} true;
  assume {:verifier.code 0} true;
  $i65 := 0;
  goto $bb30;
$bb29:
  assume !(($i64 == 1));
  assume {:verifier.code 0} true;
  $i65 := 1;
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9555, 11} true;
  assume {:verifier.code 0} true;
  $i66 := $ne.i32($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9555, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i66 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9556, 19} true;
  assume {:verifier.code 0} true;
  call $p67 := tape_name($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9557, 69} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p10, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9557, 69} true;
  assume {:verifier.code 0} true;
  $p69 := $load.ref($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9557, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.89, $p69, $p67, .str.177);
  // WARNING: call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.89, i32 0, i32 0), %struct.scsi_device* %90, i8* %88, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.177, i32 0, i32 0)), !dbg !5927, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9560, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 1);
  goto $bb10;
$bb32:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9564, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 29} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p27, $mul.ref($i30, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 29} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i8($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 9} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 37} true;
  assume {:verifier.code 0} true;
  $i73 := $eq.i32($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 57} true;
  assume {:verifier.code 0} true;
  $p74 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 57} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i16($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 47} true;
  assume {:verifier.code 0} true;
  $i76 := $sext.i16.i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 63} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i76, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 69} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb38, $bb39;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 43} true;
  assume {:verifier.code 0} true;
  assume !(($i73 == 1));
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  goto $bb42;
$bb38:
  assume ($i77 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 92} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 92} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 101} true;
  assume {:verifier.code 0} true;
  $i80 := $and.i32($i79, $sub.i32(0, 268435456));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 116} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb40, $bb41;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 69} true;
  assume {:verifier.code 0} true;
  assume !(($i77 == 1));
  goto $bb37;
$bb40:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9569, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 6);
  goto $bb10;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9567, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i81 == 1));
  goto $bb37;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9573, 29} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p10, 301);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9573, 29} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9573, 9} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9573, 41} true;
  assume {:verifier.code 0} true;
  $i85 := $eq.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9573, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb43, $bb44;
$bb43:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9574, 32} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9574, 32} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i8($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9574, 11} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i8.i32($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9574, 36} true;
  assume {:verifier.code 0} true;
  $i89 := $eq.i32($i88, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9574, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb45, $bb46;
$bb44:
  assume !(($i85 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 25} true;
  assume {:verifier.code 0} true;
  $p235 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 25} true;
  assume {:verifier.code 0} true;
  $i236 := $load.i16($M.0, $p235);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 15} true;
  assume {:verifier.code 0} true;
  $i237 := $sext.i16.i32($i236);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 31} true;
  assume {:verifier.code 0} true;
  $i238 := $ne.i32($i237, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 36} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i238} true;
  goto $bb123, $bb124;
$bb45:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 24} true;
  assume {:verifier.code 0} true;
  $p90 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 24} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i16($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 14} true;
  assume {:verifier.code 0} true;
  $i92 := $sext.i16.i32($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 30} true;
  assume {:verifier.code 0} true;
  $i93 := $eq.i32($i92, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i93} true;
  goto $bb47, $bb49;
$bb46:
  assume !(($i89 == 1));
  assume {:verifier.code 0} true;
  goto $bb67;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 35} true;
  assume {:verifier.code 0} true;
  assume ($i93 == 1);
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9576, 30} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9576, 30} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i32($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9576, 39} true;
  assume {:verifier.code 0} true;
  $i104 := $add.i32($i103, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9576, 15} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9576, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p105, $i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9577, 21} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9577, 21} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9577, 30} true;
  assume {:verifier.code 0} true;
  $i108 := $sge.i32($i107, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9577, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb54, $bb55;
$bb49:
  assume !(($i93 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 48} true;
  assume {:verifier.code 0} true;
  $p94 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 48} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i16($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 38} true;
  assume {:verifier.code 0} true;
  $i96 := $sext.i16.i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 54} true;
  assume {:verifier.code 0} true;
  $i97 := $eq.i32($i96, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 61} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i97} true;
  goto $bb50, $bb51;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 61} true;
  assume {:verifier.code 0} true;
  assume ($i97 == 1);
  goto $bb48;
$bb51:
  assume !(($i97 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 74} true;
  assume {:verifier.code 0} true;
  $p98 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 74} true;
  assume {:verifier.code 0} true;
  $i99 := $load.i16($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 64} true;
  assume {:verifier.code 0} true;
  $i100 := $sext.i16.i32($i99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 80} true;
  assume {:verifier.code 0} true;
  $i101 := $eq.i32($i100, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb52, $bb53;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9575, 13} true;
  assume {:verifier.code 0} true;
  assume ($i101 == 1);
  goto $bb48;
$bb53:
  assume !(($i101 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 23} true;
  assume {:verifier.code 0} true;
  $p113 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 23} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i16($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 13} true;
  assume {:verifier.code 0} true;
  $i115 := $sext.i16.i32($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 29} true;
  assume {:verifier.code 0} true;
  $i116 := $eq.i32($i115, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 34} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb58, $bb60;
$bb54:
  assume ($i108 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9578, 36} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9578, 36} true;
  assume {:verifier.code 0} true;
  $i110 := $load.i32($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9578, 45} true;
  assume {:verifier.code 0} true;
  $i111 := $add.i32($i110, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9578, 19} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9578, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p112, $i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9579, 11} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume !(($i108 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9582, 9} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9593, 7} true;
  assume {:verifier.code 0} true;
  goto $bb67;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 34} true;
  assume {:verifier.code 0} true;
  assume ($i116 == 1);
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9584, 30} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9584, 30} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i32($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9584, 39} true;
  assume {:verifier.code 0} true;
  $i123 := $add.i32($i122, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9584, 15} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9584, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p124, $i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9585, 21} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9585, 21} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i32($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9585, 30} true;
  assume {:verifier.code 0} true;
  $i127 := $sge.i32($i126, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9585, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb63, $bb64;
$bb60:
  assume !(($i116 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 47} true;
  assume {:verifier.code 0} true;
  $p117 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 47} true;
  assume {:verifier.code 0} true;
  $i118 := $load.i16($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 37} true;
  assume {:verifier.code 0} true;
  $i119 := $sext.i16.i32($i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 53} true;
  assume {:verifier.code 0} true;
  $i120 := $eq.i32($i119, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i120} true;
  goto $bb61, $bb62;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9583, 13} true;
  assume {:verifier.code 0} true;
  assume ($i120 == 1);
  goto $bb59;
$bb62:
  assume !(($i120 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb63:
  assume ($i127 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9586, 36} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9586, 36} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i32($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9586, 45} true;
  assume {:verifier.code 0} true;
  $i130 := $add.i32($i129, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9586, 19} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9586, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p131, $i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9587, 11} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb64:
  assume !(($i127 == 1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9590, 9} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb66:
  assume {:verifier.code 0} true;
  goto $bb57;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9596, 21} true;
  assume {:verifier.code 0} true;
  $p132 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9596, 21} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i16($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9596, 11} true;
  assume {:verifier.code 0} true;
  $i134 := $sext.i16.i32($i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9596, 27} true;
  assume {:verifier.code 0} true;
  $i135 := $eq.i32($i134, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9596, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb68, $bb69;
$bb68:
  assume ($i135 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 33} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p10, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 33} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i8($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 13} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i8.i32($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 48} true;
  assume {:verifier.code 0} true;
  $i139 := $eq.i32($i138, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 54} true;
  assume {:verifier.code 0} true;
  $i140 := 1;
  assume {:branchcond $i139} true;
  goto $bb70, $bb72;
$bb69:
  assume !(($i135 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 32} true;
  assume {:verifier.code 0} true;
  $p148 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 32} true;
  assume {:verifier.code 0} true;
  $i149 := $load.i16($M.0, $p148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 22} true;
  assume {:verifier.code 0} true;
  $i150 := $sext.i16.i32($i149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 38} true;
  assume {:verifier.code 0} true;
  $i151 := $eq.i32($i150, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 43} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  assume {:branchcond $i151} true;
  goto $bb74, $bb76;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 54} true;
  assume {:verifier.code 0} true;
  assume ($i139 == 1);
  goto $bb71;
$bb71:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 54} true;
  assume {:verifier.code 0} true;
  $i146 := $zext.i1.i32($i140);
  // WARNING: %198 = zext i1 %197 to i32, !dbg !6032, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9598, 7} true;
  assume {:verifier.code 0} true;
  $i147 := $i146;
  goto $bb73;
$bb72:
  assume !(($i139 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 62} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p10, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 62} true;
  assume {:verifier.code 0} true;
  $i142 := $load.i32($M.0, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 84} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p10, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 84} true;
  assume {:verifier.code 0} true;
  $i144 := $load.i32($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 76} true;
  assume {:verifier.code 0} true;
  $i145 := $ne.i32($i142, $i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9597, 54} true;
  assume {:verifier.code 0} true;
  $i140 := $i145;
  goto $bb71;
$bb73:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9601, 11} true;
  assume {:verifier.code 0} true;
  call $i194 := flush_buffer($p10, $i147);
  // WARNING: %258 = call i32 @flush_buffer(%struct.scsi_tape* %11, i32 %.06), !dbg !6092, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9602, 13} true;
  assume {:verifier.code 0} true;
  $i195 := $slt.i32($i194, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9602, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i195} true;
  goto $bb95, $bb96;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 43} true;
  assume {:verifier.code 0} true;
  assume ($i151 == 1);
  goto $bb75;
$bb75:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 273} true;
  assume {:verifier.code 0} true;
  $i193 := $zext.i1.i32($i152);
  // WARNING: %256 = zext i1 %255 to i32, !dbg !6090, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i193);
  assume {:verifier.code 0} true;
  $i147 := $i193;
  goto $bb73;
$bb76:
  assume !(($i151 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 56} true;
  assume {:verifier.code 0} true;
  $p153 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 56} true;
  assume {:verifier.code 0} true;
  $i154 := $load.i16($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 46} true;
  assume {:verifier.code 0} true;
  $i155 := $sext.i16.i32($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 62} true;
  assume {:verifier.code 0} true;
  $i156 := $eq.i32($i155, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 68} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  assume {:branchcond $i156} true;
  goto $bb77, $bb78;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 68} true;
  assume {:verifier.code 0} true;
  assume ($i156 == 1);
  goto $bb75;
$bb78:
  assume !(($i156 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 81} true;
  assume {:verifier.code 0} true;
  $p157 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 81} true;
  assume {:verifier.code 0} true;
  $i158 := $load.i16($M.0, $p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 71} true;
  assume {:verifier.code 0} true;
  $i159 := $sext.i16.i32($i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 87} true;
  assume {:verifier.code 0} true;
  $i160 := $eq.i32($i159, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 93} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  assume {:branchcond $i160} true;
  goto $bb79, $bb80;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 93} true;
  assume {:verifier.code 0} true;
  assume ($i160 == 1);
  goto $bb75;
$bb80:
  assume !(($i160 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 106} true;
  assume {:verifier.code 0} true;
  $p161 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 106} true;
  assume {:verifier.code 0} true;
  $i162 := $load.i16($M.0, $p161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 96} true;
  assume {:verifier.code 0} true;
  $i163 := $sext.i16.i32($i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 112} true;
  assume {:verifier.code 0} true;
  $i164 := $eq.i32($i163, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 119} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  assume {:branchcond $i164} true;
  goto $bb81, $bb82;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 119} true;
  assume {:verifier.code 0} true;
  assume ($i164 == 1);
  goto $bb75;
$bb82:
  assume !(($i164 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 132} true;
  assume {:verifier.code 0} true;
  $p165 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 132} true;
  assume {:verifier.code 0} true;
  $i166 := $load.i16($M.0, $p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 122} true;
  assume {:verifier.code 0} true;
  $i167 := $sext.i16.i32($i166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 138} true;
  assume {:verifier.code 0} true;
  $i168 := $eq.i32($i167, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 145} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  assume {:branchcond $i168} true;
  goto $bb83, $bb84;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 145} true;
  assume {:verifier.code 0} true;
  assume ($i168 == 1);
  goto $bb75;
$bb84:
  assume !(($i168 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 158} true;
  assume {:verifier.code 0} true;
  $p169 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 158} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i16($M.0, $p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 148} true;
  assume {:verifier.code 0} true;
  $i171 := $sext.i16.i32($i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 164} true;
  assume {:verifier.code 0} true;
  $i172 := $eq.i32($i171, 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 171} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  assume {:branchcond $i172} true;
  goto $bb85, $bb86;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 171} true;
  assume {:verifier.code 0} true;
  assume ($i172 == 1);
  goto $bb75;
$bb86:
  assume !(($i172 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 184} true;
  assume {:verifier.code 0} true;
  $p173 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 184} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i16($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 174} true;
  assume {:verifier.code 0} true;
  $i175 := $sext.i16.i32($i174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 190} true;
  assume {:verifier.code 0} true;
  $i176 := $eq.i32($i175, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 196} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  assume {:branchcond $i176} true;
  goto $bb87, $bb88;
$bb87:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 196} true;
  assume {:verifier.code 0} true;
  assume ($i176 == 1);
  goto $bb75;
$bb88:
  assume !(($i176 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 209} true;
  assume {:verifier.code 0} true;
  $p177 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 209} true;
  assume {:verifier.code 0} true;
  $i178 := $load.i16($M.0, $p177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 199} true;
  assume {:verifier.code 0} true;
  $i179 := $sext.i16.i32($i178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 215} true;
  assume {:verifier.code 0} true;
  $i180 := $eq.i32($i179, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 222} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  assume {:branchcond $i180} true;
  goto $bb89, $bb90;
$bb89:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 222} true;
  assume {:verifier.code 0} true;
  assume ($i180 == 1);
  goto $bb75;
$bb90:
  assume !(($i180 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 235} true;
  assume {:verifier.code 0} true;
  $p181 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 235} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i16($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 225} true;
  assume {:verifier.code 0} true;
  $i183 := $sext.i16.i32($i182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 241} true;
  assume {:verifier.code 0} true;
  $i184 := $eq.i32($i183, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 247} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  assume {:branchcond $i184} true;
  goto $bb91, $bb92;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 247} true;
  assume {:verifier.code 0} true;
  assume ($i184 == 1);
  goto $bb75;
$bb92:
  assume !(($i184 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 260} true;
  assume {:verifier.code 0} true;
  $p185 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 260} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i16($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 250} true;
  assume {:verifier.code 0} true;
  $i187 := $sext.i16.i32($i186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 266} true;
  assume {:verifier.code 0} true;
  $i188 := $eq.i32($i187, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 273} true;
  assume {:verifier.code 0} true;
  $i152 := 1;
  assume {:branchcond $i188} true;
  goto $bb93, $bb94;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 273} true;
  assume {:verifier.code 0} true;
  assume ($i188 == 1);
  goto $bb75;
$bb94:
  assume !(($i188 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 286} true;
  assume {:verifier.code 0} true;
  $p189 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 286} true;
  assume {:verifier.code 0} true;
  $i190 := $load.i16($M.0, $p189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 276} true;
  assume {:verifier.code 0} true;
  $i191 := $sext.i16.i32($i190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 292} true;
  assume {:verifier.code 0} true;
  $i192 := $eq.i32($i191, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9599, 273} true;
  assume {:verifier.code 0} true;
  $i152 := $i192;
  goto $bb75;
$bb95:
  assume ($i195 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9604, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $i194;
  goto $bb10;
$bb96:
  assume !(($i195 == 1));
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 32} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($p33, $mul.ref($i36, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 32} true;
  assume {:verifier.code 0} true;
  $i197 := $load.i8($M.0, $p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 11} true;
  assume {:verifier.code 0} true;
  $i198 := $zext.i8.i32($i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 35} true;
  assume {:verifier.code 0} true;
  $i199 := $eq.i32($i198, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 41} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i199} true;
  goto $bb98, $bb99;
$bb98:
  assume ($i199 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 58} true;
  assume {:verifier.code 0} true;
  $p200 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 58} true;
  assume {:verifier.code 0} true;
  $i201 := $load.i16($M.0, $p200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 48} true;
  assume {:verifier.code 0} true;
  $i202 := $sext.i16.i32($i201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 64} true;
  assume {:verifier.code 0} true;
  $i203 := $eq.i32($i202, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 69} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i203} true;
  goto $bb101, $bb103;
$bb99:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 41} true;
  assume {:verifier.code 0} true;
  assume !(($i199 == 1));
  goto $bb100;
$bb100:
  assume {:verifier.code 0} true;
  goto $bb121;
$bb101:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 69} true;
  assume {:verifier.code 0} true;
  assume ($i203 == 1);
  goto $bb102;
$bb102:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9609, 13} true;
  assume {:verifier.code 0} true;
  call $i220 := st_int_ioctl($p10, 5, 1);
  // WARNING: %293 = call i32 @st_int_ioctl(%struct.scsi_tape* %11, i32 5, i64 1), !dbg !6128, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i220);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9610, 15} true;
  assume {:verifier.code 0} true;
  $i221 := $slt.i32($i220, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9610, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i221} true;
  goto $bb112, $bb113;
$bb103:
  assume !(($i203 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 82} true;
  assume {:verifier.code 0} true;
  $p204 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 82} true;
  assume {:verifier.code 0} true;
  $i205 := $load.i16($M.0, $p204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 72} true;
  assume {:verifier.code 0} true;
  $i206 := $sext.i16.i32($i205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 88} true;
  assume {:verifier.code 0} true;
  $i207 := $eq.i32($i206, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 94} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i207} true;
  goto $bb104, $bb105;
$bb104:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 94} true;
  assume {:verifier.code 0} true;
  assume ($i207 == 1);
  goto $bb102;
$bb105:
  assume !(($i207 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 107} true;
  assume {:verifier.code 0} true;
  $p208 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 107} true;
  assume {:verifier.code 0} true;
  $i209 := $load.i16($M.0, $p208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 97} true;
  assume {:verifier.code 0} true;
  $i210 := $sext.i16.i32($i209);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 113} true;
  assume {:verifier.code 0} true;
  $i211 := $eq.i32($i210, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 120} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb106, $bb107;
$bb106:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 120} true;
  assume {:verifier.code 0} true;
  assume ($i211 == 1);
  goto $bb102;
$bb107:
  assume !(($i211 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 133} true;
  assume {:verifier.code 0} true;
  $p212 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 133} true;
  assume {:verifier.code 0} true;
  $i213 := $load.i16($M.0, $p212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 123} true;
  assume {:verifier.code 0} true;
  $i214 := $sext.i16.i32($i213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 139} true;
  assume {:verifier.code 0} true;
  $i215 := $eq.i32($i214, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 145} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb108, $bb109;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 145} true;
  assume {:verifier.code 0} true;
  assume ($i215 == 1);
  goto $bb102;
$bb109:
  assume !(($i215 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 158} true;
  assume {:verifier.code 0} true;
  $p216 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 158} true;
  assume {:verifier.code 0} true;
  $i217 := $load.i16($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 148} true;
  assume {:verifier.code 0} true;
  $i218 := $sext.i16.i32($i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 164} true;
  assume {:verifier.code 0} true;
  $i219 := $eq.i32($i218, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i219} true;
  goto $bb110, $bb111;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 11} true;
  assume {:verifier.code 0} true;
  assume ($i219 == 1);
  goto $bb102;
$bb111:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9608, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i219 == 1));
  goto $bb100;
$bb112:
  assume ($i221 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9612, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $i220;
  goto $bb10;
$bb113:
  assume !(($i221 == 1));
  assume {:verifier.code 0} true;
  goto $bb114;
$bb114:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 23} true;
  assume {:verifier.code 0} true;
  $p222 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 23} true;
  assume {:verifier.code 0} true;
  $i223 := $load.i16($M.0, $p222);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 13} true;
  assume {:verifier.code 0} true;
  $i224 := $sext.i16.i32($i223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 29} true;
  assume {:verifier.code 0} true;
  $i225 := $eq.i32($i224, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 34} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i225} true;
  goto $bb115, $bb117;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 34} true;
  assume {:verifier.code 0} true;
  assume ($i225 == 1);
  goto $bb116;
$bb116:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9617, 30} true;
  assume {:verifier.code 0} true;
  $p230 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9617, 30} true;
  assume {:verifier.code 0} true;
  $i231 := $load.i32($M.0, $p230);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9617, 39} true;
  assume {:verifier.code 0} true;
  $i232 := $add.i32($i231, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9617, 15} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9617, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p233, $i232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9618, 9} true;
  assume {:verifier.code 0} true;
  goto $bb120;
$bb117:
  assume !(($i225 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 47} true;
  assume {:verifier.code 0} true;
  $p226 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 47} true;
  assume {:verifier.code 0} true;
  $i227 := $load.i16($M.0, $p226);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 37} true;
  assume {:verifier.code 0} true;
  $i228 := $sext.i16.i32($i227);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 53} true;
  assume {:verifier.code 0} true;
  $i229 := $eq.i32($i228, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i229} true;
  goto $bb118, $bb119;
$bb118:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9616, 13} true;
  assume {:verifier.code 0} true;
  assume ($i229 == 1);
  goto $bb116;
$bb119:
  assume !(($i229 == 1));
  assume {:verifier.code 0} true;
  goto $bb120;
$bb120:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9621, 15} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($p33, $mul.ref($i36, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9621, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p234, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9622, 7} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9625, 5} true;
  assume {:verifier.code 0} true;
  goto $bb122;
$bb122:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 23} true;
  assume {:verifier.code 0} true;
  $p265 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 23} true;
  assume {:verifier.code 0} true;
  $i266 := $load.i16($M.0, $p265);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 13} true;
  assume {:verifier.code 0} true;
  $i267 := $sext.i16.i32($i266);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 29} true;
  assume {:verifier.code 0} true;
  $i268 := $ne.i32($i267, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 34} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i268} true;
  goto $bb137, $bb138;
$bb123:
  assume ($i238 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 49} true;
  assume {:verifier.code 0} true;
  $p239 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 49} true;
  assume {:verifier.code 0} true;
  $i240 := $load.i16($M.0, $p239);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 39} true;
  assume {:verifier.code 0} true;
  $i241 := $sext.i16.i32($i240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 55} true;
  assume {:verifier.code 0} true;
  $i242 := $ne.i32($i241, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 61} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i242} true;
  goto $bb126, $bb127;
$bb124:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 36} true;
  assume {:verifier.code 0} true;
  assume !(($i238 == 1));
  goto $bb125;
$bb125:
  assume {:verifier.code 0} true;
  goto $bb136;
$bb126:
  assume ($i242 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 74} true;
  assume {:verifier.code 0} true;
  $p243 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 74} true;
  assume {:verifier.code 0} true;
  $i244 := $load.i16($M.0, $p243);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 64} true;
  assume {:verifier.code 0} true;
  $i245 := $sext.i16.i32($i244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 80} true;
  assume {:verifier.code 0} true;
  $i246 := $ne.i32($i245, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 86} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i246} true;
  goto $bb128, $bb129;
$bb127:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 61} true;
  assume {:verifier.code 0} true;
  assume !(($i242 == 1));
  goto $bb125;
$bb128:
  assume ($i246 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 99} true;
  assume {:verifier.code 0} true;
  $p247 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 99} true;
  assume {:verifier.code 0} true;
  $i248 := $load.i16($M.0, $p247);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 89} true;
  assume {:verifier.code 0} true;
  $i249 := $sext.i16.i32($i248);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 105} true;
  assume {:verifier.code 0} true;
  $i250 := $ne.i32($i249, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 112} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i250} true;
  goto $bb130, $bb131;
$bb129:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 86} true;
  assume {:verifier.code 0} true;
  assume !(($i246 == 1));
  goto $bb125;
$bb130:
  assume ($i250 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 125} true;
  assume {:verifier.code 0} true;
  $p251 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 125} true;
  assume {:verifier.code 0} true;
  $i252 := $load.i16($M.0, $p251);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 115} true;
  assume {:verifier.code 0} true;
  $i253 := $sext.i16.i32($i252);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 131} true;
  assume {:verifier.code 0} true;
  $i254 := $ne.i32($i253, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 138} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i254} true;
  goto $bb132, $bb133;
$bb131:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 112} true;
  assume {:verifier.code 0} true;
  assume !(($i250 == 1));
  goto $bb125;
$bb132:
  assume ($i254 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 151} true;
  assume {:verifier.code 0} true;
  $p255 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 151} true;
  assume {:verifier.code 0} true;
  $i256 := $load.i16($M.0, $p255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 141} true;
  assume {:verifier.code 0} true;
  $i257 := $sext.i16.i32($i256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 157} true;
  assume {:verifier.code 0} true;
  $i258 := $ne.i32($i257, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i258} true;
  goto $bb134, $bb135;
$bb133:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 138} true;
  assume {:verifier.code 0} true;
  assume !(($i254 == 1));
  goto $bb125;
$bb134:
  assume ($i258 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9628, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 5);
  goto $bb10;
$bb135:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9626, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i258 == 1));
  goto $bb125;
$bb136:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9632, 7} true;
  assume {:verifier.code 0} true;
  call reset_state($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9633, 13} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($p10, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9633, 13} true;
  assume {:verifier.code 0} true;
  $p260 := $load.ref($M.0, $p259);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9633, 22} true;
  assume {:verifier.code 0} true;
  $p261 := $add.ref($p260, 328);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9633, 22} true;
  assume {:verifier.code 0} true;
  $p262 := $bitcast.ref.ref($p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9633, 32} true;
  assume {:verifier.code 0} true;
  $i263 := $load.i64($M.0, $p262);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9633, 32} true;
  assume {:verifier.code 0} true;
  $i264 := $and.i64($i263, $sub.i64(0, 8193));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9633, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p262, $i264);
  assume {:verifier.code 0} true;
  goto $bb122;
$bb137:
  assume ($i268 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 47} true;
  assume {:verifier.code 0} true;
  $p269 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 47} true;
  assume {:verifier.code 0} true;
  $i270 := $load.i16($M.0, $p269);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 37} true;
  assume {:verifier.code 0} true;
  $i271 := $sext.i16.i32($i270);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 53} true;
  assume {:verifier.code 0} true;
  $i272 := $ne.i32($i271, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 60} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i272} true;
  goto $bb140, $bb141;
$bb138:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i268 == 1));
  goto $bb139;
$bb139:
  assume {:verifier.code 0} true;
  goto $bb150;
$bb140:
  assume ($i272 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 73} true;
  assume {:verifier.code 0} true;
  $p273 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 73} true;
  assume {:verifier.code 0} true;
  $i274 := $load.i16($M.0, $p273);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 63} true;
  assume {:verifier.code 0} true;
  $i275 := $sext.i16.i32($i274);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 79} true;
  assume {:verifier.code 0} true;
  $i276 := $ne.i32($i275, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 86} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i276} true;
  goto $bb142, $bb143;
$bb141:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 60} true;
  assume {:verifier.code 0} true;
  assume !(($i272 == 1));
  goto $bb139;
$bb142:
  assume ($i276 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 99} true;
  assume {:verifier.code 0} true;
  $p277 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 99} true;
  assume {:verifier.code 0} true;
  $i278 := $load.i16($M.0, $p277);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 89} true;
  assume {:verifier.code 0} true;
  $i279 := $sext.i16.i32($i278);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 105} true;
  assume {:verifier.code 0} true;
  $i280 := $ne.i32($i279, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 112} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i280} true;
  goto $bb144, $bb145;
$bb143:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 86} true;
  assume {:verifier.code 0} true;
  assume !(($i276 == 1));
  goto $bb139;
$bb144:
  assume ($i280 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 125} true;
  assume {:verifier.code 0} true;
  $p281 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 125} true;
  assume {:verifier.code 0} true;
  $i282 := $load.i16($M.0, $p281);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 115} true;
  assume {:verifier.code 0} true;
  $i283 := $sext.i16.i32($i282);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 131} true;
  assume {:verifier.code 0} true;
  $i284 := $ne.i32($i283, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 138} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i284} true;
  goto $bb146, $bb147;
$bb145:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 112} true;
  assume {:verifier.code 0} true;
  assume !(($i280 == 1));
  goto $bb139;
$bb146:
  assume ($i284 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 151} true;
  assume {:verifier.code 0} true;
  $p285 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 151} true;
  assume {:verifier.code 0} true;
  $i286 := $load.i16($M.0, $p285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 141} true;
  assume {:verifier.code 0} true;
  $i287 := $sext.i16.i32($i286);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 157} true;
  assume {:verifier.code 0} true;
  $i288 := $ne.i32($i287, 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i288} true;
  goto $bb148, $bb149;
$bb147:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 138} true;
  assume {:verifier.code 0} true;
  assume !(($i284 == 1));
  goto $bb139;
$bb148:
  assume ($i288 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9636, 13} true;
  assume {:verifier.code 0} true;
  $p289 := $add.ref($p33, $mul.ref($i36, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9636, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p289, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9637, 5} true;
  assume {:verifier.code 0} true;
  goto $bb150;
$bb149:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9635, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i288 == 1));
  goto $bb139;
$bb150:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 19} true;
  assume {:verifier.code 0} true;
  $p290 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 19} true;
  assume {:verifier.code 0} true;
  $i291 := $load.i16($M.0, $p290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 9} true;
  assume {:verifier.code 0} true;
  $i292 := $sext.i16.i32($i291);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 25} true;
  assume {:verifier.code 0} true;
  $i293 := $eq.i32($i292, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 30} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i293} true;
  goto $bb151, $bb152;
$bb151:
  assume ($i293 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 53} true;
  assume {:verifier.code 0} true;
  $p294 := $add.ref($p10, 634);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 53} true;
  assume {:verifier.code 0} true;
  $i295 := $load.i8($M.0, $p294);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 33} true;
  assume {:verifier.code 0} true;
  $i296 := $zext.i8.i32($i295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 65} true;
  assume {:verifier.code 0} true;
  $i297 := $ne.i32($i296, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i297} true;
  goto $bb154, $bb155;
$bb152:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 30} true;
  assume {:verifier.code 0} true;
  assume !(($i293 == 1));
  goto $bb153;
$bb153:
  assume {:verifier.code 0} true;
  goto $bb156;
$bb154:
  assume ($i297 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9641, 7} true;
  assume {:verifier.code 0} true;
  call $i298 := do_door_lock($p10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9642, 5} true;
  assume {:verifier.code 0} true;
  goto $bb156;
$bb155:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9640, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i297 == 1));
  goto $bb153;
$bb156:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 19} true;
  assume {:verifier.code 0} true;
  $p299 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 19} true;
  assume {:verifier.code 0} true;
  $i300 := $load.i16($M.0, $p299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 9} true;
  assume {:verifier.code 0} true;
  $i301 := $sext.i16.i32($i300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 25} true;
  assume {:verifier.code 0} true;
  $i302 := $eq.i32($i301, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i302} true;
  goto $bb157, $bb158;
$bb157:
  assume ($i302 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 54} true;
  assume {:verifier.code 0} true;
  $p303 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 54} true;
  assume {:verifier.code 0} true;
  $i304 := $load.i32($M.0, $p303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 63} true;
  assume {:verifier.code 0} true;
  $i305 := $and.i32($i304, $sub.i32(0, 268435456));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 78} true;
  assume {:verifier.code 0} true;
  $i306 := $ne.i32($i305, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i306} true;
  goto $bb160, $bb161;
$bb158:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 31} true;
  assume {:verifier.code 0} true;
  assume !(($i302 == 1));
  goto $bb159;
$bb159:
  assume {:verifier.code 0} true;
  goto $bb162;
$bb160:
  assume ($i306 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9646, 47} true;
  assume {:verifier.code 0} true;
  $p307 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9646, 47} true;
  assume {:verifier.code 0} true;
  $i308 := $load.i32($M.0, $p307);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9646, 36} true;
  assume {:verifier.code 0} true;
  $i309 := $sext.i32.i64($i308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9646, 16} true;
  assume {:verifier.code 0} true;
  call $i310 := st_set_options($p10, $i309);
  // WARNING: %416 = call i32 @st_set_options(%struct.scsi_tape* %11, i64 %415), !dbg !6252, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i32($i310);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9647, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $i310;
  goto $bb10;
$bb161:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9645, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i306 == 1));
  goto $bb159;
$bb162:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9651, 19} true;
  assume {:verifier.code 0} true;
  $p311 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9651, 19} true;
  assume {:verifier.code 0} true;
  $i312 := $load.i16($M.0, $p311);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9651, 9} true;
  assume {:verifier.code 0} true;
  $i313 := $sext.i16.i32($i312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9651, 25} true;
  assume {:verifier.code 0} true;
  $i314 := $eq.i32($i313, 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9651, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i314} true;
  goto $bb163, $bb164;
$bb163:
  assume ($i314 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 32} true;
  assume {:verifier.code 0} true;
  $p315 := $add.ref($p10, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 32} true;
  assume {:verifier.code 0} true;
  $i316 := $load.i8($M.0, $p315);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 12} true;
  assume {:verifier.code 0} true;
  $i317 := $zext.i8.i32($i316);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 47} true;
  assume {:verifier.code 0} true;
  $i318 := $eq.i32($i317, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 53} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i318} true;
  goto $bb165, $bb167;
$bb164:
  assume !(($i314 == 1));
  assume {:verifier.code 0} true;
  goto $bb182;
$bb165:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 53} true;
  assume {:verifier.code 0} true;
  assume ($i318 == 1);
  goto $bb166;
$bb166:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9654, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 22);
  goto $bb10;
$bb167:
  assume !(($i318 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 60} true;
  assume {:verifier.code 0} true;
  $p319 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 60} true;
  assume {:verifier.code 0} true;
  $i320 := $load.i32($M.0, $p319);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 69} true;
  assume {:verifier.code 0} true;
  $i321 := $slt.i32($i320, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 74} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i321} true;
  goto $bb168, $bb169;
$bb168:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 74} true;
  assume {:verifier.code 0} true;
  assume ($i321 == 1);
  goto $bb166;
$bb169:
  assume !(($i321 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 81} true;
  assume {:verifier.code 0} true;
  $p322 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 81} true;
  assume {:verifier.code 0} true;
  $i323 := $load.i32($M.0, $p322);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 90} true;
  assume {:verifier.code 0} true;
  $i324 := $sgt.i32($i323, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i324} true;
  goto $bb170, $bb171;
$bb170:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9652, 11} true;
  assume {:verifier.code 0} true;
  assume ($i324 == 1);
  goto $bb166;
$bb171:
  assume !(($i324 == 1));
  assume {:verifier.code 0} true;
  goto $bb172;
$bb172:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9658, 15} true;
  assume {:verifier.code 0} true;
  $p325 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9658, 15} true;
  assume {:verifier.code 0} true;
  $i326 := $load.i32($M.0, $p325);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9658, 32} true;
  assume {:verifier.code 0} true;
  $p327 := $add.ref($p10, 556);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9658, 32} true;
  assume {:verifier.code 0} true;
  $i328 := $load.i32($M.0, $p327);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9658, 24} true;
  assume {:verifier.code 0} true;
  $i329 := $sge.i32($i326, $i328);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9658, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i329} true;
  goto $bb173, $bb174;
$bb173:
  assume ($i329 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9659, 19} true;
  assume {:verifier.code 0} true;
  call $i330 := nbr_partitions($p10);
  // WARNING: %445 = call i32 @nbr_partitions(%struct.scsi_tape* %11), !dbg !6280, !verifier.code !5775
  call {:cexpr "tmp___5"} boogie_si_record_i32($i330);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9660, 14} true;
  assume {:verifier.code 0} true;
  $p331 := $add.ref($p10, 556);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9660, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p331, $i330);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9661, 21} true;
  assume {:verifier.code 0} true;
  $i332 := $slt.i32($i330, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9661, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i332} true;
  goto $bb175, $bb176;
$bb174:
  assume !(($i329 == 1));
  assume {:verifier.code 0} true;
  goto $bb178;
$bb175:
  assume ($i332 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9663, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 5);
  goto $bb10;
$bb176:
  assume !(($i332 == 1));
  assume {:verifier.code 0} true;
  goto $bb177;
$bb177:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9667, 7} true;
  assume {:verifier.code 0} true;
  goto $bb178;
$bb178:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9670, 15} true;
  assume {:verifier.code 0} true;
  $p333 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9670, 15} true;
  assume {:verifier.code 0} true;
  $i334 := $load.i32($M.0, $p333);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9670, 32} true;
  assume {:verifier.code 0} true;
  $p335 := $add.ref($p10, 556);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9670, 32} true;
  assume {:verifier.code 0} true;
  $i336 := $load.i32($M.0, $p335);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9670, 24} true;
  assume {:verifier.code 0} true;
  $i337 := $sge.i32($i334, $i336);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9670, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i337} true;
  goto $bb179, $bb180;
$bb179:
  assume ($i337 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9672, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 22);
  goto $bb10;
$bb180:
  assume !(($i337 == 1));
  assume {:verifier.code 0} true;
  goto $bb181;
$bb181:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9676, 32} true;
  assume {:verifier.code 0} true;
  $p338 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9676, 32} true;
  assume {:verifier.code 0} true;
  $i339 := $load.i32($M.0, $p338);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9676, 12} true;
  assume {:verifier.code 0} true;
  $p340 := $add.ref($p10, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9676, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p340, $i339);
  // WARNING: store i32 %462, i32* %463, align 8, !dbg !6301, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9678, 7} true;
  assume {:verifier.code 0} true;
  $i25 := 0;
  goto $bb10;
$bb182:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9682, 19} true;
  assume {:verifier.code 0} true;
  $p341 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9682, 19} true;
  assume {:verifier.code 0} true;
  $i342 := $load.i16($M.0, $p341);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9682, 9} true;
  assume {:verifier.code 0} true;
  $i343 := $sext.i16.i32($i342);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9682, 25} true;
  assume {:verifier.code 0} true;
  $i344 := $eq.i32($i343, 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9682, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i344} true;
  goto $bb183, $bb184;
$bb183:
  assume ($i344 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9683, 31} true;
  assume {:verifier.code 0} true;
  $p345 := $add.ref($p10, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9683, 31} true;
  assume {:verifier.code 0} true;
  $i346 := $load.i8($M.0, $p345);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9683, 11} true;
  assume {:verifier.code 0} true;
  $i347 := $zext.i8.i32($i346);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9683, 46} true;
  assume {:verifier.code 0} true;
  $i348 := $eq.i32($i347, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9683, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i348} true;
  goto $bb185, $bb186;
$bb184:
  assume !(($i344 == 1));
  assume {:verifier.code 0} true;
  goto $bb198;
$bb185:
  assume ($i348 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9685, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 22);
  goto $bb10;
$bb186:
  assume !(($i348 == 1));
  assume {:verifier.code 0} true;
  goto $bb187;
$bb187:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9689, 11} true;
  assume {:verifier.code 0} true;
  call $i349 := st_int_ioctl($p10, 6, 0);
  // WARNING: %478 = call i32 @st_int_ioctl(%struct.scsi_tape* %11, i32 6, i64 0), !dbg !6316, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i349);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9690, 13} true;
  assume {:verifier.code 0} true;
  $i350 := $slt.i32($i349, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9690, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i350} true;
  goto $bb188, $bb189;
$bb188:
  assume ($i350 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9692, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $i349;
  goto $bb10;
$bb189:
  assume !(($i350 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9694, 37} true;
  assume {:verifier.code 0} true;
  $p351 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9694, 37} true;
  assume {:verifier.code 0} true;
  $i352 := $load.i32($M.0, $p351);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9694, 13} true;
  assume {:verifier.code 0} true;
  call $i353 := partition_tape($p10, $i352);
  // WARNING: %484 = call i32 @partition_tape(%struct.scsi_tape* %11, i32 %483), !dbg !6324, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i353);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9695, 15} true;
  assume {:verifier.code 0} true;
  $i354 := $slt.i32($i353, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9695, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i354} true;
  goto $bb190, $bb191;
$bb190:
  assume ($i354 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9697, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $i353;
  goto $bb10;
$bb191:
  assume !(($i354 == 1));
  assume {:verifier.code 0} true;
  goto $bb192;
$bb192:
  assume {:verifier.code 0} true;
  goto $bb193;
$bb193:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9710, 11} true;
  assume {:verifier.code 0} true;
  goto $bb194;
$bb194:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9711, 9} true;
  assume {:verifier.code 0} true;
  goto $bb195;
$bb195:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9705, 12} true;
  assume {:verifier.code 0} true;
  $p355 := $add.ref($p10, 560);
  $p356 := $add.ref($p10, 560);
  $p357 := $add.ref($p10, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9705, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p357, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9706, 12} true;
  assume {:verifier.code 0} true;
  $p358 := $add.ref($p10, 560);
  $p359 := $add.ref($p10, 560);
  $p360 := $add.ref($add.ref($p10, 560), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9706, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p360, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9707, 12} true;
  assume {:verifier.code 0} true;
  $p361 := $add.ref($p10, 560);
  $p362 := $add.ref($p10, 560);
  $p363 := $add.ref($add.ref($p10, 560), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9707, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p363, 0);
  // WARNING: store i8 0, i8* %499, align 1, !dbg !6336, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9711, 9} true;
  assume {:verifier.code 0} true;
  goto $bb196;
$bb196:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9705, 12} true;
  assume {:verifier.code 0} true;
  $p707 := $add.ref($p10, 560);
  $p708 := $add.ref($add.ref($p10, 560), 16);
  $p709 := $add.ref($add.ref($p10, 560), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9705, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p709, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9706, 12} true;
  assume {:verifier.code 0} true;
  $p710 := $add.ref($p10, 560);
  $p711 := $add.ref($add.ref($p10, 560), 16);
  $p712 := $add.ref($add.ref($add.ref($p10, 560), 16), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9706, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p712, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9707, 12} true;
  assume {:verifier.code 0} true;
  $p713 := $add.ref($p10, 560);
  $p714 := $add.ref($add.ref($p10, 560), 16);
  $p715 := $add.ref($add.ref($add.ref($p10, 560), 16), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9707, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p715, 0);
  // WARNING: store i8 0, i8* %991, align 1, !dbg !6336, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9711, 9} true;
  assume {:verifier.code 0} true;
  goto $bb368;
$bb197:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9716, 12} true;
  assume {:verifier.code 0} true;
  $p364 := $add.ref($p10, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9716, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p364, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9717, 12} true;
  assume {:verifier.code 0} true;
  $p365 := $add.ref($p10, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9717, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p365, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9718, 12} true;
  assume {:verifier.code 0} true;
  $p366 := $add.ref($p10, 556);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9718, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p366, 1);
  // WARNING: store i32 1, i32* %504, align 4, !dbg !6347, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9720, 13} true;
  assume {:verifier.code 0} true;
  $p367 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9720, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p367, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9721, 13} true;
  assume {:verifier.code 0} true;
  $p368 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9721, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p368, 0);
  // WARNING: store i32 0, i32* %506, align 4, !dbg !6353, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9723, 7} true;
  assume {:verifier.code 0} true;
  $i25 := 0;
  goto $bb10;
$bb198:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9727, 19} true;
  assume {:verifier.code 0} true;
  $p369 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9727, 19} true;
  assume {:verifier.code 0} true;
  $i370 := $load.i16($M.0, $p369);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9727, 9} true;
  assume {:verifier.code 0} true;
  $i371 := $sext.i16.i32($i370);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9727, 25} true;
  assume {:verifier.code 0} true;
  $i372 := $eq.i32($i371, 22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9727, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i372} true;
  goto $bb199, $bb200;
$bb199:
  assume ($i372 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9728, 48} true;
  assume {:verifier.code 0} true;
  $p373 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9728, 48} true;
  assume {:verifier.code 0} true;
  $i374 := $load.i32($M.0, $p373);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9728, 63} true;
  assume {:verifier.code 0} true;
  $p375 := $add.ref($p10, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9728, 63} true;
  assume {:verifier.code 0} true;
  $i376 := $load.i32($M.0, $p375);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9728, 11} true;
  assume {:verifier.code 0} true;
  call $i377 := set_location($p10, $i374, $i376, 0);
  // WARNING: %518 = call i32 @set_location(%struct.scsi_tape* %11, i32 %515, i32 %517, i32 0), !dbg !6363, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i377);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9729, 31} true;
  assume {:verifier.code 0} true;
  $p378 := $add.ref($p10, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9729, 31} true;
  assume {:verifier.code 0} true;
  $i379 := $load.i8($M.0, $p378);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9729, 11} true;
  assume {:verifier.code 0} true;
  $i380 := $zext.i8.i32($i379);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9729, 46} true;
  assume {:verifier.code 0} true;
  $i381 := $eq.i32($i380, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9729, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i381} true;
  goto $bb201, $bb202;
$bb200:
  assume !(($i372 == 1));
  assume {:verifier.code 0} true;
  goto $bb204;
$bb201:
  assume ($i381 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9730, 14} true;
  assume {:verifier.code 0} true;
  $p382 := $add.ref($p10, 560);
  $p383 := $add.ref($p10, 560);
  $p384 := $add.ref($p10, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9730, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p384, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9731, 7} true;
  assume {:verifier.code 0} true;
  goto $bb203;
$bb202:
  assume !(($i381 == 1));
  assume {:verifier.code 0} true;
  goto $bb203;
$bb203:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9735, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $i377;
  goto $bb10;
$bb204:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 19} true;
  assume {:verifier.code 0} true;
  $p385 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 19} true;
  assume {:verifier.code 0} true;
  $i386 := $load.i16($M.0, $p385);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 9} true;
  assume {:verifier.code 0} true;
  $i387 := $sext.i16.i32($i386);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 25} true;
  assume {:verifier.code 0} true;
  $i388 := $eq.i32($i387, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i388} true;
  goto $bb205, $bb207;
$bb205:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 31} true;
  assume {:verifier.code 0} true;
  assume ($i388 == 1);
  goto $bb206;
$bb206:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9740, 16} true;
  assume {:verifier.code 0} true;
  call $i393 := do_load_unload($p10, $p0, 0);
  // WARNING: %541 = call i32 @do_load_unload(%struct.scsi_tape* %11, %struct.file* %0, i32 0), !dbg !6384, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i32($i393);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9741, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $i393;
  goto $bb10;
$bb207:
  assume !(($i388 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 44} true;
  assume {:verifier.code 0} true;
  $p389 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 44} true;
  assume {:verifier.code 0} true;
  $i390 := $load.i16($M.0, $p389);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 34} true;
  assume {:verifier.code 0} true;
  $i391 := $sext.i16.i32($i390);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 50} true;
  assume {:verifier.code 0} true;
  $i392 := $eq.i32($i391, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i392} true;
  goto $bb208, $bb209;
$bb208:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9739, 9} true;
  assume {:verifier.code 0} true;
  assume ($i392 == 1);
  goto $bb206;
$bb209:
  assume !(($i392 == 1));
  assume {:verifier.code 0} true;
  goto $bb210;
$bb210:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9745, 19} true;
  assume {:verifier.code 0} true;
  $p394 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9745, 19} true;
  assume {:verifier.code 0} true;
  $i395 := $load.i16($M.0, $p394);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9745, 9} true;
  assume {:verifier.code 0} true;
  $i396 := $sext.i16.i32($i395);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9745, 25} true;
  assume {:verifier.code 0} true;
  $i397 := $eq.i32($i396, 30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9745, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i397} true;
  goto $bb211, $bb212;
$bb211:
  assume ($i397 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9747, 19} true;
  assume {:verifier.code 0} true;
  $p398 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9747, 19} true;
  assume {:verifier.code 0} true;
  $i399 := $load.i32($M.0, $p398);
  // WARNING: %550 = load i32, i32* %549, align 4, !dbg !6394, !verifier.code !5775
  call {:cexpr "_max2"} boogie_si_record_i32($i399);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9748, 48} true;
  assume {:verifier.code 0} true;
  $i400 := $sgt.i32(1, $i399);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9748, 42} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i400} true;
  goto $bb213, $bb214;
$bb212:
  assume !(($i397 == 1));
  assume {:verifier.code 0} true;
  goto $bb216;
$bb213:
  assume ($i400 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9748, 42} true;
  assume {:verifier.code 0} true;
  $i401 := 1;
  goto $bb215;
$bb214:
  assume !(($i400 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9748, 42} true;
  assume {:verifier.code 0} true;
  $i401 := $i399;
  goto $bb215;
$bb215:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9748, 42} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9748, 16} true;
  assume {:verifier.code 0} true;
  call $i402 := do_load_unload($p10, $p0, $i401);
  // WARNING: %556 = call i32 @do_load_unload(%struct.scsi_tape* %11, %struct.file* %0, i32 %555), !dbg !6406, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i32($i402);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9749, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $i402;
  goto $bb10;
$bb216:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 19} true;
  assume {:verifier.code 0} true;
  $p403 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 19} true;
  assume {:verifier.code 0} true;
  $i404 := $load.i16($M.0, $p403);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 9} true;
  assume {:verifier.code 0} true;
  $i405 := $sext.i16.i32($i404);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 25} true;
  assume {:verifier.code 0} true;
  $i406 := $eq.i32($i405, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 31} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i406} true;
  goto $bb217, $bb219;
$bb217:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 31} true;
  assume {:verifier.code 0} true;
  assume ($i406 == 1);
  goto $bb218;
$bb218:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9754, 44} true;
  assume {:verifier.code 0} true;
  $p411 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9754, 44} true;
  assume {:verifier.code 0} true;
  $i412 := $load.i16($M.0, $p411);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9754, 34} true;
  assume {:verifier.code 0} true;
  $i413 := $sext.i16.i32($i412);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9754, 50} true;
  assume {:verifier.code 0} true;
  $i414 := $eq.i32($i413, 28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9754, 50} true;
  assume {:verifier.code 0} true;
  $i415 := $zext.i1.i32($i414);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9754, 16} true;
  assume {:verifier.code 0} true;
  call $i416 := do_door_lock($p10, $i415);
  // WARNING: %574 = call i32 @do_door_lock(%struct.scsi_tape* %11, i32 %573), !dbg !6422, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i32($i416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9755, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $i416;
  goto $bb10;
$bb219:
  assume !(($i406 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 44} true;
  assume {:verifier.code 0} true;
  $p407 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 44} true;
  assume {:verifier.code 0} true;
  $i408 := $load.i16($M.0, $p407);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 34} true;
  assume {:verifier.code 0} true;
  $i409 := $sext.i16.i32($i408);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 50} true;
  assume {:verifier.code 0} true;
  $i410 := $eq.i32($i409, 29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i410} true;
  goto $bb220, $bb221;
$bb220:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9753, 9} true;
  assume {:verifier.code 0} true;
  assume ($i410 == 1);
  goto $bb218;
$bb221:
  assume !(($i410 == 1));
  assume {:verifier.code 0} true;
  goto $bb222;
$bb222:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 29} true;
  assume {:verifier.code 0} true;
  $p417 := $add.ref($p10, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 29} true;
  assume {:verifier.code 0} true;
  $i418 := $load.i8($M.0, $p417);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 9} true;
  assume {:verifier.code 0} true;
  $i419 := $zext.i8.i32($i418);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 44} true;
  assume {:verifier.code 0} true;
  $i420 := $ne.i32($i419, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 50} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i420} true;
  goto $bb223, $bb224;
$bb223:
  assume ($i420 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 73} true;
  assume {:verifier.code 0} true;
  $p421 := $add.ref($p10, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 73} true;
  assume {:verifier.code 0} true;
  $i422 := $load.i8($M.0, $p421);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 53} true;
  assume {:verifier.code 0} true;
  $i423 := $zext.i8.i32($i422);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 79} true;
  assume {:verifier.code 0} true;
  $i424 := $eq.i32($i423, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i424} true;
  goto $bb226, $bb227;
$bb224:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 50} true;
  assume {:verifier.code 0} true;
  assume !(($i420 == 1));
  goto $bb225;
$bb225:
  assume {:verifier.code 0} true;
  goto $bb231;
$bb226:
  assume ($i424 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9760, 11} true;
  assume {:verifier.code 0} true;
  call $i425 := switch_partition($p10);
  // WARNING: %587 = call i32 @switch_partition(%struct.scsi_tape* %11), !dbg !6434, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i425);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9761, 13} true;
  assume {:verifier.code 0} true;
  $i426 := $slt.i32($i425, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9761, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i426} true;
  goto $bb228, $bb229;
$bb227:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9759, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i424 == 1));
  goto $bb225;
$bb228:
  assume ($i426 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9763, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $i425;
  goto $bb10;
$bb229:
  assume !(($i426 == 1));
  assume {:verifier.code 0} true;
  goto $bb230;
$bb230:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9767, 5} true;
  assume {:verifier.code 0} true;
  goto $bb231;
$bb231:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9770, 19} true;
  assume {:verifier.code 0} true;
  $p427 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9770, 19} true;
  assume {:verifier.code 0} true;
  $i428 := $load.i16($M.0, $p427);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9770, 9} true;
  assume {:verifier.code 0} true;
  $i429 := $sext.i16.i32($i428);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9770, 25} true;
  assume {:verifier.code 0} true;
  $i430 := $eq.i32($i429, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9770, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i430} true;
  goto $bb232, $bb233;
$bb232:
  assume ($i430 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9771, 40} true;
  assume {:verifier.code 0} true;
  $p431 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9771, 40} true;
  assume {:verifier.code 0} true;
  $i432 := $load.i32($M.0, $p431);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9771, 49} true;
  assume {:verifier.code 0} true;
  $i433 := $and.i32($i432, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9771, 16} true;
  assume {:verifier.code 0} true;
  call $i434 := st_compression($p10, $i433);
  // WARNING: %602 = call i32 @st_compression(%struct.scsi_tape* %11, i32 %601), !dbg !6450, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i32($i434);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9772, 5} true;
  assume {:verifier.code 0} true;
  $i435 := $i434;
  goto $bb234;
$bb233:
  assume !(($i430 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9773, 53} true;
  assume {:verifier.code 0} true;
  $p436 := $p5;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9773, 53} true;
  assume {:verifier.code 0} true;
  $i437 := $load.i16($M.0, $p436);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9773, 34} true;
  assume {:verifier.code 0} true;
  $i438 := $sext.i16.i32($i437);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9773, 80} true;
  assume {:verifier.code 0} true;
  $p439 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9773, 80} true;
  assume {:verifier.code 0} true;
  $i440 := $load.i32($M.0, $p439);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9773, 60} true;
  assume {:verifier.code 0} true;
  $i441 := $sext.i32.i64($i440);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9773, 16} true;
  assume {:verifier.code 0} true;
  call $i442 := st_int_ioctl($p10, $i438, $i441);
  // WARNING: %610 = call i32 @st_int_ioctl(%struct.scsi_tape* %11, i32 %606, i64 %609), !dbg !6457, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i32($i442);
  assume {:verifier.code 0} true;
  $i435 := $i442;
  goto $bb234;
$bb234:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9775, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $i435;
  goto $bb10;
$bb235:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9779, 27} true;
  assume {:verifier.code 0} true;
  $p443 := $add.ref($p27, $mul.ref($i30, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9779, 27} true;
  assume {:verifier.code 0} true;
  $i444 := $load.i8($M.0, $p443);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9779, 7} true;
  assume {:verifier.code 0} true;
  $i445 := $zext.i8.i32($i444);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9779, 35} true;
  assume {:verifier.code 0} true;
  $i446 := $eq.i32($i445, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9779, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i446} true;
  goto $bb236, $bb237;
$bb236:
  assume ($i446 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9781, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 6);
  goto $bb10;
$bb237:
  assume !(($i446 == 1));
  assume {:verifier.code 0} true;
  goto $bb238;
$bb238:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9785, 7} true;
  assume {:verifier.code 0} true;
  call $i447 := flush_buffer($p10, 0);
  // WARNING: %621 = call i32 @flush_buffer(%struct.scsi_tape* %11, i32 0), !dbg !6466, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i447);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9786, 9} true;
  assume {:verifier.code 0} true;
  $i448 := $slt.i32($i447, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9786, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i448} true;
  goto $bb239, $bb240;
$bb239:
  assume ($i448 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9788, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $i447;
  goto $bb10;
$bb240:
  assume !(($i448 == 1));
  assume {:verifier.code 0} true;
  goto $bb241;
$bb241:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9792, 27} true;
  assume {:verifier.code 0} true;
  $p449 := $add.ref($p10, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9792, 27} true;
  assume {:verifier.code 0} true;
  $i450 := $load.i8($M.0, $p449);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9792, 7} true;
  assume {:verifier.code 0} true;
  $i451 := $zext.i8.i32($i450);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9792, 42} true;
  assume {:verifier.code 0} true;
  $i452 := $ne.i32($i451, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9792, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i452} true;
  goto $bb242, $bb243;
$bb242:
  assume ($i452 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9793, 9} true;
  assume {:verifier.code 0} true;
  call $i453 := switch_partition($p10);
  // WARNING: %631 = call i32 @switch_partition(%struct.scsi_tape* %11), !dbg !6477, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i453);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9794, 11} true;
  assume {:verifier.code 0} true;
  $i454 := $slt.i32($i453, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9794, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i454} true;
  goto $bb244, $bb245;
$bb243:
  assume !(($i452 == 1));
  assume {:verifier.code 0} true;
  goto $bb247;
$bb244:
  assume ($i454 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9796, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $i453;
  goto $bb10;
$bb245:
  assume !(($i454 == 1));
  assume {:verifier.code 0} true;
  goto $bb246;
$bb246:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9800, 3} true;
  assume {:verifier.code 0} true;
  goto $bb247;
$bb247:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9803, 16} true;
  assume {:verifier.code 0} true;
  $i455 := $eq.i32($i47, 109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9803, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i455} true;
  goto $bb248, $bb249;
$bb248:
  assume ($i455 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9803, 33} true;
  assume {:verifier.code 0} true;
  $i456 := $eq.i32($i48, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9803, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i456} true;
  goto $bb251, $bb252;
$bb249:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9803, 23} true;
  assume {:verifier.code 0} true;
  assume !(($i455 == 1));
  goto $bb250;
$bb250:
  assume {:verifier.code 0} true;
  goto $bb318;
$bb251:
  assume ($i456 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9804, 18} true;
  assume {:verifier.code 0} true;
  $i457 := $lshr.i32($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9804, 25} true;
  assume {:verifier.code 0} true;
  $i458 := $and.i32($i457, 16383);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9804, 35} true;
  assume {:verifier.code 0} true;
  $i459 := $ne.i32($i458, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9804, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i459} true;
  goto $bb253, $bb254;
$bb252:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9803, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i456 == 1));
  goto $bb250;
$bb253:
  assume ($i459 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9806, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 22);
  goto $bb10;
$bb254:
  assume !(($i459 == 1));
  assume {:verifier.code 0} true;
  goto $bb255;
$bb255:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9810, 37} true;
  assume {:verifier.code 0} true;
  $p460 := $add.ref($p10, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9810, 37} true;
  assume {:verifier.code 0} true;
  $i461 := $load.i32($M.0, $p460);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9810, 25} true;
  assume {:verifier.code 0} true;
  $i462 := $sext.i32.i64($i461);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9810, 15} true;
  assume {:verifier.code 0} true;
  $p463 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9810, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p463, $i462);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 55} true;
  assume {:verifier.code 0} true;
  $p464 := $add.ref($p10, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 55} true;
  assume {:verifier.code 0} true;
  $i465 := $load.i32($M.0, $p464);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 66} true;
  assume {:verifier.code 0} true;
  $i466 := $and.i32($i465, 16777215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 108} true;
  assume {:verifier.code 0} true;
  $p467 := $add.ref($p10, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 108} true;
  assume {:verifier.code 0} true;
  $i468 := $load.i8($M.0, $p467);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 97} true;
  assume {:verifier.code 0} true;
  $i469 := $zext.i8.i32($i468);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 116} true;
  assume {:verifier.code 0} true;
  $i470 := $shl.i32($i469, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 79} true;
  assume {:verifier.code 0} true;
  $i471 := $or.i32($i466, $i470);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 26} true;
  assume {:verifier.code 0} true;
  $i472 := $zext.i32.i64($i471);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 15} true;
  assume {:verifier.code 0} true;
  $p473 := $add.ref($p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9811, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p473, $i472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9812, 32} true;
  assume {:verifier.code 0} true;
  $p474 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9812, 32} true;
  assume {:verifier.code 0} true;
  $i475 := $load.i32($M.0, $p474);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9812, 15} true;
  assume {:verifier.code 0} true;
  $p476 := $add.ref($p6, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9812, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p476, $i475);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9813, 33} true;
  assume {:verifier.code 0} true;
  $p477 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9813, 33} true;
  assume {:verifier.code 0} true;
  $i478 := $load.i32($M.0, $p477);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9813, 15} true;
  assume {:verifier.code 0} true;
  $p479 := $add.ref($p6, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9813, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p479, $i478);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9814, 14} true;
  assume {:verifier.code 0} true;
  $p480 := $add.ref($p10, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9814, 14} true;
  assume {:verifier.code 0} true;
  $i481 := $load.i32($M.0, $p480);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9814, 25} true;
  assume {:verifier.code 0} true;
  $i482 := $ne.i32($i481, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9814, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i482} true;
  goto $bb256, $bb257;
$bb256:
  assume ($i482 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9815, 32} true;
  assume {:verifier.code 0} true;
  $p483 := $add.ref($p33, $mul.ref($i36, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9815, 32} true;
  assume {:verifier.code 0} true;
  $i484 := $load.i8($M.0, $p483);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9815, 11} true;
  assume {:verifier.code 0} true;
  $i485 := $zext.i8.i32($i484);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9815, 35} true;
  assume {:verifier.code 0} true;
  $i486 := $eq.i32($i485, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9815, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i486} true;
  goto $bb258, $bb259;
$bb257:
  assume !(($i482 == 1));
  assume {:verifier.code 0} true;
  goto $bb264;
$bb258:
  assume ($i486 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 40} true;
  assume {:verifier.code 0} true;
  $p487 := $add.ref($p6, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 40} true;
  assume {:verifier.code 0} true;
  $i488 := $load.i32($M.0, $p487);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 57} true;
  assume {:verifier.code 0} true;
  $p489 := $add.ref($p10, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 57} true;
  assume {:verifier.code 0} true;
  $p490 := $load.ref($M.0, $p489);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 66} true;
  assume {:verifier.code 0} true;
  $p491 := $add.ref($p490, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 66} true;
  assume {:verifier.code 0} true;
  $i492 := $load.i32($M.0, $p491);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 86} true;
  assume {:verifier.code 0} true;
  $p493 := $add.ref($p10, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 86} true;
  assume {:verifier.code 0} true;
  $i494 := $load.i32($M.0, $p493);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 79} true;
  assume {:verifier.code 0} true;
  $i495 := $sdiv.i32($i492, $i494);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 49} true;
  assume {:verifier.code 0} true;
  $i496 := $add.i32($i488, $i495);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 19} true;
  assume {:verifier.code 0} true;
  $p497 := $add.ref($p6, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9816, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p497, $i496);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9817, 7} true;
  assume {:verifier.code 0} true;
  goto $bb260;
$bb259:
  assume !(($i486 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9818, 32} true;
  assume {:verifier.code 0} true;
  $p498 := $add.ref($p33, $mul.ref($i36, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9818, 32} true;
  assume {:verifier.code 0} true;
  $i499 := $load.i8($M.0, $p498);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9818, 11} true;
  assume {:verifier.code 0} true;
  $i500 := $zext.i8.i32($i499);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9818, 35} true;
  assume {:verifier.code 0} true;
  $i501 := $eq.i32($i500, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9818, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i501} true;
  goto $bb261, $bb262;
$bb260:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9823, 5} true;
  assume {:verifier.code 0} true;
  goto $bb264;
$bb261:
  assume ($i501 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 40} true;
  assume {:verifier.code 0} true;
  $p502 := $add.ref($p6, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 40} true;
  assume {:verifier.code 0} true;
  $i503 := $load.i32($M.0, $p502);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 59} true;
  assume {:verifier.code 0} true;
  $p504 := $add.ref($p10, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 59} true;
  assume {:verifier.code 0} true;
  $p505 := $load.ref($M.0, $p504);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 68} true;
  assume {:verifier.code 0} true;
  $p506 := $add.ref($p505, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 68} true;
  assume {:verifier.code 0} true;
  $i507 := $load.i32($M.0, $p506);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 88} true;
  assume {:verifier.code 0} true;
  $p508 := $add.ref($p10, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 88} true;
  assume {:verifier.code 0} true;
  $i509 := $load.i32($M.0, $p508);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 81} true;
  assume {:verifier.code 0} true;
  $i510 := $add.i32($i507, $i509);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 100} true;
  assume {:verifier.code 0} true;
  $i511 := $add.i32($i510, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 113} true;
  assume {:verifier.code 0} true;
  $p512 := $add.ref($p10, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 113} true;
  assume {:verifier.code 0} true;
  $i513 := $load.i32($M.0, $p512);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 106} true;
  assume {:verifier.code 0} true;
  $i514 := $sdiv.i32($i511, $i513);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 49} true;
  assume {:verifier.code 0} true;
  $i515 := $sub.i32($i503, $i514);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 19} true;
  assume {:verifier.code 0} true;
  $p516 := $add.ref($p6, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9819, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p516, $i515);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9820, 7} true;
  assume {:verifier.code 0} true;
  goto $bb263;
$bb262:
  assume !(($i501 == 1));
  assume {:verifier.code 0} true;
  goto $bb263;
$bb263:
  assume {:verifier.code 0} true;
  goto $bb260;
$bb264:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9826, 15} true;
  assume {:verifier.code 0} true;
  $p517 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9826, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p517, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9827, 29} true;
  assume {:verifier.code 0} true;
  $p518 := $add.ref($p10, 627);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9827, 29} true;
  assume {:verifier.code 0} true;
  $i519 := $load.i8($M.0, $p518);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9827, 9} true;
  assume {:verifier.code 0} true;
  $i520 := $zext.i8.i32($i519);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9827, 44} true;
  assume {:verifier.code 0} true;
  $i521 := $ne.i32($i520, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9827, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i521} true;
  goto $bb265, $bb266;
$bb265:
  assume ($i521 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9828, 38} true;
  assume {:verifier.code 0} true;
  $p522 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9828, 38} true;
  assume {:verifier.code 0} true;
  $i523 := $load.i64($M.0, $p522);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9828, 47} true;
  assume {:verifier.code 0} true;
  $i524 := $or.i64($i523, 67108864);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9828, 17} true;
  assume {:verifier.code 0} true;
  $p525 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9828, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p525, $i524);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9829, 5} true;
  assume {:verifier.code 0} true;
  goto $bb267;
$bb266:
  assume !(($i521 == 1));
  assume {:verifier.code 0} true;
  goto $bb267;
$bb267:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9832, 19} true;
  assume {:verifier.code 0} true;
  $p526 := $add.ref($p6, 44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9832, 19} true;
  assume {:verifier.code 0} true;
  $i527 := $load.i32($M.0, $p526);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9832, 28} true;
  assume {:verifier.code 0} true;
  $i528 := $eq.i32($i527, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9832, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i528} true;
  goto $bb268, $bb269;
$bb268:
  assume ($i528 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9833, 21} true;
  assume {:verifier.code 0} true;
  $p529 := $add.ref($p6, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9833, 21} true;
  assume {:verifier.code 0} true;
  $i530 := $load.i32($M.0, $p529);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9833, 31} true;
  assume {:verifier.code 0} true;
  $i531 := $eq.i32($i530, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9833, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i531} true;
  goto $bb270, $bb271;
$bb269:
  assume !(($i528 == 1));
  assume {:verifier.code 0} true;
  goto $bb273;
$bb270:
  assume ($i531 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9834, 40} true;
  assume {:verifier.code 0} true;
  $p532 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9834, 40} true;
  assume {:verifier.code 0} true;
  $i533 := $load.i64($M.0, $p532);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9834, 49} true;
  assume {:verifier.code 0} true;
  $i534 := $or.i64($i533, 1073741824);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9834, 19} true;
  assume {:verifier.code 0} true;
  $p535 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9834, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p535, $i534);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9835, 7} true;
  assume {:verifier.code 0} true;
  goto $bb272;
$bb271:
  assume !(($i531 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9836, 40} true;
  assume {:verifier.code 0} true;
  $p536 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9836, 40} true;
  assume {:verifier.code 0} true;
  $i537 := $load.i64($M.0, $p536);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9836, 49} true;
  assume {:verifier.code 0} true;
  $i538 := $or.i64($i537, 2147483648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9836, 19} true;
  assume {:verifier.code 0} true;
  $p539 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9836, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p539, $i538);
  assume {:verifier.code 0} true;
  goto $bb272;
$bb272:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9838, 5} true;
  assume {:verifier.code 0} true;
  goto $bb273;
$bb273:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9841, 38} true;
  assume {:verifier.code 0} true;
  $p540 := $add.ref($p10, 656);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9841, 38} true;
  assume {:verifier.code 0} true;
  $i541 := $load.i32($M.0, $p540);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9841, 26} true;
  assume {:verifier.code 0} true;
  $i542 := $sext.i32.i64($i541);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9841, 15} true;
  assume {:verifier.code 0} true;
  $p543 := $add.ref($p6, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9841, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p543, $i542);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9842, 38} true;
  assume {:verifier.code 0} true;
  $p544 := $add.ref($p10, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9842, 38} true;
  assume {:verifier.code 0} true;
  $i545 := $load.i32($M.0, $p544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9842, 26} true;
  assume {:verifier.code 0} true;
  $i546 := $sext.i32.i64($i545);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9842, 15} true;
  assume {:verifier.code 0} true;
  $p547 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9842, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p547, $i546);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 30} true;
  assume {:verifier.code 0} true;
  $p548 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 30} true;
  assume {:verifier.code 0} true;
  $i549 := $load.i8($M.0, $p548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 9} true;
  assume {:verifier.code 0} true;
  $i550 := $zext.i8.i32($i549);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 34} true;
  assume {:verifier.code 0} true;
  $i551 := $eq.i32($i550, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 40} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i551} true;
  goto $bb274, $bb276;
$bb274:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 40} true;
  assume {:verifier.code 0} true;
  assume ($i551 == 1);
  goto $bb275;
$bb275:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9844, 38} true;
  assume {:verifier.code 0} true;
  $p556 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9844, 38} true;
  assume {:verifier.code 0} true;
  $i557 := $load.i64($M.0, $p556);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9844, 47} true;
  assume {:verifier.code 0} true;
  $i558 := $or.i64($i557, 536870912);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9844, 17} true;
  assume {:verifier.code 0} true;
  $p559 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9844, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p559, $i558);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9845, 5} true;
  assume {:verifier.code 0} true;
  goto $bb279;
$bb276:
  assume !(($i551 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 64} true;
  assume {:verifier.code 0} true;
  $p552 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 64} true;
  assume {:verifier.code 0} true;
  $i553 := $load.i8($M.0, $p552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 43} true;
  assume {:verifier.code 0} true;
  $i554 := $zext.i8.i32($i553);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 68} true;
  assume {:verifier.code 0} true;
  $i555 := $eq.i32($i554, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i555} true;
  goto $bb277, $bb278;
$bb277:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9843, 9} true;
  assume {:verifier.code 0} true;
  assume ($i555 == 1);
  goto $bb275;
$bb278:
  assume !(($i555 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9846, 30} true;
  assume {:verifier.code 0} true;
  $p560 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9846, 30} true;
  assume {:verifier.code 0} true;
  $i561 := $load.i8($M.0, $p560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9846, 9} true;
  assume {:verifier.code 0} true;
  $i562 := $zext.i8.i32($i561);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9846, 34} true;
  assume {:verifier.code 0} true;
  $i563 := $ugt.i32($i562, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9846, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i563} true;
  goto $bb280, $bb281;
$bb279:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9851, 29} true;
  assume {:verifier.code 0} true;
  $p568 := $add.ref($p10, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9851, 29} true;
  assume {:verifier.code 0} true;
  $i569 := $load.i8($M.0, $p568);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9851, 9} true;
  assume {:verifier.code 0} true;
  $i570 := $zext.i8.i32($i569);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9851, 37} true;
  assume {:verifier.code 0} true;
  $i571 := $eq.i32($i570, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9851, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i571} true;
  goto $bb283, $bb284;
$bb280:
  assume ($i563 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9847, 38} true;
  assume {:verifier.code 0} true;
  $p564 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9847, 38} true;
  assume {:verifier.code 0} true;
  $i565 := $load.i64($M.0, $p564);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9847, 47} true;
  assume {:verifier.code 0} true;
  $i566 := $or.i64($i565, 134217728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9847, 17} true;
  assume {:verifier.code 0} true;
  $p567 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9847, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p567, $i566);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9848, 5} true;
  assume {:verifier.code 0} true;
  goto $bb282;
$bb281:
  assume !(($i563 == 1));
  assume {:verifier.code 0} true;
  goto $bb282;
$bb282:
  assume {:verifier.code 0} true;
  goto $bb279;
$bb283:
  assume ($i571 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9852, 38} true;
  assume {:verifier.code 0} true;
  $p572 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9852, 38} true;
  assume {:verifier.code 0} true;
  $i573 := $load.i64($M.0, $p572);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9852, 47} true;
  assume {:verifier.code 0} true;
  $i574 := $or.i64($i573, 2097152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9852, 17} true;
  assume {:verifier.code 0} true;
  $p575 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9852, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p575, $i574);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9853, 5} true;
  assume {:verifier.code 0} true;
  goto $bb285;
$bb284:
  assume !(($i571 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9854, 29} true;
  assume {:verifier.code 0} true;
  $p576 := $add.ref($p10, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9854, 29} true;
  assume {:verifier.code 0} true;
  $i577 := $load.i8($M.0, $p576);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9854, 9} true;
  assume {:verifier.code 0} true;
  $i578 := $zext.i8.i32($i577);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9854, 37} true;
  assume {:verifier.code 0} true;
  $i579 := $eq.i32($i578, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9854, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i579} true;
  goto $bb286, $bb287;
$bb285:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9862, 29} true;
  assume {:verifier.code 0} true;
  $p592 := $add.ref($p10, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9862, 29} true;
  assume {:verifier.code 0} true;
  $i593 := $load.i8($M.0, $p592);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9862, 9} true;
  assume {:verifier.code 0} true;
  $i594 := $zext.i8.i32($i593);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9862, 35} true;
  assume {:verifier.code 0} true;
  $i595 := $eq.i32($i594, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9862, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i595} true;
  goto $bb292, $bb293;
$bb286:
  assume ($i579 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9855, 38} true;
  assume {:verifier.code 0} true;
  $p580 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9855, 38} true;
  assume {:verifier.code 0} true;
  $i581 := $load.i64($M.0, $p580);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9855, 47} true;
  assume {:verifier.code 0} true;
  $i582 := $or.i64($i581, 4194304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9855, 17} true;
  assume {:verifier.code 0} true;
  $p583 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9855, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p583, $i582);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9856, 5} true;
  assume {:verifier.code 0} true;
  goto $bb288;
$bb287:
  assume !(($i579 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9857, 29} true;
  assume {:verifier.code 0} true;
  $p584 := $add.ref($p10, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9857, 29} true;
  assume {:verifier.code 0} true;
  $i585 := $load.i8($M.0, $p584);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9857, 9} true;
  assume {:verifier.code 0} true;
  $i586 := $zext.i8.i32($i585);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9857, 37} true;
  assume {:verifier.code 0} true;
  $i587 := $eq.i32($i586, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9857, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i587} true;
  goto $bb289, $bb290;
$bb288:
  assume {:verifier.code 0} true;
  goto $bb285;
$bb289:
  assume ($i587 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9858, 38} true;
  assume {:verifier.code 0} true;
  $p588 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9858, 38} true;
  assume {:verifier.code 0} true;
  $i589 := $load.i64($M.0, $p588);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9858, 47} true;
  assume {:verifier.code 0} true;
  $i590 := $or.i64($i589, 8388608);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9858, 17} true;
  assume {:verifier.code 0} true;
  $p591 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9858, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p591, $i590);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9859, 5} true;
  assume {:verifier.code 0} true;
  goto $bb291;
$bb290:
  assume !(($i587 == 1));
  assume {:verifier.code 0} true;
  goto $bb291;
$bb291:
  assume {:verifier.code 0} true;
  goto $bb288;
$bb292:
  assume ($i595 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9863, 38} true;
  assume {:verifier.code 0} true;
  $p596 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9863, 38} true;
  assume {:verifier.code 0} true;
  $i597 := $load.i64($M.0, $p596);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9863, 47} true;
  assume {:verifier.code 0} true;
  $i598 := $or.i64($i597, 16777216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9863, 17} true;
  assume {:verifier.code 0} true;
  $p599 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9863, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p599, $i598);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9864, 5} true;
  assume {:verifier.code 0} true;
  goto $bb294;
$bb293:
  assume !(($i595 == 1));
  assume {:verifier.code 0} true;
  goto $bb294;
$bb294:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9867, 29} true;
  assume {:verifier.code 0} true;
  $p600 := $add.ref($p10, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9867, 29} true;
  assume {:verifier.code 0} true;
  $i601 := $load.i8($M.0, $p600);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9867, 9} true;
  assume {:verifier.code 0} true;
  $i602 := $zext.i8.i32($i601);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9867, 35} true;
  assume {:verifier.code 0} true;
  $i603 := $eq.i32($i602, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9867, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i603} true;
  goto $bb295, $bb296;
$bb295:
  assume ($i603 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9868, 38} true;
  assume {:verifier.code 0} true;
  $p604 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9868, 38} true;
  assume {:verifier.code 0} true;
  $i605 := $load.i64($M.0, $p604);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9868, 47} true;
  assume {:verifier.code 0} true;
  $i606 := $or.i64($i605, 262144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9868, 17} true;
  assume {:verifier.code 0} true;
  $p607 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9868, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p607, $i606);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9869, 5} true;
  assume {:verifier.code 0} true;
  goto $bb297;
$bb296:
  assume !(($i603 == 1));
  assume {:verifier.code 0} true;
  goto $bb297;
$bb297:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9872, 30} true;
  assume {:verifier.code 0} true;
  $p608 := $add.ref($add.ref($p33, $mul.ref($i36, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9872, 30} true;
  assume {:verifier.code 0} true;
  $i609 := $load.i8($M.0, $p608);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9872, 9} true;
  assume {:verifier.code 0} true;
  $i610 := $zext.i8.i32($i609);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9872, 36} true;
  assume {:verifier.code 0} true;
  $i611 := $ne.i32($i610, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9872, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i611} true;
  goto $bb298, $bb299;
$bb298:
  assume ($i611 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9873, 38} true;
  assume {:verifier.code 0} true;
  $p612 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9873, 38} true;
  assume {:verifier.code 0} true;
  $i613 := $load.i64($M.0, $p612);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9873, 47} true;
  assume {:verifier.code 0} true;
  $i614 := $or.i64($i613, 268435456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9873, 17} true;
  assume {:verifier.code 0} true;
  $p615 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9873, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p615, $i614);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9874, 5} true;
  assume {:verifier.code 0} true;
  goto $bb300;
$bb299:
  assume !(($i611 == 1));
  assume {:verifier.code 0} true;
  goto $bb300;
$bb300:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 30} true;
  assume {:verifier.code 0} true;
  $p616 := $add.ref($add.ref($p27, $mul.ref($i30, 56)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 30} true;
  assume {:verifier.code 0} true;
  $i617 := $load.i8($M.0, $p616);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 10} true;
  assume {:verifier.code 0} true;
  $i618 := $zext.i8.i32($i617);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 46} true;
  assume {:verifier.code 0} true;
  $i619 := $ne.i32($i618, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 52} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i619} true;
  goto $bb301, $bb303;
$bb301:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 52} true;
  assume {:verifier.code 0} true;
  assume ($i619 == 1);
  goto $bb302;
$bb302:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9878, 38} true;
  assume {:verifier.code 0} true;
  $p631 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9878, 38} true;
  assume {:verifier.code 0} true;
  $i632 := $load.i64($M.0, $p631);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9878, 47} true;
  assume {:verifier.code 0} true;
  $i633 := $or.i64($i632, 65536);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9878, 17} true;
  assume {:verifier.code 0} true;
  $p634 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9878, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p634, $i633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9879, 5} true;
  assume {:verifier.code 0} true;
  goto $bb311;
$bb303:
  assume !(($i619 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 76} true;
  assume {:verifier.code 0} true;
  $p620 := $add.ref($add.ref($p27, $mul.ref($i30, 56)), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 76} true;
  assume {:verifier.code 0} true;
  $i621 := $load.i8($M.0, $p620);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 56} true;
  assume {:verifier.code 0} true;
  $i622 := $zext.i8.i32($i621);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 93} true;
  assume {:verifier.code 0} true;
  $i623 := $ne.i32($i622, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 99} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i623} true;
  goto $bb304, $bb305;
$bb304:
  assume ($i623 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 107} true;
  assume {:verifier.code 0} true;
  $p624 := $add.ref($p10, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 107} true;
  assume {:verifier.code 0} true;
  $i625 := $load.i32($M.0, $p624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 118} true;
  assume {:verifier.code 0} true;
  $i626 := $ne.i32($i625, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 125} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i626} true;
  goto $bb307, $bb308;
$bb305:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 99} true;
  assume {:verifier.code 0} true;
  assume !(($i623 == 1));
  goto $bb306;
$bb306:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 148} true;
  assume {:verifier.code 0} true;
  $p627 := $add.ref($p10, 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 148} true;
  assume {:verifier.code 0} true;
  $i628 := $load.i8($M.0, $p627);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 128} true;
  assume {:verifier.code 0} true;
  $i629 := $zext.i8.i32($i628);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 159} true;
  assume {:verifier.code 0} true;
  $i630 := $ne.i32($i629, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i630} true;
  goto $bb309, $bb310;
$bb307:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 125} true;
  assume {:verifier.code 0} true;
  assume ($i626 == 1);
  goto $bb302;
$bb308:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 125} true;
  assume {:verifier.code 0} true;
  assume !(($i626 == 1));
  goto $bb306;
$bb309:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9877, 9} true;
  assume {:verifier.code 0} true;
  assume ($i630 == 1);
  goto $bb302;
$bb310:
  assume !(($i630 == 1));
  assume {:verifier.code 0} true;
  goto $bb311;
$bb311:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9882, 29} true;
  assume {:verifier.code 0} true;
  $p635 := $add.ref($p10, 638);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9882, 29} true;
  assume {:verifier.code 0} true;
  $i636 := $load.i8($M.0, $p635);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9882, 9} true;
  assume {:verifier.code 0} true;
  $i637 := $zext.i8.i32($i636);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9882, 42} true;
  assume {:verifier.code 0} true;
  $i638 := $ne.i32($i637, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9882, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i638} true;
  goto $bb312, $bb313;
$bb312:
  assume ($i638 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9883, 38} true;
  assume {:verifier.code 0} true;
  $p639 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9883, 38} true;
  assume {:verifier.code 0} true;
  $i640 := $load.i64($M.0, $p639);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9883, 47} true;
  assume {:verifier.code 0} true;
  $i641 := $or.i64($i640, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9883, 17} true;
  assume {:verifier.code 0} true;
  $p642 := $add.ref($p6, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9883, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p642, $i641);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9884, 5} true;
  assume {:verifier.code 0} true;
  goto $bb314;
$bb313:
  assume !(($i638 == 1));
  assume {:verifier.code 0} true;
  goto $bb314;
$bb314:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9887, 31} true;
  assume {:verifier.code 0} true;
  $p643 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9887, 15} true;
  assume {:verifier.code 0} true;
  call $i644 := copy_to_user($p11, $p643, 48);
  // WARNING: %884 = call i64 @copy_to_user(i8* %12, i8* %883, i64 48), !dbg !6729, !verifier.code !5775
  call {:cexpr "tmp___8"} boogie_si_record_i64($i644);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9888, 9} true;
  assume {:verifier.code 0} true;
  $i645 := $trunc.i64.i32($i644);
  // WARNING: %885 = trunc i64 %884 to i32, !dbg !6732, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i645);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9889, 11} true;
  assume {:verifier.code 0} true;
  $i646 := $ne.i32($i645, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9889, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i646} true;
  goto $bb315, $bb316;
$bb315:
  assume ($i646 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9891, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 14);
  goto $bb10;
$bb316:
  assume !(($i646 == 1));
  assume {:verifier.code 0} true;
  goto $bb317;
$bb317:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9895, 10} true;
  assume {:verifier.code 0} true;
  $p647 := $add.ref($p10, 656);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9895, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p647, 0);
  // WARNING: store i32 0, i32* %890, align 8, !dbg !6739, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9897, 5} true;
  assume {:verifier.code 0} true;
  $i25 := 0;
  goto $bb10;
$bb318:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9901, 16} true;
  assume {:verifier.code 0} true;
  $i648 := $eq.i32($i47, 109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9901, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i648} true;
  goto $bb319, $bb320;
$bb319:
  assume ($i648 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9901, 33} true;
  assume {:verifier.code 0} true;
  $i649 := $eq.i32($i48, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9901, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i649} true;
  goto $bb322, $bb323;
$bb320:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9901, 23} true;
  assume {:verifier.code 0} true;
  assume !(($i648 == 1));
  goto $bb321;
$bb321:
  assume {:verifier.code 0} true;
  goto $bb333;
$bb322:
  assume ($i649 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9902, 18} true;
  assume {:verifier.code 0} true;
  $i650 := $lshr.i32($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9902, 25} true;
  assume {:verifier.code 0} true;
  $i651 := $and.i32($i650, 16383);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9902, 35} true;
  assume {:verifier.code 0} true;
  $i652 := $ne.i32($i651, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9902, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i652} true;
  goto $bb324, $bb325;
$bb323:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9901, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i649 == 1));
  goto $bb321;
$bb324:
  assume ($i652 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9904, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $sub.i32(0, 22);
  goto $bb10;
$bb325:
  assume !(($i652 == 1));
  assume {:verifier.code 0} true;
  goto $bb326;
$bb326:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9908, 9} true;
  assume {:verifier.code 0} true;
  call $i653 := get_location($p10, $p4, $p3, 0);
  // WARNING: %903 = call i32 @get_location(%struct.scsi_tape* %11, i32* %5, i32* %4, i32 0), !dbg !6755, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i653);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9909, 11} true;
  assume {:verifier.code 0} true;
  $i654 := $slt.i32($i653, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9909, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i654} true;
  goto $bb327, $bb328;
$bb327:
  assume ($i654 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9911, 7} true;
  assume {:verifier.code 0} true;
  $i25 := $i653;
  goto $bb10;
$bb328:
  assume !(($i654 == 1));
  assume {:verifier.code 0} true;
  goto $bb329;
$bb329:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9915, 30} true;
  assume {:verifier.code 0} true;
  $i655 := $load.i32($M.14, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9915, 23} true;
  assume {:verifier.code 0} true;
  $i656 := $zext.i32.i64($i655);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9915, 12} true;
  assume {:verifier.code 0} true;
  $p657 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9915, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p657, $i656);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9916, 31} true;
  assume {:verifier.code 0} true;
  $p658 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9916, 15} true;
  assume {:verifier.code 0} true;
  call $i659 := copy_to_user($p11, $p658, 8);
  // WARNING: %912 = call i64 @copy_to_user(i8* %12, i8* %911, i64 8), !dbg !6766, !verifier.code !5775
  call {:cexpr "tmp___9"} boogie_si_record_i64($i659);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9917, 9} true;
  assume {:verifier.code 0} true;
  $i660 := $trunc.i64.i32($i659);
  // WARNING: %913 = trunc i64 %912 to i32, !dbg !6769, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i660);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9918, 11} true;
  assume {:verifier.code 0} true;
  $i661 := $ne.i32($i660, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9918, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i661} true;
  goto $bb330, $bb331;
$bb330:
  assume ($i661 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9920, 5} true;
  assume {:verifier.code 0} true;
  $i662 := $sub.i32(0, 14);
  goto $bb332;
$bb331:
  assume !(($i661 == 1));
  assume {:verifier.code 0} true;
  $i662 := $i44;
  goto $bb332;
$bb332:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9923, 5} true;
  assume {:verifier.code 0} true;
  $i25 := $i662;
  goto $bb10;
$bb333:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9927, 23} true;
  assume {:verifier.code 0} true;
  $p663 := $add.ref($p10, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9927, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock($p663);
  assume {:verifier.code 0} true;
  goto $bb334;
$bb334:
  assume {:verifier.code 0} true;
  $i664 := $slt.i32($i1, 21382);
  assume {:verifier.code 0} true;
  assume {:branchcond $i664} true;
  goto $bb335, $bb336;
$bb335:
  assume ($i664 == 1);
  assume {:verifier.code 0} true;
  $i666 := $eq.i32($i1, 21378);
  assume {:verifier.code 0} true;
  assume {:branchcond $i666} true;
  goto $bb341, $bb342;
$bb336:
  assume !(($i664 == 1));
  assume {:verifier.code 0} true;
  $i665 := $eq.i32($i1, 21382);
  assume {:verifier.code 0} true;
  assume {:branchcond $i665} true;
  goto $bb337, $bb339;
$bb337:
  assume {:verifier.code 0} true;
  assume ($i665 == 1);
  goto $bb338;
$bb338:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9931, 3} true;
  assume {:verifier.code 0} true;
  goto $bb343;
$bb339:
  assume {:verifier.code 0} true;
  assume !(($i665 == 1));
  goto $bb340;
$bb340:
  assume {:verifier.code 0} true;
  goto $bb344;
$bb341:
  assume ($i666 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9928, 19} true;
  assume {:verifier.code 0} true;
  goto $bb338;
$bb342:
  assume {:verifier.code 0} true;
  assume !(($i666 == 1));
  goto $bb340;
$bb343:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9956, 28} true;
  assume {:verifier.code 0} true;
  $p697 := $add.ref($p10, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9956, 28} true;
  assume {:verifier.code 0} true;
  $p698 := $load.ref($M.0, $p697);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9956, 12} true;
  assume {:verifier.code 0} true;
  call $i699 := scsi_ioctl($p698, $i1, $p11);
  // WARNING: %968 = call i32 @scsi_ioctl(%struct.scsi_device* %967, i32 %1, i8* %12), !dbg !6829, !verifier.code !5775
  call {:cexpr "retval"} boogie_si_record_i32($i699);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9957, 14} true;
  assume {:verifier.code 0} true;
  $i700 := $eq.i32($i699, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9957, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i700} true;
  goto $bb362, $bb363;
$bb344:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9933, 15} true;
  assume {:verifier.code 0} true;
  $i667 := $eq.i32($i1, 8837);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9933, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i667} true;
  goto $bb345, $bb347;
$bb345:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9933, 24} true;
  assume {:verifier.code 0} true;
  assume ($i667 == 1);
  goto $bb346;
$bb346:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9934, 16} true;
  assume {:verifier.code 0} true;
  call $i670 := capable(17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9934, 14} true;
  assume {:verifier.code 0} true;
  $i671 := $zext.i1.i8($i670);
  // WARNING: %931 = zext i1 %930 to i8, !dbg !6793, !verifier.code !5775
  call {:cexpr "tmp___10"} boogie_si_record_i8($i671);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9935, 9} true;
  assume {:verifier.code 0} true;
  $i672 := $trunc.i8.i1($i671);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9935, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i672} true;
  goto $bb352, $bb353;
$bb347:
  assume !(($i667 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9933, 34} true;
  assume {:verifier.code 0} true;
  $i668 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9933, 41} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i668} true;
  goto $bb348, $bb349;
$bb348:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9933, 41} true;
  assume {:verifier.code 0} true;
  assume ($i668 == 1);
  goto $bb346;
$bb349:
  assume !(($i668 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9933, 51} true;
  assume {:verifier.code 0} true;
  $i669 := $eq.i32($i1, 21395);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9933, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i669} true;
  goto $bb350, $bb351;
$bb350:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9933, 7} true;
  assume {:verifier.code 0} true;
  assume ($i669 == 1);
  goto $bb346;
$bb351:
  assume !(($i669 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9946, 30} true;
  assume {:verifier.code 0} true;
  $p686 := $add.ref($p10, 712);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9946, 30} true;
  assume {:verifier.code 0} true;
  $p687 := $load.ref($M.0, $p686);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9946, 37} true;
  assume {:verifier.code 0} true;
  $p688 := $add.ref($p687, 1672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9946, 37} true;
  assume {:verifier.code 0} true;
  $p689 := $load.ref($M.0, $p688);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9946, 49} true;
  assume {:verifier.code 0} true;
  $p690 := $add.ref($p10, 712);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9946, 49} true;
  assume {:verifier.code 0} true;
  $p691 := $load.ref($M.0, $p690);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9946, 61} true;
  assume {:verifier.code 0} true;
  $p692 := $add.ref($p0, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9946, 61} true;
  assume {:verifier.code 0} true;
  $i693 := $load.i32($M.0, $p692);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9946, 9} true;
  assume {:verifier.code 0} true;
  call $i694 := scsi_cmd_ioctl($p689, $p691, $i693, $i1, $p11);
  // WARNING: %958 = call i32 @scsi_cmd_ioctl(%struct.request_queue* %953, %struct.gendisk* %955, i32 %957, i32 %1, i8* %12), !dbg !6820, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i694);
  assume {:verifier.code 0} true;
  $i685 := $i694;
  goto $bb358;
$bb352:
  assume ($i672 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9937, 5} true;
  assume {:verifier.code 0} true;
  $i673 := 0;
  goto $bb354;
$bb353:
  assume !(($i672 == 1));
  assume {:verifier.code 0} true;
  $i673 := 1;
  goto $bb354;
$bb354:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9940, 9} true;
  assume {:verifier.code 0} true;
  $i674 := $ne.i32($i673, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9940, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i674} true;
  goto $bb355, $bb356;
$bb355:
  assume ($i674 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9942, 5} true;
  assume {:verifier.code 0} true;
  $i675 := $sub.i32(0, 1);
  goto $bb357;
$bb356:
  assume !(($i674 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9943, 32} true;
  assume {:verifier.code 0} true;
  $p676 := $add.ref($p10, 712);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9943, 32} true;
  assume {:verifier.code 0} true;
  $p677 := $load.ref($M.0, $p676);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9943, 39} true;
  assume {:verifier.code 0} true;
  $p678 := $add.ref($p677, 1672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9943, 39} true;
  assume {:verifier.code 0} true;
  $p679 := $load.ref($M.0, $p678);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9943, 51} true;
  assume {:verifier.code 0} true;
  $p680 := $add.ref($p10, 712);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9943, 51} true;
  assume {:verifier.code 0} true;
  $p681 := $load.ref($M.0, $p680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9943, 63} true;
  assume {:verifier.code 0} true;
  $p682 := $add.ref($p0, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9943, 63} true;
  assume {:verifier.code 0} true;
  $i683 := $load.i32($M.0, $p682);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9943, 11} true;
  assume {:verifier.code 0} true;
  call $i684 := scsi_cmd_ioctl($p679, $p681, $i683, $i1, $p11);
  // WARNING: %947 = call i32 @scsi_cmd_ioctl(%struct.request_queue* %942, %struct.gendisk* %944, i32 %946, i32 %1, i8* %12), !dbg !6813, !verifier.code !5775
  call {:cexpr "i"} boogie_si_record_i32($i684);
  assume {:verifier.code 0} true;
  $i675 := $i684;
  goto $bb357;
$bb357:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9945, 3} true;
  assume {:verifier.code 0} true;
  $i685 := $i675;
  goto $bb358;
$bb358:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9948, 9} true;
  assume {:verifier.code 0} true;
  $i695 := $ne.i32($i685, $sub.i32(0, 25));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9948, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i695} true;
  goto $bb359, $bb360;
$bb359:
  assume ($i695 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9949, 13} true;
  assume {:verifier.code 0} true;
  $i696 := $sext.i32.i64($i685);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9949, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $i696;
  goto $bb3;
$bb360:
  assume !(($i695 == 1));
  assume {:verifier.code 0} true;
  goto $bb361;
$bb361:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9953, 3} true;
  assume {:verifier.code 0} true;
  goto $bb343;
$bb362:
  assume ($i700 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9957, 29} true;
  assume {:verifier.code 0} true;
  $i701 := $eq.i32($i1, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9957, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i701} true;
  goto $bb365, $bb366;
$bb363:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9957, 19} true;
  assume {:verifier.code 0} true;
  assume !(($i700 == 1));
  goto $bb364;
$bb364:
  assume {:verifier.code 0} true;
  goto $bb367;
$bb365:
  assume ($i701 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9958, 10} true;
  assume {:verifier.code 0} true;
  $p702 := $add.ref($p10, 636);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9958, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p702, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9959, 10} true;
  assume {:verifier.code 0} true;
  $p703 := $add.ref($p10, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9959, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p703, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9960, 3} true;
  assume {:verifier.code 0} true;
  goto $bb367;
$bb366:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9957, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i701 == 1));
  goto $bb364;
$bb367:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9963, 11} true;
  assume {:verifier.code 0} true;
  $i704 := $sext.i32.i64($i699);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9963, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i704;
  goto $bb3;
$bb368:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9705, 12} true;
  assume {:verifier.code 0} true;
  $p716 := $add.ref($p10, 560);
  $p717 := $add.ref($add.ref($p10, 560), 32);
  $p718 := $add.ref($add.ref($p10, 560), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9705, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p718, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9706, 12} true;
  assume {:verifier.code 0} true;
  $p719 := $add.ref($p10, 560);
  $p720 := $add.ref($add.ref($p10, 560), 32);
  $p721 := $add.ref($add.ref($add.ref($p10, 560), 32), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9706, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p721, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9707, 12} true;
  assume {:verifier.code 0} true;
  $p722 := $add.ref($p10, 560);
  $p723 := $add.ref($add.ref($p10, 560), 32);
  $p724 := $add.ref($add.ref($add.ref($p10, 560), 32), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9707, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p724, 0);
  // WARNING: store i8 0, i8* %1001, align 1, !dbg !6336, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9711, 9} true;
  assume {:verifier.code 0} true;
  goto $bb369;
$bb369:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9705, 12} true;
  assume {:verifier.code 0} true;
  $p725 := $add.ref($p10, 560);
  $p726 := $add.ref($add.ref($p10, 560), 48);
  $p727 := $add.ref($add.ref($p10, 560), 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9705, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p727, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9706, 12} true;
  assume {:verifier.code 0} true;
  $p728 := $add.ref($p10, 560);
  $p729 := $add.ref($add.ref($p10, 560), 48);
  $p730 := $add.ref($add.ref($add.ref($p10, 560), 48), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9706, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p730, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9707, 12} true;
  assume {:verifier.code 0} true;
  $p731 := $add.ref($p10, 560);
  $p732 := $add.ref($add.ref($p10, 560), 48);
  $p733 := $add.ref($add.ref($add.ref($p10, 560), 48), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9707, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p733, 0);
  // WARNING: store i8 0, i8* %1011, align 1, !dbg !6336, !verifier.code !5775
  assume {:verifier.code 0} true;
  goto $bb197;
}
const st_compat_ioctl: ref;
axiom (st_compat_ioctl == $sub.ref(0, 374690));
procedure  st_compat_ioctl($p0: ref, $i1: i32, $i2: i64)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i32;
  var $i24: i32;
  var $i25: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %0, i64 0, metadata !8995, metadata !5777), !dbg !8996, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !8997, metadata !5777), !dbg !8998, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9976, 35} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9976, 35} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9976, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9977, 15} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9977, 15} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_device* %8, i64 0, metadata !9007, metadata !5777), !dbg !9008, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9979, 31} true;
  assume {:verifier.code 0} true;
  $p8 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9979, 31} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9979, 38} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9979, 38} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9979, 46} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9979, 46} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9979, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9979, 59} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9979, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9982, 22} true;
  assume {:verifier.code 0} true;
  $p16 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9982, 22} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9982, 29} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p17, 504);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9982, 29} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9982, 37} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9982, 37} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9982, 69} true;
  assume {:verifier.code 0} true;
  $p22 := $i2p.i64.ref($i2);
  call $i23 := devirtbounce.5($p21, $p7, $i1, $p22);
  // WARNING: %25 = call i32 @devirtbounce.5(i32 (%struct.scsi_device*, i32, i8*)* %23, %struct.scsi_device* %8, i32 %1, i8* %24)
  call {:cexpr "ret"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9983, 3} true;
  assume {:verifier.code 0} true;
  $i24 := $i23;
  goto $bb3;
$bb2:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  $i24 := $sub.i32(0, 515);
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9986, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9986, 3} true;
  assume {:verifier.code 0} true;
  $r := $i25;
  $exn := false;
  return;
}
const st_open: ref;
axiom (st_open == $sub.ref(0, 375722));
procedure  st_open($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i32;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i1;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $i29: i32;
  var $i30: i1;
  var $i31: i32;
  var $i32: i8;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i1;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $i65: i32;
  var $i66: i32;
  var $i67: i1;
  var $i68: i32;
  var $i69: i8;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i8;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $i87: i32;
  var $i88: i32;
  var $i89: i1;
  var $i90: i1;
  var $p91: ref;
  var $i92: i8;
  var $i93: i32;
  var $i94: i1;
  var $i95: i32;
  var $i39: i32;
  var $i40: i32;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $i99: i1;
  var $p100: ref;
  var $p101: ref;
  var $i15: i32;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %1, i64 0, metadata !9029, metadata !5777), !dbg !9030, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 -5, i64 0, metadata !9031, metadata !5777), !dbg !9032, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6502, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := iminor($p0);
  // WARNING: %3 = call i32 @iminor(%struct.inode* %0), !dbg !5785, !verifier.code !5778
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6503, 13} true;
  assume {:verifier.code 0} true;
  call $i3 := iminor($p0);
  // WARNING: %4 = call i32 @iminor(%struct.inode* %0), !dbg !5789, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6504, 22} true;
  assume {:verifier.code 0} true;
  $i4 := $and.i32($i2, $sub.i32(0, 256));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6504, 37} true;
  assume {:verifier.code 0} true;
  $i5 := $lshr.i32($i4, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6504, 54} true;
  assume {:verifier.code 0} true;
  $i6 := $and.i32($i3, 31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6504, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $or.i32($i5, $i6);
  // WARNING: %8 = or i32 %6, %7, !dbg !5795, !verifier.code !5778
  call {:cexpr "dev"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6505, 24} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6505, 24} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6505, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $and.i32($i9, $sub.i32(0, 25));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6505, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6505, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6506, 9} true;
  assume {:verifier.code 0} true;
  call $p12 := scsi_tape_get($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6507, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $p2i.ref.i64($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6507, 27} true;
  assume {:verifier.code 0} true;
  $i14 := $eq.i64($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6507, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6508, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0, 6);
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6616, 1} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6512, 24} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6512, 9} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6512, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p17, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6513, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(st_use_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6514, 27} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p12, 628);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6514, 27} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6514, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6514, 34} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6514, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6515, 5} true;
  assume {:verifier.code 0} true;
  call spin_unlock(st_use_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6516, 5} true;
  assume {:verifier.code 0} true;
  call scsi_tape_put($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6517, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6517, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6517, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6518, 17} true;
  assume {:verifier.code 0} true;
  call $p24 := tape_name($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6519, 67} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p12, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6519, 67} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6519, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p26, $p24, .str.163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6521, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6524, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0, 16);
  goto $bb3;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6528, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p12, 628);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6528, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p27, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6529, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(st_use_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6530, 13} true;
  assume {:verifier.code 0} true;
  call $i28 := iminor($p0);
  // WARNING: %37 = call i32 @iminor(%struct.inode* %0), !dbg !5838, !verifier.code !5778
  call {:cexpr "tmp___3"} boogie_si_record_i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6531, 22} true;
  assume {:verifier.code 0} true;
  $i29 := $and.i32($i28, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6531, 30} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i32($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6531, 30} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i1.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6531, 13} true;
  assume {:verifier.code 0} true;
  $i32 := $trunc.i32.i8($i31);
  // WARNING: %41 = trunc i32 %40 to i8, !dbg !5843, !verifier.code !5778
  call {:cexpr "tmp___2"} boogie_si_record_i8($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6532, 8} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p12, 635);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6532, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6533, 8} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p12, 636);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6533, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p34, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6534, 41} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p12, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6534, 41} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6534, 13} true;
  assume {:verifier.code 0} true;
  call $i37 := scsi_autopm_get_device($p36);
  // WARNING: %46 = call i32 @scsi_autopm_get_device(%struct.scsi_device* %45), !dbg !5851, !verifier.code !5778
  call {:cexpr "tmp___4"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6535, 15} true;
  assume {:verifier.code 0} true;
  $i38 := $slt.i32($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6535, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6537, 5} true;
  assume {:verifier.code 0} true;
  $i39, $i40 := $sub.i32(0, 5), 0;
  goto $bb13;
$bb12:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6604, 25} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p12, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6604, 25} true;
  assume {:verifier.code 0} true;
  $p97 := $load.ref($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6604, 3} true;
  assume {:verifier.code 0} true;
  call normalize_buffer($p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6605, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(st_use_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6606, 8} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p12, 628);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6606, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p98, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6607, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(st_use_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6608, 3} true;
  assume {:verifier.code 0} true;
  call scsi_tape_put($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6609, 15} true;
  assume {:verifier.code 0} true;
  $i99 := $ne.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6609, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb37, $bb38;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6542, 52} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p12, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6542, 52} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6542, 13} true;
  assume {:verifier.code 0} true;
  call $i43 := scsi_block_when_processing_errors($p42);
  // WARNING: %53 = call i32 @scsi_block_when_processing_errors(%struct.scsi_device* %52), !dbg !5860, !verifier.code !5778
  call {:cexpr "tmp___5"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6543, 15} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6543, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6545, 5} true;
  assume {:verifier.code 0} true;
  $i39, $i40 := $sub.i32(0, 6), 1;
  goto $bb13;
$bb16:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6549, 33} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p12, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6549, 33} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6549, 58} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p12, 291);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6549, 58} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i8($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6549, 47} true;
  assume {:verifier.code 0} true;
  $i49 := $zext.i8.i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6549, 13} true;
  assume {:verifier.code 0} true;
  call $i50 := enlarge_buffer($p46, 4096, $i49);
  // WARNING: %63 = call i32 @enlarge_buffer(%struct.st_buffer* %59, i32 4096, i32 %62), !dbg !5871, !verifier.code !5778
  call {:cexpr "tmp___7"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6550, 15} true;
  assume {:verifier.code 0} true;
  $i51 := $eq.i32($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6550, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6551, 15} true;
  assume {:verifier.code 0} true;
  call $p52 := tape_name($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6552, 65} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p12, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6552, 65} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6552, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.89, $p54, $p52, .str.164);
  // WARNING: call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.89, i32 0, i32 0), %struct.scsi_device* %68, i8* %66, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.164, i32 0, i32 0)), !dbg !5882, !verifier.code !5778
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6555, 5} true;
  assume {:verifier.code 0} true;
  $i39, $i40 := $sub.i32(0, 75), 1;
  goto $bb13;
$bb19:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6559, 9} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p12, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6559, 9} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6559, 18} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p56, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6559, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p57, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6560, 9} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p12, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6560, 9} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6560, 18} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p59, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6560, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6561, 9} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p12, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6561, 9} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6561, 18} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p62, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6561, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p63, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6562, 28} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p1, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6562, 28} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i32($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6562, 36} true;
  assume {:verifier.code 0} true;
  $i66 := $and.i32($i65, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6562, 42} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i32($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6562, 42} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i1.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6562, 21} true;
  assume {:verifier.code 0} true;
  $i69 := $trunc.i32.i8($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6562, 8} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p12, 626);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6562, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p70, $i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6563, 8} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p12, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6563, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p71, 0);
  // WARNING: store i8 0, i8* %87, align 8, !dbg !5900, !verifier.code !5778
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6571, 7} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6572, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 40} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p12, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 10} true;
  assume {:verifier.code 0} true;
  $p73 := $bitcast.ref.ref($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6568, 9} true;
  assume {:verifier.code 0} true;
  $p74 := $p73;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6568, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p74, 0);
  // WARNING: store i8 0, i8* %91, align 4, !dbg !5909, !verifier.code !5778
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6572, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 40} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p12, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 10} true;
  assume {:verifier.code 0} true;
  $p103 := $bitcast.ref.ref($p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 44} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p103, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6568, 9} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p103, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6568, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p105, 0);
  // WARNING: store i8 0, i8* %139, align 4, !dbg !5909, !verifier.code !5778
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6572, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6576, 27} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p12, 298);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6576, 27} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i8($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6576, 8} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p12, 299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6576, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p77, $i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6577, 8} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p12, 652);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6577, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p78, 0);
  // WARNING: store i32 0, i32* %97, align 4, !dbg !5917, !verifier.code !5778
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6579, 8} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p12, 664);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6579, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6580, 8} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p12, 668);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6580, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p80, 0);
  // WARNING: store i32 0, i32* %99, align 4, !dbg !5923, !verifier.code !5778
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6582, 8} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p12, 680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6582, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p81, 0);
  // WARNING: store i32 0, i32* %100, align 8, !dbg !5927, !verifier.code !5778
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6584, 8} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p12, 676);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6584, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p82, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6585, 8} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p12, 672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6585, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p83, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6586, 12} true;
  assume {:verifier.code 0} true;
  call $i84 := check_tape($p12, $p1);
  // WARNING: %103 = call i32 @check_tape(%struct.scsi_tape* %13, %struct.file* %1), !dbg !5934, !verifier.code !5778
  call {:cexpr "retval"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6587, 14} true;
  assume {:verifier.code 0} true;
  $i85 := $slt.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6587, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6588, 5} true;
  assume {:verifier.code 0} true;
  $i39, $i40 := $i84, 1;
  goto $bb13;
$bb26:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6592, 14} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p1, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6592, 14} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i32($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6592, 22} true;
  assume {:verifier.code 0} true;
  $i88 := $and.i32($i87, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6592, 31} true;
  assume {:verifier.code 0} true;
  $i89 := $eq.i32($i88, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6592, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i89} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6592, 47} true;
  assume {:verifier.code 0} true;
  $i90 := $ne.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6592, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i90} true;
  goto $bb31, $bb32;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6592, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i89 == 1));
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  goto $bb36;
$bb31:
  assume ($i90 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6593, 29} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p12, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6593, 29} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i8($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6593, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i8.i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6593, 35} true;
  assume {:verifier.code 0} true;
  $i94 := $eq.i32($i93, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6593, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb33, $bb34;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6592, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i90 == 1));
  goto $bb30;
$bb33:
  assume ($i94 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6595, 5} true;
  assume {:verifier.code 0} true;
  $i95 := $sub.i32(0, 123);
  goto $bb35;
$bb34:
  assume !(($i94 == 1));
  assume {:verifier.code 0} true;
  $i95 := $sub.i32(0, 5);
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6598, 5} true;
  assume {:verifier.code 0} true;
  $i39, $i40 := $i95, 1;
  goto $bb13;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6602, 3} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  goto $bb3;
$bb37:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6610, 33} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p12, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6610, 33} true;
  assume {:verifier.code 0} true;
  $p101 := $load.ref($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6610, 5} true;
  assume {:verifier.code 0} true;
  call scsi_autopm_put_device($p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6611, 3} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i99 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6614, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i39;
  goto $bb3;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 40} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p12, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 10} true;
  assume {:verifier.code 0} true;
  $p107 := $bitcast.ref.ref($p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 44} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6568, 9} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p107, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6568, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p109, 0);
  // WARNING: store i8 0, i8* %144, align 4, !dbg !5909, !verifier.code !5778
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6572, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 40} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p12, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 10} true;
  assume {:verifier.code 0} true;
  $p111 := $bitcast.ref.ref($p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6567, 44} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p111, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6568, 9} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p111, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6568, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p113, 0);
  // WARNING: store i8 0, i8* %149, align 4, !dbg !5909, !verifier.code !5778
  assume {:verifier.code 0} true;
  goto $bb24;
}
const st_flush: ref;
axiom (st_flush == $sub.ref(0, 376754));
procedure  st_flush($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i1;
  var $p22: ref;
  var $i23: i8;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i1;
  var $i30: i32;
  var $i31: i1;
  var $i32: i1;
  var $i34: i32;
  var $p35: ref;
  var $i36: i8;
  var $i37: i32;
  var $i38: i1;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i1;
  var $i47: i32;
  var $i48: i32;
  var $i49: i1;
  var $p50: ref;
  var $i51: i32;
  var $i52: i1;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $p58: ref;
  var $i59: i32;
  var $p60: ref;
  var $i61: i32;
  var $p62: ref;
  var $i63: i8;
  var $i64: i32;
  var $i65: i1;
  var $p66: ref;
  var $i67: i8;
  var $i68: i32;
  var $i69: i1;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i32;
  var $i74: i1;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $i79: i32;
  var $p80: ref;
  var $i81: i32;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $i85: i8;
  var $i86: i32;
  var $i87: i1;
  var $p88: ref;
  var $p89: ref;
  var $i90: i8;
  var $i91: i32;
  var $i92: i32;
  var $i93: i8;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $i101: i32;
  var $p102: ref;
  var $i103: i64;
  var $i104: i1;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $i108: i32;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $i112: i32;
  var $i113: i1;
  var $p114: ref;
  var $i115: i32;
  var $i116: i1;
  var $p117: ref;
  var $i118: i8;
  var $i119: i32;
  var $i120: i1;
  var $p121: ref;
  var $i122: i8;
  var $i123: i32;
  var $i124: i32;
  var $i125: i1;
  var $p126: ref;
  var $p127: ref;
  var $i128: i8;
  var $i129: i32;
  var $i130: i1;
  var $p131: ref;
  var $p132: ref;
  var $i133: i8;
  var $i134: i32;
  var $i135: i1;
  var $p136: ref;
  var $i137: i8;
  var $i138: i32;
  var $i139: i1;
  var $p140: ref;
  var $i141: i64;
  var $i142: i1;
  var $p143: ref;
  var $i144: i32;
  var $i145: i1;
  var $p146: ref;
  var $i147: i32;
  var $i148: i32;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $i152: i8;
  var $i153: i32;
  var $i154: i1;
  var $i155: i32;
  var $p156: ref;
  var $p158: ref;
  var $p159: ref;
  var $p160: ref;
  var $i161: i1;
  var $i162: i32;
  var $i157: i32;
  var $i163: i32;
  var $i164: i1;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $p168: ref;
  var $i169: i8;
  var $i170: i32;
  var $p172: ref;
  var $i173: i8;
  var $i174: i32;
  var $i175: i1;
  var $p176: ref;
  var $p177: ref;
  var $p178: ref;
  var $i179: i32;
  var $i180: i64;
  var $p181: ref;
  var $p182: ref;
  var $i183: i8;
  var $i184: i32;
  var $i185: i1;
  var $p186: ref;
  var $i187: i8;
  var $i188: i32;
  var $i189: i1;
  var $p190: ref;
  var $i191: i8;
  var $i192: i32;
  var $i193: i1;
  var $i194: i32;
  var $p196: ref;
  var $i197: i8;
  var $i198: i32;
  var $i199: i1;
  var $i200: i32;
  var $i201: i1;
  var $p202: ref;
  var $i203: i32;
  var $i204: i1;
  var $p205: ref;
  var $i206: i32;
  var $i207: i32;
  var $p208: ref;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $i212: i32;
  var $i195: i32;
  var $p214: ref;
  var $i215: i8;
  var $i216: i32;
  var $i217: i1;
  var $i218: i32;
  var $i219: i1;
  var $i221: i32;
  var $p222: ref;
  var $i223: i8;
  var $i224: i32;
  var $i225: i1;
  var $i220: i32;
  var $p226: ref;
  var $i227: i32;
  var $i228: i1;
  var $p229: ref;
  var $i230: i32;
  var $i231: i32;
  var $p232: ref;
  var $p233: ref;
  var $p234: ref;
  var $i235: i32;
  var $i213: i32;
  var $i236: i32;
  var $i171: i32;
  var $i33: i32;
  var $p237: ref;
  var $i238: i8;
  var $i239: i32;
  var $i240: i1;
  var $i241: i32;
  var $i242: i1;
  var $i243: i32;
  var $i244: i32;
  var $i21: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !9230, metadata !5777), !dbg !9231, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6636, 35} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6636, 35} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6636, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6637, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6637, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6637, 68} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p5, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6637, 68} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6637, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6637, 45} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p7, $mul.ref($i10, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6638, 40} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p5, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6638, 10} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6638, 67} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p5, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6638, 67} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6638, 46} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6638, 44} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p13, $mul.ref($i16, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6639, 34} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6639, 9} true;
  assume {:verifier.code 0} true;
  call $i19 := atomic_long_read($p18);
  // WARNING: %20 = call i64 @atomic_long_read(%union.__anonunion____missing_field_name_221* %19), !dbg !5805, !verifier.code !5775
  call {:cexpr "tmp"} boogie_si_record_i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6640, 11} true;
  assume {:verifier.code 0} true;
  $i20 := $sgt.i64($i19, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6640, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6641, 5} true;
  assume {:verifier.code 0} true;
  $i21 := 0;
  goto $bb3;
$bb2:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6809, 1} true;
  assume {:verifier.code 0} true;
  $r := $i21;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 28} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p13, $mul.ref($i16, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 28} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 31} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 60} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p5, 301);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 60} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 40} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 72} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i25 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  $i34 := 0;
  goto $bb17;
$bb8:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6646, 14} true;
  assume {:verifier.code 0} true;
  call $i30 := st_flush_write_buffer($p5);
  // WARNING: %35 = call i32 @st_flush_write_buffer(%struct.scsi_tape* %6), !dbg !5823, !verifier.code !5775
  call {:cexpr "result"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6647, 16} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6647, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb10, $bb11;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6645, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i29 == 1));
  goto $bb7;
$bb10:
  assume ($i31 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6647, 31} true;
  assume {:verifier.code 0} true;
  $i32 := $ne.i32($i30, $sub.i32(0, 28));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6647, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6647, 21} true;
  assume {:verifier.code 0} true;
  assume !(($i31 == 1));
  goto $bb12;
$bb12:
  assume {:verifier.code 0} true;
  goto $bb16;
$bb13:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6648, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $i30;
  goto $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6647, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i32 == 1));
  goto $bb12;
$bb15:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6797, 27} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($p5, 636);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6797, 27} true;
  assume {:verifier.code 0} true;
  $i238 := $load.i8($M.0, $p237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6797, 7} true;
  assume {:verifier.code 0} true;
  $i239 := $zext.i8.i32($i238);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6797, 40} true;
  assume {:verifier.code 0} true;
  $i240 := $ne.i32($i239, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6797, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i240} true;
  goto $bb117, $bb118;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6652, 3} true;
  assume {:verifier.code 0} true;
  $i34 := $i30;
  goto $bb17;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6655, 27} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p5, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6655, 27} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i8($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6655, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6655, 42} true;
  assume {:verifier.code 0} true;
  $i38 := $ne.i32($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6655, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6656, 15} true;
  assume {:verifier.code 0} true;
  call $i39 := switch_partition($p5);
  // WARNING: %49 = call i32 @switch_partition(%struct.scsi_tape* %6), !dbg !5839, !verifier.code !5775
  call {:cexpr "result2"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6657, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $slt.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6657, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb20, $bb21;
$bb19:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb20:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6658, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6658, 21} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6658, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb22:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6659, 19} true;
  assume {:verifier.code 0} true;
  call $p43 := tape_name($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6660, 69} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6660, 69} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6660, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p45, $p43, .str.157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6662, 7} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6665, 18} true;
  assume {:verifier.code 0} true;
  $i46 := $eq.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6665, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6667, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $i39;
  goto $bb27;
$bb26:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  $i47 := $i34;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6670, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $i47;
  goto $bb15;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6674, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6677, 7} true;
  assume {:verifier.code 0} true;
  $i48 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6677, 17} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6677, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6678, 14} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p5, 672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6678, 14} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6678, 27} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6678, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb32, $bb33;
$bb31:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb32:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6679, 17} true;
  assume {:verifier.code 0} true;
  call $p53 := tape_name($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6680, 69} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6680, 69} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6682, 31} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p5, 672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6682, 31} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6682, 50} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p5, 676);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6682, 50} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6682, 64} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p5, 680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6682, 64} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6680, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32(.str.158, $p55, $p53, .str.159, $i57, $i59, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6683, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6686, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 28} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p13, $mul.ref($i16, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 28} true;
  assume {:verifier.code 0} true;
  $i63 := $load.i8($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 7} true;
  assume {:verifier.code 0} true;
  $i64 := $zext.i8.i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 31} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i64, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 60} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p5, 301);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 60} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i8($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 40} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 72} true;
  assume {:verifier.code 0} true;
  $i69 := $eq.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb39, $bb40;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i65 == 1));
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6749, 27} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p5, 636);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6749, 27} true;
  assume {:verifier.code 0} true;
  $i173 := $load.i8($M.0, $p172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6749, 7} true;
  assume {:verifier.code 0} true;
  $i174 := $zext.i8.i32($i173);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6749, 40} true;
  assume {:verifier.code 0} true;
  $i175 := $eq.i32($i174, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6749, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i175} true;
  goto $bb83, $bb84;
$bb39:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6690, 24} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p5, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6690, 24} true;
  assume {:verifier.code 0} true;
  $p71 := $load.ref($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6690, 33} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p71, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6691, 9} true;
  assume {:verifier.code 0} true;
  $i73 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6691, 19} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i32($i73, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6691, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb41, $bb42;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i69 == 1));
  goto $bb38;
$bb41:
  assume ($i74 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6692, 17} true;
  assume {:verifier.code 0} true;
  call $p75 := tape_name($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6693, 67} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6693, 67} true;
  assume {:verifier.code 0} true;
  $p77 := $load.ref($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6694, 71} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p5, 668);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6694, 71} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6694, 87} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p5, 664);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6694, 87} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i32($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6693, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.12, $p77, $p75, .str.160, $i79, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6695, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6698, 5} true;
  assume {:verifier.code 0} true;
  $p82 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6698, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p82, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6699, 5} true;
  assume {:verifier.code 0} true;
  $p83 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6699, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p83, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6700, 29} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p5, 303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6700, 29} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i8($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6700, 9} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6700, 48} true;
  assume {:verifier.code 0} true;
  $i87 := $ne.i32($i86, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6700, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i87 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6701, 7} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6701, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p88, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6702, 5} true;
  assume {:verifier.code 0} true;
  goto $bb46;
$bb45:
  assume !(($i87 == 1));
  assume {:verifier.code 0} true;
  goto $bb46;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6705, 34} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p5, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6705, 34} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i8($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6705, 14} true;
  assume {:verifier.code 0} true;
  $i91 := $zext.i8.i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6705, 41} true;
  assume {:verifier.code 0} true;
  $i92 := $add.i32($i91, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6705, 14} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i32.i8($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6705, 5} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6705, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p94, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6706, 53} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6707, 37} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6707, 37} true;
  assume {:verifier.code 0} true;
  $p97 := $load.ref($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6707, 46} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p97, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6707, 46} true;
  assume {:verifier.code 0} true;
  $p99 := $load.ref($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6707, 62} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p99, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6707, 62} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i32($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6706, 13} true;
  assume {:verifier.code 0} true;
  call $p102 := st_do_scsi($0.ref, $p5, $p95, 0, 3, $i101, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6708, 9} true;
  assume {:verifier.code 0} true;
  $i103 := $p2i.ref.i64($p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6708, 31} true;
  assume {:verifier.code 0} true;
  $i104 := $eq.i64($i103, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6708, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i104} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i104 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6709, 22} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p5, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6709, 22} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6709, 31} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p106, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6709, 31} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i32($M.0, $p107);
  // WARNING: %143 = load i32, i32* %142, align 8, !dbg !5944, !verifier.code !5775
  call {:cexpr "result"} boogie_si_record_i32($i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6710, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $i108;
  goto $bb15;
$bb48:
  assume !(($i104 == 1));
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 15} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p5, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 15} true;
  assume {:verifier.code 0} true;
  $p110 := $load.ref($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 24} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p110, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 24} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i32($M.0, $p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 39} true;
  assume {:verifier.code 0} true;
  $i113 := $eq.i32($i112, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 44} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb50, $bb52;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 44} true;
  assume {:verifier.code 0} true;
  assume ($i113 == 1);
  goto $bb51;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6715, 7} true;
  assume {:verifier.code 0} true;
  call st_release_request($p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6717, 17} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6717, 17} true;
  assume {:verifier.code 0} true;
  $i144 := $load.i32($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6717, 26} true;
  assume {:verifier.code 0} true;
  $i145 := $sge.i32($i144, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6717, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i145} true;
  goto $bb69, $bb70;
$bb52:
  assume !(($i113 == 1));
  $p114 := $add.ref($add.ref($p71, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 61} true;
  assume {:verifier.code 0} true;
  $i115 := $load.i32($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 72} true;
  assume {:verifier.code 0} true;
  $i116 := $ne.i32($i115, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 77} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i116} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i116 == 1);
  $p117 := $add.ref($add.ref($p71, 40), 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 105} true;
  assume {:verifier.code 0} true;
  $i118 := $load.i8($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 80} true;
  assume {:verifier.code 0} true;
  $i119 := $zext.i8.i32($i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 114} true;
  assume {:verifier.code 0} true;
  $i120 := $eq.i32($i119, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 121} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i120} true;
  goto $bb56, $bb57;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 77} true;
  assume {:verifier.code 0} true;
  assume !(($i116 == 1));
  goto $bb55;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6730, 7} true;
  assume {:verifier.code 0} true;
  call st_release_request($p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6732, 17} true;
  assume {:verifier.code 0} true;
  call $p158 := tape_name($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6733, 67} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6733, 67} true;
  assume {:verifier.code 0} true;
  $p160 := $load.ref($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6733, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.4, $p160, $p158, .str.161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6735, 18} true;
  assume {:verifier.code 0} true;
  $i161 := $eq.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6735, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i161} true;
  goto $bb76, $bb77;
$bb56:
  assume ($i120 == 1);
  $p121 := $add.ref($add.ref($p71, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 141} true;
  assume {:verifier.code 0} true;
  $i122 := $load.i8($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 125} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i8.i32($i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 147} true;
  assume {:verifier.code 0} true;
  $i124 := $and.i32($i123, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 153} true;
  assume {:verifier.code 0} true;
  $i125 := $ne.i32($i124, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 159} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb58, $bb59;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 121} true;
  assume {:verifier.code 0} true;
  assume !(($i120 == 1));
  goto $bb55;
$bb58:
  assume ($i125 == 1);
  $p126 := $add.ref($add.ref($p71, 40), 4);
  $p127 := $add.ref($add.ref($add.ref($p71, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 198} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i8($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 163} true;
  assume {:verifier.code 0} true;
  $i129 := $zext.i8.i32($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 208} true;
  assume {:verifier.code 0} true;
  $i130 := $eq.i32($i129, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 214} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i130} true;
  goto $bb60, $bb62;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 159} true;
  assume {:verifier.code 0} true;
  assume !(($i125 == 1));
  goto $bb55;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 214} true;
  assume {:verifier.code 0} true;
  assume ($i130 == 1);
  goto $bb61;
$bb61:
  $p136 := $add.ref($add.ref($p71, 40), 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 299} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i8($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 274} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i8.i32($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 315} true;
  assume {:verifier.code 0} true;
  $i139 := $eq.i32($i138, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 321} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i139} true;
  goto $bb65, $bb66;
$bb62:
  assume !(($i130 == 1));
  $p131 := $add.ref($add.ref($p71, 40), 4);
  $p132 := $add.ref($add.ref($add.ref($p71, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 252} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i8($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 217} true;
  assume {:verifier.code 0} true;
  $i134 := $zext.i8.i32($i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 262} true;
  assume {:verifier.code 0} true;
  $i135 := $eq.i32($i134, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 270} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb63, $bb64;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 270} true;
  assume {:verifier.code 0} true;
  assume ($i135 == 1);
  goto $bb61;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 270} true;
  assume {:verifier.code 0} true;
  assume !(($i135 == 1));
  goto $bb55;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 321} true;
  assume {:verifier.code 0} true;
  assume ($i139 == 1);
  goto $bb51;
$bb66:
  assume !(($i139 == 1));
  $p140 := $add.ref($add.ref($p71, 40), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 334} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i64($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 347} true;
  assume {:verifier.code 0} true;
  $i142 := $eq.i64($i141, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i142} true;
  goto $bb67, $bb68;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 9} true;
  assume {:verifier.code 0} true;
  assume ($i142 == 1);
  goto $bb51;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6714, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i142 == 1));
  goto $bb55;
$bb69:
  assume ($i145 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6718, 32} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6718, 32} true;
  assume {:verifier.code 0} true;
  $i147 := $load.i32($M.0, $p146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6718, 41} true;
  assume {:verifier.code 0} true;
  $i148 := $add.i32($i147, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6718, 15} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6718, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p149, $i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6719, 7} true;
  assume {:verifier.code 0} true;
  goto $bb71;
$bb70:
  assume !(($i145 == 1));
  assume {:verifier.code 0} true;
  goto $bb71;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6722, 13} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6722, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p150, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6723, 31} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p5, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6723, 31} true;
  assume {:verifier.code 0} true;
  $i152 := $load.i8($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6723, 11} true;
  assume {:verifier.code 0} true;
  $i153 := $zext.i8.i32($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6723, 38} true;
  assume {:verifier.code 0} true;
  $i154 := $ne.i32($i153, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6723, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  goto $bb72, $bb73;
$bb72:
  assume ($i154 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6724, 9} true;
  assume {:verifier.code 0} true;
  call $i155 := cross_eof($p5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6725, 7} true;
  assume {:verifier.code 0} true;
  goto $bb74;
$bb73:
  assume !(($i154 == 1));
  assume {:verifier.code 0} true;
  goto $bb74;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6728, 13} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6728, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p156, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6729, 5} true;
  assume {:verifier.code 0} true;
  $i157 := $i34;
  goto $bb75;
$bb75:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6741, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6741, 19} true;
  assume {:verifier.code 0} true;
  $i164 := $ne.i32($i163, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6741, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i164} true;
  goto $bb79, $bb80;
$bb76:
  assume ($i161 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6737, 7} true;
  assume {:verifier.code 0} true;
  $i162 := $sub.i32(0, 5);
  goto $bb78;
$bb77:
  assume !(($i161 == 1));
  assume {:verifier.code 0} true;
  $i162 := $i34;
  goto $bb78;
$bb78:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i157 := $i162;
  goto $bb75;
$bb79:
  assume ($i164 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6742, 17} true;
  assume {:verifier.code 0} true;
  call $p165 := tape_name($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6743, 67} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6743, 67} true;
  assume {:verifier.code 0} true;
  $p167 := $load.ref($M.0, $p166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6744, 71} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6744, 71} true;
  assume {:verifier.code 0} true;
  $i169 := $load.i8($M.0, $p168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6744, 65} true;
  assume {:verifier.code 0} true;
  $i170 := $zext.i8.i32($i169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6743, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p167, $p165, .str.162, $i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6745, 5} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb80:
  assume !(($i164 == 1));
  assume {:verifier.code 0} true;
  goto $bb81;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6748, 3} true;
  assume {:verifier.code 0} true;
  $i171 := $i157;
  goto $bb82;
$bb82:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6689, 75} true;
  assume {:verifier.code 0} true;
  $i33 := $i171;
  goto $bb15;
$bb83:
  assume ($i175 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6750, 42} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p5, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6750, 12} true;
  assume {:verifier.code 0} true;
  $p177 := $bitcast.ref.ref($p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6750, 69} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p5, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6750, 69} true;
  assume {:verifier.code 0} true;
  $i179 := $load.i32($M.0, $p178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6750, 48} true;
  assume {:verifier.code 0} true;
  $i180 := $sext.i32.i64($i179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6750, 46} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p177, $mul.ref($i180, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 29} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($add.ref($p7, $mul.ref($i10, 56)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 29} true;
  assume {:verifier.code 0} true;
  $i183 := $load.i8($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 9} true;
  assume {:verifier.code 0} true;
  $i184 := $zext.i8.i32($i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 34} true;
  assume {:verifier.code 0} true;
  $i185 := $eq.i32($i184, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 40} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i185} true;
  goto $bb85, $bb87;
$bb84:
  assume !(($i175 == 1));
  assume {:verifier.code 0} true;
  $i236 := $i34;
  goto $bb116;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 40} true;
  assume {:verifier.code 0} true;
  assume ($i185 == 1);
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6752, 31} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p5, 286);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6752, 31} true;
  assume {:verifier.code 0} true;
  $i191 := $load.i8($M.0, $p190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6752, 11} true;
  assume {:verifier.code 0} true;
  $i192 := $zext.i8.i32($i191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6752, 39} true;
  assume {:verifier.code 0} true;
  $i193 := $ne.i32($i192, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6752, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i193} true;
  goto $bb90, $bb91;
$bb87:
  assume !(($i185 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 64} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p177, $mul.ref($i180, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 64} true;
  assume {:verifier.code 0} true;
  $i187 := $load.i8($M.0, $p186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 43} true;
  assume {:verifier.code 0} true;
  $i188 := $zext.i8.i32($i187);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 67} true;
  assume {:verifier.code 0} true;
  $i189 := $ne.i32($i188, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i189} true;
  goto $bb88, $bb89;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6751, 9} true;
  assume {:verifier.code 0} true;
  assume ($i189 == 1);
  goto $bb86;
$bb89:
  assume !(($i189 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6772, 30} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6772, 30} true;
  assume {:verifier.code 0} true;
  $i215 := $load.i8($M.0, $p214);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6772, 9} true;
  assume {:verifier.code 0} true;
  $i216 := $zext.i8.i32($i215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6772, 34} true;
  assume {:verifier.code 0} true;
  $i217 := $eq.i32($i216, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6772, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i217} true;
  goto $bb103, $bb104;
$bb90:
  assume ($i193 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6753, 18} true;
  assume {:verifier.code 0} true;
  call $i194 := flush_buffer($p5, 0);
  // WARNING: %255 = call i32 @flush_buffer(%struct.scsi_tape* %6, i32 0), !dbg !6063, !verifier.code !5775
  call {:cexpr "result"} boogie_si_record_i32($i194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6754, 7} true;
  assume {:verifier.code 0} true;
  $i195 := $i194;
  goto $bb92;
$bb91:
  assume !(($i193 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6755, 32} true;
  assume {:verifier.code 0} true;
  $p196 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6755, 32} true;
  assume {:verifier.code 0} true;
  $i197 := $load.i8($M.0, $p196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6755, 11} true;
  assume {:verifier.code 0} true;
  $i198 := $zext.i8.i32($i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6755, 36} true;
  assume {:verifier.code 0} true;
  $i199 := $eq.i32($i198, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6755, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i199} true;
  goto $bb93, $bb94;
$bb92:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6771, 5} true;
  assume {:verifier.code 0} true;
  $i213 := $i195;
  goto $bb102;
$bb93:
  assume ($i199 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6756, 18} true;
  assume {:verifier.code 0} true;
  call $i200 := cross_eof($p5, 0);
  // WARNING: %262 = call i32 @cross_eof(%struct.scsi_tape* %6, i32 0), !dbg !6071, !verifier.code !5775
  call {:cexpr "result"} boogie_si_record_i32($i200);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6757, 20} true;
  assume {:verifier.code 0} true;
  $i201 := $ne.i32($i200, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6757, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i201} true;
  goto $bb95, $bb96;
$bb94:
  assume !(($i199 == 1));
  assume {:verifier.code 0} true;
  $i212 := $i34;
  goto $bb101;
$bb95:
  assume ($i201 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6758, 21} true;
  assume {:verifier.code 0} true;
  $p202 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6758, 21} true;
  assume {:verifier.code 0} true;
  $i203 := $load.i32($M.0, $p202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6758, 30} true;
  assume {:verifier.code 0} true;
  $i204 := $sge.i32($i203, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6758, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i204} true;
  goto $bb97, $bb98;
$bb96:
  assume !(($i201 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6766, 17} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6766, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p211, 0);
  assume {:verifier.code 0} true;
  goto $bb100;
$bb97:
  assume ($i204 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6759, 36} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6759, 36} true;
  assume {:verifier.code 0} true;
  $i206 := $load.i32($M.0, $p205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6759, 45} true;
  assume {:verifier.code 0} true;
  $i207 := $add.i32($i206, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6759, 19} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6759, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p208, $i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6760, 11} true;
  assume {:verifier.code 0} true;
  goto $bb99;
$bb98:
  assume !(($i204 == 1));
  assume {:verifier.code 0} true;
  goto $bb99;
$bb99:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6763, 17} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6763, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p209, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6764, 17} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6764, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p210, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6765, 9} true;
  assume {:verifier.code 0} true;
  goto $bb100;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6768, 7} true;
  assume {:verifier.code 0} true;
  $i212 := $i200;
  goto $bb101;
$bb101:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i195 := $i212;
  goto $bb92;
$bb102:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6793, 3} true;
  assume {:verifier.code 0} true;
  $i236 := $i213;
  goto $bb116;
$bb103:
  assume ($i217 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6773, 16} true;
  assume {:verifier.code 0} true;
  call $i218 := cross_eof($p5, 1);
  // WARNING: %289 = call i32 @cross_eof(%struct.scsi_tape* %6, i32 1), !dbg !6102, !verifier.code !5775
  call {:cexpr "result"} boogie_si_record_i32($i218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6774, 18} true;
  assume {:verifier.code 0} true;
  $i219 := $eq.i32($i218, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6774, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i219} true;
  goto $bb105, $bb106;
$bb104:
  assume !(($i217 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6779, 5} true;
  assume {:verifier.code 0} true;
  $i221 := $i34;
  goto $bb108;
$bb105:
  assume ($i219 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6775, 9} true;
  assume {:verifier.code 0} true;
  $i220 := $i218;
  goto $bb107;
$bb106:
  assume !(($i219 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6777, 9} true;
  assume {:verifier.code 0} true;
  $i221 := $i218;
  goto $bb108;
$bb107:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6783, 17} true;
  assume {:verifier.code 0} true;
  $p226 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6783, 17} true;
  assume {:verifier.code 0} true;
  $i227 := $load.i32($M.0, $p226);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6783, 26} true;
  assume {:verifier.code 0} true;
  $i228 := $sge.i32($i227, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6783, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i228} true;
  goto $bb111, $bb112;
$bb108:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6781, 30} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6781, 30} true;
  assume {:verifier.code 0} true;
  $i223 := $load.i8($M.0, $p222);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6781, 9} true;
  assume {:verifier.code 0} true;
  $i224 := $zext.i8.i32($i223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6781, 34} true;
  assume {:verifier.code 0} true;
  $i225 := $eq.i32($i224, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6781, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i225} true;
  goto $bb109, $bb110;
$bb109:
  assume ($i225 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6781, 41} true;
  assume {:verifier.code 0} true;
  $i220 := $i221;
  goto $bb107;
$bb110:
  assume !(($i225 == 1));
  assume {:verifier.code 0} true;
  $i235 := $i221;
  goto $bb114;
$bb111:
  assume ($i228 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6784, 32} true;
  assume {:verifier.code 0} true;
  $p229 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6784, 32} true;
  assume {:verifier.code 0} true;
  $i230 := $load.i32($M.0, $p229);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6784, 41} true;
  assume {:verifier.code 0} true;
  $i231 := $add.i32($i230, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6784, 15} true;
  assume {:verifier.code 0} true;
  $p232 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6784, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p232, $i231);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6785, 7} true;
  assume {:verifier.code 0} true;
  goto $bb113;
$bb112:
  assume !(($i228 == 1));
  assume {:verifier.code 0} true;
  goto $bb113;
$bb113:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6788, 13} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6788, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p233, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6789, 13} true;
  assume {:verifier.code 0} true;
  $p234 := $add.ref($add.ref($p177, $mul.ref($i180, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6789, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p234, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6790, 5} true;
  assume {:verifier.code 0} true;
  $i235 := $i220;
  goto $bb114;
$bb114:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb115;
$bb115:
  assume {:verifier.code 0} true;
  $i213 := $i235;
  goto $bb102;
$bb116:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i171 := $i236;
  goto $bb82;
$bb117:
  assume ($i240 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6798, 15} true;
  assume {:verifier.code 0} true;
  call $i241 := st_int_ioctl($p5, 6, 1);
  // WARNING: %326 = call i32 @st_int_ioctl(%struct.scsi_tape* %6, i32 6, i64 1), !dbg !6143, !verifier.code !5775
  call {:cexpr "result2"} boogie_si_record_i32($i241);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6799, 16} true;
  assume {:verifier.code 0} true;
  $i242 := $eq.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6799, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i242} true;
  goto $bb119, $bb120;
$bb118:
  assume !(($i240 == 1));
  assume {:verifier.code 0} true;
  $i244 := $i33;
  goto $bb122;
$bb119:
  assume ($i242 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6801, 5} true;
  assume {:verifier.code 0} true;
  $i243 := $i241;
  goto $bb121;
$bb120:
  assume !(($i242 == 1));
  assume {:verifier.code 0} true;
  $i243 := $i33;
  goto $bb121;
$bb121:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6804, 3} true;
  assume {:verifier.code 0} true;
  $i244 := $i243;
  goto $bb122;
$bb122:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6807, 3} true;
  assume {:verifier.code 0} true;
  $i21 := $i244;
  goto $bb3;
}
const st_release: ref;
axiom (st_release == $sub.ref(0, 377786));
procedure  st_release($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i1;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %1, i64 0, metadata !9604, metadata !5777), !dbg !9605, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6817, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6817, 35} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6817, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6818, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 634);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6818, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6818, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6818, 39} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6818, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6819, 5} true;
  assume {:verifier.code 0} true;
  call $i9 := do_door_lock($p4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6820, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6823, 25} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6823, 25} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6823, 3} true;
  assume {:verifier.code 0} true;
  call normalize_buffer($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6824, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(st_use_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6825, 8} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 628);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6825, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6826, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(st_use_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6827, 31} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6827, 31} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6827, 3} true;
  assume {:verifier.code 0} true;
  call scsi_autopm_put_device($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6828, 3} true;
  assume {:verifier.code 0} true;
  call scsi_tape_put($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6829, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const do_door_lock: ref;
axiom (do_door_lock == $sub.ref(0, 378818));
procedure  do_door_lock($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i1;
  var $i12: i32;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $i16: i1;
  var $i17: i32;
  var $i18: i8;
  var $p19: ref;
  var $p20: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !9634, metadata !5777), !dbg !9635, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6025, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6025, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6025, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6026, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6027, 65} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6027, 65} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6028, 58} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6028, 50} true;
  assume {:verifier.code 0} true;
  havoc $p8;
  assume ((($i7 == 1) ==> ($p8 == .str.103)) && (($i7 != 1) ==> ($p8 == .str.104)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6027, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.ref(.str.12, $p6, $p4, .str.102, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6029, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6032, 41} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6032, 41} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6032, 57} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6032, 57} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6032, 49} true;
  assume {:verifier.code 0} true;
  $i13 := $trunc.i32.i8($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6032, 12} true;
  assume {:verifier.code 0} true;
  call $i14 := scsi_set_medium_removal($p10, $i13);
  // WARNING: %18 = call i32 @scsi_set_medium_removal(%struct.scsi_device* %14, i8 signext %17), !dbg !5800, !verifier.code !5780
  call {:cexpr "retval"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6033, 14} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6033, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6034, 32} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6034, 32} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i1.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6034, 24} true;
  assume {:verifier.code 0} true;
  $i18 := $trunc.i32.i8($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6034, 10} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 634);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6034, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p19, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6035, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6036, 10} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 634);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6036, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p20, 3);
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6038, 3} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
}
const scsi_tape_put: ref;
axiom (scsi_tape_put == $sub.ref(0, 379850));
procedure  scsi_tape_put($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5237, 15} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5237, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5238, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(st_ref_mutex, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5239, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 720);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5239, 3} true;
  assume {:verifier.code 0} true;
  call $i4 := kref_put($p3, scsi_tape_release);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5240, 3} true;
  assume {:verifier.code 0} true;
  call scsi_device_put($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5241, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(st_ref_mutex);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5242, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const scsi_device_put: ref;
axiom (scsi_device_put == $sub.ref(0, 380882));
procedure  scsi_device_put($p0: ref);
const scsi_set_medium_removal: ref;
axiom (scsi_set_medium_removal == $sub.ref(0, 381914));
procedure  scsi_set_medium_removal($p0: ref, $i1: i8)
  returns ($r: i32);
const atomic_long_read: ref;
axiom (atomic_long_read == $sub.ref(0, 382946));
procedure  atomic_long_read($p0: ref)
  returns ($r: i64)
{
  var $i1: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4693, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := atomic64_read($p0);
  // WARNING: %2 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %0), !dbg !5784, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4694, 3} true;
  assume {:verifier.code 0} true;
  $r := $i1;
  $exn := false;
  return;
}
const st_flush_write_buffer: ref;
axiom (st_flush_write_buffer == $sub.ref(0, 383978));
procedure  st_flush_write_buffer($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i8;
  var $p26: ref;
  var $i27: i32;
  var $i28: i8;
  var $p29: ref;
  var $i30: i8;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $p39: ref;
  var $i40: i64;
  var $i41: i1;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i32;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $i50: i64;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $i56: i1;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $i62: i1;
  var $p63: ref;
  var $i64: i8;
  var $i65: i32;
  var $i66: i1;
  var $p67: ref;
  var $i68: i8;
  var $i69: i32;
  var $i70: i32;
  var $i71: i1;
  var $p72: ref;
  var $p73: ref;
  var $i74: i8;
  var $i75: i32;
  var $i76: i1;
  var $p77: ref;
  var $p78: ref;
  var $i79: i8;
  var $i80: i32;
  var $i81: i1;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $i87: i64;
  var $i88: i1;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i32;
  var $i95: i1;
  var $p96: ref;
  var $i97: i32;
  var $i98: i32;
  var $p99: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i100: i32;
  var $p106: ref;
  var $i107: i32;
  var $i108: i1;
  var $p109: ref;
  var $i110: i32;
  var $i111: i32;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i105: i32;
  var $i117: i32;
  var $i4: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5838, 12} true;
  assume {:verifier.code 0} true;
  call $i2 := write_behind_check($p0);
  // WARNING: %3 = call i32 @write_behind_check(%struct.scsi_tape* %0), !dbg !5783, !verifier.code !5777
  call {:cexpr "result"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5839, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5839, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5840, 5} true;
  assume {:verifier.code 0} true;
  $i4 := $i2;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5903, 1} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5845, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5845, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5845, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5845, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i7, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5845, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5846, 22} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5846, 22} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5846, 31} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5846, 31} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  // WARNING: %16 = load i32, i32* %15, align 4, !dbg !5799, !verifier.code !5777
  call {:cexpr "transfer"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5847, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5847, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5847, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  $i117 := 0;
  goto $bb40;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5848, 13} true;
  assume {:verifier.code 0} true;
  call $p15 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5849, 67} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5849, 67} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5849, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p17, $p15, .str.105, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5851, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5854, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5854, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p18, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5855, 5} true;
  assume {:verifier.code 0} true;
  $p19 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5855, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p19, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5856, 5} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5856, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p20, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5857, 28} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5857, 28} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i32($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5857, 21} true;
  assume {:verifier.code 0} true;
  $i23 := $sdiv.i32($i12, $i22);
  // WARNING: %30 = sdiv i32 %16, %29, !dbg !5819, !verifier.code !5777
  call {:cexpr "blks"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5858, 36} true;
  assume {:verifier.code 0} true;
  $i24 := $ashr.i32($i23, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5858, 14} true;
  assume {:verifier.code 0} true;
  $i25 := $trunc.i32.i8($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5858, 5} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5858, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5859, 36} true;
  assume {:verifier.code 0} true;
  $i27 := $ashr.i32($i23, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5859, 14} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i32.i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5859, 5} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5859, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5860, 14} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i32.i8($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5860, 5} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5860, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p31, $i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5861, 53} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5862, 40} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5862, 40} true;
  assume {:verifier.code 0} true;
  $p34 := $load.ref($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5862, 49} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p34, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5862, 49} true;
  assume {:verifier.code 0} true;
  $p36 := $load.ref($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5862, 65} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p36, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5862, 65} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5861, 13} true;
  assume {:verifier.code 0} true;
  call $p39 := st_do_scsi($0.ref, $p0, $p32, $i12, 1, $i38, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5863, 9} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5863, 31} true;
  assume {:verifier.code 0} true;
  $i41 := $eq.i64($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5863, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5864, 21} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5864, 21} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5864, 30} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5864, 30} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5864, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i45;
  goto $bb3;
$bb11:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5868, 42} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5868, 12} true;
  assume {:verifier.code 0} true;
  $p47 := $bitcast.ref.ref($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5868, 69} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5868, 69} true;
  assume {:verifier.code 0} true;
  $i49 := $load.i32($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5868, 48} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5868, 46} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p47, $mul.ref($i50, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5869, 15} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5869, 15} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5869, 24} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5869, 24} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5869, 39} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i32($i55, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5869, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5870, 26} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5870, 26} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5870, 35} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p58, 40);
  $p60 := $add.ref($add.ref($p58, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 24} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 35} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i32($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 40} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb15, $bb16;
$bb14:
  assume !(($i56 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5888, 17} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($add.ref($p47, $mul.ref($i50, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5888, 17} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5888, 27} true;
  assume {:verifier.code 0} true;
  $i108 := $sge.i32($i107, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5888, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb37, $bb38;
$bb15:
  assume ($i62 == 1);
  $p63 := $add.ref($add.ref($p58, 40), 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 68} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i8($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 43} true;
  assume {:verifier.code 0} true;
  $i65 := $zext.i8.i32($i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 77} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.i32($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 84} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 40} true;
  assume {:verifier.code 0} true;
  assume !(($i62 == 1));
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5881, 19} true;
  assume {:verifier.code 0} true;
  call $p101 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5882, 69} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5882, 69} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5882, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.4, $p103, $p101, .str.106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5884, 15} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($add.ref($p47, $mul.ref($i50, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5884, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p104, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %125, align 4, !dbg !5924, !verifier.code !5777
  assume {:verifier.code 0} true;
  $i100 := $sub.i32(0, 5);
  goto $bb35;
$bb18:
  assume ($i66 == 1);
  $p67 := $add.ref($add.ref($p58, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 104} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i8($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 88} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i8.i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 110} true;
  assume {:verifier.code 0} true;
  $i70 := $and.i32($i69, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 116} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 122} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb20, $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 84} true;
  assume {:verifier.code 0} true;
  assume !(($i66 == 1));
  goto $bb17;
$bb20:
  assume ($i71 == 1);
  $p72 := $add.ref($add.ref($p58, 40), 4);
  $p73 := $add.ref($add.ref($add.ref($p58, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 161} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i8($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 126} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i8.i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 171} true;
  assume {:verifier.code 0} true;
  $i76 := $eq.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 177} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb22, $bb24;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 122} true;
  assume {:verifier.code 0} true;
  assume !(($i71 == 1));
  goto $bb17;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 177} true;
  assume {:verifier.code 0} true;
  assume ($i76 == 1);
  goto $bb23;
$bb23:
  $p82 := $add.ref($add.ref($p58, 40), 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 262} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 237} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 278} true;
  assume {:verifier.code 0} true;
  $i85 := $eq.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 284} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb27, $bb29;
$bb24:
  assume !(($i76 == 1));
  $p77 := $add.ref($add.ref($p58, 40), 4);
  $p78 := $add.ref($add.ref($add.ref($p58, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 215} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i8($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 180} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i8.i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 225} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i80, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 233} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb25, $bb26;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 233} true;
  assume {:verifier.code 0} true;
  assume ($i81 == 1);
  goto $bb23;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 233} true;
  assume {:verifier.code 0} true;
  assume !(($i81 == 1));
  goto $bb17;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 284} true;
  assume {:verifier.code 0} true;
  assume ($i85 == 1);
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5872, 14} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p0, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5872, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p89, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5873, 15} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5873, 15} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5873, 24} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p91, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5873, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p92, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5874, 19} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($add.ref($p47, $mul.ref($i50, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5874, 19} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i32($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5874, 29} true;
  assume {:verifier.code 0} true;
  $i95 := $sge.i32($i94, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5874, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb32, $bb33;
$bb29:
  assume !(($i85 == 1));
  $p86 := $add.ref($add.ref($p58, 40), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 297} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i64($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 310} true;
  assume {:verifier.code 0} true;
  $i88 := $eq.i64($i87, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb30, $bb31;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 11} true;
  assume {:verifier.code 0} true;
  assume ($i88 == 1);
  goto $bb28;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5871, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i88 == 1));
  goto $bb17;
$bb32:
  assume ($i95 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5875, 35} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($add.ref($p47, $mul.ref($i50, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5875, 35} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i32($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5875, 45} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i32($i97, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5875, 17} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($add.ref($p47, $mul.ref($i50, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5875, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p99, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5876, 9} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume !(($i95 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5880, 7} true;
  assume {:verifier.code 0} true;
  $i100 := $sub.i32(0, 28);
  goto $bb35;
$bb35:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5887, 5} true;
  assume {:verifier.code 0} true;
  $i105 := $i100;
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5896, 5} true;
  assume {:verifier.code 0} true;
  call st_release_request($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5898, 3} true;
  assume {:verifier.code 0} true;
  $i117 := $i105;
  goto $bb40;
$bb37:
  assume ($i108 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5889, 33} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($add.ref($p47, $mul.ref($i50, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5889, 33} true;
  assume {:verifier.code 0} true;
  $i110 := $load.i32($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5889, 43} true;
  assume {:verifier.code 0} true;
  $i111 := $add.i32($i110, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5889, 15} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($add.ref($p47, $mul.ref($i50, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5889, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p112, $i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5890, 7} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i108 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5893, 12} true;
  assume {:verifier.code 0} true;
  $p113 := $add.ref($p0, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5893, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p113, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5894, 13} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5894, 13} true;
  assume {:verifier.code 0} true;
  $p115 := $load.ref($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5894, 22} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p115, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5894, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p116, 0);
  assume {:verifier.code 0} true;
  $i105 := 0;
  goto $bb36;
$bb40:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5901, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i117;
  goto $bb3;
}
const switch_partition: ref;
axiom (switch_partition == $sub.ref(0, 385010));
procedure  switch_partition($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i64;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $p20: ref;
  var $i21: i32;
  var $i22: i32;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9320, 12} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9320, 12} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9320, 30} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9320, 30} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9320, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i2, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9320, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9321, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9334, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9325, 40} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9325, 10} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9325, 67} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9325, 67} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i32($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9325, 46} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9325, 44} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p8, $mul.ref($i11, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9326, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($add.ref($p8, $mul.ref($i11, 16)), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9326, 28} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9326, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9326, 45} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9326, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9327, 11} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($add.ref($p8, $mul.ref($i11, 16)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9327, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9328, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9331, 33} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p8, $mul.ref($i11, 16)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9331, 33} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9331, 58} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9331, 58} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9331, 9} true;
  assume {:verifier.code 0} true;
  call $i22 := set_location($p0, $i19, $i21, 1);
  // WARNING: %28 = call i32 @set_location(%struct.scsi_tape* %0, i32 %25, i32 %27, i32 1), !dbg !5807, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9332, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i22;
  goto $bb3;
}
const llvm.memset.p0i8.i64: ref;
axiom (llvm.memset.p0i8.i64 == $sub.ref(0, 386042));
procedure  llvm.memset.p0i8.i64($p0: ref, $i1: i8, $i2: i64, $i3: i32, $i4: i1);
const st_do_scsi: ref;
axiom (st_do_scsi == $sub.ref(0, 387074));
procedure  st_do_scsi($p0: ref, $p1: ref, $p2: ref, $i3: i32, $i4: i32, $i5: i32, $i6: i32, $i7: i32)
  returns ($r: ref)
{
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $i16: i64;
  var $i17: i1;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $i31: i64;
  var $i32: i1;
  var $p33: ref;
  var $i34: i64;
  var $i35: i1;
  var $p36: ref;
  var $i37: i1;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i16;
  var $i47: i32;
  var $i48: i1;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i16;
  var $i54: i32;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $p65: ref;
  var $i66: i64;
  var $p67: ref;
  var $i68: i32;
  var $i69: i64;
  var $i70: i64;
  var $i71: i64;
  var $i72: i64;
  var $p73: ref;
  var $i74: i32;
  var $i75: i32;
  var $i76: i64;
  var $i77: i64;
  var $i78: i32;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i32;
  var $i96: i1;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $i103: i1;
  var $p104: ref;
  var $i105: i32;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p30: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !9905, metadata !5777), !dbg !9906, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !9907, metadata !5777), !dbg !9908, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !9909, metadata !5777), !dbg !9910, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !9911, metadata !5777), !dbg !9912, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !9913, metadata !5777), !dbg !9914, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5645, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5645, 19} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5645, 28} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p9, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 15} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 45} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 45} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 54} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 54} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 23} true;
  assume {:verifier.code 0} true;
  $i16 := $p2i.ref.i64($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 65} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i64($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 20} true;
  assume {:verifier.code 0} true;
  assume !(($i11 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb10;
$bb4:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5647, 11} true;
  assume {:verifier.code 0} true;
  call $p18 := tape_name($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5648, 65} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5648, 65} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5648, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.4, $p20, $p18, .str.143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5650, 15} true;
  assume {:verifier.code 0} true;
  call $p21 := get_current();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5651, 15} true;
  assume {:verifier.code 0} true;
  call $i22 := signal_pending($p21);
  // WARNING: %25 = call i32 @signal_pending(%struct.task_struct* %24), !dbg !5819, !verifier.code !5780
  call {:cexpr "tmp___1"} boogie_si_record_i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5652, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5652, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5646, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i17 == 1));
  goto $bb3;
$bb6:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5653, 13} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5653, 13} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5653, 22} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5653, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p26, $sub.i32(0, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5654, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i23 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5655, 13} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5655, 13} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5655, 22} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5655, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p29, $sub.i32(0, 16));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5657, 5} true;
  assume {:verifier.code 0} true;
  $p30 := $0.ref;
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5707, 1} true;
  assume {:verifier.code 0} true;
  $r := $p30;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5661, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5661, 29} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i64($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5661, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5662, 13} true;
  assume {:verifier.code 0} true;
  call $p33 := st_allocate_request($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5663, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5663, 31} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i64($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5663, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  $p36 := $p0;
  goto $bb16;
$bb13:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5664, 7} true;
  assume {:verifier.code 0} true;
  $p30 := $0.ref;
  goto $bb9;
$bb14:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5668, 3} true;
  assume {:verifier.code 0} true;
  $p36 := $p33;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5671, 15} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5671, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5672, 11} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5672, 11} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5672, 20} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p39, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5672, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p40, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5673, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5676, 20} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p1, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5677, 3} true;
  assume {:verifier.code 0} true;
  call init_completion($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5678, 10} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p36, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5678, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p42, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5679, 28} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5679, 28} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5679, 37} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5679, 37} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i16($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5679, 7} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i16.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5679, 44} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i32($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5679, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i48 == 1);
  $p49 := $add.ref($add.ref($p9, 104), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5680, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p49, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5681, 37} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5681, 37} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5681, 46} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p51, 146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5681, 46} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i16($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5681, 25} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i16.i32($i53);
  $p55 := $add.ref($add.ref($p9, 104), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5681, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p55, $i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5682, 26} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5682, 26} true;
  assume {:verifier.code 0} true;
  $p57 := $load.ref($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5682, 35} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p57, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5682, 35} true;
  assume {:verifier.code 0} true;
  $p59 := $load.ref($M.0, $p58);
  $p60 := $add.ref($p9, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5682, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p60, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5683, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i48 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5684, 31} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5684, 31} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5684, 40} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p62, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5684, 40} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  $p65 := $add.ref($add.ref($p9, 104), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5684, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p65, $i64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 34} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i32.i64($i3);
  $p67 := $add.ref($add.ref($p9, 104), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 76} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 66} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i32.i64($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 66} true;
  assume {:verifier.code 0} true;
  $i70 := $shl.i64(4096, $i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 56} true;
  assume {:verifier.code 0} true;
  $i71 := $add.i64($i66, $i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 89} true;
  assume {:verifier.code 0} true;
  $i72 := $sub.i64($i71, 1);
  $p73 := $add.ref($add.ref($p9, 104), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 107} true;
  assume {:verifier.code 0} true;
  $i74 := $load.i32($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 118} true;
  assume {:verifier.code 0} true;
  $i75 := $add.i32($i74, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 96} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i32.i64($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 96} true;
  assume {:verifier.code 0} true;
  $i77 := $lshr.i64($i72, $i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 25} true;
  assume {:verifier.code 0} true;
  $i78 := $trunc.i64.i32($i77);
  $p79 := $add.ref($add.ref($p9, 104), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5685, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p79, $i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5686, 26} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5686, 26} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5686, 35} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p81, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5686, 35} true;
  assume {:verifier.code 0} true;
  $p83 := $load.ref($M.0, $p82);
  $p84 := $add.ref($p9, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5686, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p84, $p83);
  $p85 := $add.ref($add.ref($p9, 104), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5687, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p85, 0);
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5689, 28} true;
  assume {:verifier.code 0} true;
  $p86 := $p36;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5689, 3} true;
  assume {:verifier.code 0} true;
  $p87 := $bitcast.ref.ref($p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5689, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p87, $p2, 16, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5690, 9} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5690, 9} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5690, 18} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p89, 40);
  $p91 := $add.ref($add.ref($p89, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5690, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p91, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5691, 9} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5691, 9} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5691, 18} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p93, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5691, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p94, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5692, 9} true;
  assume {:verifier.code 0} true;
  call $i95 := st_scsi_execute($p36, $p2, $i4, $0.ref, $i3, $i5, $i6);
  // WARNING: %113 = call i32 @st_scsi_execute(%struct.st_request* %.01, i8* %2, i32 %4, i8* null, i32 %3, i32 %5, i32 %6), !dbg !5904, !verifier.code !5780
  call {:cexpr "ret"} boogie_si_record_i32($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5694, 11} true;
  assume {:verifier.code 0} true;
  $i96 := $ne.i32($i95, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5694, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5695, 11} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5695, 11} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5695, 20} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p98, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5695, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p99, $sub.i32(0, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5696, 11} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5696, 11} true;
  assume {:verifier.code 0} true;
  $p101 := $load.ref($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5696, 20} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p101, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5696, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p102, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5697, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb24:
  assume !(($i96 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5698, 15} true;
  assume {:verifier.code 0} true;
  $i103 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5698, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb26, $bb27;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5705, 3} true;
  assume {:verifier.code 0} true;
  $p30 := $p36;
  goto $bb9;
$bb26:
  assume ($i103 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5699, 5} true;
  assume {:verifier.code 0} true;
  call wait_for_completion($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5700, 12} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p36, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5700, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p104, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5701, 37} true;
  assume {:verifier.code 0} true;
  call $i105 := st_chk_result($p1, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5701, 11} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p1, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5701, 11} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5701, 20} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5701, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p108, $i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5702, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i103 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  goto $bb25;
}
const st_release_request: ref;
axiom (st_release_request == $sub.ref(0, 388106));
procedure  st_release_request($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5481, 9} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5481, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5482, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const cross_eof: ref;
axiom (cross_eof == $sub.ref(0, 389138));
procedure  cross_eof($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i8;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i8;
  var $p14: ref;
  var $p15: ref;
  var $i16: i8;
  var $p17: ref;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $p33: ref;
  var $i34: i64;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i32;
  var $i46: i1;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $i50: i1;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $i40: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !10064, metadata !5777), !dbg !10065, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5787, 3} true;
  assume {:verifier.code 0} true;
  $p3 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5787, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p3, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5788, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5788, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5789, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5789, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5790, 5} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5790, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5791, 14} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5791, 14} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5791, 5} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p2, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5791, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5792, 5} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5792, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5793, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5794, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5794, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p11, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5795, 14} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5795, 14} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5795, 5} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p2, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5795, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p14, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5796, 14} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5796, 14} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5796, 5} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p2, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5796, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p17, $i16);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5798, 3} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p2, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5798, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5799, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5799, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $ne.i32($i19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5799, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5800, 11} true;
  assume {:verifier.code 0} true;
  call $p21 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5801, 65} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5801, 65} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5802, 64} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5802, 56} true;
  assume {:verifier.code 0} true;
  havoc $p25;
  assume ((($i24 == 1) ==> ($p25 == .str.108)) && (($i24 != 1) ==> ($p25 == .str.109)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5801, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.ref(.str.12, $p23, $p21, .str.107, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5803, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5806, 51} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5807, 35} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5807, 35} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5807, 44} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5807, 44} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5807, 60} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p30, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5807, 60} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5806, 11} true;
  assume {:verifier.code 0} true;
  call $p33 := st_do_scsi($0.ref, $p0, $p26, 0, 3, $i32, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5808, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5808, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i64($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5808, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5809, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5809, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5809, 28} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p37, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5809, 28} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5809, 5} true;
  assume {:verifier.code 0} true;
  $i40 := $i39;
  goto $bb9;
$bb8:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5824, 1} true;
  assume {:verifier.code 0} true;
  $r := $i40;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5813, 3} true;
  assume {:verifier.code 0} true;
  call st_release_request($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5815, 13} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5815, 13} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5815, 22} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p42, 40);
  $p44 := $add.ref($p42, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5815, 30} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5815, 46} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i32($i45, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5815, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5816, 15} true;
  assume {:verifier.code 0} true;
  call $p47 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5817, 65} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5817, 65} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5818, 71} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5818, 63} true;
  assume {:verifier.code 0} true;
  havoc $p51;
  assume ((($i50 == 1) ==> ($p51 == .str.108)) && (($i50 != 1) ==> ($p51 == .str.109)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5817, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.ref(.str.4, $p49, $p47, .str.110, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5819, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5822, 17} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5822, 17} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5822, 26} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5822, 26} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5822, 3} true;
  assume {:verifier.code 0} true;
  $i40 := $i55;
  goto $bb9;
}
const flush_buffer: ref;
axiom (flush_buffer == $sub.ref(0, 390170));
procedure  flush_buffer($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i1;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i64;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i32;
  var $i20: i1;
  var $i21: i32;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i33: i32;
  var $p34: ref;
  var $i35: i32;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i32;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $i44: i32;
  var $p45: ref;
  var $i46: i32;
  var $i47: i32;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i1;
  var $p56: ref;
  var $i57: i8;
  var $i58: i32;
  var $i59: i1;
  var $i60: i32;
  var $i61: i1;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i1;
  var $p66: ref;
  var $i67: i32;
  var $i68: i32;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $i72: i1;
  var $i73: i1;
  var $i74: i64;
  var $i75: i32;
  var $i76: i32;
  var $p78: ref;
  var $i79: i8;
  var $i80: i32;
  var $i81: i1;
  var $p82: ref;
  var $i83: i32;
  var $i84: i1;
  var $p85: ref;
  var $i86: i32;
  var $i87: i32;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i77: i32;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !10147, metadata !5777), !dbg !10148, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5914, 27} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 301);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5914, 27} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5914, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5914, 39} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5914, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5915, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 5);
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5975, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5919, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5919, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5919, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5919, 33} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5919, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5920, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5924, 40} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5924, 10} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5924, 67} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5924, 67} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5924, 46} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5924, 44} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p12, $mul.ref($i15, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5925, 28} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p12, $mul.ref($i15, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5925, 28} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5925, 7} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5925, 31} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5925, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5926, 11} true;
  assume {:verifier.code 0} true;
  call $i21 := st_flush_write_buffer($p0);
  // WARNING: %28 = call i32 @st_flush_write_buffer(%struct.scsi_tape* %0), !dbg !5810, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5927, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $i21;
  goto $bb3;
$bb9:
  assume !(($i20 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5931, 12} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5931, 12} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5931, 23} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5931, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5932, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb12:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 22} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 22} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 31} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 31} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i32($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 52} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 52} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 61} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p30, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 61} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 44} true;
  assume {:verifier.code 0} true;
  $i33 := $add.i32($i28, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 82} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 82} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i32($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 75} true;
  assume {:verifier.code 0} true;
  $i36 := $sdiv.i32($i33, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 103} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 103} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 112} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 112} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 132} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 132} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i32($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 125} true;
  assume {:verifier.code 0} true;
  $i43 := $add.i32($i40, $i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 144} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i32($i43, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 157} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 157} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 150} true;
  assume {:verifier.code 0} true;
  $i47 := $sdiv.i32($i44, $i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5936, 93} true;
  assume {:verifier.code 0} true;
  $i48 := $sub.i32($i36, $i47);
  // WARNING: %60 = sub nsw i32 %48, %59, !dbg !5835, !verifier.code !5780
  call {:cexpr "backspace"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5937, 9} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5937, 9} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5937, 18} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p50, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5937, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5938, 9} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5938, 9} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5938, 18} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p53, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5938, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p54, 0);
  // WARNING: store i32 0, i32* %66, align 8, !dbg !5843, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5940, 17} true;
  assume {:verifier.code 0} true;
  $i55 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5940, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i55 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5941, 30} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5941, 30} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i8($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5941, 9} true;
  assume {:verifier.code 0} true;
  $i58 := $zext.i8.i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5941, 34} true;
  assume {:verifier.code 0} true;
  $i59 := $eq.i32($i58, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5941, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i55 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5962, 28} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5962, 28} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i8($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5962, 7} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i8.i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5962, 32} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i80, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5962, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb32, $bb33;
$bb16:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5942, 16} true;
  assume {:verifier.code 0} true;
  call $i60 := cross_eof($p0, 0);
  // WARNING: %74 = call i32 @cross_eof(%struct.scsi_tape* %0, i32 0), !dbg !5855, !verifier.code !5780
  call {:cexpr "result"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5943, 18} true;
  assume {:verifier.code 0} true;
  $i61 := $eq.i32($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5943, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb18, $bb19;
$bb17:
  assume !(($i59 == 1));
  assume {:verifier.code 0} true;
  $i71 := 0;
  goto $bb24;
$bb18:
  assume ($i61 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5944, 15} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5944, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p62, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5945, 7} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i61 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5946, 19} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5946, 19} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5946, 28} true;
  assume {:verifier.code 0} true;
  $i65 := $sge.i32($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5946, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb21, $bb22;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5953, 5} true;
  assume {:verifier.code 0} true;
  $i71 := $i60;
  goto $bb24;
$bb21:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5947, 34} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5947, 34} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5947, 43} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i67, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5947, 17} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5947, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5948, 9} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i65 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5951, 15} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5951, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p70, 0);
  assume {:verifier.code 0} true;
  goto $bb20;
$bb24:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5956, 16} true;
  assume {:verifier.code 0} true;
  $i72 := $eq.i32($i71, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5956, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i72} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5956, 34} true;
  assume {:verifier.code 0} true;
  $i73 := $sgt.i32($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5956, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb28, $bb29;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5956, 21} true;
  assume {:verifier.code 0} true;
  assume !(($i72 == 1));
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  $i76 := $i71;
  goto $bb30;
$bb28:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5957, 38} true;
  assume {:verifier.code 0} true;
  $i74 := $sext.i32.i64($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5957, 16} true;
  assume {:verifier.code 0} true;
  call $i75 := st_int_ioctl($p0, 4, $i74);
  // WARNING: %98 = call i32 @st_int_ioctl(%struct.scsi_tape* %0, i32 4, i64 %97), !dbg !5886, !verifier.code !5780
  call {:cexpr "result"} boogie_si_record_i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5958, 5} true;
  assume {:verifier.code 0} true;
  $i76 := $i75;
  goto $bb30;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5956, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i73 == 1));
  goto $bb27;
$bb30:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5961, 3} true;
  assume {:verifier.code 0} true;
  $i77 := $i76;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5973, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i77;
  goto $bb3;
$bb32:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5963, 15} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5963, 15} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i32($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5963, 24} true;
  assume {:verifier.code 0} true;
  $i84 := $sge.i32($i83, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5963, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb34, $bb35;
$bb33:
  assume !(($i81 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb34:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5964, 30} true;
  assume {:verifier.code 0} true;
  $p85 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5964, 30} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i32($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5964, 39} true;
  assume {:verifier.code 0} true;
  $i87 := $add.i32($i86, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5964, 13} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5964, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p88, $i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5965, 5} true;
  assume {:verifier.code 0} true;
  goto $bb36;
$bb35:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5968, 11} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5968, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p89, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5969, 11} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($add.ref($p12, $mul.ref($i15, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5969, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p90, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5970, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:verifier.code 0} true;
  $i77 := 0;
  goto $bb31;
}
const st_int_ioctl: ref;
axiom (st_int_ioctl == $sub.ref(0, 391202));
procedure  st_int_ioctl($p0: ref, $i1: i32, $i2: i64)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i16;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $i11: i1;
  var $i12: i32;
  var $i13: i64;
  var $i14: i64;
  var $i15: i1;
  var $i16: i1;
  var $i17: i32;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $i25: i8;
  var $i26: i32;
  var $i27: i1;
  var $p29: ref;
  var $i30: i32;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $i34: i32;
  var $i35: i64;
  var $p36: ref;
  var $p37: ref;
  var $i38: i32;
  var $p39: ref;
  var $i40: i32;
  var $p41: ref;
  var $i42: i8;
  var $i43: i32;
  var $p44: ref;
  var $i45: i1;
  var $i46: i1;
  var $i47: i1;
  var $i48: i1;
  var $i49: i1;
  var $i50: i1;
  var $i51: i1;
  var $i52: i1;
  var $i53: i1;
  var $i54: i1;
  var $i55: i1;
  var $i56: i1;
  var $i57: i1;
  var $i58: i1;
  var $i59: i1;
  var $i60: i1;
  var $i61: i1;
  var $i62: i1;
  var $i63: i1;
  var $i64: i1;
  var $i65: i1;
  var $i66: i1;
  var $i67: i1;
  var $i68: i1;
  var $i69: i1;
  var $i71: i1;
  var $i72: i32;
  var $p73: ref;
  var $p74: ref;
  var $i75: i64;
  var $i76: i8;
  var $p77: ref;
  var $i78: i64;
  var $i79: i8;
  var $p80: ref;
  var $i81: i8;
  var $p82: ref;
  var $p83: ref;
  var $i84: i1;
  var $i85: i32;
  var $i86: i32;
  var $i87: i32;
  var $i88: i1;
  var $i89: i32;
  var $i90: i32;
  var $i70: i32;
  var $p98: ref;
  var $p99: ref;
  var $i100: i64;
  var $i101: i64;
  var $i102: i8;
  var $p103: ref;
  var $i104: i64;
  var $i105: i8;
  var $p106: ref;
  var $i107: i8;
  var $p108: ref;
  var $p109: ref;
  var $i110: i1;
  var $i111: i32;
  var $i112: i32;
  var $i113: i32;
  var $i114: i1;
  var $i115: i32;
  var $i116: i32;
  var $p117: ref;
  var $p118: ref;
  var $i119: i64;
  var $i120: i8;
  var $p121: ref;
  var $i122: i64;
  var $i123: i8;
  var $p124: ref;
  var $i125: i8;
  var $p126: ref;
  var $p127: ref;
  var $i128: i1;
  var $i129: i32;
  var $i130: i32;
  var $i131: i32;
  var $i132: i1;
  var $i133: i32;
  var $i134: i32;
  var $p135: ref;
  var $p136: ref;
  var $i137: i64;
  var $i138: i64;
  var $i139: i8;
  var $p140: ref;
  var $i141: i64;
  var $i142: i8;
  var $p143: ref;
  var $i144: i8;
  var $p145: ref;
  var $p146: ref;
  var $i147: i1;
  var $i148: i32;
  var $i149: i32;
  var $i150: i32;
  var $i151: i1;
  var $i152: i32;
  var $i153: i32;
  var $p154: ref;
  var $p155: ref;
  var $i156: i64;
  var $i157: i8;
  var $p158: ref;
  var $i159: i64;
  var $i160: i8;
  var $p161: ref;
  var $i162: i8;
  var $p163: ref;
  var $p164: ref;
  var $i165: i1;
  var $i166: i32;
  var $i167: i32;
  var $i168: i32;
  var $p169: ref;
  var $p170: ref;
  var $i171: i64;
  var $i172: i64;
  var $i173: i8;
  var $p174: ref;
  var $i175: i64;
  var $i176: i8;
  var $p177: ref;
  var $i178: i8;
  var $p179: ref;
  var $p180: ref;
  var $i181: i1;
  var $i182: i32;
  var $i183: i32;
  var $i184: i32;
  var $p185: ref;
  var $i186: i8;
  var $i187: i32;
  var $i188: i1;
  var $p189: ref;
  var $i190: i1;
  var $p191: ref;
  var $i192: i1;
  var $i193: i1;
  var $p194: ref;
  var $i195: i8;
  var $i196: i32;
  var $i197: i1;
  var $p198: ref;
  var $i199: i8;
  var $i200: i32;
  var $i201: i32;
  var $i202: i8;
  var $p203: ref;
  var $i204: i64;
  var $i205: i8;
  var $p206: ref;
  var $i207: i64;
  var $i208: i8;
  var $p209: ref;
  var $i210: i8;
  var $p211: ref;
  var $p212: ref;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $i217: i32;
  var $i218: i32;
  var $i219: i1;
  var $i220: i1;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $i225: i8;
  var $i226: i32;
  var $i227: i32;
  var $p228: ref;
  var $i229: i8;
  var $i230: i32;
  var $i231: i32;
  var $i232: i32;
  var $p233: ref;
  var $i234: i8;
  var $i235: i32;
  var $i236: i32;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $p240: ref;
  var $i241: i8;
  var $i242: i32;
  var $i243: i32;
  var $p244: ref;
  var $i245: i8;
  var $i246: i32;
  var $i247: i32;
  var $i248: i32;
  var $p249: ref;
  var $i250: i8;
  var $i251: i32;
  var $i252: i32;
  var $i253: i1;
  var $i254: i32;
  var $i255: i32;
  var $i256: i32;
  var $i257: i1;
  var $i258: i32;
  var $p259: ref;
  var $p260: ref;
  var $i261: i8;
  var $i262: i32;
  var $i263: i1;
  var $p264: ref;
  var $p265: ref;
  var $p266: ref;
  var $p267: ref;
  var $p268: ref;
  var $p269: ref;
  var $i270: i32;
  var $i271: i32;
  var $i272: i32;
  var $i273: i1;
  var $p274: ref;
  var $p275: ref;
  var $p276: ref;
  var $i277: i32;
  var $i278: i1;
  var $p279: ref;
  var $p280: ref;
  var $p281: ref;
  var $p282: ref;
  var $p283: ref;
  var $i284: i8;
  var $i285: i32;
  var $i286: i1;
  var $p287: ref;
  var $p288: ref;
  var $p289: ref;
  var $p290: ref;
  var $p291: ref;
  var $p292: ref;
  var $i293: i32;
  var $i294: i32;
  var $p295: ref;
  var $i296: i32;
  var $i297: i1;
  var $p298: ref;
  var $p299: ref;
  var $p300: ref;
  var $p301: ref;
  var $i302: i8;
  var $i303: i32;
  var $i304: i1;
  var $i305: i32;
  var $p306: ref;
  var $i307: i32;
  var $p308: ref;
  var $i309: i8;
  var $i310: i32;
  var $i311: i1;
  var $i312: i32;
  var $p313: ref;
  var $p314: ref;
  var $i315: i32;
  var $i316: i1;
  var $p317: ref;
  var $p318: ref;
  var $p319: ref;
  var $p320: ref;
  var $i321: i8;
  var $i322: i32;
  var $i323: i1;
  var $p324: ref;
  var $i325: i1;
  var $i326: i32;
  var $i327: i8;
  var $p328: ref;
  var $p329: ref;
  var $i330: i8;
  var $i331: i32;
  var $i332: i1;
  var $p333: ref;
  var $i334: i8;
  var $i335: i32;
  var $i336: i32;
  var $i337: i8;
  var $p338: ref;
  var $p339: ref;
  var $p340: ref;
  var $p341: ref;
  var $p342: ref;
  var $p343: ref;
  var $i344: i32;
  var $p346: ref;
  var $i347: i32;
  var $i348: i32;
  var $i345: i32;
  var $i349: i32;
  var $i350: i1;
  var $p351: ref;
  var $p352: ref;
  var $p353: ref;
  var $p354: ref;
  var $i355: i8;
  var $i356: i32;
  var $i357: i1;
  var $p358: ref;
  var $p359: ref;
  var $p360: ref;
  var $i361: i32;
  var $i362: i1;
  var $i363: i1;
  var $i364: i1;
  var $i365: i64;
  var $i366: i1;
  var $p367: ref;
  var $i368: i32;
  var $i369: i1;
  var $i370: i64;
  var $p371: ref;
  var $i372: i32;
  var $i373: i64;
  var $i374: i1;
  var $i375: i64;
  var $p376: ref;
  var $i377: i32;
  var $i378: i64;
  var $i379: i1;
  var $p380: ref;
  var $p381: ref;
  var $p382: ref;
  var $p383: ref;
  var $p384: ref;
  var $i385: i8;
  var $i386: i32;
  var $i387: i32;
  var $i388: i1;
  var $p389: ref;
  var $p390: ref;
  var $p391: ref;
  var $p392: ref;
  var $p393: ref;
  var $p394: ref;
  var $i395: i1;
  var $i396: i8;
  var $i397: i32;
  var $i398: i32;
  var $i399: i32;
  var $i400: i8;
  var $p401: ref;
  var $p402: ref;
  var $p403: ref;
  var $p404: ref;
  var $p405: ref;
  var $p406: ref;
  var $i407: i8;
  var $i408: i32;
  var $i409: i32;
  var $i410: i8;
  var $p411: ref;
  var $p412: ref;
  var $p413: ref;
  var $p414: ref;
  var $p415: ref;
  var $p416: ref;
  var $p417: ref;
  var $p418: ref;
  var $p419: ref;
  var $p420: ref;
  var $i421: i1;
  var $i422: i8;
  var $p423: ref;
  var $p424: ref;
  var $p425: ref;
  var $p426: ref;
  var $p427: ref;
  var $p428: ref;
  var $i429: i1;
  var $i430: i64;
  var $i431: i8;
  var $p432: ref;
  var $p433: ref;
  var $p434: ref;
  var $p435: ref;
  var $p436: ref;
  var $p437: ref;
  var $i438: i8;
  var $p439: ref;
  var $p440: ref;
  var $p441: ref;
  var $p442: ref;
  var $p443: ref;
  var $i444: i1;
  var $i445: i1;
  var $i446: i64;
  var $i447: i1;
  var $p448: ref;
  var $p450: ref;
  var $i451: i32;
  var $i452: i64;
  var $i449: i64;
  var $i453: i64;
  var $i454: i8;
  var $p455: ref;
  var $p456: ref;
  var $p457: ref;
  var $p458: ref;
  var $p459: ref;
  var $i460: i64;
  var $i461: i8;
  var $p462: ref;
  var $p463: ref;
  var $p464: ref;
  var $p465: ref;
  var $p466: ref;
  var $i467: i8;
  var $p468: ref;
  var $p469: ref;
  var $p470: ref;
  var $p471: ref;
  var $p472: ref;
  var $p473: ref;
  var $p474: ref;
  var $p475: ref;
  var $p476: ref;
  var $p477: ref;
  var $i478: i32;
  var $i479: i32;
  var $i480: i1;
  var $i481: i1;
  var $i482: i1;
  var $p483: ref;
  var $p484: ref;
  var $p485: ref;
  var $p486: ref;
  var $p487: ref;
  var $p488: ref;
  var $p489: ref;
  var $p490: ref;
  var $i491: i8;
  var $i492: i32;
  var $i493: i32;
  var $p494: ref;
  var $p495: ref;
  var $p496: ref;
  var $p497: ref;
  var $p498: ref;
  var $i499: i8;
  var $i500: i32;
  var $i501: i32;
  var $i502: i32;
  var $p503: ref;
  var $p504: ref;
  var $p505: ref;
  var $p506: ref;
  var $p507: ref;
  var $i508: i8;
  var $i509: i32;
  var $i510: i32;
  var $i511: i1;
  var $i512: i1;
  var $p513: ref;
  var $p514: ref;
  var $p515: ref;
  var $p516: ref;
  var $p517: ref;
  var $p518: ref;
  var $p519: ref;
  var $p520: ref;
  var $i521: i8;
  var $i522: i32;
  var $i523: i1;
  var $p524: ref;
  var $p525: ref;
  var $p526: ref;
  var $p527: ref;
  var $p528: ref;
  var $p529: ref;
  var $p530: ref;
  var $p531: ref;
  var $i532: i8;
  var $i533: i32;
  var $i534: i32;
  var $i535: i32;
  var $i91: i32;
  var $i92: i32;
  var $i93: i32;
  var $i94: i32;
  var $i95: i32;
  var $i96: i32;
  var $i97: i32;
  var $p536: ref;
  var $p537: ref;
  var $i538: i64;
  var $i539: i1;
  var $p540: ref;
  var $p541: ref;
  var $p542: ref;
  var $i543: i32;
  var $p544: ref;
  var $p545: ref;
  var $p546: ref;
  var $i547: i32;
  var $i548: i1;
  var $p549: ref;
  var $p550: ref;
  var $i551: i8;
  var $p552: ref;
  var $i553: i1;
  var $i554: i32;
  var $i556: i1;
  var $i557: i32;
  var $i558: i32;
  var $i555: i32;
  var $i559: i1;
  var $i560: i1;
  var $i561: i32;
  var $i562: i32;
  var $p563: ref;
  var $p564: ref;
  var $i565: i32;
  var $i566: i1;
  var $p567: ref;
  var $p568: ref;
  var $p569: ref;
  var $i570: i32;
  var $p571: ref;
  var $i572: i32;
  var $i573: i32;
  var $p574: ref;
  var $p575: ref;
  var $p576: ref;
  var $p577: ref;
  var $p578: ref;
  var $p579: ref;
  var $p580: ref;
  var $p581: ref;
  var $p582: ref;
  var $i583: i1;
  var $i584: i64;
  var $i585: i8;
  var $p586: ref;
  var $i587: i1;
  var $i588: i8;
  var $i589: i32;
  var $i590: i32;
  var $i591: i8;
  var $p592: ref;
  var $i593: i1;
  var $i594: i8;
  var $p595: ref;
  var $i596: i1;
  var $p597: ref;
  var $i598: i1;
  var $p599: ref;
  var $i600: i1;
  var $p601: ref;
  var $i602: i1;
  var $i603: i1;
  var $p604: ref;
  var $p606: ref;
  var $p607: ref;
  var $p608: ref;
  var $p609: ref;
  var $i610: i8;
  var $i611: i32;
  var $i612: i32;
  var $i613: i1;
  var $i614: i1;
  var $i615: i1;
  var $i616: i1;
  var $i617: i1;
  var $p618: ref;
  var $p619: ref;
  var $p620: ref;
  var $i621: i8;
  var $i622: i32;
  var $i623: i1;
  var $p624: ref;
  var $i625: i64;
  var $i626: i32;
  var $i627: i32;
  var $i628: i1;
  var $i629: i1;
  var $p630: ref;
  var $i631: i32;
  var $i632: i1;
  var $p633: ref;
  var $i634: i8;
  var $i635: i32;
  var $i636: i32;
  var $i637: i1;
  var $p638: ref;
  var $p639: ref;
  var $i640: i8;
  var $i641: i32;
  var $i642: i1;
  var $p643: ref;
  var $p644: ref;
  var $i645: i8;
  var $i646: i32;
  var $i647: i1;
  var $p648: ref;
  var $i651: i1;
  var $i652: i32;
  var $i653: i32;
  var $i654: i64;
  var $i655: i1;
  var $p656: ref;
  var $i649: i32;
  var $i650: i32;
  var $p657: ref;
  var $i659: i1;
  var $i660: i1;
  var $i661: i1;
  var $i662: i32;
  var $p663: ref;
  var $p664: ref;
  var $p665: ref;
  var $p666: ref;
  var $i667: i1;
  var $i668: i1;
  var $i669: i1;
  var $i670: i1;
  var $i671: i32;
  var $i672: i32;
  var $p673: ref;
  var $i674: i32;
  var $i675: i1;
  var $i676: i32;
  var $p677: ref;
  var $p678: ref;
  var $p679: ref;
  var $i680: i1;
  var $p681: ref;
  var $i682: i8;
  var $i683: i32;
  var $i684: i1;
  var $p685: ref;
  var $i686: i32;
  var $i687: i1;
  var $p688: ref;
  var $i689: i32;
  var $i690: i32;
  var $p691: ref;
  var $p692: ref;
  var $p693: ref;
  var $i694: i1;
  var $i695: i32;
  var $p696: ref;
  var $p697: ref;
  var $p698: ref;
  var $i699: i1;
  var $p700: ref;
  var $i701: i8;
  var $i702: i32;
  var $i703: i1;
  var $p704: ref;
  var $i705: i32;
  var $i706: i32;
  var $p707: ref;
  var $p708: ref;
  var $i709: i1;
  var $i710: i1;
  var $i711: i32;
  var $i712: i32;
  var $p713: ref;
  var $i714: i32;
  var $i715: i1;
  var $i716: i32;
  var $p717: ref;
  var $p718: ref;
  var $i719: i1;
  var $p720: ref;
  var $p721: ref;
  var $p722: ref;
  var $i723: i1;
  var $i724: i1;
  var $i725: i1;
  var $i726: i1;
  var $p727: ref;
  var $p728: ref;
  var $i729: i8;
  var $i730: i32;
  var $i731: i1;
  var $p732: ref;
  var $i733: i8;
  var $i734: i32;
  var $i735: i32;
  var $i736: i1;
  var $p737: ref;
  var $i738: i8;
  var $i739: i32;
  var $i740: i32;
  var $i741: i32;
  var $i742: i8;
  var $p743: ref;
  var $i744: i32;
  var $i745: i1;
  var $p746: ref;
  var $i658: i32;
  var $p747: ref;
  var $p748: ref;
  var $i749: i8;
  var $i750: i32;
  var $i751: i1;
  var $p752: ref;
  var $i605: i32;
  var $i28: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !10283, metadata !5777), !dbg !10284, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !10285, metadata !5777), !dbg !10286, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !10289, metadata !5777), !dbg !10290, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !10291, metadata !5777), !dbg !10292, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !10293, metadata !5777), !dbg !10294, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8533, 40} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8533, 40} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8533, 49} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8533, 49} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i16($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8533, 19} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i16.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8533, 56} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8533, 56} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  // WARNING: %11 = zext i1 %10 to i32, !dbg !5797, !verifier.code !5777
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8534, 43} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8534, 43} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8534, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8534, 9} true;
  assume {:verifier.code 0} true;
  call $i14 := ldv__builtin_expect($i13, 0);
  // WARNING: %15 = call i64 @ldv__builtin_expect(i64 %14, i64 0), !dbg !5802, !verifier.code !5777
  call {:cexpr "tmp"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8535, 11} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8535, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8536, 5} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.111, 2707);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8538, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8541, 37} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8541, 37} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i1.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8541, 23} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8541, 3} true;
  assume {:verifier.code 0} true;
  call $i19 := ldv__builtin_expect($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8542, 27} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8542, 27} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8542, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8542, 33} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8542, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8543, 29} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8543, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8543, 9} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i8.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8543, 35} true;
  assume {:verifier.code 0} true;
  $i27 := $eq.i32($i26, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8543, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb6, $bb7;
$bb5:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb6:
  assume ($i27 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8544, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 123);
  goto $bb8;
$bb7:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8546, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 5);
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9068, 1} true;
  assume {:verifier.code 0} true;
  $r := $i28;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8551, 18} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8551, 18} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i32($M.0, $p29);
  // WARNING: %38 = load i32, i32* %37, align 4, !dbg !5829, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8552, 40} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8552, 10} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8552, 67} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8552, 67} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8552, 46} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8552, 44} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p32, $mul.ref($i35, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8553, 18} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8553, 18} true;
  assume {:verifier.code 0} true;
  $i38 := $load.i32($M.0, $p37);
  // WARNING: %46 = load i32, i32* %45, align 4, !dbg !5839, !verifier.code !5777
  call {:cexpr "fileno"} boogie_si_record_i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8554, 17} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8554, 17} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i32($M.0, $p39);
  // WARNING: %48 = load i32, i32* %47, align 4, !dbg !5842, !verifier.code !5777
  call {:cexpr "blkno"} boogie_si_record_i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8555, 23} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8555, 23} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i8($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8555, 11} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i42);
  // WARNING: %51 = zext i8 %50 to i32, !dbg !5846, !verifier.code !5777
  call {:cexpr "at_sm"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8556, 3} true;
  assume {:verifier.code 0} true;
  $p44 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8556, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p44, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  $i45 := $slt.i32($i1, 12);
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i45 == 1);
  assume {:verifier.code 0} true;
  $i60 := $slt.i32($i1, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb47, $bb48;
$bb12:
  assume !(($i45 == 1));
  assume {:verifier.code 0} true;
  $i46 := $slt.i32($i1, 25);
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i46 == 1);
  assume {:verifier.code 0} true;
  $i54 := $slt.i32($i1, 20);
  assume {:verifier.code 0} true;
  assume {:branchcond $i54} true;
  goto $bb33, $bb34;
$bb14:
  assume !(($i46 == 1));
  assume {:verifier.code 0} true;
  $i47 := $slt.i32($i1, 27);
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i47 == 1);
  assume {:verifier.code 0} true;
  $i53 := $slt.i32($i1, 26);
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb31, $bb32;
$bb16:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i1, 35);
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i48 == 1);
  assume {:verifier.code 0} true;
  $i52 := $eq.i32($i1, 27);
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb28, $bb30;
$bb18:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  $i49 := $slt.i32($i1, 65537);
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i49 == 1);
  assume {:verifier.code 0} true;
  $i51 := $eq.i32($i1, 35);
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb25, $bb27;
$bb20:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  $i50 := $eq.i32($i1, 65537);
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb21, $bb23;
$bb21:
  assume {:verifier.code 0} true;
  assume ($i50 == 1);
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 27} true;
  assume {:verifier.code 0} true;
  $p354 := $add.ref($p0, 624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 27} true;
  assume {:verifier.code 0} true;
  $i355 := $load.i8($M.0, $p354);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 7} true;
  assume {:verifier.code 0} true;
  $i356 := $zext.i8.i32($i355);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 33} true;
  assume {:verifier.code 0} true;
  $i357 := $ne.i32($i356, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i357} true;
  goto $bb147, $bb149;
$bb23:
  assume {:verifier.code 0} true;
  assume !(($i50 == 1));
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  goto $bb208;
$bb25:
  assume {:verifier.code 0} true;
  assume ($i51 == 1);
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8652, 3} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb27:
  assume {:verifier.code 0} true;
  assume !(($i51 == 1));
  goto $bb24;
$bb28:
  assume {:verifier.code 0} true;
  assume ($i52 == 1);
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8656, 27} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p0, 626);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8656, 27} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i8($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8656, 7} true;
  assume {:verifier.code 0} true;
  $i187 := $zext.i8.i32($i186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8656, 38} true;
  assume {:verifier.code 0} true;
  $i188 := $ne.i32($i187, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8656, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i188} true;
  goto $bb90, $bb91;
$bb30:
  assume {:verifier.code 0} true;
  assume !(($i52 == 1));
  goto $bb24;
$bb31:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8623, 3} true;
  assume {:verifier.code 0} true;
  $p154 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8623, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p154, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8624, 3} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8624, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p155, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8625, 33} true;
  assume {:verifier.code 0} true;
  $i156 := $lshr.i64($i2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8625, 12} true;
  assume {:verifier.code 0} true;
  $i157 := $trunc.i64.i8($i156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8625, 3} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8625, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p158, $i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8626, 33} true;
  assume {:verifier.code 0} true;
  $i159 := $lshr.i64($i2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8626, 12} true;
  assume {:verifier.code 0} true;
  $i160 := $trunc.i64.i8($i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8626, 3} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8626, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p161, $i160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8627, 12} true;
  assume {:verifier.code 0} true;
  $i162 := $trunc.i64.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8627, 3} true;
  assume {:verifier.code 0} true;
  $p163 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8627, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p163, $i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8628, 47} true;
  assume {:verifier.code 0} true;
  $p164 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8628, 3} true;
  assume {:verifier.code 0} true;
  call deb_space_print($p0, 0, .str.114, $p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8629, 11} true;
  assume {:verifier.code 0} true;
  $i165 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8629, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i165} true;
  goto $bb84, $bb85;
$bb32:
  assume !(($i53 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8638, 3} true;
  assume {:verifier.code 0} true;
  $p169 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8638, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p169, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8639, 3} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8639, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p170, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8640, 18} true;
  assume {:verifier.code 0} true;
  $i171 := $sub.i64(0, $i2);
  // WARNING: %160 = sub i64 0, %2, !dbg !5992, !verifier.code !5777
  call {:cexpr "ltmp"} boogie_si_record_i64($i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8641, 34} true;
  assume {:verifier.code 0} true;
  $i172 := $ashr.i64($i171, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8641, 12} true;
  assume {:verifier.code 0} true;
  $i173 := $trunc.i64.i8($i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8641, 3} true;
  assume {:verifier.code 0} true;
  $p174 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8641, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p174, $i173);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8642, 34} true;
  assume {:verifier.code 0} true;
  $i175 := $ashr.i64($i171, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8642, 12} true;
  assume {:verifier.code 0} true;
  $i176 := $trunc.i64.i8($i175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8642, 3} true;
  assume {:verifier.code 0} true;
  $p177 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8642, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p177, $i176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8643, 12} true;
  assume {:verifier.code 0} true;
  $i178 := $trunc.i64.i8($i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8643, 3} true;
  assume {:verifier.code 0} true;
  $p179 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8643, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p179, $i178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8644, 47} true;
  assume {:verifier.code 0} true;
  $p180 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8644, 3} true;
  assume {:verifier.code 0} true;
  call deb_space_print($p0, 1, .str.114, $p180);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8645, 11} true;
  assume {:verifier.code 0} true;
  $i181 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8645, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i181} true;
  goto $bb87, $bb88;
$bb33:
  assume ($i54 == 1);
  assume {:verifier.code 0} true;
  $i58 := $slt.i32($i1, 13);
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb43, $bb44;
$bb34:
  assume !(($i54 == 1));
  assume {:verifier.code 0} true;
  $i55 := $slt.i32($i1, 21);
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i55 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8793, 3} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb36:
  assume !(($i55 == 1));
  assume {:verifier.code 0} true;
  $i56 := $slt.i32($i1, 24);
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i56 == 1);
  assume {:verifier.code 0} true;
  $i57 := $eq.i32($i1, 21);
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb40, $bb42;
$bb38:
  assume {:verifier.code 0} true;
  assume !(($i56 == 1));
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8793, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb40:
  assume {:verifier.code 0} true;
  assume ($i57 == 1);
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8793, 3} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb42:
  assume {:verifier.code 0} true;
  assume !(($i57 == 1));
  goto $bb24;
$bb43:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8746, 27} true;
  assume {:verifier.code 0} true;
  $p301 := $add.ref($p0, 289);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8746, 27} true;
  assume {:verifier.code 0} true;
  $i302 := $load.i8($M.0, $p301);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8746, 7} true;
  assume {:verifier.code 0} true;
  $i303 := $zext.i8.i32($i302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8746, 38} true;
  assume {:verifier.code 0} true;
  $i304 := $eq.i32($i303, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8746, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i304} true;
  goto $bb129, $bb130;
$bb44:
  assume !(($i58 == 1));
  assume {:verifier.code 0} true;
  $i59 := $eq.i32($i1, 13);
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8770, 27} true;
  assume {:verifier.code 0} true;
  $p320 := $add.ref($p0, 626);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8770, 27} true;
  assume {:verifier.code 0} true;
  $i321 := $load.i8($M.0, $p320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8770, 7} true;
  assume {:verifier.code 0} true;
  $i322 := $zext.i8.i32($i321);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8770, 38} true;
  assume {:verifier.code 0} true;
  $i323 := $ne.i32($i322, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8770, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i323} true;
  goto $bb138, $bb139;
$bb46:
  assume {:verifier.code 0} true;
  assume !(($i59 == 1));
  goto $bb24;
$bb47:
  assume ($i60 == 1);
  assume {:verifier.code 0} true;
  $i66 := $slt.i32($i1, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb59, $bb60;
$bb48:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  $i61 := $slt.i32($i1, 9);
  assume {:verifier.code 0} true;
  assume {:branchcond $i61} true;
  goto $bb49, $bb50;
$bb49:
  assume ($i61 == 1);
  assume {:verifier.code 0} true;
  $i64 := $slt.i32($i1, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i64} true;
  goto $bb55, $bb56;
$bb50:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  $i62 := $slt.i32($i1, 10);
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8726, 3} true;
  assume {:verifier.code 0} true;
  $p282 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8726, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p282, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8727, 27} true;
  assume {:verifier.code 0} true;
  $p283 := $add.ref($p0, 290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8727, 27} true;
  assume {:verifier.code 0} true;
  $i284 := $load.i8($M.0, $p283);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8727, 7} true;
  assume {:verifier.code 0} true;
  $i285 := $zext.i8.i32($i284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8727, 37} true;
  assume {:verifier.code 0} true;
  $i286 := $ne.i32($i285, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8727, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i286} true;
  goto $bb123, $bb124;
$bb52:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  $i63 := $slt.i32($i1, 11);
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8576, 3} true;
  assume {:verifier.code 0} true;
  $i70 := 0;
  goto $bb67;
$bb54:
  assume !(($i63 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8559, 3} true;
  assume {:verifier.code 0} true;
  $i72 := 0;
  goto $bb69;
$bb55:
  assume ($i64 == 1);
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i1, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb57, $bb58;
$bb56:
  assume !(($i64 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8717, 7} true;
  assume {:verifier.code 0} true;
  $i277 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8717, 17} true;
  assume {:verifier.code 0} true;
  $i278 := $ne.i32($i277, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8717, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i278} true;
  goto $bb120, $bb121;
$bb57:
  assume ($i65 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8698, 3} true;
  assume {:verifier.code 0} true;
  $p259 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8698, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p259, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8699, 27} true;
  assume {:verifier.code 0} true;
  $p260 := $add.ref($p0, 290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8699, 27} true;
  assume {:verifier.code 0} true;
  $i261 := $load.i8($M.0, $p260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8699, 7} true;
  assume {:verifier.code 0} true;
  $i262 := $zext.i8.i32($i261);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8699, 37} true;
  assume {:verifier.code 0} true;
  $i263 := $ne.i32($i262, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8699, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i263} true;
  goto $bb114, $bb115;
$bb58:
  assume {:verifier.code 0} true;
  assume !(($i65 == 1));
  goto $bb24;
$bb59:
  assume ($i66 == 1);
  assume {:verifier.code 0} true;
  $i69 := $slt.i32($i1, 2);
  assume {:verifier.code 0} true;
  $i70 := 1;
  assume {:branchcond $i69} true;
  goto $bb65, $bb66;
$bb60:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  $i67 := $slt.i32($i1, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb61, $bb62;
$bb61:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8594, 3} true;
  assume {:verifier.code 0} true;
  $p117 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8594, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p117, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8595, 3} true;
  assume {:verifier.code 0} true;
  $p118 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8595, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p118, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8596, 33} true;
  assume {:verifier.code 0} true;
  $i119 := $lshr.i64($i2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8596, 12} true;
  assume {:verifier.code 0} true;
  $i120 := $trunc.i64.i8($i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8596, 3} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8596, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p121, $i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8597, 33} true;
  assume {:verifier.code 0} true;
  $i122 := $lshr.i64($i2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8597, 12} true;
  assume {:verifier.code 0} true;
  $i123 := $trunc.i64.i8($i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8597, 3} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8597, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p124, $i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8598, 12} true;
  assume {:verifier.code 0} true;
  $i125 := $trunc.i64.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8598, 3} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8598, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p126, $i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8599, 45} true;
  assume {:verifier.code 0} true;
  $p127 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8599, 3} true;
  assume {:verifier.code 0} true;
  call deb_space_print($p0, 0, .str.113, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8600, 13} true;
  assume {:verifier.code 0} true;
  $i128 := $sge.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8600, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i128} true;
  goto $bb78, $bb79;
$bb62:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  $i68 := $slt.i32($i1, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i68} true;
  goto $bb63, $bb64;
$bb63:
  assume ($i68 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8608, 3} true;
  assume {:verifier.code 0} true;
  $p135 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8608, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p135, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8609, 3} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8609, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p136, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8610, 18} true;
  assume {:verifier.code 0} true;
  $i137 := $sub.i64(0, $i2);
  // WARNING: %122 = sub i64 0, %2, !dbg !5941, !verifier.code !5777
  call {:cexpr "ltmp"} boogie_si_record_i64($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8611, 34} true;
  assume {:verifier.code 0} true;
  $i138 := $ashr.i64($i137, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8611, 12} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i64.i8($i138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8611, 3} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8611, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p140, $i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8612, 34} true;
  assume {:verifier.code 0} true;
  $i141 := $ashr.i64($i137, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8612, 12} true;
  assume {:verifier.code 0} true;
  $i142 := $trunc.i64.i8($i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8612, 3} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8612, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p143, $i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8613, 12} true;
  assume {:verifier.code 0} true;
  $i144 := $trunc.i64.i8($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8613, 3} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8613, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p145, $i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8614, 45} true;
  assume {:verifier.code 0} true;
  $p146 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8614, 3} true;
  assume {:verifier.code 0} true;
  call deb_space_print($p0, 1, .str.113, $p146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8615, 13} true;
  assume {:verifier.code 0} true;
  $i147 := $sge.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8615, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i147} true;
  goto $bb81, $bb82;
$bb64:
  assume !(($i68 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8652, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb65:
  assume ($i69 == 1);
  assume {:verifier.code 0} true;
  $i71 := $eq.i32($i1, 1);
  assume {:verifier.code 0} true;
  $i72 := 1;
  assume {:branchcond $i71} true;
  goto $bb68, $bb70;
$bb66:
  assume {:verifier.code 0} true;
  assume !(($i69 == 1));
  goto $bb67;
$bb67:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8578, 3} true;
  assume {:verifier.code 0} true;
  $p98 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8578, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p98, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8579, 3} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8579, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p99, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8580, 18} true;
  assume {:verifier.code 0} true;
  $i100 := $sub.i64(0, $i2);
  // WARNING: %79 = sub i64 0, %2, !dbg !5884, !verifier.code !5777
  call {:cexpr "ltmp"} boogie_si_record_i64($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8581, 34} true;
  assume {:verifier.code 0} true;
  $i101 := $ashr.i64($i100, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8581, 12} true;
  assume {:verifier.code 0} true;
  $i102 := $trunc.i64.i8($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8581, 3} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8581, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p103, $i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8582, 34} true;
  assume {:verifier.code 0} true;
  $i104 := $ashr.i64($i100, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8582, 12} true;
  assume {:verifier.code 0} true;
  $i105 := $trunc.i64.i8($i104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8582, 3} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8582, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p106, $i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8583, 12} true;
  assume {:verifier.code 0} true;
  $i107 := $trunc.i64.i8($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8583, 3} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8583, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p108, $i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8584, 48} true;
  assume {:verifier.code 0} true;
  $p109 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8584, 3} true;
  assume {:verifier.code 0} true;
  call deb_space_print($p0, 1, .str.112, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8585, 14} true;
  assume {:verifier.code 0} true;
  $i110 := $sge.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8585, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb75, $bb76;
$bb68:
  assume {:verifier.code 0} true;
  assume ($i71 == 1);
  goto $bb69;
$bb69:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8561, 3} true;
  assume {:verifier.code 0} true;
  $p73 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8561, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p73, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8562, 3} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8562, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p74, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8563, 33} true;
  assume {:verifier.code 0} true;
  $i75 := $lshr.i64($i2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8563, 12} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i64.i8($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8563, 3} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8563, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p77, $i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8564, 33} true;
  assume {:verifier.code 0} true;
  $i78 := $lshr.i64($i2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8564, 12} true;
  assume {:verifier.code 0} true;
  $i79 := $trunc.i64.i8($i78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8564, 3} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8564, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p80, $i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8565, 12} true;
  assume {:verifier.code 0} true;
  $i81 := $trunc.i64.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8565, 3} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8565, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p82, $i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8566, 48} true;
  assume {:verifier.code 0} true;
  $p83 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8566, 3} true;
  assume {:verifier.code 0} true;
  call deb_space_print($p0, 0, .str.112, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8567, 14} true;
  assume {:verifier.code 0} true;
  $i84 := $sge.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8567, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb71, $bb72;
$bb70:
  assume {:verifier.code 0} true;
  assume !(($i71 == 1));
  goto $bb24;
$bb71:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8568, 21} true;
  assume {:verifier.code 0} true;
  $i85 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8568, 40} true;
  assume {:verifier.code 0} true;
  $i86 := $add.i32($i85, $i38);
  // WARNING: %69 = add i32 %68, %46, !dbg !5874, !verifier.code !5777
  call {:cexpr "fileno"} boogie_si_record_i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8569, 3} true;
  assume {:verifier.code 0} true;
  $i87 := $i86;
  goto $bb73;
$bb72:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  $i87 := $i38;
  goto $bb73;
$bb73:
  assume {:verifier.code 0} true;
  // WARNING: %.066 = phi i32 [ %69, %67 ], [ %46, %70 ], !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8573, 16} true;
  assume {:verifier.code 0} true;
  $i88 := $eq.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8573, 16} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i1.i32($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8573, 24} true;
  assume {:verifier.code 0} true;
  $i90 := $and.i32($i89, $i43);
  // WARNING: %74 = and i32 %73, %51, !dbg !5877, !verifier.code !5777
  call {:cexpr "at_sm"} boogie_si_record_i32($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8574, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := 0, $i87, $i90, $i72, $i30, 0, 3;
  goto $bb74;
$bb74:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8881, 51} true;
  assume {:verifier.code 0} true;
  $p536 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8881, 11} true;
  assume {:verifier.code 0} true;
  call $p537 := st_do_scsi($0.ref, $p0, $p536, $i96, $i97, $i95, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8883, 7} true;
  assume {:verifier.code 0} true;
  $i538 := $p2i.ref.i64($p537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8883, 29} true;
  assume {:verifier.code 0} true;
  $i539 := $eq.i64($i538, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8883, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i539} true;
  goto $bb209, $bb210;
$bb75:
  assume ($i110 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8586, 45} true;
  assume {:verifier.code 0} true;
  $i111 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8586, 43} true;
  assume {:verifier.code 0} true;
  $i112 := $sub.i32($i38, $i111);
  // WARNING: %92 = sub i32 %46, %91, !dbg !5905, !verifier.code !5777
  call {:cexpr "fileno"} boogie_si_record_i32($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8587, 3} true;
  assume {:verifier.code 0} true;
  $i113 := $i112;
  goto $bb77;
$bb76:
  assume !(($i110 == 1));
  assume {:verifier.code 0} true;
  $i113 := $i38;
  goto $bb77;
$bb77:
  assume {:verifier.code 0} true;
  // WARNING: %.167 = phi i32 [ %92, %90 ], [ %46, %93 ], !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8591, 16} true;
  assume {:verifier.code 0} true;
  $i114 := $eq.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8591, 16} true;
  assume {:verifier.code 0} true;
  $i115 := $zext.i1.i32($i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8591, 24} true;
  assume {:verifier.code 0} true;
  $i116 := $and.i32($i115, $i43);
  // WARNING: %97 = and i32 %96, %51, !dbg !5908, !verifier.code !5777
  call {:cexpr "at_sm"} boogie_si_record_i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8592, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := $sub.i32(0, 1), $i113, $i116, $i70, $i30, 0, 3;
  goto $bb74;
$bb78:
  assume ($i128 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8601, 20} true;
  assume {:verifier.code 0} true;
  $i129 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8601, 39} true;
  assume {:verifier.code 0} true;
  $i130 := $add.i32($i129, $i40);
  // WARNING: %113 = add i32 %112, %48, !dbg !5932, !verifier.code !5777
  call {:cexpr "blkno"} boogie_si_record_i32($i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8602, 3} true;
  assume {:verifier.code 0} true;
  $i131 := $i130;
  goto $bb80;
$bb79:
  assume !(($i128 == 1));
  assume {:verifier.code 0} true;
  $i131 := $i40;
  goto $bb80;
$bb80:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8605, 16} true;
  assume {:verifier.code 0} true;
  $i132 := $eq.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8605, 16} true;
  assume {:verifier.code 0} true;
  $i133 := $zext.i1.i32($i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8605, 24} true;
  assume {:verifier.code 0} true;
  $i134 := $and.i32($i133, $i43);
  // WARNING: %118 = and i32 %117, %51, !dbg !5935, !verifier.code !5777
  call {:cexpr "at_sm"} boogie_si_record_i32($i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8606, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := $i131, $i38, $i134, 1, $i30, 0, 3;
  goto $bb74;
$bb81:
  assume ($i147 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8616, 43} true;
  assume {:verifier.code 0} true;
  $i148 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8616, 41} true;
  assume {:verifier.code 0} true;
  $i149 := $sub.i32($i40, $i148);
  // WARNING: %135 = sub i32 %48, %134, !dbg !5960, !verifier.code !5777
  call {:cexpr "blkno"} boogie_si_record_i32($i149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8617, 3} true;
  assume {:verifier.code 0} true;
  $i150 := $i149;
  goto $bb83;
$bb82:
  assume !(($i147 == 1));
  assume {:verifier.code 0} true;
  $i150 := $i40;
  goto $bb83;
$bb83:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8620, 16} true;
  assume {:verifier.code 0} true;
  $i151 := $eq.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8620, 16} true;
  assume {:verifier.code 0} true;
  $i152 := $zext.i1.i32($i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8620, 24} true;
  assume {:verifier.code 0} true;
  $i153 := $and.i32($i152, $i43);
  // WARNING: %140 = and i32 %139, %51, !dbg !5963, !verifier.code !5777
  call {:cexpr "at_sm"} boogie_si_record_i32($i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8621, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := $i150, $i38, $i153, 1, $i30, 0, 3;
  goto $bb74;
$bb84:
  assume ($i165 == 1);
  // WARNING: call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !10344, metadata !5777), !dbg !10345, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !10347, metadata !5777), !dbg !10348, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8633, 3} true;
  assume {:verifier.code 0} true;
  $i166, $i167, $i168 := $sub.i32(0, 1), $sub.i32(0, 1), 1;
  goto $bb86;
$bb85:
  assume !(($i165 == 1));
  assume {:verifier.code 0} true;
  $i166, $i167, $i168 := $i40, $i38, $i43;
  goto $bb86;
$bb86:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8636, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := $i166, $i167, $i168, 1, $i30, 0, 3;
  goto $bb74;
$bb87:
  assume ($i181 == 1);
  // WARNING: call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !10344, metadata !5777), !dbg !10345, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !10347, metadata !5777), !dbg !10348, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8649, 3} true;
  assume {:verifier.code 0} true;
  $i182, $i183, $i184 := $sub.i32(0, 1), $sub.i32(0, 1), 1;
  goto $bb89;
$bb88:
  assume !(($i181 == 1));
  assume {:verifier.code 0} true;
  $i182, $i183, $i184 := $i40, $i38, $i43;
  goto $bb89;
$bb89:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8652, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := $i182, $i183, $i184, 1, $i30, 0, 3;
  goto $bb74;
$bb90:
  assume ($i188 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8657, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 13);
  goto $bb8;
$bb91:
  assume !(($i188 == 1));
  assume {:verifier.code 0} true;
  goto $bb92;
$bb92:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8661, 3} true;
  assume {:verifier.code 0} true;
  $p189 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8661, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p189, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8662, 14} true;
  assume {:verifier.code 0} true;
  $i190 := $eq.i32($i1, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8662, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i190} true;
  goto $bb93, $bb94;
$bb93:
  assume ($i190 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8663, 5} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8663, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p191, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8664, 3} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb94:
  assume !(($i190 == 1));
  assume {:verifier.code 0} true;
  goto $bb95;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 14} true;
  assume {:verifier.code 0} true;
  $i192 := $eq.i32($i1, 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i192} true;
  goto $bb96, $bb98;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 21} true;
  assume {:verifier.code 0} true;
  assume ($i192 == 1);
  goto $bb97;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8668, 29} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8668, 29} true;
  assume {:verifier.code 0} true;
  $i199 := $load.i8($M.0, $p198);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8668, 14} true;
  assume {:verifier.code 0} true;
  $i200 := $zext.i8.i32($i199);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8668, 36} true;
  assume {:verifier.code 0} true;
  $i201 := $or.i32($i200, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8668, 14} true;
  assume {:verifier.code 0} true;
  $i202 := $trunc.i32.i8($i201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8668, 5} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8668, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p203, $i202);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8669, 3} true;
  assume {:verifier.code 0} true;
  goto $bb104;
$bb98:
  assume !(($i192 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 32} true;
  assume {:verifier.code 0} true;
  $i193 := $eq.i32($i1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 38} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i193} true;
  goto $bb99, $bb100;
$bb99:
  assume ($i193 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 61} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($p0, 303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 61} true;
  assume {:verifier.code 0} true;
  $i195 := $load.i8($M.0, $p194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 41} true;
  assume {:verifier.code 0} true;
  $i196 := $zext.i8.i32($i195);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 80} true;
  assume {:verifier.code 0} true;
  $i197 := $ne.i32($i196, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i197} true;
  goto $bb102, $bb103;
$bb100:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 38} true;
  assume {:verifier.code 0} true;
  assume !(($i193 == 1));
  goto $bb101;
$bb101:
  assume {:verifier.code 0} true;
  goto $bb104;
$bb102:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 7} true;
  assume {:verifier.code 0} true;
  assume ($i197 == 1);
  goto $bb97;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8667, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i197 == 1));
  goto $bb101;
$bb104:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8672, 33} true;
  assume {:verifier.code 0} true;
  $i204 := $lshr.i64($i2, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8672, 12} true;
  assume {:verifier.code 0} true;
  $i205 := $trunc.i64.i8($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8672, 3} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8672, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p206, $i205);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8673, 33} true;
  assume {:verifier.code 0} true;
  $i207 := $lshr.i64($i2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8673, 12} true;
  assume {:verifier.code 0} true;
  $i208 := $trunc.i64.i8($i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8673, 3} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8673, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p209, $i208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8674, 12} true;
  assume {:verifier.code 0} true;
  $i210 := $trunc.i64.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8674, 3} true;
  assume {:verifier.code 0} true;
  $p211 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8674, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p211, $i210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8675, 26} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8675, 26} true;
  assume {:verifier.code 0} true;
  $p213 := $load.ref($M.0, $p212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8675, 35} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p213, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8675, 35} true;
  assume {:verifier.code 0} true;
  $p215 := $load.ref($M.0, $p214);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8675, 51} true;
  assume {:verifier.code 0} true;
  $p216 := $add.ref($p215, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8675, 51} true;
  assume {:verifier.code 0} true;
  $i217 := $load.i32($M.0, $p216);
  // WARNING: %220 = load i32, i32* %219, align 8, !dbg !6063, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8676, 7} true;
  assume {:verifier.code 0} true;
  $i218 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8676, 17} true;
  assume {:verifier.code 0} true;
  $i219 := $ne.i32($i218, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8676, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i219} true;
  goto $bb105, $bb106;
$bb105:
  assume ($i219 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8677, 16} true;
  assume {:verifier.code 0} true;
  $i220 := $ne.i32($i1, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8677, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i220} true;
  goto $bb107, $bb108;
$bb106:
  assume !(($i219 == 1));
  assume {:verifier.code 0} true;
  goto $bb110;
$bb107:
  assume ($i220 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8678, 17} true;
  assume {:verifier.code 0} true;
  call $p221 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8679, 67} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8679, 67} true;
  assume {:verifier.code 0} true;
  $p223 := $load.ref($M.0, $p222);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 60} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 60} true;
  assume {:verifier.code 0} true;
  $i225 := $load.i8($M.0, $p224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 54} true;
  assume {:verifier.code 0} true;
  $i226 := $zext.i8.i32($i225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 67} true;
  assume {:verifier.code 0} true;
  $i227 := $mul.i32($i226, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 81} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 81} true;
  assume {:verifier.code 0} true;
  $i229 := $load.i8($M.0, $p228);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 75} true;
  assume {:verifier.code 0} true;
  $i230 := $zext.i8.i32($i229);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 73} true;
  assume {:verifier.code 0} true;
  $i231 := $add.i32($i227, $i230);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 89} true;
  assume {:verifier.code 0} true;
  $i232 := $mul.i32($i231, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 103} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 103} true;
  assume {:verifier.code 0} true;
  $i234 := $load.i8($M.0, $p233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 97} true;
  assume {:verifier.code 0} true;
  $i235 := $zext.i8.i32($i234);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8680, 95} true;
  assume {:verifier.code 0} true;
  $i236 := $add.i32($i232, $i235);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8679, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p223, $p221, .str.115, $i236);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8681, 5} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb108:
  assume !(($i220 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8682, 17} true;
  assume {:verifier.code 0} true;
  call $p237 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8683, 67} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8683, 67} true;
  assume {:verifier.code 0} true;
  $p239 := $load.ref($M.0, $p238);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 59} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 59} true;
  assume {:verifier.code 0} true;
  $i241 := $load.i8($M.0, $p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 53} true;
  assume {:verifier.code 0} true;
  $i242 := $zext.i8.i32($i241);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 66} true;
  assume {:verifier.code 0} true;
  $i243 := $mul.i32($i242, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 80} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 80} true;
  assume {:verifier.code 0} true;
  $i245 := $load.i8($M.0, $p244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 74} true;
  assume {:verifier.code 0} true;
  $i246 := $zext.i8.i32($i245);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 72} true;
  assume {:verifier.code 0} true;
  $i247 := $add.i32($i243, $i246);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 88} true;
  assume {:verifier.code 0} true;
  $i248 := $mul.i32($i247, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 102} true;
  assume {:verifier.code 0} true;
  $p249 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 102} true;
  assume {:verifier.code 0} true;
  $i250 := $load.i8($M.0, $p249);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 96} true;
  assume {:verifier.code 0} true;
  $i251 := $zext.i8.i32($i250);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8684, 94} true;
  assume {:verifier.code 0} true;
  $i252 := $add.i32($i248, $i251);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8683, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p239, $p237, .str.116, $i252);
  assume {:verifier.code 0} true;
  goto $bb109;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8686, 3} true;
  assume {:verifier.code 0} true;
  goto $bb110;
$bb110:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8689, 14} true;
  assume {:verifier.code 0} true;
  $i253 := $sge.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8689, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i253} true;
  goto $bb111, $bb112;
$bb111:
  assume ($i253 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8690, 21} true;
  assume {:verifier.code 0} true;
  $i254 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8690, 40} true;
  assume {:verifier.code 0} true;
  $i255 := $add.i32($i254, $i38);
  // WARNING: %265 = add i32 %264, %46, !dbg !6111, !verifier.code !5777
  call {:cexpr "fileno"} boogie_si_record_i32($i255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8691, 3} true;
  assume {:verifier.code 0} true;
  $i256 := $i255;
  goto $bb113;
$bb112:
  assume !(($i253 == 1));
  assume {:verifier.code 0} true;
  $i256 := $i38;
  goto $bb113;
$bb113:
  assume {:verifier.code 0} true;
  // WARNING: %.470 = phi i32 [ %265, %263 ], [ %46, %266 ], !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8695, 18} true;
  assume {:verifier.code 0} true;
  $i257 := $eq.i32($i1, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8695, 18} true;
  assume {:verifier.code 0} true;
  $i258 := $zext.i1.i32($i257);
  // WARNING: %269 = zext i1 %268 to i32, !dbg !6113, !verifier.code !5777
  call {:cexpr "at_sm"} boogie_si_record_i32($i258);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8696, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := 0, $i256, $i258, 1, $i217, 0, 3;
  goto $bb74;
$bb114:
  assume ($i263 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8700, 5} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8700, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p264, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8701, 28} true;
  assume {:verifier.code 0} true;
  $p265 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8701, 28} true;
  assume {:verifier.code 0} true;
  $p266 := $load.ref($M.0, $p265);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8701, 37} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p266, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8701, 37} true;
  assume {:verifier.code 0} true;
  $p268 := $load.ref($M.0, $p267);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8701, 53} true;
  assume {:verifier.code 0} true;
  $p269 := $add.ref($p268, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8701, 53} true;
  assume {:verifier.code 0} true;
  $i270 := $load.i32($M.0, $p269);
  // WARNING: %283 = load i32, i32* %282, align 8, !dbg !6127, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i270);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8702, 3} true;
  assume {:verifier.code 0} true;
  $i271 := $i270;
  goto $bb116;
$bb115:
  assume !(($i263 == 1));
  assume {:verifier.code 0} true;
  $i271 := $i30;
  goto $bb116;
$bb116:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8705, 7} true;
  assume {:verifier.code 0} true;
  $i272 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8705, 17} true;
  assume {:verifier.code 0} true;
  $i273 := $ne.i32($i272, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8705, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  goto $bb117, $bb118;
$bb117:
  assume ($i273 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8706, 15} true;
  assume {:verifier.code 0} true;
  call $p274 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8707, 65} true;
  assume {:verifier.code 0} true;
  $p275 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8707, 65} true;
  assume {:verifier.code 0} true;
  $p276 := $load.ref($M.0, $p275);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8707, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p276, $p274, .str.117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8709, 3} true;
  assume {:verifier.code 0} true;
  goto $bb119;
$bb118:
  assume !(($i273 == 1));
  assume {:verifier.code 0} true;
  goto $bb119;
$bb119:
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !10351, metadata !5777), !dbg !10352, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !10347, metadata !5777), !dbg !10348, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8715, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := 0, 0, 0, 1, $i271, 0, 3;
  goto $bb74;
$bb120:
  assume ($i278 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8718, 15} true;
  assume {:verifier.code 0} true;
  call $p279 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8719, 65} true;
  assume {:verifier.code 0} true;
  $p280 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8719, 65} true;
  assume {:verifier.code 0} true;
  $p281 := $load.ref($M.0, $p280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8719, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p281, $p279, .str.118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8721, 3} true;
  assume {:verifier.code 0} true;
  goto $bb122;
$bb121:
  assume !(($i278 == 1));
  assume {:verifier.code 0} true;
  goto $bb122;
$bb122:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8724, 3} true;
  assume {:verifier.code 0} true;
  $i28 := 0;
  goto $bb8;
$bb123:
  assume ($i286 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8728, 5} true;
  assume {:verifier.code 0} true;
  $p287 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8728, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p287, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8729, 28} true;
  assume {:verifier.code 0} true;
  $p288 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8729, 28} true;
  assume {:verifier.code 0} true;
  $p289 := $load.ref($M.0, $p288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8729, 37} true;
  assume {:verifier.code 0} true;
  $p290 := $add.ref($p289, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8729, 37} true;
  assume {:verifier.code 0} true;
  $p291 := $load.ref($M.0, $p290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8729, 53} true;
  assume {:verifier.code 0} true;
  $p292 := $add.ref($p291, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8729, 53} true;
  assume {:verifier.code 0} true;
  $i293 := $load.i32($M.0, $p292);
  // WARNING: %316 = load i32, i32* %315, align 8, !dbg !6165, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i293);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8730, 3} true;
  assume {:verifier.code 0} true;
  $i294 := $i293;
  goto $bb125;
$bb124:
  assume !(($i286 == 1));
  assume {:verifier.code 0} true;
  $i294 := $i30;
  goto $bb125;
$bb125:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8733, 3} true;
  assume {:verifier.code 0} true;
  $p295 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8733, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p295, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8734, 7} true;
  assume {:verifier.code 0} true;
  $i296 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8734, 17} true;
  assume {:verifier.code 0} true;
  $i297 := $ne.i32($i296, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8734, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i297} true;
  goto $bb126, $bb127;
$bb126:
  assume ($i297 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8735, 15} true;
  assume {:verifier.code 0} true;
  call $p298 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8736, 65} true;
  assume {:verifier.code 0} true;
  $p299 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8736, 65} true;
  assume {:verifier.code 0} true;
  $p300 := $load.ref($M.0, $p299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8736, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p300, $p298, .str.119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8738, 3} true;
  assume {:verifier.code 0} true;
  goto $bb128;
$bb127:
  assume !(($i297 == 1));
  assume {:verifier.code 0} true;
  goto $bb128;
$bb128:
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !10351, metadata !5777), !dbg !10352, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !10347, metadata !5777), !dbg !10348, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8744, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := 0, 0, 0, 1, $i294, 0, 3;
  goto $bb74;
$bb129:
  assume ($i304 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8747, 20} true;
  assume {:verifier.code 0} true;
  call $i305 := st_int_ioctl($p0, 1, 8388607);
  // WARNING: %334 = call i32 @st_int_ioctl(%struct.scsi_tape* %0, i32 1, i64 8388607), !dbg !6186, !verifier.code !5777
  call {:cexpr "ioctl_result"} boogie_si_record_i32($i305);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8748, 20} true;
  assume {:verifier.code 0} true;
  $p306 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8748, 20} true;
  assume {:verifier.code 0} true;
  $i307 := $load.i32($M.0, $p306);
  // WARNING: %336 = load i32, i32* %335, align 4, !dbg !6190, !verifier.code !5777
  call {:cexpr "fileno"} boogie_si_record_i32($i307);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8749, 30} true;
  assume {:verifier.code 0} true;
  $p308 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8749, 30} true;
  assume {:verifier.code 0} true;
  $i309 := $load.i8($M.0, $p308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8749, 9} true;
  assume {:verifier.code 0} true;
  $i310 := $zext.i8.i32($i309);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8749, 34} true;
  assume {:verifier.code 0} true;
  $i311 := $ugt.i32($i310, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8749, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i311} true;
  goto $bb131, $bb132;
$bb130:
  assume !(($i304 == 1));
  assume {:verifier.code 0} true;
  $i312 := $sub.i32(0, 1);
  goto $bb134;
$bb131:
  assume ($i311 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8750, 7} true;
  assume {:verifier.code 0} true;
  $i28 := 0;
  goto $bb8;
$bb132:
  assume !(($i311 == 1));
  assume {:verifier.code 0} true;
  goto $bb133;
$bb133:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8754, 3} true;
  assume {:verifier.code 0} true;
  $i312 := $i307;
  goto $bb134;
$bb134:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8757, 3} true;
  assume {:verifier.code 0} true;
  $p313 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8757, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p313, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8758, 3} true;
  assume {:verifier.code 0} true;
  $p314 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8758, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p314, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8759, 7} true;
  assume {:verifier.code 0} true;
  $i315 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8759, 17} true;
  assume {:verifier.code 0} true;
  $i316 := $ne.i32($i315, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8759, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i316} true;
  goto $bb135, $bb136;
$bb135:
  assume ($i316 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8760, 15} true;
  assume {:verifier.code 0} true;
  call $p317 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8761, 65} true;
  assume {:verifier.code 0} true;
  $p318 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8761, 65} true;
  assume {:verifier.code 0} true;
  $p319 := $load.ref($M.0, $p318);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8761, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p319, $p317, .str.120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8763, 3} true;
  assume {:verifier.code 0} true;
  goto $bb137;
$bb136:
  assume !(($i316 == 1));
  assume {:verifier.code 0} true;
  goto $bb137;
$bb137:
  // WARNING: call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !10347, metadata !5777), !dbg !10348, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8768, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := $sub.i32(0, 1), $i312, 0, 1, $i30, 0, 3;
  goto $bb74;
$bb138:
  assume ($i323 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8771, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 13);
  goto $bb8;
$bb139:
  assume !(($i323 == 1));
  assume {:verifier.code 0} true;
  goto $bb140;
$bb140:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8775, 3} true;
  assume {:verifier.code 0} true;
  $p324 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8775, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p324, 25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8776, 16} true;
  assume {:verifier.code 0} true;
  $i325 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8776, 16} true;
  assume {:verifier.code 0} true;
  $i326 := $zext.i1.i32($i325);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8776, 12} true;
  assume {:verifier.code 0} true;
  $i327 := $trunc.i32.i8($i326);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8776, 3} true;
  assume {:verifier.code 0} true;
  $p328 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8776, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p328, $i327);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8777, 27} true;
  assume {:verifier.code 0} true;
  $p329 := $add.ref($p0, 290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8777, 27} true;
  assume {:verifier.code 0} true;
  $i330 := $load.i8($M.0, $p329);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8777, 7} true;
  assume {:verifier.code 0} true;
  $i331 := $zext.i8.i32($i330);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8777, 37} true;
  assume {:verifier.code 0} true;
  $i332 := $ne.i32($i331, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8777, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i332} true;
  goto $bb141, $bb142;
$bb141:
  assume ($i332 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8778, 29} true;
  assume {:verifier.code 0} true;
  $p333 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8778, 29} true;
  assume {:verifier.code 0} true;
  $i334 := $load.i8($M.0, $p333);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8778, 14} true;
  assume {:verifier.code 0} true;
  $i335 := $zext.i8.i32($i334);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8778, 36} true;
  assume {:verifier.code 0} true;
  $i336 := $or.i32($i335, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8778, 14} true;
  assume {:verifier.code 0} true;
  $i337 := $trunc.i32.i8($i336);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8778, 5} true;
  assume {:verifier.code 0} true;
  $p338 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8778, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p338, $i337);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8779, 28} true;
  assume {:verifier.code 0} true;
  $p339 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8779, 28} true;
  assume {:verifier.code 0} true;
  $p340 := $load.ref($M.0, $p339);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8779, 37} true;
  assume {:verifier.code 0} true;
  $p341 := $add.ref($p340, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8779, 37} true;
  assume {:verifier.code 0} true;
  $p342 := $load.ref($M.0, $p341);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8779, 53} true;
  assume {:verifier.code 0} true;
  $p343 := $add.ref($p342, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8779, 53} true;
  assume {:verifier.code 0} true;
  $i344 := $load.i32($M.0, $p343);
  // WARNING: %385 = load i32, i32* %384, align 8, !dbg !6241, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i344);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8780, 3} true;
  assume {:verifier.code 0} true;
  $i345 := $i344;
  goto $bb143;
$bb142:
  assume !(($i332 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8781, 20} true;
  assume {:verifier.code 0} true;
  $p346 := $add.ref($p0, 308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8781, 20} true;
  assume {:verifier.code 0} true;
  $i347 := $load.i32($M.0, $p346);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8781, 33} true;
  assume {:verifier.code 0} true;
  $i348 := $mul.i32($i347, 8);
  // WARNING: %389 = mul nsw i32 %388, 8, !dbg !6245, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i348);
  assume {:verifier.code 0} true;
  $i345 := $i348;
  goto $bb143;
$bb143:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8783, 7} true;
  assume {:verifier.code 0} true;
  $i349 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8783, 17} true;
  assume {:verifier.code 0} true;
  $i350 := $ne.i32($i349, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8783, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i350} true;
  goto $bb144, $bb145;
$bb144:
  assume ($i350 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8784, 15} true;
  assume {:verifier.code 0} true;
  call $p351 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8785, 65} true;
  assume {:verifier.code 0} true;
  $p352 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8785, 65} true;
  assume {:verifier.code 0} true;
  $p353 := $load.ref($M.0, $p352);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8785, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p353, $p351, .str.121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8787, 3} true;
  assume {:verifier.code 0} true;
  goto $bb146;
$bb145:
  assume !(($i350 == 1));
  assume {:verifier.code 0} true;
  goto $bb146;
$bb146:
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !10351, metadata !5777), !dbg !10352, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !10347, metadata !5777), !dbg !10348, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8793, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := 0, 0, 0, 1, $i345, 0, 3;
  goto $bb74;
$bb147:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 39} true;
  assume {:verifier.code 0} true;
  assume ($i357 == 1);
  goto $bb148;
$bb148:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8800, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 5);
  goto $bb8;
$bb149:
  assume !(($i357 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 48} true;
  assume {:verifier.code 0} true;
  $p358 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 48} true;
  assume {:verifier.code 0} true;
  $p359 := $load.ref($M.0, $p358);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 57} true;
  assume {:verifier.code 0} true;
  $p360 := $add.ref($p359, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 57} true;
  assume {:verifier.code 0} true;
  $i361 := $load.i32($M.0, $p360);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 70} true;
  assume {:verifier.code 0} true;
  $i362 := $ne.i32($i361, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i362} true;
  goto $bb150, $bb151;
$bb150:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8799, 7} true;
  assume {:verifier.code 0} true;
  assume ($i362 == 1);
  goto $bb148;
$bb151:
  assume !(($i362 == 1));
  assume {:verifier.code 0} true;
  goto $bb152;
$bb152:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 17} true;
  assume {:verifier.code 0} true;
  $i363 := $eq.i32($i1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i363} true;
  goto $bb153, $bb155;
$bb153:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 24} true;
  assume {:verifier.code 0} true;
  assume ($i363 == 1);
  goto $bb154;
$bb154:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 53} true;
  assume {:verifier.code 0} true;
  $i365 := $and.i64($i2, 16777215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 67} true;
  assume {:verifier.code 0} true;
  $i366 := $ne.i64($i365, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 75} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i366} true;
  goto $bb159, $bb160;
$bb155:
  assume !(($i363 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 34} true;
  assume {:verifier.code 0} true;
  $i364 := $eq.i32($i1, 65537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 45} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i364} true;
  goto $bb156, $bb157;
$bb156:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 45} true;
  assume {:verifier.code 0} true;
  assume ($i364 == 1);
  goto $bb154;
$bb157:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 45} true;
  assume {:verifier.code 0} true;
  assume !(($i364 == 1));
  goto $bb158;
$bb158:
  assume {:verifier.code 0} true;
  goto $bb168;
$bb159:
  assume ($i366 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 83} true;
  assume {:verifier.code 0} true;
  $p367 := $add.ref($p0, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 83} true;
  assume {:verifier.code 0} true;
  $i368 := $load.i32($M.0, $p367);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 93} true;
  assume {:verifier.code 0} true;
  $i369 := $sgt.i32($i368, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 98} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i369} true;
  goto $bb161, $bb162;
$bb160:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 75} true;
  assume {:verifier.code 0} true;
  assume !(($i366 == 1));
  goto $bb158;
$bb161:
  assume ($i369 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 107} true;
  assume {:verifier.code 0} true;
  $i370 := $and.i64($i2, 16777215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 144} true;
  assume {:verifier.code 0} true;
  $p371 := $add.ref($p0, 644);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 144} true;
  assume {:verifier.code 0} true;
  $i372 := $load.i32($M.0, $p371);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 123} true;
  assume {:verifier.code 0} true;
  $i373 := $sext.i32.i64($i372);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 121} true;
  assume {:verifier.code 0} true;
  $i374 := $ult.i64($i370, $i373);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 154} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i374} true;
  goto $bb163, $bb165;
$bb162:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 98} true;
  assume {:verifier.code 0} true;
  assume !(($i369 == 1));
  goto $bb158;
$bb163:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 154} true;
  assume {:verifier.code 0} true;
  assume ($i374 == 1);
  goto $bb164;
$bb164:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8805, 15} true;
  assume {:verifier.code 0} true;
  call $p380 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8806, 65} true;
  assume {:verifier.code 0} true;
  $p381 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8806, 65} true;
  assume {:verifier.code 0} true;
  $p382 := $load.ref($M.0, $p381);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8806, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.89, $p382, $p380, .str.122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8808, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 22);
  goto $bb8;
$bb165:
  assume !(($i374 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 162} true;
  assume {:verifier.code 0} true;
  $i375 := $and.i64($i2, 16777215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 199} true;
  assume {:verifier.code 0} true;
  $p376 := $add.ref($p0, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 199} true;
  assume {:verifier.code 0} true;
  $i377 := $load.i32($M.0, $p376);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 178} true;
  assume {:verifier.code 0} true;
  $i378 := $sext.i32.i64($i377);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 176} true;
  assume {:verifier.code 0} true;
  $i379 := $ugt.i64($i375, $i378);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i379} true;
  goto $bb166, $bb167;
$bb166:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 7} true;
  assume {:verifier.code 0} true;
  assume ($i379 == 1);
  goto $bb164;
$bb167:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8804, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i379 == 1));
  goto $bb158;
$bb168:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8812, 3} true;
  assume {:verifier.code 0} true;
  $p383 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8812, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p383, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8813, 18} true;
  assume {:verifier.code 0} true;
  $p384 := $add.ref($p0, 297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8813, 18} true;
  assume {:verifier.code 0} true;
  $i385 := $load.i8($M.0, $p384);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8813, 7} true;
  assume {:verifier.code 0} true;
  $i386 := $zext.i8.i32($i385);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8813, 25} true;
  assume {:verifier.code 0} true;
  $i387 := $and.i32($i386, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8813, 25} true;
  assume {:verifier.code 0} true;
  $i388 := $ne.i32($i387, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8813, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i388} true;
  goto $bb169, $bb170;
$bb169:
  assume ($i388 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8814, 5} true;
  assume {:verifier.code 0} true;
  $p389 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8814, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p389, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8815, 3} true;
  assume {:verifier.code 0} true;
  goto $bb171;
$bb170:
  assume !(($i388 == 1));
  assume {:verifier.code 0} true;
  goto $bb171;
$bb171:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8819, 3} true;
  assume {:verifier.code 0} true;
  $p390 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8819, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p390, 12);
  // WARNING: store i8 12, i8* %454, align 4, !dbg !6319, !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8821, 24} true;
  assume {:verifier.code 0} true;
  $p391 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8821, 24} true;
  assume {:verifier.code 0} true;
  $p392 := $load.ref($M.0, $p391);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8821, 33} true;
  assume {:verifier.code 0} true;
  $p393 := $add.ref($p392, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8821, 33} true;
  assume {:verifier.code 0} true;
  $p394 := $load.ref($M.0, $p393);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8821, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p394, 0, 12, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8822, 14} true;
  assume {:verifier.code 0} true;
  $i395 := $eq.i32($i1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8822, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i395} true;
  goto $bb172, $bb173;
$bb172:
  assume ($i395 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 55} true;
  assume {:verifier.code 0} true;
  $i396 := $trunc.i64.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 39} true;
  assume {:verifier.code 0} true;
  $i397 := $zext.i8.i32($i396);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 76} true;
  assume {:verifier.code 0} true;
  $i398 := $and.i32($i397, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 82} true;
  assume {:verifier.code 0} true;
  $i399 := $shl.i32($i398, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 38} true;
  assume {:verifier.code 0} true;
  $i400 := $trunc.i32.i8($i399);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 13} true;
  assume {:verifier.code 0} true;
  $p401 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 13} true;
  assume {:verifier.code 0} true;
  $p402 := $load.ref($M.0, $p401);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 22} true;
  assume {:verifier.code 0} true;
  $p403 := $add.ref($p402, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 22} true;
  assume {:verifier.code 0} true;
  $p404 := $load.ref($M.0, $p403);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 29} true;
  assume {:verifier.code 0} true;
  $p405 := $add.ref($p404, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8823, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p405, $i400);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8824, 3} true;
  assume {:verifier.code 0} true;
  goto $bb174;
$bb173:
  assume !(($i395 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 49} true;
  assume {:verifier.code 0} true;
  $p406 := $add.ref($p0, 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 49} true;
  assume {:verifier.code 0} true;
  $i407 := $load.i8($M.0, $p406);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 38} true;
  assume {:verifier.code 0} true;
  $i408 := $zext.i8.i32($i407);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 60} true;
  assume {:verifier.code 0} true;
  $i409 := $shl.i32($i408, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 38} true;
  assume {:verifier.code 0} true;
  $i410 := $trunc.i32.i8($i409);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 13} true;
  assume {:verifier.code 0} true;
  $p411 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 13} true;
  assume {:verifier.code 0} true;
  $p412 := $load.ref($M.0, $p411);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 22} true;
  assume {:verifier.code 0} true;
  $p413 := $add.ref($p412, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 22} true;
  assume {:verifier.code 0} true;
  $p414 := $load.ref($M.0, $p413);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 29} true;
  assume {:verifier.code 0} true;
  $p415 := $add.ref($p414, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8825, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p415, $i410);
  assume {:verifier.code 0} true;
  goto $bb174;
$bb174:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8827, 11} true;
  assume {:verifier.code 0} true;
  $p416 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8827, 11} true;
  assume {:verifier.code 0} true;
  $p417 := $load.ref($M.0, $p416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8827, 20} true;
  assume {:verifier.code 0} true;
  $p418 := $add.ref($p417, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8827, 20} true;
  assume {:verifier.code 0} true;
  $p419 := $load.ref($M.0, $p418);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8827, 27} true;
  assume {:verifier.code 0} true;
  $p420 := $add.ref($p419, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8827, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p420, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8828, 14} true;
  assume {:verifier.code 0} true;
  $i421 := $eq.i32($i1, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8828, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i421} true;
  goto $bb175, $bb176;
$bb175:
  assume ($i421 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8829, 38} true;
  assume {:verifier.code 0} true;
  $i422 := $trunc.i64.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8829, 13} true;
  assume {:verifier.code 0} true;
  $p423 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8829, 13} true;
  assume {:verifier.code 0} true;
  $p424 := $load.ref($M.0, $p423);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8829, 22} true;
  assume {:verifier.code 0} true;
  $p425 := $add.ref($p424, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8829, 22} true;
  assume {:verifier.code 0} true;
  $p426 := $load.ref($M.0, $p425);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8829, 29} true;
  assume {:verifier.code 0} true;
  $p427 := $add.ref($p426, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8829, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p427, $i422);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8830, 10} true;
  assume {:verifier.code 0} true;
  $p428 := $add.ref($p0, 630);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8830, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p428, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8831, 3} true;
  assume {:verifier.code 0} true;
  goto $bb177;
$bb176:
  assume !(($i421 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8832, 14} true;
  assume {:verifier.code 0} true;
  $i429 := $eq.i32($i1, 65537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8832, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i429} true;
  goto $bb178, $bb179;
$bb177:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8837, 14} true;
  assume {:verifier.code 0} true;
  $i444 := $eq.i32($i1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8837, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i444} true;
  goto $bb181, $bb183;
$bb178:
  assume ($i429 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8833, 59} true;
  assume {:verifier.code 0} true;
  $i430 := $lshr.i64($i2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8833, 38} true;
  assume {:verifier.code 0} true;
  $i431 := $trunc.i64.i8($i430);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8833, 13} true;
  assume {:verifier.code 0} true;
  $p432 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8833, 13} true;
  assume {:verifier.code 0} true;
  $p433 := $load.ref($M.0, $p432);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8833, 22} true;
  assume {:verifier.code 0} true;
  $p434 := $add.ref($p433, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8833, 22} true;
  assume {:verifier.code 0} true;
  $p435 := $load.ref($M.0, $p434);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8833, 29} true;
  assume {:verifier.code 0} true;
  $p436 := $add.ref($p435, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8833, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p436, $i431);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8834, 3} true;
  assume {:verifier.code 0} true;
  goto $bb180;
$bb179:
  assume !(($i429 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8835, 43} true;
  assume {:verifier.code 0} true;
  $p437 := $add.ref($p0, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8835, 43} true;
  assume {:verifier.code 0} true;
  $i438 := $load.i8($M.0, $p437);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8835, 13} true;
  assume {:verifier.code 0} true;
  $p439 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8835, 13} true;
  assume {:verifier.code 0} true;
  $p440 := $load.ref($M.0, $p439);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8835, 22} true;
  assume {:verifier.code 0} true;
  $p441 := $add.ref($p440, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8835, 22} true;
  assume {:verifier.code 0} true;
  $p442 := $load.ref($M.0, $p441);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8835, 29} true;
  assume {:verifier.code 0} true;
  $p443 := $add.ref($p442, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8835, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p443, $i438);
  assume {:verifier.code 0} true;
  goto $bb180;
$bb180:
  assume {:verifier.code 0} true;
  goto $bb177;
$bb181:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8837, 21} true;
  assume {:verifier.code 0} true;
  assume ($i444 == 1);
  goto $bb182;
$bb182:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8838, 23} true;
  assume {:verifier.code 0} true;
  $i446 := $and.i64($i2, 16777215);
  // WARNING: %521 = and i64 %2, 16777215, !dbg !6384, !verifier.code !5777
  call {:cexpr "ltmp"} boogie_si_record_i64($i446);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8839, 16} true;
  assume {:verifier.code 0} true;
  $i447 := $eq.i32($i1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8839, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i447} true;
  goto $bb186, $bb187;
$bb183:
  assume !(($i444 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8837, 31} true;
  assume {:verifier.code 0} true;
  $i445 := $eq.i32($i1, 65537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8837, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i445} true;
  goto $bb184, $bb185;
$bb184:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8837, 7} true;
  assume {:verifier.code 0} true;
  assume ($i445 == 1);
  goto $bb182;
$bb185:
  assume !(($i445 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8845, 24} true;
  assume {:verifier.code 0} true;
  $p450 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8845, 24} true;
  assume {:verifier.code 0} true;
  $i451 := $load.i32($M.0, $p450);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8845, 12} true;
  assume {:verifier.code 0} true;
  $i452 := $sext.i32.i64($i451);
  // WARNING: %530 = sext i32 %529 to i64, !dbg !6396, !verifier.code !5777
  call {:cexpr "ltmp"} boogie_si_record_i64($i452);
  assume {:verifier.code 0} true;
  $i449 := $i452;
  goto $bb189;
$bb186:
  assume ($i447 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8840, 12} true;
  assume {:verifier.code 0} true;
  $p448 := $add.ref($p0, 629);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8840, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p448, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8841, 5} true;
  assume {:verifier.code 0} true;
  goto $bb188;
$bb187:
  assume !(($i447 == 1));
  assume {:verifier.code 0} true;
  goto $bb188;
$bb188:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8844, 3} true;
  assume {:verifier.code 0} true;
  $i449 := $i446;
  goto $bb189;
$bb189:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8847, 58} true;
  assume {:verifier.code 0} true;
  $i453 := $ashr.i64($i449, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8847, 36} true;
  assume {:verifier.code 0} true;
  $i454 := $trunc.i64.i8($i453);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8847, 11} true;
  assume {:verifier.code 0} true;
  $p455 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8847, 11} true;
  assume {:verifier.code 0} true;
  $p456 := $load.ref($M.0, $p455);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8847, 20} true;
  assume {:verifier.code 0} true;
  $p457 := $add.ref($p456, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8847, 20} true;
  assume {:verifier.code 0} true;
  $p458 := $load.ref($M.0, $p457);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8847, 27} true;
  assume {:verifier.code 0} true;
  $p459 := $add.ref($p458, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8847, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p459, $i454);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8848, 59} true;
  assume {:verifier.code 0} true;
  $i460 := $ashr.i64($i449, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8848, 37} true;
  assume {:verifier.code 0} true;
  $i461 := $trunc.i64.i8($i460);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8848, 11} true;
  assume {:verifier.code 0} true;
  $p462 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8848, 11} true;
  assume {:verifier.code 0} true;
  $p463 := $load.ref($M.0, $p462);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8848, 20} true;
  assume {:verifier.code 0} true;
  $p464 := $add.ref($p463, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8848, 20} true;
  assume {:verifier.code 0} true;
  $p465 := $load.ref($M.0, $p464);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8848, 27} true;
  assume {:verifier.code 0} true;
  $p466 := $add.ref($p465, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8848, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p466, $i461);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8849, 37} true;
  assume {:verifier.code 0} true;
  $i467 := $trunc.i64.i8($i449);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8849, 11} true;
  assume {:verifier.code 0} true;
  $p468 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8849, 11} true;
  assume {:verifier.code 0} true;
  $p469 := $load.ref($M.0, $p468);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8849, 20} true;
  assume {:verifier.code 0} true;
  $p470 := $add.ref($p469, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8849, 20} true;
  assume {:verifier.code 0} true;
  $p471 := $load.ref($M.0, $p470);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8849, 27} true;
  assume {:verifier.code 0} true;
  $p472 := $add.ref($p471, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8849, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p472, $i467);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8850, 26} true;
  assume {:verifier.code 0} true;
  $p473 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8850, 26} true;
  assume {:verifier.code 0} true;
  $p474 := $load.ref($M.0, $p473);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8850, 35} true;
  assume {:verifier.code 0} true;
  $p475 := $add.ref($p474, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8850, 35} true;
  assume {:verifier.code 0} true;
  $p476 := $load.ref($M.0, $p475);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8850, 51} true;
  assume {:verifier.code 0} true;
  $p477 := $add.ref($p476, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8850, 51} true;
  assume {:verifier.code 0} true;
  $i478 := $load.i32($M.0, $p477);
  // WARNING: %557 = load i32, i32* %556, align 8, !dbg !6416, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i478);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8851, 7} true;
  assume {:verifier.code 0} true;
  $i479 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8851, 17} true;
  assume {:verifier.code 0} true;
  $i480 := $ne.i32($i479, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8851, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i480} true;
  goto $bb190, $bb191;
$bb190:
  assume ($i480 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8852, 16} true;
  assume {:verifier.code 0} true;
  $i481 := $eq.i32($i1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8852, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i481} true;
  goto $bb192, $bb194;
$bb191:
  assume !(($i480 == 1));
  assume {:verifier.code 0} true;
  goto $bb207;
$bb192:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8852, 23} true;
  assume {:verifier.code 0} true;
  assume ($i481 == 1);
  goto $bb193;
$bb193:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8853, 17} true;
  assume {:verifier.code 0} true;
  call $p483 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8854, 67} true;
  assume {:verifier.code 0} true;
  $p484 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8854, 67} true;
  assume {:verifier.code 0} true;
  $p485 := $load.ref($M.0, $p484);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 78} true;
  assume {:verifier.code 0} true;
  $p486 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 78} true;
  assume {:verifier.code 0} true;
  $p487 := $load.ref($M.0, $p486);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 87} true;
  assume {:verifier.code 0} true;
  $p488 := $add.ref($p487, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 87} true;
  assume {:verifier.code 0} true;
  $p489 := $load.ref($M.0, $p488);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 94} true;
  assume {:verifier.code 0} true;
  $p490 := $add.ref($p489, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 70} true;
  assume {:verifier.code 0} true;
  $i491 := $load.i8($M.0, $p490);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 64} true;
  assume {:verifier.code 0} true;
  $i492 := $zext.i8.i32($i491);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 101} true;
  assume {:verifier.code 0} true;
  $i493 := $mul.i32($i492, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 123} true;
  assume {:verifier.code 0} true;
  $p494 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 123} true;
  assume {:verifier.code 0} true;
  $p495 := $load.ref($M.0, $p494);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 132} true;
  assume {:verifier.code 0} true;
  $p496 := $add.ref($p495, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 132} true;
  assume {:verifier.code 0} true;
  $p497 := $load.ref($M.0, $p496);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 139} true;
  assume {:verifier.code 0} true;
  $p498 := $add.ref($p497, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 115} true;
  assume {:verifier.code 0} true;
  $i499 := $load.i8($M.0, $p498);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 109} true;
  assume {:verifier.code 0} true;
  $i500 := $zext.i8.i32($i499);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 107} true;
  assume {:verifier.code 0} true;
  $i501 := $add.i32($i493, $i500);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 148} true;
  assume {:verifier.code 0} true;
  $i502 := $mul.i32($i501, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 170} true;
  assume {:verifier.code 0} true;
  $p503 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 170} true;
  assume {:verifier.code 0} true;
  $p504 := $load.ref($M.0, $p503);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 179} true;
  assume {:verifier.code 0} true;
  $p505 := $add.ref($p504, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 179} true;
  assume {:verifier.code 0} true;
  $p506 := $load.ref($M.0, $p505);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 186} true;
  assume {:verifier.code 0} true;
  $p507 := $add.ref($p506, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 162} true;
  assume {:verifier.code 0} true;
  $i508 := $load.i8($M.0, $p507);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 156} true;
  assume {:verifier.code 0} true;
  $i509 := $zext.i8.i32($i508);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8855, 154} true;
  assume {:verifier.code 0} true;
  $i510 := $add.i32($i502, $i509);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8854, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p485, $p483, .str.123, $i510);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8856, 5} true;
  assume {:verifier.code 0} true;
  goto $bb197;
$bb194:
  assume !(($i481 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8852, 33} true;
  assume {:verifier.code 0} true;
  $i482 := $eq.i32($i1, 65537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8852, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i482} true;
  goto $bb195, $bb196;
$bb195:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8852, 9} true;
  assume {:verifier.code 0} true;
  assume ($i482 == 1);
  goto $bb193;
$bb196:
  assume !(($i482 == 1));
  assume {:verifier.code 0} true;
  goto $bb197;
$bb197:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8859, 16} true;
  assume {:verifier.code 0} true;
  $i511 := $eq.i32($i1, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8859, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i511} true;
  goto $bb198, $bb200;
$bb198:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8859, 23} true;
  assume {:verifier.code 0} true;
  assume ($i511 == 1);
  goto $bb199;
$bb199:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8860, 17} true;
  assume {:verifier.code 0} true;
  call $p513 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8861, 67} true;
  assume {:verifier.code 0} true;
  $p514 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8861, 67} true;
  assume {:verifier.code 0} true;
  $p515 := $load.ref($M.0, $p514);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8862, 73} true;
  assume {:verifier.code 0} true;
  $p516 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8862, 73} true;
  assume {:verifier.code 0} true;
  $p517 := $load.ref($M.0, $p516);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8862, 82} true;
  assume {:verifier.code 0} true;
  $p518 := $add.ref($p517, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8862, 82} true;
  assume {:verifier.code 0} true;
  $p519 := $load.ref($M.0, $p518);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8862, 89} true;
  assume {:verifier.code 0} true;
  $p520 := $add.ref($p519, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8862, 65} true;
  assume {:verifier.code 0} true;
  $i521 := $load.i8($M.0, $p520);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8862, 59} true;
  assume {:verifier.code 0} true;
  $i522 := $zext.i8.i32($i521);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8861, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p515, $p513, .str.124, $i522);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8863, 5} true;
  assume {:verifier.code 0} true;
  goto $bb203;
$bb200:
  assume !(($i511 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8859, 33} true;
  assume {:verifier.code 0} true;
  $i512 := $eq.i32($i1, 65537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8859, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i512} true;
  goto $bb201, $bb202;
$bb201:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8859, 9} true;
  assume {:verifier.code 0} true;
  assume ($i512 == 1);
  goto $bb199;
$bb202:
  assume !(($i512 == 1));
  assume {:verifier.code 0} true;
  goto $bb203;
$bb203:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8866, 16} true;
  assume {:verifier.code 0} true;
  $i523 := $eq.i32($i1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8866, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i523} true;
  goto $bb204, $bb205;
$bb204:
  assume ($i523 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8867, 18} true;
  assume {:verifier.code 0} true;
  call $p524 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8868, 67} true;
  assume {:verifier.code 0} true;
  $p525 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8868, 67} true;
  assume {:verifier.code 0} true;
  $p526 := $load.ref($M.0, $p525);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8869, 79} true;
  assume {:verifier.code 0} true;
  $p527 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8869, 79} true;
  assume {:verifier.code 0} true;
  $p528 := $load.ref($M.0, $p527);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8869, 88} true;
  assume {:verifier.code 0} true;
  $p529 := $add.ref($p528, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8869, 88} true;
  assume {:verifier.code 0} true;
  $p530 := $load.ref($M.0, $p529);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8869, 95} true;
  assume {:verifier.code 0} true;
  $p531 := $add.ref($p530, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8869, 71} true;
  assume {:verifier.code 0} true;
  $i532 := $load.i8($M.0, $p531);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8869, 65} true;
  assume {:verifier.code 0} true;
  $i533 := $zext.i8.i32($i532);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8869, 102} true;
  assume {:verifier.code 0} true;
  $i534 := $ashr.i32($i533, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8869, 108} true;
  assume {:verifier.code 0} true;
  $i535 := $and.i32($i534, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8868, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p526, $p524, .str.125, $i535);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8870, 5} true;
  assume {:verifier.code 0} true;
  goto $bb206;
$bb205:
  assume !(($i523 == 1));
  assume {:verifier.code 0} true;
  goto $bb206;
$bb206:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8873, 3} true;
  assume {:verifier.code 0} true;
  goto $bb207;
$bb207:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8876, 3} true;
  assume {:verifier.code 0} true;
  $i91, $i92, $i93, $i94, $i95, $i96, $i97 := $i40, $i38, $i43, 0, $i478, 12, 1;
  goto $bb74;
$bb208:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8878, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $sub.i32(0, 38);
  goto $bb8;
$bb209:
  assume ($i539 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8884, 19} true;
  assume {:verifier.code 0} true;
  $p540 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8884, 19} true;
  assume {:verifier.code 0} true;
  $p541 := $load.ref($M.0, $p540);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8884, 28} true;
  assume {:verifier.code 0} true;
  $p542 := $add.ref($p541, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8884, 28} true;
  assume {:verifier.code 0} true;
  $i543 := $load.i32($M.0, $p542);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8884, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $i543;
  goto $bb8;
$bb210:
  assume !(($i539 == 1));
  assume {:verifier.code 0} true;
  goto $bb211;
$bb211:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8888, 24} true;
  assume {:verifier.code 0} true;
  $p544 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8888, 24} true;
  assume {:verifier.code 0} true;
  $p545 := $load.ref($M.0, $p544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8888, 33} true;
  assume {:verifier.code 0} true;
  $p546 := $add.ref($p545, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8888, 33} true;
  assume {:verifier.code 0} true;
  $i547 := $load.i32($M.0, $p546);
  // WARNING: %645 = load i32, i32* %644, align 8, !dbg !6505, !verifier.code !5777
  call {:cexpr "ioctl_result"} boogie_si_record_i32($i547);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8889, 20} true;
  assume {:verifier.code 0} true;
  $i548 := $eq.i32($i547, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8889, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i548} true;
  goto $bb212, $bb213;
$bb212:
  assume ($i548 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8890, 5} true;
  assume {:verifier.code 0} true;
  call st_release_request($p537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8892, 11} true;
  assume {:verifier.code 0} true;
  $p549 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8892, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p549, $i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8893, 11} true;
  assume {:verifier.code 0} true;
  $p550 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8893, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p550, $i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8894, 19} true;
  assume {:verifier.code 0} true;
  $i551 := $trunc.i32.i8($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8894, 11} true;
  assume {:verifier.code 0} true;
  $p552 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8894, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p552, $i551);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8895, 16} true;
  assume {:verifier.code 0} true;
  $i553 := $eq.i32($i1, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8895, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i553} true;
  goto $bb214, $bb215;
$bb213:
  assume !(($i548 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8944, 24} true;
  assume {:verifier.code 0} true;
  $p606 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8944, 24} true;
  assume {:verifier.code 0} true;
  $p607 := $load.ref($M.0, $p606);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8944, 33} true;
  assume {:verifier.code 0} true;
  $p608 := $add.ref($p607, 40);
  $p609 := $add.ref($add.ref($p607, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8945, 26} true;
  assume {:verifier.code 0} true;
  $i610 := $load.i8($M.0, $p609);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8945, 10} true;
  assume {:verifier.code 0} true;
  $i611 := $zext.i8.i32($i610);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8945, 32} true;
  assume {:verifier.code 0} true;
  $i612 := $and.i32($i611, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8945, 38} true;
  assume {:verifier.code 0} true;
  $i613 := $ne.i32($i612, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8945, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i613} true;
  goto $bb254, $bb255;
$bb214:
  assume ($i553 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8896, 22} true;
  assume {:verifier.code 0} true;
  call $i554 := st_int_ioctl($p0, 1, 1);
  // WARNING: %654 = call i32 @st_int_ioctl(%struct.scsi_tape* %0, i32 1, i64 1), !dbg !6521, !verifier.code !5777
  call {:cexpr "ioctl_result"} boogie_si_record_i32($i554);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8897, 5} true;
  assume {:verifier.code 0} true;
  $i555 := $i554;
  goto $bb216;
$bb215:
  assume !(($i553 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8898, 16} true;
  assume {:verifier.code 0} true;
  $i556 := $eq.i32($i1, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8898, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i556} true;
  goto $bb217, $bb218;
$bb216:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8903, 16} true;
  assume {:verifier.code 0} true;
  $i559 := $eq.i32($i1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8903, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i559} true;
  goto $bb220, $bb222;
$bb217:
  assume ($i556 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8899, 22} true;
  assume {:verifier.code 0} true;
  call $i557 := st_int_ioctl($p0, 2, 1);
  // WARNING: %658 = call i32 @st_int_ioctl(%struct.scsi_tape* %0, i32 2, i64 1), !dbg !6527, !verifier.code !5777
  call {:cexpr "ioctl_result"} boogie_si_record_i32($i557);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8900, 5} true;
  assume {:verifier.code 0} true;
  $i558 := $i557;
  goto $bb219;
$bb218:
  assume !(($i556 == 1));
  assume {:verifier.code 0} true;
  $i558 := $i547;
  goto $bb219;
$bb219:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i555 := $i558;
  goto $bb216;
$bb220:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8903, 23} true;
  assume {:verifier.code 0} true;
  assume ($i559 == 1);
  goto $bb221;
$bb221:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8904, 25} true;
  assume {:verifier.code 0} true;
  $i561 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8904, 35} true;
  assume {:verifier.code 0} true;
  $i562 := $and.i32($i561, 16777215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8904, 12} true;
  assume {:verifier.code 0} true;
  $p563 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8904, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p563, $i562);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8905, 16} true;
  assume {:verifier.code 0} true;
  $p564 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8905, 16} true;
  assume {:verifier.code 0} true;
  $i565 := $load.i32($M.0, $p564);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8905, 27} true;
  assume {:verifier.code 0} true;
  $i566 := $ne.i32($i565, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8905, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i566} true;
  goto $bb225, $bb226;
$bb222:
  assume !(($i559 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8903, 33} true;
  assume {:verifier.code 0} true;
  $i560 := $eq.i32($i1, 65537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8903, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i560} true;
  goto $bb223, $bb224;
$bb223:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8903, 9} true;
  assume {:verifier.code 0} true;
  assume ($i560 == 1);
  goto $bb221;
$bb224:
  assume !(($i560 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8919, 16} true;
  assume {:verifier.code 0} true;
  $i587 := $eq.i32($i1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8919, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i587} true;
  goto $bb232, $bb233;
$bb225:
  assume ($i566 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 46} true;
  assume {:verifier.code 0} true;
  $p567 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 46} true;
  assume {:verifier.code 0} true;
  $p568 := $load.ref($M.0, $p567);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 55} true;
  assume {:verifier.code 0} true;
  $p569 := $add.ref($p568, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 55} true;
  assume {:verifier.code 0} true;
  $i570 := $load.i32($M.0, $p569);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 74} true;
  assume {:verifier.code 0} true;
  $p571 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 74} true;
  assume {:verifier.code 0} true;
  $i572 := $load.i32($M.0, $p571);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 67} true;
  assume {:verifier.code 0} true;
  $i573 := $sdiv.i32($i570, $i572);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 15} true;
  assume {:verifier.code 0} true;
  $p574 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 15} true;
  assume {:verifier.code 0} true;
  $p575 := $load.ref($M.0, $p574);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 24} true;
  assume {:verifier.code 0} true;
  $p576 := $add.ref($p575, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8906, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p576, $i573);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8907, 7} true;
  assume {:verifier.code 0} true;
  goto $bb227;
$bb226:
  assume !(($i566 == 1));
  assume {:verifier.code 0} true;
  goto $bb227;
$bb227:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8911, 13} true;
  assume {:verifier.code 0} true;
  $p577 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8911, 13} true;
  assume {:verifier.code 0} true;
  $p578 := $load.ref($M.0, $p577);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8911, 22} true;
  assume {:verifier.code 0} true;
  $p579 := $add.ref($p578, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8911, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p579, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8912, 13} true;
  assume {:verifier.code 0} true;
  $p580 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8912, 13} true;
  assume {:verifier.code 0} true;
  $p581 := $load.ref($M.0, $p580);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8912, 22} true;
  assume {:verifier.code 0} true;
  $p582 := $add.ref($p581, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8912, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p582, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8913, 18} true;
  assume {:verifier.code 0} true;
  $i583 := $eq.i32($i1, 65537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8913, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i583} true;
  goto $bb228, $bb229;
$bb228:
  assume ($i583 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8914, 45} true;
  assume {:verifier.code 0} true;
  $i584 := $lshr.i64($i2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8914, 24} true;
  assume {:verifier.code 0} true;
  $i585 := $trunc.i64.i8($i584);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8914, 14} true;
  assume {:verifier.code 0} true;
  $p586 := $add.ref($p0, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8914, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p586, $i585);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8915, 7} true;
  assume {:verifier.code 0} true;
  goto $bb230;
$bb229:
  assume !(($i583 == 1));
  assume {:verifier.code 0} true;
  goto $bb230;
$bb230:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8918, 5} true;
  assume {:verifier.code 0} true;
  goto $bb231;
$bb231:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8927, 16} true;
  assume {:verifier.code 0} true;
  $i596 := $eq.i32($i1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8927, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i596} true;
  goto $bb238, $bb239;
$bb232:
  assume ($i587 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8920, 41} true;
  assume {:verifier.code 0} true;
  $i588 := $trunc.i64.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8920, 25} true;
  assume {:verifier.code 0} true;
  $i589 := $zext.i8.i32($i588);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8920, 62} true;
  assume {:verifier.code 0} true;
  $i590 := $and.i32($i589, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8920, 25} true;
  assume {:verifier.code 0} true;
  $i591 := $trunc.i32.i8($i590);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8920, 12} true;
  assume {:verifier.code 0} true;
  $p592 := $add.ref($p0, 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8920, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p592, $i591);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8921, 5} true;
  assume {:verifier.code 0} true;
  goto $bb234;
$bb233:
  assume !(($i587 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8922, 16} true;
  assume {:verifier.code 0} true;
  $i593 := $eq.i32($i1, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8922, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i593} true;
  goto $bb235, $bb236;
$bb234:
  assume {:verifier.code 0} true;
  goto $bb231;
$bb235:
  assume ($i593 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8923, 22} true;
  assume {:verifier.code 0} true;
  $i594 := $trunc.i64.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8923, 12} true;
  assume {:verifier.code 0} true;
  $p595 := $add.ref($p0, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8923, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p595, $i594);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8924, 5} true;
  assume {:verifier.code 0} true;
  goto $bb237;
$bb236:
  assume !(($i593 == 1));
  assume {:verifier.code 0} true;
  goto $bb237;
$bb237:
  assume {:verifier.code 0} true;
  goto $bb234;
$bb238:
  assume ($i596 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8928, 13} true;
  assume {:verifier.code 0} true;
  $p597 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8928, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p597, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8929, 5} true;
  assume {:verifier.code 0} true;
  goto $bb240;
$bb239:
  assume !(($i596 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8930, 16} true;
  assume {:verifier.code 0} true;
  $i598 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8930, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i598} true;
  goto $bb241, $bb242;
$bb240:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8938, 16} true;
  assume {:verifier.code 0} true;
  $i602 := $eq.i32($i1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8938, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i602} true;
  goto $bb247, $bb249;
$bb241:
  assume ($i598 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8931, 13} true;
  assume {:verifier.code 0} true;
  $p599 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8931, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p599, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8932, 5} true;
  assume {:verifier.code 0} true;
  goto $bb243;
$bb242:
  assume !(($i598 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8933, 17} true;
  assume {:verifier.code 0} true;
  $i600 := $ne.i32($i94, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8933, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i600} true;
  goto $bb244, $bb245;
$bb243:
  assume {:verifier.code 0} true;
  goto $bb240;
$bb244:
  assume ($i600 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8934, 13} true;
  assume {:verifier.code 0} true;
  $p601 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8934, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p601, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8935, 5} true;
  assume {:verifier.code 0} true;
  goto $bb246;
$bb245:
  assume !(($i600 == 1));
  assume {:verifier.code 0} true;
  goto $bb246;
$bb246:
  assume {:verifier.code 0} true;
  goto $bb243;
$bb247:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8938, 22} true;
  assume {:verifier.code 0} true;
  assume ($i602 == 1);
  goto $bb248;
$bb248:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8939, 13} true;
  assume {:verifier.code 0} true;
  $p604 := $add.ref($p32, $mul.ref($i35, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8939, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p604, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8940, 5} true;
  assume {:verifier.code 0} true;
  goto $bb252;
$bb249:
  assume !(($i602 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8938, 32} true;
  assume {:verifier.code 0} true;
  $i603 := $eq.i32($i1, 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8938, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i603} true;
  goto $bb250, $bb251;
$bb250:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8938, 9} true;
  assume {:verifier.code 0} true;
  assume ($i603 == 1);
  goto $bb248;
$bb251:
  assume !(($i603 == 1));
  assume {:verifier.code 0} true;
  goto $bb252;
$bb252:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8943, 3} true;
  assume {:verifier.code 0} true;
  $i605 := $i555;
  goto $bb253;
$bb253:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9066, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $i605;
  goto $bb8;
$bb254:
  assume ($i613 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 20} true;
  assume {:verifier.code 0} true;
  $i614 := $ne.i32($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 26} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i614} true;
  goto $bb256, $bb257;
$bb255:
  assume !(($i613 == 1));
  assume {:verifier.code 0} true;
  goto $bb266;
$bb256:
  assume ($i614 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 36} true;
  assume {:verifier.code 0} true;
  $i615 := $ne.i32($i1, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 44} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i615} true;
  goto $bb259, $bb260;
$bb257:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 26} true;
  assume {:verifier.code 0} true;
  assume !(($i614 == 1));
  goto $bb258;
$bb258:
  assume {:verifier.code 0} true;
  goto $bb265;
$bb259:
  assume ($i615 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 54} true;
  assume {:verifier.code 0} true;
  $i616 := $ne.i32($i1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 61} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i616} true;
  goto $bb261, $bb262;
$bb260:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 44} true;
  assume {:verifier.code 0} true;
  assume !(($i615 == 1));
  goto $bb258;
$bb261:
  assume ($i616 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 71} true;
  assume {:verifier.code 0} true;
  $i617 := $ne.i32($i1, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i617} true;
  goto $bb263, $bb264;
$bb262:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 61} true;
  assume {:verifier.code 0} true;
  assume !(($i616 == 1));
  goto $bb258;
$bb263:
  assume ($i617 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8947, 15} true;
  assume {:verifier.code 0} true;
  $p618 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8947, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p618, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8948, 7} true;
  assume {:verifier.code 0} true;
  goto $bb265;
$bb264:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8946, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i617 == 1));
  goto $bb258;
$bb265:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8951, 13} true;
  assume {:verifier.code 0} true;
  $p619 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8951, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p619, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8952, 5} true;
  assume {:verifier.code 0} true;
  goto $bb266;
$bb266:
  $p620 := $add.ref($add.ref($p607, 40), 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8955, 34} true;
  assume {:verifier.code 0} true;
  $i621 := $load.i8($M.0, $p620);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8955, 9} true;
  assume {:verifier.code 0} true;
  $i622 := $zext.i8.i32($i621);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8955, 50} true;
  assume {:verifier.code 0} true;
  $i623 := $ne.i32($i622, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8955, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i623} true;
  goto $bb267, $bb268;
$bb267:
  assume ($i623 == 1);
  $p624 := $add.ref($add.ref($p607, 40), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8956, 32} true;
  assume {:verifier.code 0} true;
  $i625 := $load.i64($M.0, $p624);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8956, 16} true;
  assume {:verifier.code 0} true;
  $i626 := $trunc.i64.i32($i625);
  // WARNING: %768 = trunc i64 %767 to i32, !dbg !6661, !verifier.code !5777
  call {:cexpr "undone"} boogie_si_record_i32($i626);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8957, 5} true;
  assume {:verifier.code 0} true;
  $i627 := $i626;
  goto $bb269;
$bb268:
  assume !(($i623 == 1));
  assume {:verifier.code 0} true;
  $i627 := 0;
  goto $bb269;
$bb269:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 18} true;
  assume {:verifier.code 0} true;
  $i628 := $eq.i32($i1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i628} true;
  goto $bb270, $bb272;
$bb270:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 24} true;
  assume {:verifier.code 0} true;
  assume ($i628 == 1);
  goto $bb271;
$bb271:
  $p630 := $add.ref($add.ref($p607, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 55} true;
  assume {:verifier.code 0} true;
  $i631 := $load.i32($M.0, $p630);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 66} true;
  assume {:verifier.code 0} true;
  $i632 := $ne.i32($i631, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 72} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i632} true;
  goto $bb276, $bb277;
$bb272:
  assume !(($i628 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 34} true;
  assume {:verifier.code 0} true;
  $i629 := $eq.i32($i1, 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 42} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i629} true;
  goto $bb273, $bb274;
$bb273:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 42} true;
  assume {:verifier.code 0} true;
  assume ($i629 == 1);
  goto $bb271;
$bb274:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 42} true;
  assume {:verifier.code 0} true;
  assume !(($i629 == 1));
  goto $bb275;
$bb275:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8978, 16} true;
  assume {:verifier.code 0} true;
  $i659 := $eq.i32($i1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8978, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i659} true;
  goto $bb293, $bb295;
$bb276:
  assume ($i632 == 1);
  $p633 := $add.ref($add.ref($p607, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 92} true;
  assume {:verifier.code 0} true;
  $i634 := $load.i8($M.0, $p633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 76} true;
  assume {:verifier.code 0} true;
  $i635 := $zext.i8.i32($i634);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 98} true;
  assume {:verifier.code 0} true;
  $i636 := $and.i32($i635, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 104} true;
  assume {:verifier.code 0} true;
  $i637 := $ne.i32($i636, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i637} true;
  goto $bb278, $bb279;
$bb277:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 72} true;
  assume {:verifier.code 0} true;
  assume !(($i632 == 1));
  goto $bb275;
$bb278:
  assume ($i637 == 1);
  $p638 := $add.ref($add.ref($p607, 40), 4);
  $p639 := $add.ref($add.ref($add.ref($p607, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8961, 46} true;
  assume {:verifier.code 0} true;
  $i640 := $load.i8($M.0, $p639);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8961, 11} true;
  assume {:verifier.code 0} true;
  $i641 := $zext.i8.i32($i640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8961, 56} true;
  assume {:verifier.code 0} true;
  $i642 := $eq.i32($i641, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8961, 62} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i642} true;
  goto $bb280, $bb282;
$bb279:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8960, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i637 == 1));
  goto $bb275;
$bb280:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8961, 62} true;
  assume {:verifier.code 0} true;
  assume ($i642 == 1);
  goto $bb281;
$bb281:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8963, 15} true;
  assume {:verifier.code 0} true;
  $p648 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8963, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p648, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8964, 7} true;
  assume {:verifier.code 0} true;
  $i649, $i650 := $i92, 0;
  goto $bb285;
$bb282:
  assume !(($i642 == 1));
  $p643 := $add.ref($add.ref($p607, 40), 4);
  $p644 := $add.ref($add.ref($add.ref($p607, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8961, 100} true;
  assume {:verifier.code 0} true;
  $i645 := $load.i8($M.0, $p644);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8961, 65} true;
  assume {:verifier.code 0} true;
  $i646 := $zext.i8.i32($i645);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8961, 110} true;
  assume {:verifier.code 0} true;
  $i647 := $eq.i32($i646, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8961, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i647} true;
  goto $bb283, $bb284;
$bb283:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8961, 11} true;
  assume {:verifier.code 0} true;
  assume ($i647 == 1);
  goto $bb281;
$bb284:
  assume !(($i647 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8965, 20} true;
  assume {:verifier.code 0} true;
  $i651 := $sge.i32($i92, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8965, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i651} true;
  goto $bb286, $bb287;
$bb285:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8976, 13} true;
  assume {:verifier.code 0} true;
  $p657 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8976, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p657, $i649);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8977, 5} true;
  assume {:verifier.code 0} true;
  $i658 := $i650;
  goto $bb292;
$bb286:
  assume ($i651 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8966, 27} true;
  assume {:verifier.code 0} true;
  $i652 := $sub.i32($i92, $i627);
  // WARNING: %801 = sub nsw i32 %.6, %.051, !dbg !6700, !verifier.code !5777
  call {:cexpr "fileno"} boogie_si_record_i32($i652);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8967, 9} true;
  assume {:verifier.code 0} true;
  $i653 := $i652;
  goto $bb288;
$bb287:
  assume !(($i651 == 1));
  assume {:verifier.code 0} true;
  $i653 := $i92;
  goto $bb288;
$bb288:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8970, 13} true;
  assume {:verifier.code 0} true;
  $i654 := $sext.i32.i64($i627);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8970, 36} true;
  assume {:verifier.code 0} true;
  $i655 := $ult.i64($i654, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8970, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i655} true;
  goto $bb289, $bb290;
$bb289:
  assume ($i655 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8971, 17} true;
  assume {:verifier.code 0} true;
  $p656 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8971, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p656, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8972, 9} true;
  assume {:verifier.code 0} true;
  goto $bb291;
$bb290:
  assume !(($i655 == 1));
  assume {:verifier.code 0} true;
  goto $bb291;
$bb291:
  assume {:verifier.code 0} true;
  $i649, $i650 := $i653, $i547;
  goto $bb285;
$bb292:
  assume {:verifier.code 0} true;
  $p747 := $add.ref($add.ref($p607, 40), 4);
  $p748 := $add.ref($add.ref($add.ref($p607, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9058, 44} true;
  assume {:verifier.code 0} true;
  $i749 := $load.i8($M.0, $p748);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9058, 9} true;
  assume {:verifier.code 0} true;
  $i750 := $zext.i8.i32($i749);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9058, 54} true;
  assume {:verifier.code 0} true;
  $i751 := $eq.i32($i750, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9058, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i751} true;
  goto $bb366, $bb367;
$bb293:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8978, 22} true;
  assume {:verifier.code 0} true;
  assume ($i659 == 1);
  goto $bb294;
$bb294:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8979, 18} true;
  assume {:verifier.code 0} true;
  $i661 := $sge.i32($i92, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8979, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i661} true;
  goto $bb298, $bb299;
$bb295:
  assume !(($i659 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8978, 32} true;
  assume {:verifier.code 0} true;
  $i660 := $eq.i32($i1, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8978, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i660} true;
  goto $bb296, $bb297;
$bb296:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8978, 9} true;
  assume {:verifier.code 0} true;
  assume ($i660 == 1);
  goto $bb294;
$bb297:
  assume !(($i660 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8987, 16} true;
  assume {:verifier.code 0} true;
  $i667 := $eq.i32($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8987, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i667} true;
  goto $bb302, $bb304;
$bb298:
  assume ($i661 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8980, 33} true;
  assume {:verifier.code 0} true;
  $i662 := $sub.i32($i92, $i627);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8980, 15} true;
  assume {:verifier.code 0} true;
  $p663 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8980, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p663, $i662);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8981, 7} true;
  assume {:verifier.code 0} true;
  goto $bb300;
$bb299:
  assume !(($i661 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8982, 15} true;
  assume {:verifier.code 0} true;
  $p664 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8982, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p664, $i92);
  assume {:verifier.code 0} true;
  goto $bb300;
$bb300:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8984, 13} true;
  assume {:verifier.code 0} true;
  $p665 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8984, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p665, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8985, 13} true;
  assume {:verifier.code 0} true;
  $p666 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8985, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p666, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8986, 5} true;
  assume {:verifier.code 0} true;
  goto $bb301;
$bb301:
  assume {:verifier.code 0} true;
  $i658 := $i547;
  goto $bb292;
$bb302:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8987, 22} true;
  assume {:verifier.code 0} true;
  assume ($i667 == 1);
  goto $bb303;
$bb303:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8988, 15} true;
  assume {:verifier.code 0} true;
  $i669 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8988, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i669} true;
  goto $bb307, $bb308;
$bb304:
  assume !(($i667 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8987, 32} true;
  assume {:verifier.code 0} true;
  $i668 := $eq.i32($i1, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8987, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i668} true;
  goto $bb305, $bb306;
$bb305:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8987, 9} true;
  assume {:verifier.code 0} true;
  assume ($i668 == 1);
  goto $bb303;
$bb306:
  assume !(($i668 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9001, 16} true;
  assume {:verifier.code 0} true;
  $i680 := $eq.i32($i1, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9001, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i680} true;
  goto $bb317, $bb318;
$bb307:
  assume ($i669 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8988, 32} true;
  assume {:verifier.code 0} true;
  $i670 := $slt.i32($i627, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8988, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i670} true;
  goto $bb310, $bb311;
$bb308:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8988, 22} true;
  assume {:verifier.code 0} true;
  assume !(($i669 == 1));
  goto $bb309;
$bb309:
  assume {:verifier.code 0} true;
  $i672 := $i627;
  goto $bb312;
$bb310:
  assume ($i670 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8989, 18} true;
  assume {:verifier.code 0} true;
  $i671 := $sub.i32(0, $i627);
  // WARNING: %835 = sub nsw i32 0, %.051, !dbg !6750, !verifier.code !5777
  call {:cexpr "undone"} boogie_si_record_i32($i671);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8990, 7} true;
  assume {:verifier.code 0} true;
  $i672 := $i671;
  goto $bb312;
$bb311:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8988, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i670 == 1));
  goto $bb309;
$bb312:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8993, 17} true;
  assume {:verifier.code 0} true;
  $p673 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8993, 17} true;
  assume {:verifier.code 0} true;
  $i674 := $load.i32($M.0, $p673);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8993, 26} true;
  assume {:verifier.code 0} true;
  $i675 := $sge.i32($i674, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8993, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i675} true;
  goto $bb313, $bb314;
$bb313:
  assume ($i675 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8994, 33} true;
  assume {:verifier.code 0} true;
  $i676 := $add.i32($i92, $i672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8994, 15} true;
  assume {:verifier.code 0} true;
  $p677 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8994, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p677, $i676);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8995, 7} true;
  assume {:verifier.code 0} true;
  goto $bb315;
$bb314:
  assume !(($i675 == 1));
  assume {:verifier.code 0} true;
  goto $bb315;
$bb315:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8998, 13} true;
  assume {:verifier.code 0} true;
  $p678 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8998, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p678, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8999, 13} true;
  assume {:verifier.code 0} true;
  $p679 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8999, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p679, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9000, 5} true;
  assume {:verifier.code 0} true;
  goto $bb316;
$bb316:
  assume {:verifier.code 0} true;
  goto $bb301;
$bb317:
  assume ($i680 == 1);
  $p681 := $add.ref($add.ref($p607, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9002, 42} true;
  assume {:verifier.code 0} true;
  $i682 := $load.i8($M.0, $p681);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9002, 11} true;
  assume {:verifier.code 0} true;
  $i683 := $sext.i8.i32($i682);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9002, 49} true;
  assume {:verifier.code 0} true;
  $i684 := $slt.i32($i683, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9002, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i684} true;
  goto $bb319, $bb320;
$bb318:
  assume !(($i680 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9019, 16} true;
  assume {:verifier.code 0} true;
  $i699 := $eq.i32($i1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9019, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i699} true;
  goto $bb329, $bb330;
$bb319:
  assume ($i684 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9003, 19} true;
  assume {:verifier.code 0} true;
  $p685 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9003, 19} true;
  assume {:verifier.code 0} true;
  $i686 := $load.i32($M.0, $p685);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9003, 28} true;
  assume {:verifier.code 0} true;
  $i687 := $sge.i32($i686, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9003, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i687} true;
  goto $bb321, $bb322;
$bb320:
  assume !(($i684 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9011, 19} true;
  assume {:verifier.code 0} true;
  $i694 := $sge.i32($i91, $i627);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9011, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i694} true;
  goto $bb325, $bb326;
$bb321:
  assume ($i687 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9004, 34} true;
  assume {:verifier.code 0} true;
  $p688 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9004, 34} true;
  assume {:verifier.code 0} true;
  $i689 := $load.i32($M.0, $p688);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9004, 43} true;
  assume {:verifier.code 0} true;
  $i690 := $add.i32($i689, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9004, 17} true;
  assume {:verifier.code 0} true;
  $p691 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9004, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p691, $i690);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9005, 9} true;
  assume {:verifier.code 0} true;
  goto $bb323;
$bb322:
  assume !(($i687 == 1));
  assume {:verifier.code 0} true;
  goto $bb323;
$bb323:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9008, 15} true;
  assume {:verifier.code 0} true;
  $p692 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9008, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p692, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9009, 15} true;
  assume {:verifier.code 0} true;
  $p693 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9009, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p693, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9010, 7} true;
  assume {:verifier.code 0} true;
  goto $bb324;
$bb324:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9018, 5} true;
  assume {:verifier.code 0} true;
  goto $bb328;
$bb325:
  assume ($i694 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9012, 35} true;
  assume {:verifier.code 0} true;
  $i695 := $sub.i32($i91, $i627);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9012, 17} true;
  assume {:verifier.code 0} true;
  $p696 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9012, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p696, $i695);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9013, 9} true;
  assume {:verifier.code 0} true;
  goto $bb327;
$bb326:
  assume !(($i694 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9014, 17} true;
  assume {:verifier.code 0} true;
  $p697 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9014, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p697, $sub.i32(0, 1));
  assume {:verifier.code 0} true;
  goto $bb327;
$bb327:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9016, 15} true;
  assume {:verifier.code 0} true;
  $p698 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9016, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p698, 0);
  assume {:verifier.code 0} true;
  goto $bb324;
$bb328:
  assume {:verifier.code 0} true;
  goto $bb316;
$bb329:
  assume ($i699 == 1);
  $p700 := $add.ref($add.ref($p607, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9020, 42} true;
  assume {:verifier.code 0} true;
  $i701 := $load.i8($M.0, $p700);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9020, 11} true;
  assume {:verifier.code 0} true;
  $i702 := $sext.i8.i32($i701);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9020, 49} true;
  assume {:verifier.code 0} true;
  $i703 := $slt.i32($i702, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9020, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i703} true;
  goto $bb331, $bb332;
$bb330:
  assume !(($i699 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9037, 16} true;
  assume {:verifier.code 0} true;
  $i719 := $eq.i32($i1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9037, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i719} true;
  goto $bb344, $bb345;
$bb331:
  assume ($i703 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9021, 32} true;
  assume {:verifier.code 0} true;
  $p704 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9021, 32} true;
  assume {:verifier.code 0} true;
  $i705 := $load.i32($M.0, $p704);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9021, 41} true;
  assume {:verifier.code 0} true;
  $i706 := $sub.i32($i705, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9021, 15} true;
  assume {:verifier.code 0} true;
  $p707 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9021, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p707, $i706);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9022, 15} true;
  assume {:verifier.code 0} true;
  $p708 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9022, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p708, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9023, 7} true;
  assume {:verifier.code 0} true;
  goto $bb333;
$bb332:
  assume !(($i703 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9024, 17} true;
  assume {:verifier.code 0} true;
  $i709 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9024, 24} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i709} true;
  goto $bb334, $bb335;
$bb333:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9035, 13} true;
  assume {:verifier.code 0} true;
  $p718 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9035, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p718, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb343;
$bb334:
  assume ($i709 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9024, 34} true;
  assume {:verifier.code 0} true;
  $i710 := $slt.i32($i627, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9024, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i710} true;
  goto $bb337, $bb338;
$bb335:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9024, 24} true;
  assume {:verifier.code 0} true;
  assume !(($i709 == 1));
  goto $bb336;
$bb336:
  assume {:verifier.code 0} true;
  $i712 := $i627;
  goto $bb339;
$bb337:
  assume ($i710 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9025, 20} true;
  assume {:verifier.code 0} true;
  $i711 := $sub.i32(0, $i627);
  // WARNING: %896 = sub nsw i32 0, %.051, !dbg !6831, !verifier.code !5777
  call {:cexpr "undone"} boogie_si_record_i32($i711);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9026, 9} true;
  assume {:verifier.code 0} true;
  $i712 := $i711;
  goto $bb339;
$bb338:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9024, 13} true;
  assume {:verifier.code 0} true;
  assume !(($i710 == 1));
  goto $bb336;
$bb339:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9029, 19} true;
  assume {:verifier.code 0} true;
  $p713 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9029, 19} true;
  assume {:verifier.code 0} true;
  $i714 := $load.i32($M.0, $p713);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9029, 29} true;
  assume {:verifier.code 0} true;
  $i715 := $sge.i32($i714, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9029, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i715} true;
  goto $bb340, $bb341;
$bb340:
  assume ($i715 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9030, 35} true;
  assume {:verifier.code 0} true;
  $i716 := $add.i32($i91, $i712);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9030, 17} true;
  assume {:verifier.code 0} true;
  $p717 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9030, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p717, $i716);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9031, 9} true;
  assume {:verifier.code 0} true;
  goto $bb342;
$bb341:
  assume !(($i715 == 1));
  assume {:verifier.code 0} true;
  goto $bb342;
$bb342:
  assume {:verifier.code 0} true;
  goto $bb333;
$bb343:
  assume {:verifier.code 0} true;
  goto $bb328;
$bb344:
  assume ($i719 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9038, 13} true;
  assume {:verifier.code 0} true;
  $p720 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9038, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p720, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9039, 13} true;
  assume {:verifier.code 0} true;
  $p721 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9039, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p721, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9040, 13} true;
  assume {:verifier.code 0} true;
  $p722 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9040, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p722, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9041, 5} true;
  assume {:verifier.code 0} true;
  goto $bb346;
$bb345:
  assume !(($i719 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 18} true;
  assume {:verifier.code 0} true;
  $i723 := $eq.i32($i1, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i723} true;
  goto $bb347, $bb349;
$bb346:
  assume {:verifier.code 0} true;
  goto $bb343;
$bb347:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 25} true;
  assume {:verifier.code 0} true;
  assume ($i723 == 1);
  goto $bb348;
$bb348:
  $p727 := $add.ref($add.ref($p607, 40), 4);
  $p728 := $add.ref($add.ref($add.ref($p607, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 46} true;
  assume {:verifier.code 0} true;
  $i729 := $load.i8($M.0, $p728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 11} true;
  assume {:verifier.code 0} true;
  $i730 := $zext.i8.i32($i729);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 56} true;
  assume {:verifier.code 0} true;
  $i731 := $eq.i32($i730, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 62} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i731} true;
  goto $bb356, $bb357;
$bb349:
  assume !(($i723 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 35} true;
  assume {:verifier.code 0} true;
  $i724 := $eq.i32($i1, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i724} true;
  goto $bb350, $bb351;
$bb350:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 43} true;
  assume {:verifier.code 0} true;
  assume ($i724 == 1);
  goto $bb348;
$bb351:
  assume !(($i724 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 53} true;
  assume {:verifier.code 0} true;
  $i725 := $eq.i32($i1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 61} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i725} true;
  goto $bb352, $bb353;
$bb352:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 61} true;
  assume {:verifier.code 0} true;
  assume ($i725 == 1);
  goto $bb348;
$bb353:
  assume !(($i725 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 71} true;
  assume {:verifier.code 0} true;
  $i726 := $eq.i32($i1, 65537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i726} true;
  goto $bb354, $bb355;
$bb354:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9042, 9} true;
  assume {:verifier.code 0} true;
  assume ($i726 == 1);
  goto $bb348;
$bb355:
  assume !(($i726 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9053, 17} true;
  assume {:verifier.code 0} true;
  $i745 := $ne.i32($i94, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9053, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i745} true;
  goto $bb363, $bb364;
$bb356:
  assume ($i731 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 77} true;
  assume {:verifier.code 0} true;
  $p732 := $add.ref($p0, 297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 77} true;
  assume {:verifier.code 0} true;
  $i733 := $load.i8($M.0, $p732);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 66} true;
  assume {:verifier.code 0} true;
  $i734 := $zext.i8.i32($i733);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 84} true;
  assume {:verifier.code 0} true;
  $i735 := $and.i32($i734, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 89} true;
  assume {:verifier.code 0} true;
  $i736 := $eq.i32($i735, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i736} true;
  goto $bb359, $bb360;
$bb357:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 62} true;
  assume {:verifier.code 0} true;
  assume !(($i731 == 1));
  goto $bb358;
$bb358:
  assume {:verifier.code 0} true;
  goto $bb361;
$bb359:
  assume ($i736 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9044, 44} true;
  assume {:verifier.code 0} true;
  $p737 := $add.ref($p0, 297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9044, 44} true;
  assume {:verifier.code 0} true;
  $i738 := $load.i8($M.0, $p737);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9044, 24} true;
  assume {:verifier.code 0} true;
  $i739 := $zext.i8.i32($i738);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9044, 51} true;
  assume {:verifier.code 0} true;
  $i740 := $xor.i32($i739, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9044, 57} true;
  assume {:verifier.code 0} true;
  $i741 := $or.i32($i740, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9044, 23} true;
  assume {:verifier.code 0} true;
  $i742 := $trunc.i32.i8($i741);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9044, 14} true;
  assume {:verifier.code 0} true;
  $p743 := $add.ref($p0, 297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9044, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p743, $i742);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9045, 9} true;
  assume {:verifier.code 0} true;
  call st_release_request($p537);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9047, 20} true;
  assume {:verifier.code 0} true;
  call $i744 := st_int_ioctl($p0, $i1, $i2);
  // WARNING: %943 = call i32 @st_int_ioctl(%struct.scsi_tape* %0, i32 %1, i64 %2), !dbg !6890, !verifier.code !5777
  call {:cexpr "tmp___12"} boogie_si_record_i32($i744);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9048, 9} true;
  assume {:verifier.code 0} true;
  $i28 := $i744;
  goto $bb8;
$bb360:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9043, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i736 == 1));
  goto $bb358;
$bb361:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9052, 5} true;
  assume {:verifier.code 0} true;
  goto $bb362;
$bb362:
  assume {:verifier.code 0} true;
  goto $bb346;
$bb363:
  assume ($i745 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9054, 13} true;
  assume {:verifier.code 0} true;
  $p746 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9054, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p746, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9055, 5} true;
  assume {:verifier.code 0} true;
  goto $bb365;
$bb364:
  assume !(($i745 == 1));
  assume {:verifier.code 0} true;
  goto $bb365;
$bb365:
  assume {:verifier.code 0} true;
  goto $bb362;
$bb366:
  assume ($i751 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9059, 13} true;
  assume {:verifier.code 0} true;
  $p752 := $add.ref($add.ref($p32, $mul.ref($i35, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9059, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p752, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9060, 5} true;
  assume {:verifier.code 0} true;
  goto $bb368;
$bb367:
  assume !(($i751 == 1));
  assume {:verifier.code 0} true;
  goto $bb368;
$bb368:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9063, 5} true;
  assume {:verifier.code 0} true;
  call st_release_request($p537);
  assume {:verifier.code 0} true;
  $i605 := $i658;
  goto $bb253;
}
const deb_space_print: ref;
axiom (deb_space_print == $sub.ref(0, 392234));
procedure  deb_space_print($p0: ref, $i1: i32, $p2: ref, $p3: ref)
{
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i1;
  var $i10: i32;
  var $p11: ref;
  var $i12: i8;
  var $i13: i32;
  var $i14: i32;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $i18: i32;
  var $i19: i32;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i32;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i1;
  var $p32: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !11420, metadata !5777), !dbg !11421, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8478, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8478, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8478, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8479, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8496, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8483, 35} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8483, 29} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i8($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8483, 8} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8483, 43} true;
  assume {:verifier.code 0} true;
  $i9 := $slt.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8483, 8} true;
  assume {:verifier.code 0} true;
  havoc $i10;
  assume ((($i9 == 1) ==> ($i10 == $sub.i32(0, 16777216))) && (($i9 != 1) ==> ($i10 == 0)));
  // WARNING: %14 = select i1 %13, i32 -16777216, i32 0, !dbg !5796, !verifier.code !5780
  call {:cexpr "sc"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 23} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 17} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i8($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 11} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 30} true;
  assume {:verifier.code 0} true;
  $i14 := $shl.i32($i13, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 52} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 46} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 40} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 59} true;
  assume {:verifier.code 0} true;
  $i18 := $shl.i32($i17, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 37} true;
  assume {:verifier.code 0} true;
  $i19 := $or.i32($i14, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 80} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 74} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 68} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 66} true;
  assume {:verifier.code 0} true;
  $i23 := $or.i32($i19, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8484, 88} true;
  assume {:verifier.code 0} true;
  $i24 := $or.i32($i23, $i10);
  // WARNING: %28 = or i32 %27, %14, !dbg !5813, !verifier.code !5780
  call {:cexpr "sc"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8485, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8485, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8486, 10} true;
  assume {:verifier.code 0} true;
  $i26 := $sub.i32(0, $i24);
  // WARNING: %31 = sub nsw i32 0, %28, !dbg !5817, !verifier.code !5780
  call {:cexpr "sc"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8487, 3} true;
  assume {:verifier.code 0} true;
  $i27 := $i26;
  goto $bb7;
$bb6:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  $i27 := $i24;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8490, 9} true;
  assume {:verifier.code 0} true;
  call $p28 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8491, 63} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8491, 63} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8492, 65} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8492, 55} true;
  assume {:verifier.code 0} true;
  havoc $p32;
  assume ((($i31 == 1) ==> ($p32 == .str.109)) && (($i31 != 1) ==> ($p32 == .str.108)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8491, 3} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.ref.i32.ref(.str.12, $p30, $p28, .str.126, $p32, $i27, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8494, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const get_current: ref;
axiom (get_current == $sub.ref(0, 393266));
procedure  get_current()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  call $p0 := devirtbounce.6(0, current_task);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4575, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4580, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const signal_pending: ref;
axiom (signal_pending == $sub.ref(0, 394298));
procedure  signal_pending($p0: ref)
  returns ($r: i32)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4947, 9} true;
  assume {:verifier.code 0} true;
  call $i1 := test_tsk_thread_flag($p0, 2);
  // WARNING: %2 = call i32 @test_tsk_thread_flag(%struct.task_struct* %0, i32 2), !dbg !5781, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4948, 37} true;
  assume {:verifier.code 0} true;
  $i2 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4948, 37} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i1.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4948, 33} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4948, 13} true;
  assume {:verifier.code 0} true;
  call $i5 := ldv__builtin_expect($i4, 0);
  // WARNING: %6 = call i64 @ldv__builtin_expect(i64 %5, i64 0), !dbg !5787, !verifier.code !5780
  call {:cexpr "tmp___0"} boogie_si_record_i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4949, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4949, 3} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
}
const st_allocate_request: ref;
axiom (st_allocate_request == $sub.ref(0, 395330));
procedure  st_allocate_request($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5457, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := kmalloc(144, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5458, 11} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5459, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5459, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5459, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5460, 12} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p2, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5460, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p5, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5461, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5462, 15} true;
  assume {:verifier.code 0} true;
  call $p6 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5463, 65} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5463, 65} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5463, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.4, $p8, $p6, .str.144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5465, 15} true;
  assume {:verifier.code 0} true;
  call $p9 := get_current();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5466, 15} true;
  assume {:verifier.code 0} true;
  call $i10 := signal_pending($p9);
  // WARNING: %13 = call i32 @signal_pending(%struct.task_struct* %12), !dbg !5805, !verifier.code !5780
  call {:cexpr "tmp___2"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5467, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5467, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb4, $bb5;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5473, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
$bb4:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5468, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5468, 13} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5468, 22} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5468, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p14, $sub.i32(0, 4));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5469, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i11 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5470, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5470, 13} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5470, 22} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5470, 37} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p17, $sub.i32(0, 16));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  goto $bb3;
}
const init_completion: ref;
axiom (init_completion == $sub.ref(0, 396362));
procedure  init_completion($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4793, 6} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4793, 11} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4794, 30} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4794, 3} true;
  assume {:verifier.code 0} true;
  call __init_waitqueue_head($p3, .str.145, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4795, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.memcpy.p0i8.p0i8.i64: ref;
axiom (llvm.memcpy.p0i8.p0i8.i64 == $sub.ref(0, 397394));
procedure  llvm.memcpy.p0i8.p0i8.i64($p0: ref, $p1: ref, $i2: i64, $i3: i32, $i4: i1);
const st_scsi_execute: ref;
axiom (st_scsi_execute == $sub.ref(0, 398426));
procedure  st_scsi_execute($p0: ref, $p1: ref, $i2: i32, $p3: ref, $i4: i32, $i5: i32, $i6: i32)
  returns ($r: i32)
{
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i1;
  var $i16: i32;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i1;
  var $i28: i8;
  var $i29: i1;
  var $p31: ref;
  var $i32: i64;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $i39: i64;
  var $i40: i32;
  var $i41: i1;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i8;
  var $i46: i32;
  var $i47: i1;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $i54: i64;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $i58: i8;
  var $i59: i32;
  var $i60: i1;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i64;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i64;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $i81: i8;
  var $i82: i32;
  var $i83: i32;
  var $i84: i32;
  var $i85: i64;
  var $p86: ref;
  var $i87: i8;
  var $i88: i16;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $i95: i16;
  var $i96: i64;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i30: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p8 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p9 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !11557, metadata !5777), !dbg !11558, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !11561, metadata !5777), !dbg !11562, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !11563, metadata !5777), !dbg !11564, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !11565, metadata !5777), !dbg !11566, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5583, 22} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5583, 22} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5583, 28} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5583, 28} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5583, 37} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 104);
  // WARNING: call void @llvm.dbg.value(metadata %struct.rq_map_data* %15, i64 0, metadata !11573, metadata !5777), !dbg !11574, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5585, 26} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5585, 26} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i1.i32($i15);
  // WARNING: %17 = zext i1 %16 to i32, !dbg !5802, !verifier.code !5777
  call {:cexpr "write"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5586, 16} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5586, 16} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5587, 34} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5587, 34} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5587, 40} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p20, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5587, 40} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5587, 49} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p22, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5587, 49} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5587, 9} true;
  assume {:verifier.code 0} true;
  call $p25 := blk_get_request($p24, $i16, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5588, 16} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5588, 9} true;
  assume {:verifier.code 0} true;
  call $i27 := IS_ERR($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5588, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i1.i8($i27);
  // WARNING: %29 = zext i1 %28 to i8, !dbg !5816, !verifier.code !5777
  call {:cexpr "tmp"} boogie_si_record_i8($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5589, 13} true;
  assume {:verifier.code 0} true;
  $i29 := $trunc.i8.i1($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5589, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5590, 5} true;
  assume {:verifier.code 0} true;
  $i30 := 67108864;
  goto $bb3;
$bb2:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5632, 1} true;
  assume {:verifier.code 0} true;
  $r := $i30;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5594, 3} true;
  assume {:verifier.code 0} true;
  call blk_rq_set_block_pc($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5595, 25} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p25, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5595, 25} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i64($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5595, 35} true;
  assume {:verifier.code 0} true;
  $i33 := $or.i64($i32, 16777216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5595, 8} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p25, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5595, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p34, $i33);
  $p35 := $add.ref($add.ref($p13, 104), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5596, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p35, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5597, 15} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5597, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5598, 32} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p25, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5598, 32} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5598, 58} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5598, 11} true;
  assume {:verifier.code 0} true;
  call $i40 := blk_rq_map_user($p38, $p25, $p14, $0.ref, $i39, 208);
  // WARNING: %44 = call i32 @blk_rq_map_user(%struct.request_queue* %42, %struct.request* %26, %struct.rq_map_data* %15, i8* null, i64 %43, i32 208), !dbg !5836, !verifier.code !5777
  call {:cexpr "err"} boogie_si_record_i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5600, 13} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5600, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5601, 7} true;
  assume {:verifier.code 0} true;
  call blk_put_request($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5602, 7} true;
  assume {:verifier.code 0} true;
  $i30 := 67108864;
  goto $bb3;
$bb8:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5606, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5609, 24} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p18, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5609, 24} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5609, 32} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p43, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5609, 3} true;
  assume {:verifier.code 0} true;
  call atomic64_inc($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5610, 39} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5610, 7} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i8.i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5610, 45} true;
  assume {:verifier.code 0} true;
  $i47 := $eq.i32($i46, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5610, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5611, 24} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p18, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5611, 24} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5611, 32} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p49, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5611, 5} true;
  assume {:verifier.code 0} true;
  call atomic_set($p50, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5612, 11} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p18, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5612, 11} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5612, 19} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p52, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5612, 32} true;
  assume {:verifier.code 0} true;
  call $i54 := ktime_get();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5612, 32} true;
  assume {:verifier.code 0} true;
  $p55 := $p7;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5612, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p55, $i54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5612, 32} true;
  assume {:verifier.code 0} true;
  $p56 := $bitcast.ref.ref($p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5612, 32} true;
  assume {:verifier.code 0} true;
  $p57 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5612, 32} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p56, $p57, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5613, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i47 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5614, 39} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5614, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i8.i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5614, 45} true;
  assume {:verifier.code 0} true;
  $i60 := $eq.i32($i59, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5614, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb14, $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5620, 21} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p25, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5620, 21} true;
  assume {:verifier.code 0} true;
  $p79 := $load.ref($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5620, 10} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5620, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p80, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5621, 81} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5621, 58} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.i8.i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5621, 87} true;
  assume {:verifier.code 0} true;
  $i83 := $ashr.i32($i82, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5621, 93} true;
  assume {:verifier.code 0} true;
  $i84 := $and.i32($i83, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5621, 35} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i32.i64($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5621, 35} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref(scsi_command_size_tbl, $mul.ref($i85, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5621, 35} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i8($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5621, 18} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i8.i16($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5621, 8} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p25, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5621, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p89, $i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5622, 23} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p25, 280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5622, 23} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5622, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p91, 0, 16, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5623, 23} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p25, 280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5623, 23} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5623, 63} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p25, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5623, 63} true;
  assume {:verifier.code 0} true;
  $i95 := $load.i16($M.0, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5623, 49} true;
  assume {:verifier.code 0} true;
  $i96 := $zext.i16.i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5623, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p93, $p1, $i96, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5624, 34} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5624, 16} true;
  assume {:verifier.code 0} true;
  $p98 := $bitcast.ref.ref($p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5624, 8} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p25, 304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5624, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p99, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5625, 8} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p25, 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5625, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p100, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5626, 8} true;
  assume {:verifier.code 0} true;
  $p101 := $add.ref($p25, 336);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5626, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p101, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5627, 8} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p25, 340);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5627, 16} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p102, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5628, 22} true;
  assume {:verifier.code 0} true;
  $p103 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5628, 8} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p25, 352);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5628, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p104, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5629, 30} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p25, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5629, 30} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5629, 3} true;
  assume {:verifier.code 0} true;
  call blk_execute_rq_nowait($p106, $0.ref, $p25, 1, st_scsi_execute_end);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5630, 3} true;
  assume {:verifier.code 0} true;
  $i30 := 0;
  goto $bb3;
$bb14:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5615, 24} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p18, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5615, 24} true;
  assume {:verifier.code 0} true;
  $p62 := $load.ref($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5615, 32} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p62, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5615, 5} true;
  assume {:verifier.code 0} true;
  call atomic_set($p63, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5616, 11} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p18, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5616, 11} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5616, 19} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p65, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5616, 31} true;
  assume {:verifier.code 0} true;
  call $i67 := ktime_get();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5616, 31} true;
  assume {:verifier.code 0} true;
  $p68 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5616, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p68, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5616, 31} true;
  assume {:verifier.code 0} true;
  $p69 := $bitcast.ref.ref($p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5616, 31} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5616, 31} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p69, $p70, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5617, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i60 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5618, 11} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p18, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5618, 11} true;
  assume {:verifier.code 0} true;
  $p72 := $load.ref($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5618, 19} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p72, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5618, 32} true;
  assume {:verifier.code 0} true;
  call $i74 := ktime_get();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5618, 32} true;
  assume {:verifier.code 0} true;
  $p75 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5618, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p75, $i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5618, 32} true;
  assume {:verifier.code 0} true;
  $p76 := $bitcast.ref.ref($p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5618, 32} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5618, 32} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p76, $p77, 8, $zext.i32.i64(8), (0 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:verifier.code 0} true;
  goto $bb13;
}
const wait_for_completion: ref;
axiom (wait_for_completion == $sub.ref(0, 399458));
procedure  wait_for_completion($p0: ref);
const st_chk_result: ref;
axiom (st_chk_result == $sub.ref(0, 400490));
procedure  st_chk_result($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $p4: ref;
  var $i5: i1;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i32;
  var $i12: i1;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $i18: i8;
  var $i19: i8;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
  var $i31: i8;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $p37: ref;
  var $p38: ref;
  var $i39: i8;
  var $i40: i32;
  var $p41: ref;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $p45: ref;
  var $p46: ref;
  var $i47: i8;
  var $i48: i32;
  var $p49: ref;
  var $i50: i32;
  var $i51: i1;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i32;
  var $i57: i1;
  var $p58: ref;
  var $i59: i32;
  var $i60: i1;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i32;
  var $i65: i32;
  var $i66: i32;
  var $p67: ref;
  var $i68: i32;
  var $i69: i1;
  var $i70: i32;
  var $i71: i1;
  var $i72: i32;
  var $i73: i1;
  var $i74: i32;
  var $i75: i1;
  var $i76: i32;
  var $i77: i1;
  var $p78: ref;
  var $p79: ref;
  var $i80: i8;
  var $i81: i32;
  var $i82: i1;
  var $p83: ref;
  var $p84: ref;
  var $i85: i8;
  var $i86: i32;
  var $i87: i1;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $i93: i8;
  var $i94: i32;
  var $i95: i1;
  var $p96: ref;
  var $i97: i8;
  var $i98: i32;
  var $i99: i1;
  var $p100: ref;
  var $i101: i8;
  var $i102: i32;
  var $i103: i1;
  var $p104: ref;
  var $i105: i8;
  var $i106: i32;
  var $p107: ref;
  var $i108: i8;
  var $i109: i32;
  var $i110: i64;
  var $p111: ref;
  var $p112: ref;
  var $i113: i8;
  var $i114: i32;
  var $p115: ref;
  var $i116: i8;
  var $i117: i32;
  var $i118: i32;
  var $p119: ref;
  var $i120: i8;
  var $i121: i32;
  var $i122: i1;
  var $i123: i32;
  var $i124: i32;
  var $i125: i8;
  var $p126: ref;
  var $p127: ref;
  var $i128: i8;
  var $i129: i32;
  var $p130: ref;
  var $i131: i8;
  var $i132: i32;
  var $i133: i64;
  var $p134: ref;
  var $p135: ref;
  var $i136: i8;
  var $i137: i32;
  var $p138: ref;
  var $i139: i8;
  var $i140: i32;
  var $i141: i32;
  var $i142: i1;
  var $i143: i32;
  var $i144: i32;
  var $i145: i8;
  var $p146: ref;
  var $p147: ref;
  var $i148: i32;
  var $i149: i1;
  var $p150: ref;
  var $p151: ref;
  var $i152: i8;
  var $i153: i32;
  var $i154: i1;
  var $p155: ref;
  var $p156: ref;
  var $i157: i8;
  var $i158: i32;
  var $i159: i1;
  var $p160: ref;
  var $p161: ref;
  var $i162: i8;
  var $i163: i32;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $i168: i64;
  var $i169: i64;
  var $i170: i64;
  var $i171: i8;
  var $i172: i32;
  var $i173: i32;
  var $i174: i8;
  var $p175: ref;
  var $p176: ref;
  var $i177: i32;
  var $i178: i1;
  var $i179: i32;
  var $i180: i1;
  var $p181: ref;
  var $i182: i32;
  var $i183: i32;
  var $p184: ref;
  var $p185: ref;
  var $i186: i32;
  var $i187: i32;
  var $p188: ref;
  var $i189: i32;
  var $i190: i1;
  var $p191: ref;
  var $p192: ref;
  var $i193: i8;
  var $i194: i32;
  var $i195: i1;
  var $p197: ref;
  var $p198: ref;
  var $i199: i8;
  var $i200: i32;
  var $i201: i1;
  var $p202: ref;
  var $p196: ref;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $i207: i32;
  var $p208: ref;
  var $i209: i8;
  var $i210: i32;
  var $i211: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5358, 19} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p1, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5358, 19} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  // WARNING: %4 = load i32, i32* %3, align 8, !dbg !5783, !verifier.code !5780
  call {:cexpr "result"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5359, 9} true;
  assume {:verifier.code 0} true;
  call $p4 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5361, 14} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5361, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5362, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5447, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5366, 22} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5366, 22} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5366, 31} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5367, 3} true;
  assume {:verifier.code 0} true;
  call st_analyze_sense($p1, $p9);
  $p10 := $add.ref($add.ref($p8, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5368, 17} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i32($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5368, 28} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5368, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5369, 19} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5369, 19} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5369, 28} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p14, 40);
  $p16 := $add.ref($add.ref($p14, 40), 4);
  $p17 := $add.ref($add.ref($add.ref($p14, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5369, 46} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  // WARNING: %22 = load i8, i8* %21, align 1, !dbg !5810, !verifier.code !5780
  call {:cexpr "scode"} boogie_si_record_i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5370, 3} true;
  assume {:verifier.code 0} true;
  $i19 := $i18;
  goto $bb7;
$bb6:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  $i19 := 0;
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5373, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5373, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5373, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5374, 15} true;
  assume {:verifier.code 0} true;
  call $p22 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5375, 65} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5375, 65} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5376, 84} true;
  assume {:verifier.code 0} true;
  $p25 := $p1;
  $p26 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5376, 77} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5376, 71} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5377, 37} true;
  assume {:verifier.code 0} true;
  $p29 := $p1;
  $p30 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5377, 30} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5377, 24} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5377, 58} true;
  assume {:verifier.code 0} true;
  $p33 := $p1;
  $p34 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5377, 51} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5377, 45} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5377, 79} true;
  assume {:verifier.code 0} true;
  $p37 := $p1;
  $p38 := $add.ref($p1, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5377, 72} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i8($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5377, 66} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5378, 37} true;
  assume {:verifier.code 0} true;
  $p41 := $p1;
  $p42 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5378, 30} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5378, 24} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5378, 58} true;
  assume {:verifier.code 0} true;
  $p45 := $p1;
  $p46 := $add.ref($p1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5378, 51} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i8($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5378, 45} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5375, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32.i32.i32.i32.i32(.str.12, $p24, $p22, .str.134, $i3, $i28, $i32, $i36, $i40, $i44, $i48);
  $p49 := $add.ref($add.ref($p8, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5379, 19} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5379, 30} true;
  assume {:verifier.code 0} true;
  $i51 := $ne.i32($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5379, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5380, 61} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5380, 61} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5381, 61} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5381, 26} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5380, 7} true;
  assume {:verifier.code 0} true;
  call __scsi_print_sense($p53, $p4, $p55, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5382, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i51 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5385, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5388, 7} true;
  assume {:verifier.code 0} true;
  $i56 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5388, 17} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i32($i56, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5388, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i57 == 1);
  $p58 := $add.ref($add.ref($p8, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5389, 19} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i32($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5389, 30} true;
  assume {:verifier.code 0} true;
  $i60 := $eq.i32($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5389, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i57 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb16:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5390, 17} true;
  assume {:verifier.code 0} true;
  call $p61 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5391, 67} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5391, 67} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5392, 109} true;
  assume {:verifier.code 0} true;
  $i64 := $lshr.i32($i3, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5393, 34} true;
  assume {:verifier.code 0} true;
  $i65 := $ashr.i32($i3, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5393, 41} true;
  assume {:verifier.code 0} true;
  $i66 := $and.i32($i65, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5391, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32(.str.89, $p63, $p61, .str.135, $i3, $i64, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5394, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i60 == 1));
  $p67 := $add.ref($add.ref($p8, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 24} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 35} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 40} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb19, $bb20;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5401, 3} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb19:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 43} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 64} true;
  assume {:verifier.code 0} true;
  $i71 := $ne.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 71} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb22, $bb23;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 40} true;
  assume {:verifier.code 0} true;
  assume !(($i69 == 1));
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  goto $bb34;
$bb22:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 74} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 95} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i72, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 102} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb24, $bb25;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 71} true;
  assume {:verifier.code 0} true;
  assume !(($i71 == 1));
  goto $bb21;
$bb24:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 105} true;
  assume {:verifier.code 0} true;
  $i74 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 126} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i32($i74, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 133} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i75} true;
  goto $bb26, $bb27;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 102} true;
  assume {:verifier.code 0} true;
  assume !(($i73 == 1));
  goto $bb21;
$bb26:
  assume ($i75 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 136} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 157} true;
  assume {:verifier.code 0} true;
  $i77 := $ne.i32($i76, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 165} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb28, $bb29;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 133} true;
  assume {:verifier.code 0} true;
  assume !(($i75 == 1));
  goto $bb21;
$bb28:
  assume ($i77 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 190} true;
  assume {:verifier.code 0} true;
  $p78 := $p1;
  $p79 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 183} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i8($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 168} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i8.i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 197} true;
  assume {:verifier.code 0} true;
  $i82 := $ne.i32($i81, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 205} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb30, $bb31;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 165} true;
  assume {:verifier.code 0} true;
  assume !(($i77 == 1));
  goto $bb21;
$bb30:
  assume ($i82 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 230} true;
  assume {:verifier.code 0} true;
  $p83 := $p1;
  $p84 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 223} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i8($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 208} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i8.i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 237} true;
  assume {:verifier.code 0} true;
  $i87 := $ne.i32($i86, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb32, $bb33;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 205} true;
  assume {:verifier.code 0} true;
  assume !(($i82 == 1));
  goto $bb21;
$bb32:
  assume ($i87 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5396, 61} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5396, 61} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5397, 61} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5397, 26} true;
  assume {:verifier.code 0} true;
  $p91 := $bitcast.ref.ref($p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5396, 7} true;
  assume {:verifier.code 0} true;
  call __scsi_print_sense($p89, $p4, $p91, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5398, 5} true;
  assume {:verifier.code 0} true;
  goto $bb34;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5395, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i87 == 1));
  goto $bb21;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb35:
  $p92 := $add.ref($add.ref($p8, 40), 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 32} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i8($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 7} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i8.i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 45} true;
  assume {:verifier.code 0} true;
  $i95 := $ne.i32($i94, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 51} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i95 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 74} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p0, 294);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 74} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i8($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 54} true;
  assume {:verifier.code 0} true;
  $i98 := $zext.i8.i32($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 83} true;
  assume {:verifier.code 0} true;
  $i99 := $ugt.i32($i98, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb39, $bb40;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 51} true;
  assume {:verifier.code 0} true;
  assume !(($i95 == 1));
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  goto $bb44;
$bb39:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5405, 29} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p0, 295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5405, 29} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i8($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5405, 9} true;
  assume {:verifier.code 0} true;
  $i102 := $zext.i8.i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5405, 45} true;
  assume {:verifier.code 0} true;
  $i103 := $ne.i32($i102, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5405, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb41, $bb42;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5404, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i99 == 1));
  goto $bb38;
$bb41:
  assume ($i103 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 70} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p0, 638);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 70} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i8($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 44} true;
  assume {:verifier.code 0} true;
  $i106 := $sext.i8.i32($i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 118} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p0, 294);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 118} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i8($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 107} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i8.i32($i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 94} true;
  assume {:verifier.code 0} true;
  $i110 := $sext.i32.i64($i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 101} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p1, 16);
  $p112 := $add.ref($add.ref($p1, 16), $mul.ref($i110, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 94} true;
  assume {:verifier.code 0} true;
  $i113 := $load.i8($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 88} true;
  assume {:verifier.code 0} true;
  $i114 := $zext.i8.i32($i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 141} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p0, 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 141} true;
  assume {:verifier.code 0} true;
  $i116 := $load.i8($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 130} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i8.i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 128} true;
  assume {:verifier.code 0} true;
  $i118 := $and.i32($i114, $i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 171} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p0, 295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 171} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i8($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 160} true;
  assume {:verifier.code 0} true;
  $i121 := $zext.i8.i32($i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 157} true;
  assume {:verifier.code 0} true;
  $i122 := $eq.i32($i118, $i121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 157} true;
  assume {:verifier.code 0} true;
  $i123 := $zext.i1.i32($i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 84} true;
  assume {:verifier.code 0} true;
  $i124 := $or.i32($i106, $i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 27} true;
  assume {:verifier.code 0} true;
  $i125 := $trunc.i32.i8($i124);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 12} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p0, 638);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5406, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p126, $i125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5407, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume !(($i103 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 70} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p0, 638);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 70} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i8($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 44} true;
  assume {:verifier.code 0} true;
  $i129 := $sext.i8.i32($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 133} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0, 294);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 133} true;
  assume {:verifier.code 0} true;
  $i131 := $load.i8($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 122} true;
  assume {:verifier.code 0} true;
  $i132 := $zext.i8.i32($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 109} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i32.i64($i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 116} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p1, 16);
  $p135 := $add.ref($add.ref($p1, 16), $mul.ref($i133, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 109} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i8($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 103} true;
  assume {:verifier.code 0} true;
  $i137 := $zext.i8.i32($i136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 156} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p0, 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 156} true;
  assume {:verifier.code 0} true;
  $i139 := $load.i8($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 145} true;
  assume {:verifier.code 0} true;
  $i140 := $zext.i8.i32($i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 143} true;
  assume {:verifier.code 0} true;
  $i141 := $and.i32($i137, $i140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 172} true;
  assume {:verifier.code 0} true;
  $i142 := $ne.i32($i141, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 172} true;
  assume {:verifier.code 0} true;
  $i143 := $zext.i1.i32($i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 84} true;
  assume {:verifier.code 0} true;
  $i144 := $or.i32($i129, $i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 27} true;
  assume {:verifier.code 0} true;
  $i145 := $trunc.i32.i8($i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 12} true;
  assume {:verifier.code 0} true;
  $p146 := $add.ref($p0, 638);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5408, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p146, $i145);
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5410, 3} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  $p147 := $add.ref($add.ref($p8, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 18} true;
  assume {:verifier.code 0} true;
  $i148 := $load.i32($M.0, $p147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 29} true;
  assume {:verifier.code 0} true;
  $i149 := $ne.i32($i148, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 34} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i149} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i149 == 1);
  $p150 := $add.ref($add.ref($p8, 40), 4);
  $p151 := $add.ref($add.ref($add.ref($p8, 40), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 72} true;
  assume {:verifier.code 0} true;
  $i152 := $load.i8($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 37} true;
  assume {:verifier.code 0} true;
  $i153 := $zext.i8.i32($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 76} true;
  assume {:verifier.code 0} true;
  $i154 := $eq.i32($i153, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 83} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  goto $bb48, $bb49;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i149 == 1));
  goto $bb47;
$bb47:
  assume {:verifier.code 0} true;
  goto $bb52;
$bb48:
  assume ($i154 == 1);
  $p155 := $add.ref($add.ref($p8, 40), 4);
  $p156 := $add.ref($add.ref($add.ref($p8, 40), 4), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 121} true;
  assume {:verifier.code 0} true;
  $i157 := $load.i8($M.0, $p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 86} true;
  assume {:verifier.code 0} true;
  $i158 := $zext.i8.i32($i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 126} true;
  assume {:verifier.code 0} true;
  $i159 := $eq.i32($i158, 23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i159} true;
  goto $bb50, $bb51;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 83} true;
  assume {:verifier.code 0} true;
  assume !(($i154 == 1));
  goto $bb47;
$bb50:
  assume ($i159 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5414, 10} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p0, 638);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5414, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p160, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5415, 3} true;
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5413, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i159 == 1));
  goto $bb47;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 33} true;
  assume {:verifier.code 0} true;
  $p161 := $add.ref($p0, 301);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 33} true;
  assume {:verifier.code 0} true;
  $i162 := $load.i8($M.0, $p161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 22} true;
  assume {:verifier.code 0} true;
  $i163 := $zext.i8.i32($i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 59} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 59} true;
  assume {:verifier.code 0} true;
  $p165 := $load.ref($M.0, $p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 68} true;
  assume {:verifier.code 0} true;
  $p166 := $add.ref($p165, 328);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 68} true;
  assume {:verifier.code 0} true;
  $p167 := $bitcast.ref.ref($p166);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 68} true;
  assume {:verifier.code 0} true;
  $i168 := $load.i64($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 68} true;
  assume {:verifier.code 0} true;
  $i169 := $lshr.i64($i168, 13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 68} true;
  assume {:verifier.code 0} true;
  $i170 := $and.i64($i169, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 68} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i64.i8($i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 47} true;
  assume {:verifier.code 0} true;
  $i172 := $zext.i8.i32($i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 45} true;
  assume {:verifier.code 0} true;
  $i173 := $or.i32($i163, $i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 22} true;
  assume {:verifier.code 0} true;
  $i174 := $trunc.i32.i8($i173);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 8} true;
  assume {:verifier.code 0} true;
  $p175 := $add.ref($p0, 301);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5418, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p175, $i174);
  $p176 := $add.ref($add.ref($p8, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5419, 17} true;
  assume {:verifier.code 0} true;
  $i177 := $load.i32($M.0, $p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5419, 28} true;
  assume {:verifier.code 0} true;
  $i178 := $ne.i32($i177, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5419, 33} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i178} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i178 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5419, 36} true;
  assume {:verifier.code 0} true;
  $i179 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5419, 57} true;
  assume {:verifier.code 0} true;
  $i180 := $eq.i32($i179, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5419, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i180} true;
  goto $bb56, $bb57;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5419, 33} true;
  assume {:verifier.code 0} true;
  assume !(($i178 == 1));
  goto $bb55;
$bb55:
  assume {:verifier.code 0} true;
  goto $bb70;
$bb56:
  assume ($i180 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5420, 31} true;
  assume {:verifier.code 0} true;
  $p181 := $add.ref($p0, 652);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5420, 31} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i32($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5420, 45} true;
  assume {:verifier.code 0} true;
  $i183 := $add.i32($i182, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5420, 10} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p0, 652);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5420, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p184, $i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5421, 29} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p0, 656);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5421, 29} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i32($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5421, 41} true;
  assume {:verifier.code 0} true;
  $i187 := $add.i32($i186, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5421, 10} true;
  assume {:verifier.code 0} true;
  $p188 := $add.ref($p0, 656);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5421, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p188, $i187);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5422, 9} true;
  assume {:verifier.code 0} true;
  $i189 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5422, 19} true;
  assume {:verifier.code 0} true;
  $i190 := $ne.i32($i189, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5422, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i190} true;
  goto $bb58, $bb59;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5419, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i180 == 1));
  goto $bb55;
$bb58:
  assume ($i190 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5423, 33} true;
  assume {:verifier.code 0} true;
  $p191 := $p1;
  $p192 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5423, 26} true;
  assume {:verifier.code 0} true;
  $i193 := $load.i8($M.0, $p192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5423, 11} true;
  assume {:verifier.code 0} true;
  $i194 := $zext.i8.i32($i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5423, 40} true;
  assume {:verifier.code 0} true;
  $i195 := $eq.i32($i194, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5423, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i195} true;
  goto $bb60, $bb61;
$bb59:
  assume !(($i190 == 1));
  assume {:verifier.code 0} true;
  goto $bb66;
$bb60:
  assume ($i195 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5425, 7} true;
  assume {:verifier.code 0} true;
  $p196 := .str.136;
  goto $bb62;
$bb61:
  assume !(($i195 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5426, 33} true;
  assume {:verifier.code 0} true;
  $p197 := $p1;
  $p198 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5426, 26} true;
  assume {:verifier.code 0} true;
  $i199 := $load.i8($M.0, $p198);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5426, 11} true;
  assume {:verifier.code 0} true;
  $i200 := $zext.i8.i32($i199);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5426, 40} true;
  assume {:verifier.code 0} true;
  $i201 := $eq.i32($i200, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5426, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i201} true;
  goto $bb63, $bb64;
$bb62:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5431, 17} true;
  assume {:verifier.code 0} true;
  call $p203 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5432, 67} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5432, 67} true;
  assume {:verifier.code 0} true;
  $p205 := $load.ref($M.0, $p204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5433, 66} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p0, 652);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5433, 66} true;
  assume {:verifier.code 0} true;
  $i207 := $load.i32($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5432, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.ref.i32(.str.12, $p205, $p203, .str.139, $p196, $i207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5434, 5} true;
  assume {:verifier.code 0} true;
  goto $bb66;
$bb63:
  assume ($i201 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5428, 7} true;
  assume {:verifier.code 0} true;
  $p202 := .str.137;
  goto $bb65;
$bb64:
  assume !(($i201 == 1));
  assume {:verifier.code 0} true;
  $p202 := .str.138;
  goto $bb65;
$bb65:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $p196 := $p202;
  goto $bb62;
$bb66:
  $p208 := $add.ref($add.ref($p8, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5437, 34} true;
  assume {:verifier.code 0} true;
  $i209 := $load.i8($M.0, $p208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5437, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $zext.i8.i32($i209);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5437, 40} true;
  assume {:verifier.code 0} true;
  $i211 := $eq.i32($i210, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5437, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb67, $bb68;
$bb67:
  assume ($i211 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5438, 7} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb68:
  assume !(($i211 == 1));
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5442, 3} true;
  assume {:verifier.code 0} true;
  goto $bb70;
$bb70:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5445, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $sub.i32(0, 5);
  goto $bb3;
}
const st_analyze_sense: ref;
axiom (st_analyze_sense == $sub.ref(0, 401522));
procedure  st_analyze_sense($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i1;
  var $i8: i8;
  var $i9: i1;
  var $i10: i32;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i32;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $i18: i32;
  var $i19: i8;
  var $p20: ref;
  var $i21: i8;
  var $i22: i32;
  var $i23: i32;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i27: i1;
  var $i28: i1;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i8;
  var $i33: i32;
  var $i34: i32;
  var $i35: i8;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $i40: i64;
  var $i41: i1;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $i45: i32;
  var $i46: i32;
  var $i47: i8;
  var $p48: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5315, 35} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5315, 11} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5316, 54} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5316, 30} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5316, 71} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5316, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := scsi_normalize_sense($p5, 96, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5316, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i1.i8($i7);
  // WARNING: %9 = zext i1 %8 to i8, !dbg !5793, !verifier.code !5781
  call {:cexpr "tmp"} boogie_si_record_i8($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5317, 25} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i8.i1($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5317, 19} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5317, 6} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5317, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p11, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5318, 6} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5318, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5319, 10} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5319, 10} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i32($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5319, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5319, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5320, 8} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5320, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5321, 55} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5321, 15} true;
  assume {:verifier.code 0} true;
  call $i18 := scsi_get_sense_info_fld($p3, 96, $p17);
  // WARNING: %20 = call i32 @scsi_get_sense_info_fld(i8* %4, i32 96, i64* %19), !dbg !5810, !verifier.code !5781
  call {:cexpr "tmp___0"} boogie_si_record_i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5322, 26} true;
  assume {:verifier.code 0} true;
  $i19 := $trunc.i32.i8($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5322, 8} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p1, 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5322, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p20, $i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5323, 19} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i8($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5323, 13} true;
  assume {:verifier.code 0} true;
  $i22 := $zext.i8.i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5323, 26} true;
  assume {:verifier.code 0} true;
  $i23 := $and.i32($i22, 127);
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb3:
  assume {:verifier.code 0} true;
  $i24 := $slt.i32($i23, 114);
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i24 == 1);
  assume {:verifier.code 0} true;
  $i27 := $slt.i32($i23, 113);
  assume {:verifier.code 0} true;
  assume {:branchcond $i27} true;
  goto $bb12, $bb13;
$bb5:
  assume !(($i24 == 1));
  assume {:verifier.code 0} true;
  $i25 := $slt.i32($i23, 115);
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb6, $bb8;
$bb6:
  assume {:verifier.code 0} true;
  assume ($i25 == 1);
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5333, 8} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p1, 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5333, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5334, 11} true;
  assume {:verifier.code 0} true;
  call $p39 := scsi_sense_desc_find($p3, 96, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 16} true;
  assume {:verifier.code 0} true;
  $i40 := $p2i.ref.i64($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 36} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i64($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 16} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb18, $bb19;
$bb8:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i23, 115);
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5331, 8} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5331, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p37, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5331, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i26 == 1));
  goto $bb11;
$bb11:
  assume {:verifier.code 0} true;
  goto $bb21;
$bb12:
  assume ($i27 == 1);
  assume {:verifier.code 0} true;
  $i28 := $eq.i32($i23, 112);
  assume {:verifier.code 0} true;
  assume {:branchcond $i28} true;
  goto $bb14, $bb16;
$bb13:
  assume !(($i27 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5325, 8} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1, 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5325, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5325, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume {:verifier.code 0} true;
  assume ($i28 == 1);
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5327, 8} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, 34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5327, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p30, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5328, 45} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5328, 37} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i8($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5328, 16} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5328, 53} true;
  assume {:verifier.code 0} true;
  $i34 := $and.i32($i33, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5328, 16} true;
  assume {:verifier.code 0} true;
  $i35 := $trunc.i32.i8($i34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5328, 8} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5328, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p36, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5329, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:verifier.code 0} true;
  assume !(($i28 == 1));
  goto $bb11;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5339, 3} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb18:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 103} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p39, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 97} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 76} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 111} true;
  assume {:verifier.code 0} true;
  $i45 := $and.i32($i44, 224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 16} true;
  assume {:verifier.code 0} true;
  $i46 := $i45;
  goto $bb20;
$bb19:
  assume !(($i41 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 16} true;
  assume {:verifier.code 0} true;
  $i46 := 0;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 16} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 16} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 8} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5335, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5336, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5337, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5342, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __scsi_print_sense: ref;
axiom (__scsi_print_sense == $sub.ref(0, 402554));
procedure  __scsi_print_sense($p0: ref, $p1: ref, $p2: ref, $i3: i32);
const scsi_normalize_sense: ref;
axiom (scsi_normalize_sense == $sub.ref(0, 403586));
procedure  scsi_normalize_sense($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i1);
const scsi_get_sense_info_fld: ref;
axiom (scsi_get_sense_info_fld == $sub.ref(0, 404618));
procedure  scsi_get_sense_info_fld($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32);
const scsi_sense_desc_find: ref;
axiom (scsi_sense_desc_find == $sub.ref(0, 405650));
procedure  scsi_sense_desc_find($p0: ref, $i1: i32, $i2: i32)
  returns ($r: ref);
const blk_get_request: ref;
axiom (blk_get_request == $sub.ref(0, 406682));
procedure  blk_get_request($p0: ref, $i1: i32, $i2: i32)
  returns ($r: ref);
const blk_rq_set_block_pc: ref;
axiom (blk_rq_set_block_pc == $sub.ref(0, 407714));
procedure  blk_rq_set_block_pc($p0: ref);
const blk_rq_map_user: ref;
axiom (blk_rq_map_user == $sub.ref(0, 408746));
procedure  blk_rq_map_user($p0: ref, $p1: ref, $p2: ref, $p3: ref, $i4: i64, $i5: i32)
  returns ($r: i32);
const blk_put_request: ref;
axiom (blk_put_request == $sub.ref(0, 409778));
procedure  blk_put_request($p0: ref);
const atomic64_inc: ref;
axiom (atomic64_inc == $sub.ref(0, 410810));
procedure  atomic64_inc($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4673, 129} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4673, 147} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  call devirtbounce.7(0, $p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4674, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ktime_get: ref;
axiom (ktime_get == $sub.ref(0, 411842));
procedure  ktime_get()
  returns ($r: i64);
const st_scsi_execute_end: ref;
axiom (st_scsi_execute_end == $sub.ref(0, 412874));
procedure  st_scsi_execute_end($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i64;
  var $i25: i1;
  var $p26: ref;
  var $p27: ref;
  var $i28: i32;
  var $p29: ref;
  var $p30: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.request* %0, i64 0, metadata !12052, metadata !5777), !dbg !12053, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5553, 37} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 352);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5553, 37} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5553, 11} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5554, 16} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5554, 16} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5555, 18} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5555, 18} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  // WARNING: %9 = load i32, i32* %8, align 4, !dbg !5789, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5556, 10} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p4, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5556, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p9, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5557, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p6, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5557, 9} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5557, 18} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 40);
  $p13 := $add.ref($p11, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5557, 42} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p13, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5558, 48} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5558, 48} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5558, 9} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p6, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5558, 9} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5558, 18} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p17, 40);
  $p19 := $add.ref($add.ref($p17, 40), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5558, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5559, 3} true;
  assume {:verifier.code 0} true;
  call st_do_stats($p6, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5560, 16} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p4, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5560, 16} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5561, 30} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5561, 30} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5561, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $p2i.ref.i64($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5561, 38} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i64($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5561, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5562, 21} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p4, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5562, 21} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5562, 5} true;
  assume {:verifier.code 0} true;
  call complete_($p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5563, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5566, 3} true;
  assume {:verifier.code 0} true;
  call $i28 := blk_rq_unmap_user($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5567, 26} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5567, 26} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5567, 3} true;
  assume {:verifier.code 0} true;
  call __blk_put_request($p30, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5568, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const blk_execute_rq_nowait: ref;
axiom (blk_execute_rq_nowait == $sub.ref(0, 413906));
procedure  blk_execute_rq_nowait($p0: ref, $p1: ref, $p2: ref, $i3: i32, $p4: ref);
const st_do_stats: ref;
axiom (st_do_stats == $sub.ref(0, 414938));
procedure  st_do_stats($p0: ref, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $p16: ref;
  var $i17: i64;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i64;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $i33: i64;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $i52: i32;
  var $i53: i64;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $i62: i1;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $i69: i32;
  var $i70: i64;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $i76: i8;
  var $i77: i32;
  var $i78: i1;
  var $p79: ref;
  var $i80: i64;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $i85: i64;
  var $i86: i64;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i64;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $i96: i64;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $i104: i32;
  var $i105: i1;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $i109: i32;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $i114: i32;
  var $i115: i32;
  var $i116: i64;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $i124: i32;
  var $i125: i1;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $i132: i32;
  var $i133: i64;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $p137: ref;
  var $i138: i64;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $i143: i64;
  var $i144: i64;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $p148: ref;
  var $i149: i64;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $p158: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5497, 9} true;
  assume {:verifier.code 0} true;
  call $i7 := ktime_get();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5497, 9} true;
  assume {:verifier.code 0} true;
  $p8 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5497, 9} true;
  assume {:verifier.code 0} true;
  $M.16 := $store.i64($M.16, $p8, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5497, 9} true;
  assume {:verifier.code 0} true;
  $p9 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5497, 9} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5497, 9} true;
  assume {:verifier.code 0} true;
  call $M.16 := $memcpy.i8($M.16, $M.16, $p9, $p10, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5498, 29} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p1, 280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5498, 29} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5498, 22} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5498, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5498, 34} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5498, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5499, 32} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5499, 32} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i64($M.16, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5499, 45} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5499, 45} true;
  assume {:verifier.code 0} true;
  $p19 := $load.ref($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5499, 53} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p19, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5499, 64} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5499, 64} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i64($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5499, 37} true;
  assume {:verifier.code 0} true;
  $i23 := $sub.i64($i17, $i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5499, 21} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5499, 26} true;
  assume {:verifier.code 0} true;
  $M.16 := $store.i64($M.16, $p24, $i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5500, 11} true;
  assume {:verifier.code 0} true;
  $p25 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5500, 11} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5500, 11} true;
  assume {:verifier.code 0} true;
  call $M.16 := $memcpy.i8($M.16, $M.16, $p25, $p26, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5501, 29} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5501, 29} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i64($M.16, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5501, 43} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5501, 43} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5501, 51} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p30, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5501, 5} true;
  assume {:verifier.code 0} true;
  call atomic64_add($i28, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5502, 29} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5502, 29} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i64($M.16, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5502, 43} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5502, 43} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5502, 51} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5502, 5} true;
  assume {:verifier.code 0} true;
  call atomic64_add($i33, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5503, 26} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5503, 26} true;
  assume {:verifier.code 0} true;
  $p38 := $load.ref($M.0, $p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5503, 34} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p38, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5503, 5} true;
  assume {:verifier.code 0} true;
  call atomic64_inc($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5504, 14} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p1, 260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5504, 14} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5504, 21} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5504, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5517, 29} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p1, 280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5517, 29} true;
  assume {:verifier.code 0} true;
  $p75 := $load.ref($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5517, 22} true;
  assume {:verifier.code 0} true;
  $i76 := $load.i8($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5517, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $zext.i8.i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5517, 34} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.i32($i77, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5517, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb10, $bb11;
$bb3:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5505, 54} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5505, 54} true;
  assume {:verifier.code 0} true;
  $p44 := $load.ref($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5505, 62} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p44, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5505, 13} true;
  assume {:verifier.code 0} true;
  call $i46 := atomic_read($p45);
  // WARNING: %49 = call i32 @atomic_read(%struct.__anonstruct_kuid_t_46* %48), !dbg !5828, !verifier.code !5777
  call {:cexpr "tmp"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5506, 40} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5506, 40} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5506, 49} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p48, 40);
  $p50 := $add.ref($add.ref($p48, 40), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5506, 57} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5506, 32} true;
  assume {:verifier.code 0} true;
  $i52 := $sub.i32($i46, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5506, 20} true;
  assume {:verifier.code 0} true;
  $i53 := $sext.i32.i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5506, 76} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5506, 76} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5506, 84} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5506, 7} true;
  assume {:verifier.code 0} true;
  call atomic64_add($i53, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5507, 17} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5507, 17} true;
  assume {:verifier.code 0} true;
  $p58 := $load.ref($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5507, 26} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p58, 40);
  $p60 := $add.ref($add.ref($p58, 40), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5507, 34} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5507, 43} true;
  assume {:verifier.code 0} true;
  $i62 := $sgt.i32($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5507, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb5, $bb6;
$bb4:
  assume !(($i42 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5513, 58} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5513, 58} true;
  assume {:verifier.code 0} true;
  $p67 := $load.ref($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5513, 66} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p67, 108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5513, 17} true;
  assume {:verifier.code 0} true;
  call $i69 := atomic_read($p68);
  // WARNING: %76 = call i32 @atomic_read(%struct.__anonstruct_kuid_t_46* %75), !dbg !5854, !verifier.code !5777
  call {:cexpr "tmp___0"} boogie_si_record_i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5514, 20} true;
  assume {:verifier.code 0} true;
  $i70 := $sext.i32.i64($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5514, 44} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5514, 44} true;
  assume {:verifier.code 0} true;
  $p72 := $load.ref($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5514, 52} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p72, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5514, 7} true;
  assume {:verifier.code 0} true;
  call atomic64_add($i70, $p73);
  assume {:verifier.code 0} true;
  goto $bb8;
$bb5:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5508, 30} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5508, 30} true;
  assume {:verifier.code 0} true;
  $p64 := $load.ref($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5508, 38} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p64, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5508, 9} true;
  assume {:verifier.code 0} true;
  call atomic64_inc($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5509, 7} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5512, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5516, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5541, 24} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5541, 24} true;
  assume {:verifier.code 0} true;
  $p157 := $load.ref($M.0, $p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5541, 32} true;
  assume {:verifier.code 0} true;
  $p158 := $add.ref($p157, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5541, 3} true;
  assume {:verifier.code 0} true;
  call atomic64_dec($p158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5542, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb10:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5518, 32} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5518, 32} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i64($M.16, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5518, 45} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5518, 45} true;
  assume {:verifier.code 0} true;
  $p82 := $load.ref($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5518, 53} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p82, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5518, 63} true;
  assume {:verifier.code 0} true;
  $p84 := $bitcast.ref.ref($p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5518, 63} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i64($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5518, 37} true;
  assume {:verifier.code 0} true;
  $i86 := $sub.i64($i80, $i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5518, 21} true;
  assume {:verifier.code 0} true;
  $p87 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5518, 26} true;
  assume {:verifier.code 0} true;
  $M.16 := $store.i64($M.16, $p87, $i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5519, 11} true;
  assume {:verifier.code 0} true;
  $p88 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5519, 11} true;
  assume {:verifier.code 0} true;
  $p89 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5519, 11} true;
  assume {:verifier.code 0} true;
  call $M.16 := $memcpy.i8($M.16, $M.16, $p88, $p89, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5520, 29} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5520, 29} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i64($M.16, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5520, 43} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5520, 43} true;
  assume {:verifier.code 0} true;
  $p93 := $load.ref($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5520, 51} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p93, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5520, 5} true;
  assume {:verifier.code 0} true;
  call atomic64_add($i91, $p94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5521, 29} true;
  assume {:verifier.code 0} true;
  $p95 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5521, 29} true;
  assume {:verifier.code 0} true;
  $i96 := $load.i64($M.16, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5521, 43} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5521, 43} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5521, 51} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p98, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5521, 5} true;
  assume {:verifier.code 0} true;
  call atomic64_add($i96, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5522, 26} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5522, 26} true;
  assume {:verifier.code 0} true;
  $p101 := $load.ref($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5522, 34} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p101, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5522, 5} true;
  assume {:verifier.code 0} true;
  call atomic64_inc($p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5523, 14} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p1, 260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5523, 14} true;
  assume {:verifier.code 0} true;
  $i104 := $load.i32($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5523, 21} true;
  assume {:verifier.code 0} true;
  $i105 := $ne.i32($i104, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5523, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i78 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5536, 32} true;
  assume {:verifier.code 0} true;
  $p137 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5536, 32} true;
  assume {:verifier.code 0} true;
  $i138 := $load.i64($M.16, $p137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5536, 45} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5536, 45} true;
  assume {:verifier.code 0} true;
  $p140 := $load.ref($M.0, $p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5536, 53} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p140, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5536, 64} true;
  assume {:verifier.code 0} true;
  $p142 := $bitcast.ref.ref($p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5536, 64} true;
  assume {:verifier.code 0} true;
  $i143 := $load.i64($M.0, $p142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5536, 37} true;
  assume {:verifier.code 0} true;
  $i144 := $sub.i64($i138, $i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5536, 21} true;
  assume {:verifier.code 0} true;
  $p145 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5536, 26} true;
  assume {:verifier.code 0} true;
  $M.16 := $store.i64($M.16, $p145, $i144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5537, 11} true;
  assume {:verifier.code 0} true;
  $p146 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5537, 11} true;
  assume {:verifier.code 0} true;
  $p147 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5537, 11} true;
  assume {:verifier.code 0} true;
  call $M.16 := $memcpy.i8($M.16, $M.16, $p146, $p147, 8, $zext.i32.i64(8), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5538, 29} true;
  assume {:verifier.code 0} true;
  $p148 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5538, 29} true;
  assume {:verifier.code 0} true;
  $i149 := $load.i64($M.16, $p148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5538, 43} true;
  assume {:verifier.code 0} true;
  $p150 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5538, 43} true;
  assume {:verifier.code 0} true;
  $p151 := $load.ref($M.0, $p150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5538, 51} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p151, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5538, 5} true;
  assume {:verifier.code 0} true;
  call atomic64_add($i149, $p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5539, 26} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5539, 26} true;
  assume {:verifier.code 0} true;
  $p154 := $load.ref($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5539, 34} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p154, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5539, 5} true;
  assume {:verifier.code 0} true;
  call atomic64_inc($p155);
  assume {:verifier.code 0} true;
  goto $bb18;
$bb12:
  assume ($i105 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5524, 58} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5524, 58} true;
  assume {:verifier.code 0} true;
  $p107 := $load.ref($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5524, 66} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p107, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5524, 17} true;
  assume {:verifier.code 0} true;
  call $i109 := atomic_read($p108);
  // WARNING: %120 = call i32 @atomic_read(%struct.__anonstruct_kuid_t_46* %119), !dbg !5895, !verifier.code !5777
  call {:cexpr "tmp___1"} boogie_si_record_i32($i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5525, 44} true;
  assume {:verifier.code 0} true;
  $p110 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5525, 44} true;
  assume {:verifier.code 0} true;
  $p111 := $load.ref($M.0, $p110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5525, 53} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p111, 40);
  $p113 := $add.ref($add.ref($p111, 40), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5525, 61} true;
  assume {:verifier.code 0} true;
  $i114 := $load.i32($M.0, $p113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5525, 36} true;
  assume {:verifier.code 0} true;
  $i115 := $sub.i32($i109, $i114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5525, 20} true;
  assume {:verifier.code 0} true;
  $i116 := $sext.i32.i64($i115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5525, 80} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5525, 80} true;
  assume {:verifier.code 0} true;
  $p118 := $load.ref($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5525, 88} true;
  assume {:verifier.code 0} true;
  $p119 := $p118;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5525, 7} true;
  assume {:verifier.code 0} true;
  call atomic64_add($i116, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5526, 17} true;
  assume {:verifier.code 0} true;
  $p120 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5526, 17} true;
  assume {:verifier.code 0} true;
  $p121 := $load.ref($M.0, $p120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5526, 26} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p121, 40);
  $p123 := $add.ref($add.ref($p121, 40), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5526, 34} true;
  assume {:verifier.code 0} true;
  $i124 := $load.i32($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5526, 43} true;
  assume {:verifier.code 0} true;
  $i125 := $sgt.i32($i124, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5526, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i105 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5532, 58} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5532, 58} true;
  assume {:verifier.code 0} true;
  $p130 := $load.ref($M.0, $p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5532, 66} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p130, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5532, 17} true;
  assume {:verifier.code 0} true;
  call $i132 := atomic_read($p131);
  // WARNING: %147 = call i32 @atomic_read(%struct.__anonstruct_kuid_t_46* %146), !dbg !5921, !verifier.code !5777
  call {:cexpr "tmp___2"} boogie_si_record_i32($i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5533, 20} true;
  assume {:verifier.code 0} true;
  $i133 := $sext.i32.i64($i132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5533, 44} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5533, 44} true;
  assume {:verifier.code 0} true;
  $p135 := $load.ref($M.0, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5533, 52} true;
  assume {:verifier.code 0} true;
  $p136 := $p135;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5533, 7} true;
  assume {:verifier.code 0} true;
  call atomic64_add($i133, $p136);
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5527, 30} true;
  assume {:verifier.code 0} true;
  $p126 := $add.ref($p0, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5527, 30} true;
  assume {:verifier.code 0} true;
  $p127 := $load.ref($M.0, $p126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5527, 38} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($p127, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5527, 9} true;
  assume {:verifier.code 0} true;
  call atomic64_inc($p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5528, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5531, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5535, 3} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  goto $bb9;
}
const complete_: ref;
axiom (complete_ == $sub.ref(0, 415970));
procedure  complete_($p0: ref);
const blk_rq_unmap_user: ref;
axiom (blk_rq_unmap_user == $sub.ref(0, 417002));
procedure  blk_rq_unmap_user($p0: ref)
  returns ($r: i32);
const __blk_put_request: ref;
axiom (__blk_put_request == $sub.ref(0, 418034));
procedure  __blk_put_request($p0: ref, $p1: ref);
const atomic64_add: ref;
axiom (atomic64_add == $sub.ref(0, 419066));
procedure  atomic64_add($i0: i64, $p1: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4663, 132} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4664, 32} true;
  assume {:verifier.code 0} true;
  $p3 := $p1;
  call devirtbounce.8(0, $p2, $i0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4665, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const atomic_read: ref;
axiom (atomic_read == $sub.ref(0, 420098));
procedure  atomic_read($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.__anonstruct_kuid_t_46* %0, i64 0, metadata !12280, metadata !5777), !dbg !12281, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4597, 49} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4597, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4597, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const atomic64_dec: ref;
axiom (atomic64_dec == $sub.ref(0, 421130));
procedure  atomic64_dec($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4682, 129} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4682, 147} true;
  assume {:verifier.code 0} true;
  $p2 := $p0;
  call devirtbounce.7(0, $p1, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4683, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __init_waitqueue_head: ref;
axiom (__init_waitqueue_head == $sub.ref(0, 422162));
procedure  __init_waitqueue_head($p0: ref, $p1: ref, $p2: ref);
const test_tsk_thread_flag: ref;
axiom (test_tsk_thread_flag == $sub.ref(0, 423194));
procedure  test_tsk_thread_flag($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.task_struct* %0, i64 0, metadata !12298, metadata !5777), !dbg !12299, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4937, 56} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4937, 56} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.15, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4937, 29} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4937, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := test_ti_thread_flag($p4, $i1);
  // WARNING: %6 = call i32 @test_ti_thread_flag(%struct.thread_info* %5, i32 %1), !dbg !5786, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4938, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const test_ti_thread_flag: ref;
axiom (test_ti_thread_flag == $sub.ref(0, 424226));
procedure  test_ti_thread_flag($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i64;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.thread_info* %0, i64 0, metadata !12312, metadata !5777), !dbg !12313, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4702, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4702, 81} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4702, 40} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4702, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := variable_test_bit($i2, $p4);
  // WARNING: %6 = call i32 @variable_test_bit(i64 %3, i64* %5), !dbg !5787, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4703, 3} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
}
const variable_test_bit: ref;
axiom (variable_test_bit == $sub.ref(0, 425258));
procedure  variable_test_bit($i0: i64, $p1: ref)
  returns ($r: i32)
{
  var $i2: i32;
$bb0:
  call $i2 := devirtbounce.9(0, $p1, $i0);
  // WARNING: %3 = call i32 @devirtbounce.9(i32 (i64*, i64)* asm sideeffect "bt $2,$1\0A\09sbb $0,$0", "=r,*m,Ir,~{dirflag},~{fpsr},~{flags}", i64* %1, i64 %0)
  call {:cexpr "oldbit"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4436, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const set_location: ref;
axiom (set_location == $sub.ref(0, 426290));
procedure  set_location($p0: ref, $i1: i32, $i2: i32, $i3: i32)
  returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i1;
  var $p12: ref;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i64;
  var $p19: ref;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i1;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i1;
  var $i30: i1;
  var $i31: i1;
  var $p32: ref;
  var $i33: i32;
  var $i34: i1;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i32;
  var $p47: ref;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $i53: i8;
  var $i54: i32;
  var $i55: i1;
  var $p56: ref;
  var $i57: i32;
  var $i58: i8;
  var $p59: ref;
  var $i60: i32;
  var $i61: i8;
  var $p62: ref;
  var $i63: i8;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $i68: i8;
  var $p69: ref;
  var $i70: i32;
  var $i71: i8;
  var $p72: ref;
  var $i73: i32;
  var $i74: i8;
  var $p75: ref;
  var $i76: i8;
  var $p77: ref;
  var $i78: i1;
  var $p79: ref;
  var $i80: i8;
  var $i81: i32;
  var $i82: i1;
  var $p83: ref;
  var $p84: ref;
  var $i85: i32;
  var $i86: i1;
  var $p87: ref;
  var $i88: i8;
  var $i89: i32;
  var $i90: i32;
  var $i91: i8;
  var $p92: ref;
  var $i93: i8;
  var $p94: ref;
  var $i95: i32;
  var $i96: i1;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $i101: i32;
  var $p102: ref;
  var $i103: i8;
  var $i104: i32;
  var $i105: i1;
  var $p106: ref;
  var $i107: i8;
  var $i108: i32;
  var $i109: i32;
  var $i110: i8;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i32;
  var $i118: i32;
  var $p119: ref;
  var $p120: ref;
  var $i121: i64;
  var $i122: i1;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $i126: i32;
  var $p127: ref;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $i133: i32;
  var $i134: i1;
  var $p135: ref;
  var $i136: i8;
  var $i137: i32;
  var $i138: i1;
  var $p139: ref;
  var $p140: ref;
  var $p141: ref;
  var $i142: i8;
  var $i143: i32;
  var $i144: i1;
  var $i145: i32;
  var $i146: i32;
  var $i147: i1;
  var $i148: i32;
  var $p149: ref;
  var $p151: ref;
  var $i152: i8;
  var $i153: i32;
  var $i154: i1;
  var $p155: ref;
  var $p156: ref;
  var $p157: ref;
  var $i158: i64;
  var $p159: ref;
  var $p160: ref;
  var $i161: i8;
  var $i162: i32;
  var $i163: i1;
  var $p164: ref;
  var $i165: i32;
  var $i166: i1;
  var $p167: ref;
  var $p168: ref;
  var $p170: ref;
  var $p169: ref;
  var $i171: i1;
  var $p172: ref;
  var $p173: ref;
  var $i150: i32;
  var $i11: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !12338, metadata !5777), !dbg !12339, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !12340, metadata !5777), !dbg !12341, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !12342, metadata !5777), !dbg !12343, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9162, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9162, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9162, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9162, 33} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9162, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9163, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 5);
  goto $bb3;
$bb2:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9292, 1} true;
  assume {:verifier.code 0} true;
  $r := $i11;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9167, 18} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9167, 18} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  // WARNING: %16 = load i32, i32* %15, align 4, !dbg !5801, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9168, 40} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9168, 10} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9168, 67} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9168, 67} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9168, 46} true;
  assume {:verifier.code 0} true;
  $i18 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9168, 44} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p15, $mul.ref($i18, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9169, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9169, 17} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9169, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9170, 11} true;
  assume {:verifier.code 0} true;
  call $p22 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9171, 65} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9171, 65} true;
  assume {:verifier.code 0} true;
  $p24 := $load.ref($M.0, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9171, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.12, $p24, $p22, .str.97, $i1, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9173, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9176, 17} true;
  assume {:verifier.code 0} true;
  $i25 := $slt.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9176, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9177, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 5);
  goto $bb3;
$bb9:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 28} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 28} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 8} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 43} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 49} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 62} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 68} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb14, $bb16;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 49} true;
  assume {:verifier.code 0} true;
  assume !(($i29 == 1));
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 81} true;
  assume {:verifier.code 0} true;
  $i31 := $sgt.i32($i2, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i31} true;
  goto $bb17, $bb18;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 68} true;
  assume {:verifier.code 0} true;
  assume ($i30 == 1);
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9182, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32(0, 22);
  goto $bb3;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 68} true;
  assume {:verifier.code 0} true;
  assume !(($i30 == 1));
  goto $bb13;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9181, 7} true;
  assume {:verifier.code 0} true;
  assume ($i31 == 1);
  goto $bb15;
$bb18:
  assume !(($i31 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9186, 12} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9186, 12} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9186, 22} true;
  assume {:verifier.code 0} true;
  $i34 := $ne.i32($i33, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9186, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9187, 15} true;
  assume {:verifier.code 0} true;
  call $i35 := get_location($p0, $p5, $p4, 1);
  // WARNING: %50 = call i32 @get_location(%struct.scsi_tape* %0, i32* %6, i32* %5, i32 1), !dbg !5844, !verifier.code !5777
  call {:cexpr "tmp___1"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9188, 17} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9188, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb22:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9189, 13} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p15, $mul.ref($i18, 16)), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9189, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9190, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i36 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9191, 13} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p15, $mul.ref($i18, 16)), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9191, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p38, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9192, 34} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.14, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9192, 13} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p15, $mul.ref($i18, 16)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9192, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9193, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9193, 21} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9193, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb25, $bb26;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9201, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb25:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9194, 19} true;
  assume {:verifier.code 0} true;
  call $p43 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9195, 69} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9195, 69} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9196, 74} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i32($M.14, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9196, 84} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9196, 84} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i32($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9195, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.12, $p45, $p43, .str.98, $i46, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9197, 7} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  goto $bb24;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9204, 3} true;
  assume {:verifier.code 0} true;
  $p49 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9204, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p49, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9205, 34} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9205, 34} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9205, 43} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p51, 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9205, 43} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i8($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9205, 7} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i8.i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9205, 55} true;
  assume {:verifier.code 0} true;
  $i55 := $sle.i32($i54, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9205, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i55 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9206, 5} true;
  assume {:verifier.code 0} true;
  $p56 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9206, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p56, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9207, 38} true;
  assume {:verifier.code 0} true;
  $i57 := $lshr.i32($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9207, 15} true;
  assume {:verifier.code 0} true;
  $i58 := $trunc.i32.i8($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9207, 5} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p6, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9207, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p59, $i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9208, 38} true;
  assume {:verifier.code 0} true;
  $i60 := $lshr.i32($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9208, 15} true;
  assume {:verifier.code 0} true;
  $i61 := $trunc.i32.i8($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9208, 5} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p6, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9208, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p62, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9209, 15} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9209, 5} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p6, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9209, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p64, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9210, 5} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p6, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9210, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9211, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i55 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9212, 5} true;
  assume {:verifier.code 0} true;
  $p66 := $p6;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9212, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p66, 43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9213, 38} true;
  assume {:verifier.code 0} true;
  $i67 := $lshr.i32($i1, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9213, 15} true;
  assume {:verifier.code 0} true;
  $i68 := $trunc.i32.i8($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9213, 5} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p6, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9213, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p69, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9214, 38} true;
  assume {:verifier.code 0} true;
  $i70 := $lshr.i32($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9214, 15} true;
  assume {:verifier.code 0} true;
  $i71 := $trunc.i32.i8($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9214, 5} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p6, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9214, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p72, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9215, 38} true;
  assume {:verifier.code 0} true;
  $i73 := $lshr.i32($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9215, 15} true;
  assume {:verifier.code 0} true;
  $i74 := $trunc.i32.i8($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9215, 5} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p6, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9215, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p75, $i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9216, 15} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i32.i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9216, 5} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p6, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9216, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p77, $i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9217, 17} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9217, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb32, $bb33;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9237, 27} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0, 290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9237, 27} true;
  assume {:verifier.code 0} true;
  $i103 := $load.i8($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9237, 7} true;
  assume {:verifier.code 0} true;
  $i104 := $zext.i8.i32($i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9237, 37} true;
  assume {:verifier.code 0} true;
  $i105 := $ne.i32($i104, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9237, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i105} true;
  goto $bb44, $bb45;
$bb32:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9217, 45} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9217, 45} true;
  assume {:verifier.code 0} true;
  $i80 := $load.i8($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9217, 25} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i8.i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9217, 59} true;
  assume {:verifier.code 0} true;
  $i82 := $eq.i32($i81, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9217, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i82} true;
  goto $bb35, $bb36;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9217, 22} true;
  assume {:verifier.code 0} true;
  assume !(($i78 == 1));
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb35:
  assume ($i82 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9218, 7} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9218, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p83, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9219, 5} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9217, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i82 == 1));
  goto $bb34;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9222, 14} true;
  assume {:verifier.code 0} true;
  $p84 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9222, 14} true;
  assume {:verifier.code 0} true;
  $i85 := $load.i32($M.0, $p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9222, 24} true;
  assume {:verifier.code 0} true;
  $i86 := $ne.i32($i85, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9222, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i86 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9223, 32} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9223, 32} true;
  assume {:verifier.code 0} true;
  $i88 := $load.i8($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9223, 17} true;
  assume {:verifier.code 0} true;
  $i89 := $zext.i8.i32($i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9223, 40} true;
  assume {:verifier.code 0} true;
  $i90 := $or.i32($i89, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9223, 17} true;
  assume {:verifier.code 0} true;
  $i91 := $trunc.i32.i8($i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9223, 7} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9223, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p92, $i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9224, 17} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i32.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9224, 7} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p6, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9224, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p94, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9225, 11} true;
  assume {:verifier.code 0} true;
  $i95 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9225, 21} true;
  assume {:verifier.code 0} true;
  $i96 := $ne.i32($i95, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9225, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i96} true;
  goto $bb40, $bb41;
$bb39:
  assume !(($i86 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb40:
  assume ($i96 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9226, 19} true;
  assume {:verifier.code 0} true;
  call $p97 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9227, 69} true;
  assume {:verifier.code 0} true;
  $p98 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9227, 69} true;
  assume {:verifier.code 0} true;
  $p99 := $load.ref($M.0, $p98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9228, 79} true;
  assume {:verifier.code 0} true;
  $p100 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9228, 79} true;
  assume {:verifier.code 0} true;
  $i101 := $load.i32($M.0, $p100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9227, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.12, $p99, $p97, .str.99, $i101, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9230, 7} true;
  assume {:verifier.code 0} true;
  goto $bb42;
$bb41:
  assume !(($i96 == 1));
  assume {:verifier.code 0} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9233, 5} true;
  assume {:verifier.code 0} true;
  goto $bb43;
$bb43:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb44:
  assume ($i105 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9238, 30} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9238, 30} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i8($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9238, 15} true;
  assume {:verifier.code 0} true;
  $i108 := $zext.i8.i32($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9238, 38} true;
  assume {:verifier.code 0} true;
  $i109 := $or.i32($i108, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9238, 15} true;
  assume {:verifier.code 0} true;
  $i110 := $trunc.i32.i8($i109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9238, 5} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p6, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9238, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p111, $i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9239, 28} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9239, 28} true;
  assume {:verifier.code 0} true;
  $p113 := $load.ref($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9239, 37} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p113, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9239, 37} true;
  assume {:verifier.code 0} true;
  $p115 := $load.ref($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9239, 53} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p115, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9239, 53} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i32($M.0, $p116);
  // WARNING: %154 = load i32, i32* %153, align 8, !dbg !5968, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9240, 3} true;
  assume {:verifier.code 0} true;
  $i118 := $i117;
  goto $bb46;
$bb45:
  assume !(($i105 == 1));
  assume {:verifier.code 0} true;
  $i118 := $i13;
  goto $bb46;
$bb46:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9243, 51} true;
  assume {:verifier.code 0} true;
  $p119 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9243, 11} true;
  assume {:verifier.code 0} true;
  call $p120 := st_do_scsi($0.ref, $p0, $p119, 0, 3, $i118, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9245, 7} true;
  assume {:verifier.code 0} true;
  $i121 := $p2i.ref.i64($p120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9245, 29} true;
  assume {:verifier.code 0} true;
  $i122 := $eq.i64($i121, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9245, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb47, $bb48;
$bb47:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9246, 19} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9246, 19} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9246, 28} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p124, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9246, 28} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i32($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9246, 5} true;
  assume {:verifier.code 0} true;
  $i11 := $i126;
  goto $bb3;
$bb48:
  assume !(($i122 == 1));
  assume {:verifier.code 0} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9251, 9} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($add.ref($p15, $mul.ref($i18, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9251, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p127, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9252, 9} true;
  assume {:verifier.code 0} true;
  $p128 := $add.ref($add.ref($p15, $mul.ref($i18, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9252, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p128, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9253, 9} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($add.ref($p15, $mul.ref($i18, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9253, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p129, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9254, 13} true;
  assume {:verifier.code 0} true;
  $p130 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9254, 13} true;
  assume {:verifier.code 0} true;
  $p131 := $load.ref($M.0, $p130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9254, 22} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p131, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9254, 22} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i32($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9254, 37} true;
  assume {:verifier.code 0} true;
  $i134 := $ne.i32($i133, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9254, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i134} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i134 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 29} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p0, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 29} true;
  assume {:verifier.code 0} true;
  $i136 := $load.i8($M.0, $p135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 9} true;
  assume {:verifier.code 0} true;
  $i137 := $zext.i8.i32($i136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 44} true;
  assume {:verifier.code 0} true;
  $i138 := $ne.i32($i137, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 50} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb52, $bb53;
$bb51:
  assume !(($i134 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9267, 29} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p0, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9267, 29} true;
  assume {:verifier.code 0} true;
  $i152 := $load.i8($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9267, 9} true;
  assume {:verifier.code 0} true;
  $i153 := $zext.i8.i32($i152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9267, 44} true;
  assume {:verifier.code 0} true;
  $i154 := $ne.i32($i153, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9267, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  goto $bb62, $bb63;
$bb52:
  assume ($i138 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 80} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 80} true;
  assume {:verifier.code 0} true;
  $p140 := $load.ref($M.0, $p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 89} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p140, 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 89} true;
  assume {:verifier.code 0} true;
  $i142 := $load.i8($M.0, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 53} true;
  assume {:verifier.code 0} true;
  $i143 := $sext.i8.i32($i142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 101} true;
  assume {:verifier.code 0} true;
  $i144 := $sgt.i32($i143, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i144} true;
  goto $bb55, $bb56;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 50} true;
  assume {:verifier.code 0} true;
  assume !(($i138 == 1));
  goto $bb54;
$bb54:
  assume {:verifier.code 0} true;
  goto $bb60;
$bb55:
  assume ($i144 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9257, 11} true;
  assume {:verifier.code 0} true;
  call $i145 := find_partition($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9257, 9} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.i32($M.17, $p4, $i145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9258, 11} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i32($M.17, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9258, 13} true;
  assume {:verifier.code 0} true;
  $i147 := $sge.i32($i146, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9258, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i147} true;
  goto $bb57, $bb58;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9256, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i144 == 1));
  goto $bb54;
$bb57:
  assume ($i147 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9259, 26} true;
  assume {:verifier.code 0} true;
  $i148 := $load.i32($M.17, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9259, 14} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9259, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p149, $i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9260, 7} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i147 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9263, 5} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9266, 3} true;
  assume {:verifier.code 0} true;
  $i150 := $sub.i32(0, 5);
  goto $bb61;
$bb61:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9288, 3} true;
  assume {:verifier.code 0} true;
  call st_release_request($p120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9290, 3} true;
  assume {:verifier.code 0} true;
  $i11 := $i150;
  goto $bb3;
$bb62:
  assume ($i154 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9268, 12} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9268, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p155, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9269, 44} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9269, 14} true;
  assume {:verifier.code 0} true;
  $p157 := $bitcast.ref.ref($p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9269, 50} true;
  assume {:verifier.code 0} true;
  $i158 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9269, 48} true;
  assume {:verifier.code 0} true;
  $p159 := $add.ref($p157, $mul.ref($i158, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 32} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($add.ref($p157, $mul.ref($i158, 16)), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 32} true;
  assume {:verifier.code 0} true;
  $i161 := $load.i8($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 11} true;
  assume {:verifier.code 0} true;
  $i162 := $zext.i8.i32($i161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 49} true;
  assume {:verifier.code 0} true;
  $i163 := $eq.i32($i162, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 55} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i163} true;
  goto $bb64, $bb66;
$bb63:
  assume !(($i154 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9277, 13} true;
  assume {:verifier.code 0} true;
  $p170 := $add.ref($add.ref($p15, $mul.ref($i18, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9277, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p170, 0);
  assume {:verifier.code 0} true;
  $p169 := $p19;
  goto $bb70;
$bb64:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 55} true;
  assume {:verifier.code 0} true;
  assume ($i163 == 1);
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9271, 15} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($add.ref($p157, $mul.ref($i158, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9271, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p167, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9272, 15} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p157, $mul.ref($i158, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9272, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p168, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9273, 7} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb66:
  assume !(($i163 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 64} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($add.ref($p157, $mul.ref($i158, 16)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 64} true;
  assume {:verifier.code 0} true;
  $i165 := $load.i32($M.0, $p164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 83} true;
  assume {:verifier.code 0} true;
  $i166 := $ne.i32($i165, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i166} true;
  goto $bb67, $bb68;
$bb67:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9270, 11} true;
  assume {:verifier.code 0} true;
  assume ($i166 == 1);
  goto $bb65;
$bb68:
  assume !(($i166 == 1));
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9276, 5} true;
  assume {:verifier.code 0} true;
  $p169 := $p159;
  goto $bb70;
$bb70:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9279, 15} true;
  assume {:verifier.code 0} true;
  $i171 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9279, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i171} true;
  goto $bb71, $bb72;
$bb71:
  assume ($i171 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9281, 13} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p169, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9281, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p172, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9282, 13} true;
  assume {:verifier.code 0} true;
  $p173 := $add.ref($p169, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9282, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p173, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9283, 5} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i171 == 1));
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:verifier.code 0} true;
  $i150 := 0;
  goto $bb61;
}
const get_location: ref;
axiom (get_location == $sub.ref(0, 427322));
procedure  get_location($p0: ref, $p1: ref, $p2: ref, $i3: i32)
  returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i1;
  var $p21: ref;
  var $i22: i8;
  var $i23: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $p33: ref;
  var $i34: i64;
  var $i35: i1;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i32;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $i48: i8;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i8;
  var $i56: i32;
  var $i57: i32;
  var $i58: i1;
  var $i59: i32;
  var $i60: i1;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $i68: i8;
  var $i69: i32;
  var $i70: i1;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i8;
  var $i76: i32;
  var $i77: i32;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $i85: i32;
  var $i86: i32;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $i92: i8;
  var $i93: i32;
  var $i94: i32;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $i100: i8;
  var $i101: i32;
  var $i102: i32;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $i108: i8;
  var $i109: i32;
  var $i110: i32;
  var $i111: i32;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i8;
  var $i118: i32;
  var $i119: i32;
  var $i120: i32;
  var $p121: ref;
  var $p122: ref;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $i126: i8;
  var $i127: i32;
  var $i128: i32;
  var $p129: ref;
  var $p130: ref;
  var $p131: ref;
  var $p132: ref;
  var $p133: ref;
  var $i134: i8;
  var $i135: i32;
  var $p136: ref;
  var $p137: ref;
  var $p138: ref;
  var $p139: ref;
  var $i140: i8;
  var $i141: i32;
  var $i142: i1;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $p146: ref;
  var $p147: ref;
  var $i148: i8;
  var $i149: i32;
  var $i150: i1;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $p154: ref;
  var $p155: ref;
  var $p156: ref;
  var $i157: i32;
  var $i158: i1;
  var $p159: ref;
  var $p160: ref;
  var $p161: ref;
  var $i162: i32;
  var $i163: i32;
  var $i64: i32;
  var $i9: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata i32* %2, i64 0, metadata !12635, metadata !5777), !dbg !12636, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9080, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9080, 27} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9080, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9080, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $ne.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9080, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9081, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $sub.i32(0, 5);
  goto $bb3;
$bb2:
  assume !(($i8 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9143, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9085, 3} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9085, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p10, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9086, 34} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9086, 34} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9086, 43} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p12, 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9086, 43} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9086, 7} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9086, 55} true;
  assume {:verifier.code 0} true;
  $i16 := $sle.i32($i15, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9086, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9087, 5} true;
  assume {:verifier.code 0} true;
  $p17 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9087, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p17, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9088, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9088, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p18, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9089, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i16 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9090, 5} true;
  assume {:verifier.code 0} true;
  $p19 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9090, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p19, 52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9091, 17} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9091, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb8, $bb9;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9097, 51} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9098, 35} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9098, 35} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9098, 44} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p28, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9098, 44} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9098, 60} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p30, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9098, 60} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9097, 11} true;
  assume {:verifier.code 0} true;
  call $p33 := st_do_scsi($0.ref, $p0, $p26, 20, 2, $i32, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9099, 7} true;
  assume {:verifier.code 0} true;
  $i34 := $p2i.ref.i64($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9099, 29} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i64($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9099, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb14, $bb15;
$bb8:
  assume ($i20 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9091, 45} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9091, 45} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i8($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9091, 25} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9091, 59} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9091, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb11, $bb12;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9091, 22} true;
  assume {:verifier.code 0} true;
  assume !(($i20 == 1));
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  goto $bb13;
$bb11:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9092, 7} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9092, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p25, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9093, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9091, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i24 == 1));
  goto $bb10;
$bb13:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb14:
  assume ($i35 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9100, 19} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9100, 19} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9100, 28} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p37, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9100, 28} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9100, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i39;
  goto $bb3;
$bb15:
  assume !(($i35 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 13} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 13} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 22} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 22} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 37} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 42} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb17, $bb19;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 42} true;
  assume {:verifier.code 0} true;
  assume ($i44 == 1);
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9105, 16} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.i32($M.17, $p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9106, 12} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i32($M.14, $p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9107, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9107, 19} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i32($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9107, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb25, $bb26;
$bb19:
  assume !(($i44 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 73} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 73} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 82} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p46, 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 82} true;
  assume {:verifier.code 0} true;
  $i48 := $load.i8($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 46} true;
  assume {:verifier.code 0} true;
  $i49 := $sext.i8.i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 94} true;
  assume {:verifier.code 0} true;
  $i50 := $sgt.i32($i49, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 98} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 116} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 116} true;
  assume {:verifier.code 0} true;
  $p52 := $load.ref($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 125} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p52, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 125} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 108} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i8($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 102} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i8.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 133} true;
  assume {:verifier.code 0} true;
  $i57 := $and.i32($i56, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 138} true;
  assume {:verifier.code 0} true;
  $i58 := $ne.i32($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb23, $bb24;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 98} true;
  assume {:verifier.code 0} true;
  assume !(($i50 == 1));
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9117, 36} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9117, 36} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9117, 45} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p66, 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9117, 45} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i8($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9117, 9} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i8.i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9117, 57} true;
  assume {:verifier.code 0} true;
  $i70 := $sle.i32($i69, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9117, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i70} true;
  goto $bb29, $bb30;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 7} true;
  assume {:verifier.code 0} true;
  assume ($i58 == 1);
  goto $bb18;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9104, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i58 == 1));
  goto $bb22;
$bb25:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9108, 13} true;
  assume {:verifier.code 0} true;
  call $p61 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9109, 67} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9109, 67} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9109, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p63, $p61, .str.100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9111, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9115, 3} true;
  assume {:verifier.code 0} true;
  $i64 := $sub.i32(0, 5);
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9139, 3} true;
  assume {:verifier.code 0} true;
  call st_release_request($p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9141, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i64;
  goto $bb3;
$bb29:
  assume ($i70 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 48} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 48} true;
  assume {:verifier.code 0} true;
  $p72 := $load.ref($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 57} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p72, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 57} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 40} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i8($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 34} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i8.i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 65} true;
  assume {:verifier.code 0} true;
  $i77 := $shl.i32($i76, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 89} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 89} true;
  assume {:verifier.code 0} true;
  $p79 := $load.ref($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 98} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p79, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 98} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 105} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p81, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 81} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 75} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 112} true;
  assume {:verifier.code 0} true;
  $i85 := $shl.i32($i84, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 72} true;
  assume {:verifier.code 0} true;
  $i86 := $add.i32($i77, $i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 135} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 135} true;
  assume {:verifier.code 0} true;
  $p88 := $load.ref($M.0, $p87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 144} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p88, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 144} true;
  assume {:verifier.code 0} true;
  $p90 := $load.ref($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 151} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p90, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 127} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i8($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 121} true;
  assume {:verifier.code 0} true;
  $i93 := $zext.i8.i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 119} true;
  assume {:verifier.code 0} true;
  $i94 := $add.i32($i86, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9118, 14} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i32($M.14, $p1, $i94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9119, 18} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.i32($M.17, $p2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9120, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i70 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 49} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 49} true;
  assume {:verifier.code 0} true;
  $p96 := $load.ref($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 58} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p96, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 58} true;
  assume {:verifier.code 0} true;
  $p98 := $load.ref($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 65} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p98, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 41} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i8($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 35} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.i8.i32($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 72} true;
  assume {:verifier.code 0} true;
  $i102 := $shl.i32($i101, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 96} true;
  assume {:verifier.code 0} true;
  $p103 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 96} true;
  assume {:verifier.code 0} true;
  $p104 := $load.ref($M.0, $p103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 105} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p104, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 105} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 112} true;
  assume {:verifier.code 0} true;
  $p107 := $add.ref($p106, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 88} true;
  assume {:verifier.code 0} true;
  $i108 := $load.i8($M.0, $p107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 82} true;
  assume {:verifier.code 0} true;
  $i109 := $zext.i8.i32($i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 119} true;
  assume {:verifier.code 0} true;
  $i110 := $shl.i32($i109, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 79} true;
  assume {:verifier.code 0} true;
  $i111 := $add.i32($i102, $i110);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 144} true;
  assume {:verifier.code 0} true;
  $p112 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 144} true;
  assume {:verifier.code 0} true;
  $p113 := $load.ref($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 153} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p113, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 153} true;
  assume {:verifier.code 0} true;
  $p115 := $load.ref($M.0, $p114);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 160} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p115, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 136} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i8($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 130} true;
  assume {:verifier.code 0} true;
  $i118 := $zext.i8.i32($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 167} true;
  assume {:verifier.code 0} true;
  $i119 := $shl.i32($i118, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 127} true;
  assume {:verifier.code 0} true;
  $i120 := $add.i32($i111, $i119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 190} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 190} true;
  assume {:verifier.code 0} true;
  $p122 := $load.ref($M.0, $p121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 199} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p122, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 199} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 206} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p124, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 182} true;
  assume {:verifier.code 0} true;
  $i126 := $load.i8($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 176} true;
  assume {:verifier.code 0} true;
  $i127 := $zext.i8.i32($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 174} true;
  assume {:verifier.code 0} true;
  $i128 := $add.i32($i120, $i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9121, 14} true;
  assume {:verifier.code 0} true;
  $M.14 := $store.i32($M.14, $p1, $i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9122, 34} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9122, 34} true;
  assume {:verifier.code 0} true;
  $p130 := $load.ref($M.0, $p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9122, 43} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p130, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9122, 43} true;
  assume {:verifier.code 0} true;
  $p132 := $load.ref($M.0, $p131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9122, 50} true;
  assume {:verifier.code 0} true;
  $p133 := $add.ref($p132, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9122, 26} true;
  assume {:verifier.code 0} true;
  $i134 := $load.i8($M.0, $p133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9122, 20} true;
  assume {:verifier.code 0} true;
  $i135 := $zext.i8.i32($i134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9122, 18} true;
  assume {:verifier.code 0} true;
  $M.17 := $store.i32($M.17, $p2, $i135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 40} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 40} true;
  assume {:verifier.code 0} true;
  $p137 := $load.ref($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 49} true;
  assume {:verifier.code 0} true;
  $p138 := $add.ref($p137, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 49} true;
  assume {:verifier.code 0} true;
  $p139 := $load.ref($M.0, $p138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 32} true;
  assume {:verifier.code 0} true;
  $i140 := $load.i8($M.0, $p139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 11} true;
  assume {:verifier.code 0} true;
  $i141 := $sext.i8.i32($i140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 58} true;
  assume {:verifier.code 0} true;
  $i142 := $slt.i32($i141, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 62} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i142} true;
  goto $bb32, $bb33;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9131, 9} true;
  assume {:verifier.code 0} true;
  $i157 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9131, 19} true;
  assume {:verifier.code 0} true;
  $i158 := $ne.i32($i157, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9131, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i158} true;
  goto $bb38, $bb39;
$bb32:
  assume ($i142 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 88} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 88} true;
  assume {:verifier.code 0} true;
  $p144 := $load.ref($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 97} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p144, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 97} true;
  assume {:verifier.code 0} true;
  $p146 := $load.ref($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 104} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p146, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 80} true;
  assume {:verifier.code 0} true;
  $i148 := $load.i8($M.0, $p147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 65} true;
  assume {:verifier.code 0} true;
  $i149 := $zext.i8.i32($i148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 111} true;
  assume {:verifier.code 0} true;
  $i150 := $eq.i32($i149, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i150} true;
  goto $bb35, $bb36;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 62} true;
  assume {:verifier.code 0} true;
  assume !(($i142 == 1));
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb35:
  assume ($i150 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9125, 14} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p0, 560);
  $p152 := $add.ref($p0, 560);
  $p153 := $add.ref($add.ref($p0, 560), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9125, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p153, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9126, 14} true;
  assume {:verifier.code 0} true;
  $p154 := $add.ref($p0, 560);
  $p155 := $add.ref($p0, 560);
  $p156 := $add.ref($add.ref($p0, 560), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9126, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p156, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9127, 7} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9123, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i150 == 1));
  goto $bb34;
$bb37:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb38:
  assume ($i158 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9132, 17} true;
  assume {:verifier.code 0} true;
  call $p159 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9133, 67} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9133, 67} true;
  assume {:verifier.code 0} true;
  $p161 := $load.ref($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9134, 61} true;
  assume {:verifier.code 0} true;
  $i162 := $load.i32($M.14, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9134, 69} true;
  assume {:verifier.code 0} true;
  $i163 := $load.i32($M.17, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9133, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.12, $p161, $p159, .str.101, $i162, $i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9135, 5} true;
  assume {:verifier.code 0} true;
  goto $bb40;
$bb39:
  assume !(($i158 == 1));
  assume {:verifier.code 0} true;
  goto $bb40;
$bb40:
  assume {:verifier.code 0} true;
  $i64 := 0;
  goto $bb28;
}
const find_partition: ref;
axiom (find_partition == $sub.ref(0, 428354));
procedure  find_partition($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i32;
  var $i4: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i5: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9300, 7} true;
  assume {:verifier.code 0} true;
  call $i3 := get_location($p0, $p2, $p1, 1);
  // WARNING: %4 = call i32 @get_location(%struct.scsi_tape* %0, i32* %3, i32* %2, i32 1), !dbg !5785, !verifier.code !5777
  call {:cexpr "i"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9301, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9301, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9302, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $i3;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9313, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9306, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.17, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9306, 17} true;
  assume {:verifier.code 0} true;
  $i7 := $sgt.i32($i6, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9306, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9307, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 5);
  goto $bb3;
$bb6:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9311, 11} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.17, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9311, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i8;
  goto $bb3;
}
const write_behind_check: ref;
axiom (write_behind_check == $sub.ref(0, 429386));
procedure  write_behind_check($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i1;
  var $p11: ref;
  var $i12: i32;
  var $i13: i32;
  var $p14: ref;
  var $p15: ref;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $i24: i32;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $p30: ref;
  var $i31: i32;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i32;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $i44: i32;
  var $i45: i1;
  var $p46: ref;
  var $i47: i32;
  var $i48: i32;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $p52: ref;
  var $i53: i32;
  var $p54: ref;
  var $i55: i32;
  var $i56: i32;
  var $i57: i32;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $i61: i32;
  var $i62: i1;
  var $p63: ref;
  var $i64: i32;
  var $i65: i1;
  var $p66: ref;
  var $i67: i8;
  var $i68: i32;
  var $i69: i1;
  var $p70: ref;
  var $i71: i8;
  var $i72: i32;
  var $i73: i32;
  var $i74: i1;
  var $p75: ref;
  var $p76: ref;
  var $i77: i8;
  var $i78: i32;
  var $i79: i1;
  var $p80: ref;
  var $p81: ref;
  var $i82: i8;
  var $i83: i32;
  var $i84: i1;
  var $p85: ref;
  var $i86: i8;
  var $i87: i32;
  var $i88: i1;
  var $p89: ref;
  var $i90: i64;
  var $i91: i1;
  var $i92: i32;
  var $i93: i32;
  var $i94: i1;
  var $p95: ref;
  var $i96: i32;
  var $p97: ref;
  var $i98: i32;
  var $i99: i1;
  var $i100: i1;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $i106: i32;
  var $i6: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !12856, metadata !5777), !dbg !12857, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5719, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5719, 19} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5720, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5720, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5720, 25} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5720, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5721, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5778, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5725, 27} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 660);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5725, 27} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5725, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5725, 41} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5725, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5726, 27} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 668);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5726, 27} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5726, 37} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i32($i12, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5726, 10} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 668);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5726, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p14, $i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5727, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i10 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5728, 30} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 664);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5728, 30} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i32($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5728, 43} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i16, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5728, 10} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p0, 664);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5728, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p18, $i17);
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5730, 30} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5730, 3} true;
  assume {:verifier.code 0} true;
  call wait_for_completion($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5731, 21} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5731, 21} true;
  assume {:verifier.code 0} true;
  $p21 := $load.ref($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5732, 13} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p2, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5732, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p22, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5733, 10} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p21, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5733, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p23, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5734, 35} true;
  assume {:verifier.code 0} true;
  call $i24 := st_chk_result($p0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5734, 9} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5734, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5734, 18} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5734, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p27, $i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5735, 3} true;
  assume {:verifier.code 0} true;
  call st_release_request($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5736, 38} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5736, 38} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5736, 63} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5736, 63} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5736, 51} true;
  assume {:verifier.code 0} true;
  $i32 := $sub.i32($i29, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5736, 13} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p2, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5736, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p33, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5737, 40} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5737, 10} true;
  assume {:verifier.code 0} true;
  $p35 := $bitcast.ref.ref($p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5737, 67} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5737, 67} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i32($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5737, 46} true;
  assume {:verifier.code 0} true;
  $i38 := $sext.i32.i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5737, 44} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p35, $mul.ref($i38, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5738, 13} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p35, $mul.ref($i38, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5738, 13} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5738, 23} true;
  assume {:verifier.code 0} true;
  $i42 := $sge.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5738, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5739, 14} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5739, 14} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i32($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5739, 25} true;
  assume {:verifier.code 0} true;
  $i45 := $eq.i32($i44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5739, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i45} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb10:
  assume ($i45 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5740, 31} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p35, $mul.ref($i38, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5740, 31} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5740, 41} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i32($i47, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5740, 13} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p35, $mul.ref($i38, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5740, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p49, $i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5741, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i45 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5742, 31} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($add.ref($p35, $mul.ref($i38, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5742, 31} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5742, 53} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5742, 53} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5742, 68} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5742, 68} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5742, 61} true;
  assume {:verifier.code 0} true;
  $i56 := $sdiv.i32($i53, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5742, 41} true;
  assume {:verifier.code 0} true;
  $i57 := $add.i32($i51, $i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5742, 13} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p35, $mul.ref($i38, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5742, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p58, $i57);
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5744, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5747, 26} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p2, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5748, 17} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p2, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5748, 17} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i32($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5748, 32} true;
  assume {:verifier.code 0} true;
  $i62 := $ne.i32($i61, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5748, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i62 == 1);
  $p63 := $add.ref($add.ref($p2, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 21} true;
  assume {:verifier.code 0} true;
  $i64 := $load.i32($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 32} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i32($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 37} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  $i96 := 0;
  goto $bb38;
$bb16:
  assume ($i65 == 1);
  $p66 := $add.ref($add.ref($p2, 40), 35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 65} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i8($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 40} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 74} true;
  assume {:verifier.code 0} true;
  $i69 := $eq.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 81} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb19, $bb20;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 37} true;
  assume {:verifier.code 0} true;
  assume !(($i65 == 1));
  goto $bb18;
$bb18:
  assume {:verifier.code 0} true;
  $i93 := $sub.i32(0, 5);
  goto $bb34;
$bb19:
  assume ($i69 == 1);
  $p70 := $add.ref($add.ref($p2, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 101} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i8($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 85} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 107} true;
  assume {:verifier.code 0} true;
  $i73 := $and.i32($i72, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 113} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i32($i73, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 119} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb21, $bb22;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 81} true;
  assume {:verifier.code 0} true;
  assume !(($i69 == 1));
  goto $bb18;
$bb21:
  assume ($i74 == 1);
  $p75 := $add.ref($add.ref($p2, 40), 4);
  $p76 := $add.ref($add.ref($add.ref($p2, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 158} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i8($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 123} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i8.i32($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 168} true;
  assume {:verifier.code 0} true;
  $i79 := $eq.i32($i78, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 174} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb23, $bb25;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 119} true;
  assume {:verifier.code 0} true;
  assume !(($i74 == 1));
  goto $bb18;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 174} true;
  assume {:verifier.code 0} true;
  assume ($i79 == 1);
  goto $bb24;
$bb24:
  $p85 := $add.ref($add.ref($p2, 40), 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5751, 36} true;
  assume {:verifier.code 0} true;
  $i86 := $load.i8($M.0, $p85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5751, 11} true;
  assume {:verifier.code 0} true;
  $i87 := $zext.i8.i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5751, 52} true;
  assume {:verifier.code 0} true;
  $i88 := $eq.i32($i87, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5751, 58} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb28, $bb30;
$bb25:
  assume !(($i79 == 1));
  $p80 := $add.ref($add.ref($p2, 40), 4);
  $p81 := $add.ref($add.ref($add.ref($p2, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 212} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i8($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 177} true;
  assume {:verifier.code 0} true;
  $i83 := $zext.i8.i32($i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 222} true;
  assume {:verifier.code 0} true;
  $i84 := $eq.i32($i83, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb26, $bb27;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 9} true;
  assume {:verifier.code 0} true;
  assume ($i84 == 1);
  goto $bb24;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5750, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i84 == 1));
  goto $bb18;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5751, 58} true;
  assume {:verifier.code 0} true;
  assume ($i88 == 1);
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5753, 7} true;
  assume {:verifier.code 0} true;
  $i92 := $sub.i32(0, 28);
  goto $bb33;
$bb30:
  assume !(($i88 == 1));
  $p89 := $add.ref($add.ref($p2, 40), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5751, 71} true;
  assume {:verifier.code 0} true;
  $i90 := $load.i64($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5751, 84} true;
  assume {:verifier.code 0} true;
  $i91 := $eq.i64($i90, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5751, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb31, $bb32;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5751, 11} true;
  assume {:verifier.code 0} true;
  assume ($i91 == 1);
  goto $bb29;
$bb32:
  assume !(($i91 == 1));
  assume {:verifier.code 0} true;
  $i92 := $sub.i32(0, 5);
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5756, 5} true;
  assume {:verifier.code 0} true;
  $i93 := $i92;
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5759, 16} true;
  assume {:verifier.code 0} true;
  $i94 := $eq.i32($i93, $sub.i32(0, 5));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5759, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i94 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5760, 13} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p35, $mul.ref($i38, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5760, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p95, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5761, 5} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i94 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5764, 3} true;
  assume {:verifier.code 0} true;
  $i96 := $i93;
  goto $bb38;
$bb38:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5767, 13} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p2, 20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5767, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p97, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5768, 7} true;
  assume {:verifier.code 0} true;
  $i98 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5768, 17} true;
  assume {:verifier.code 0} true;
  $i99 := $ne.i32($i98, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5768, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i99} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i99 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5768, 32} true;
  assume {:verifier.code 0} true;
  $i100 := $ne.i32($i96, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5768, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i100} true;
  goto $bb42, $bb43;
$bb40:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5768, 22} true;
  assume {:verifier.code 0} true;
  assume !(($i99 == 1));
  goto $bb41;
$bb41:
  assume {:verifier.code 0} true;
  goto $bb44;
$bb42:
  assume ($i100 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5769, 11} true;
  assume {:verifier.code 0} true;
  call $p101 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5770, 65} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5770, 65} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5771, 78} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p2, 40);
  $p105 := $add.ref($p2, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5771, 86} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i32($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5770, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.12, $p103, $p101, .str.133, $i106, $i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5773, 3} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5768, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i100 == 1));
  goto $bb41;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5776, 3} true;
  assume {:verifier.code 0} true;
  $i6 := $i96;
  goto $bb3;
}
const atomic64_read: ref;
axiom (atomic64_read == $sub.ref(0, 430418));
procedure  atomic64_read($p0: ref)
  returns ($r: i64)
{
  var $p1: ref;
  var $i2: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %union.__anonunion____missing_field_name_221* %0, i64 0, metadata !13013, metadata !5777), !dbg !13014, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4655, 51} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4655, 18} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i64($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4655, 3} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
}
const iminor: ref;
axiom (iminor == $sub.ref(0, 431450));
procedure  iminor($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4992, 33} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4992, 33} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i32($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4992, 40} true;
  assume {:verifier.code 0} true;
  $i3 := $and.i32($i2, 1048575);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4992, 3} true;
  assume {:verifier.code 0} true;
  $r := $i3;
  $exn := false;
  return;
}
const scsi_tape_get: ref;
axiom (scsi_tape_get == $sub.ref(0, 432482));
procedure  scsi_tape_get($i0: i32)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $i3: i64;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i64;
  var $i10: i1;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $i16: i32;
  var $p5: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5201, 3} true;
  assume {:verifier.code 0} true;
  call mutex_lock_nested(st_ref_mutex, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5202, 3} true;
  assume {:verifier.code 0} true;
  call spin_lock(st_index_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5203, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := idr_find(st_index_idr, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5204, 9} true;
  assume {:verifier.code 0} true;
  $p2 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5205, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $p2i.ref.i64($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5205, 27} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5205, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5206, 5} true;
  assume {:verifier.code 0} true;
  $p5 := $p1;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5227, 3} true;
  assume {:verifier.code 0} true;
  call spin_unlock(st_index_lock);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5228, 3} true;
  assume {:verifier.code 0} true;
  call mutex_unlock(st_ref_mutex);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5229, 3} true;
  assume {:verifier.code 0} true;
  $r := $p5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5210, 19} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p2, 720);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5210, 3} true;
  assume {:verifier.code 0} true;
  call kref_get($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5211, 28} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5211, 28} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5211, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $p2i.ref.i64($p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5211, 35} true;
  assume {:verifier.code 0} true;
  $i10 := $eq.i64($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5211, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5212, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5224, 19} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p2, 720);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5224, 3} true;
  assume {:verifier.code 0} true;
  call $i16 := kref_put($p15, scsi_tape_release);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5225, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $0.ref;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5216, 34} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p2, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5216, 34} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5216, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := scsi_device_get($p12);
  // WARNING: %19 = call i32 @scsi_device_get(%struct.scsi_device* %18), !dbg !5806, !verifier.code !5780
  call {:cexpr "tmp___0"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5217, 15} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5217, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5218, 5} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb10:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5222, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $p1;
  goto $bb3;
}
const scsi_block_when_processing_errors: ref;
axiom (scsi_block_when_processing_errors == $sub.ref(0, 433514));
procedure  scsi_block_when_processing_errors($p0: ref)
  returns ($r: i32);
const enlarge_buffer: ref;
axiom (enlarge_buffer == $sub.ref(0, 434546));
procedure  enlarge_buffer($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i16;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i32;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i1;
  var $i20: i32;
  var $i21: i32;
  var $p22: ref;
  var $i23: i16;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i32;
  var $i28: i64;
  var $i29: i64;
  var $i30: i32;
  var $i33: i64;
  var $i34: i64;
  var $i35: i64;
  var $i36: i1;
  var $i39: i64;
  var $i40: i64;
  var $i41: i1;
  var $i37: i32;
  var $i38: i32;
  var $p42: ref;
  var $i31: i32;
  var $i32: i32;
  var $i43: i64;
  var $i44: i64;
  var $i45: i64;
  var $i46: i64;
  var $i47: i64;
  var $i48: i1;
  var $i49: i1;
  var $i50: i32;
  var $p51: ref;
  var $i52: i16;
  var $i53: i32;
  var $p54: ref;
  var $i55: i32;
  var $i56: i1;
  var $p59: ref;
  var $i60: i64;
  var $i61: i1;
  var $i62: i32;
  var $p63: ref;
  var $p64: ref;
  var $i65: i16;
  var $i66: i32;
  var $i67: i32;
  var $i68: i16;
  var $p69: ref;
  var $i70: i32;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $i74: i64;
  var $p75: ref;
  var $i76: i32;
  var $i77: i1;
  var $i57: i32;
  var $i58: i32;
  var $i78: i1;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $i6: i32;
  var $i84: i64;
  var $i85: i64;
  var $i86: i1;
  var $i87: i64;
  var $i88: i64;
  var $i89: i1;
  var $i90: i64;
  var $i91: i64;
  var $i92: i1;
  var $i93: i64;
  var $i94: i64;
  var $i95: i1;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_buffer* %0, i64 0, metadata !13078, metadata !5777), !dbg !13079, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !13080, metadata !5777), !dbg !13081, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10032, 17} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10032, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10032, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $sge.i32($i4, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10032, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10033, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb3;
$bb2:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10111, 1} true;
  assume {:verifier.code 0} true;
  $r := $i6;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10037, 32} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10037, 32} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10037, 44} true;
  assume {:verifier.code 0} true;
  $i9 := $ule.i32($i8, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10037, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10038, 5} true;
  assume {:verifier.code 0} true;
  call normalize_buffer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10039, 3} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10042, 30} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10042, 30} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i16($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10042, 14} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i16.i32($i11);
  // WARNING: %18 = zext i16 %17 to i32, !dbg !5800, !verifier.code !5780
  call {:cexpr "max_segs"} boogie_si_record_i32($i12);
  // WARNING: call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !13100, metadata !5777), !dbg !13101, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10044, 16} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10044, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10045, 25} true;
  assume {:verifier.code 0} true;
  $i14 := $or.i32(720, 1);
  // WARNING: %21 = or i32 720, 1, !dbg !5808, !verifier.code !5780
  call {:cexpr "priority"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10046, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i14;
  goto $bb10;
$bb9:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  $i15 := 720;
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10049, 32} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10049, 32} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10049, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10049, 40} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10049, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10050, 25} true;
  assume {:verifier.code 0} true;
  $i20 := $or.i32($i15, 32768);
  // WARNING: %29 = or i32 %.01, 32768, !dbg !5816, !verifier.code !5780
  call {:cexpr "priority"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10051, 3} true;
  assume {:verifier.code 0} true;
  $i21 := $i20;
  goto $bb13;
$bb12:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  $i21 := $i15;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10054, 32} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10054, 32} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i16($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10054, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i16.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10054, 41} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10054, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10055, 23} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10055, 23} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  // WARNING: %38 = load i32, i32* %37, align 8, !dbg !5824, !verifier.code !5780
  call {:cexpr "order"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10056, 28} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i32.i64($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10056, 28} true;
  assume {:verifier.code 0} true;
  $i29 := $shl.i64(4096, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10056, 14} true;
  assume {:verifier.code 0} true;
  $i30 := $trunc.i64.i32($i29);
  // WARNING: %41 = trunc i64 %40 to i32, !dbg !5829, !verifier.code !5780
  call {:cexpr "b_size"} boogie_si_record_i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10057, 3} true;
  assume {:verifier.code 0} true;
  $i31, $i32 := $i30, $i27;
  goto $bb16;
$bb15:
  assume !(($i25 == 1));
  // WARNING: call void @llvm.dbg.value(metadata i32 4096, i64 0, metadata !13129, metadata !5777), !dbg !13130, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 23} true;
  assume {:verifier.code 0} true;
  $i33 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 20} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10072, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10072, 42} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i32.i64($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10072, 42} true;
  assume {:verifier.code 0} true;
  $i45 := $shl.i64(4096, $i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10072, 32} true;
  assume {:verifier.code 0} true;
  $i46 := $mul.i64($i43, $i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10072, 54} true;
  assume {:verifier.code 0} true;
  $i47 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10072, 52} true;
  assume {:verifier.code 0} true;
  $i48 := $ult.i64($i46, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10072, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb25, $bb26;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 48} true;
  assume {:verifier.code 0} true;
  $i39 := $mul.i64($i33, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 70} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 68} true;
  assume {:verifier.code 0} true;
  $i41 := $ult.i64($i39, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  $i37, $i38 := 4096, 0;
  assume {:branchcond $i41} true;
  goto $bb22, $bb23;
$bb18:
  // WARNING: call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !13125, metadata !5777), !dbg !13126, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 48} true;
  assume {:verifier.code 0} true;
  $i34 := $mul.i64($i33, 8192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 70} true;
  assume {:verifier.code 0} true;
  $i35 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 68} true;
  assume {:verifier.code 0} true;
  $i36 := $ult.i64($i34, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  $i37, $i38 := 8192, 1;
  assume {:branchcond $i36} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10066, 7} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i36 == 1));
  goto $bb21;
$bb21:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb22:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10066, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i41 == 1));
  goto $bb21;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10070, 15} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10070, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, $i38);
  assume {:verifier.code 0} true;
  $i31, $i32 := $i37, $i38;
  goto $bb16;
$bb25:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10073, 15} true;
  assume {:verifier.code 0} true;
  $i49 := $eq.i32($i32, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10073, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i49} true;
  goto $bb27, $bb28;
$bb26:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb27:
  assume ($i49 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10074, 7} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb28:
  assume !(($i49 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10078, 5} true;
  assume {:verifier.code 0} true;
  call normalize_buffer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10079, 11} true;
  assume {:verifier.code 0} true;
  call $i50 := enlarge_buffer($p0, $i1, $i2);
  // WARNING: %68 = call i32 @enlarge_buffer(%struct.st_buffer* %0, i32 %1, i32 %2), !dbg !5860, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10080, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $i50;
  goto $bb3;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10084, 26} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10084, 26} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i16($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10084, 10} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i16.i32($i52);
  // WARNING: %73 = zext i16 %72 to i32, !dbg !5865, !verifier.code !5780
  call {:cexpr "segs"} boogie_si_record_i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10085, 19} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10085, 19} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  // WARNING: %75 = load i32, i32* %74, align 4, !dbg !5868, !verifier.code !5780
  call {:cexpr "got"} boogie_si_record_i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 12} true;
  assume {:verifier.code 0} true;
  $i56 := $slt.i32($i53, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 23} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 23} true;
  assume {:verifier.code 0} true;
  $i57, $i58 := $i55, $i53;
  goto $bb34;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 23} true;
  assume {:verifier.code 0} true;
  assume !(($i56 == 1));
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  goto $bb43;
$bb34:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 30} true;
  assume {:verifier.code 0} true;
  $i78 := $slt.i32($i57, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb41, $bb42;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10088, 10} true;
  assume {:verifier.code 0} true;
  call $p59 := alloc_pages($i21, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10089, 7} true;
  assume {:verifier.code 0} true;
  $i60 := $p2i.ref.i64($p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10089, 28} true;
  assume {:verifier.code 0} true;
  $i61 := $eq.i64($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10089, 7} true;
  assume {:verifier.code 0} true;
  $i62 := $i57;
  assume {:branchcond $i61} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i61 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10090, 15} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10090, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p63, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10091, 5} true;
  assume {:verifier.code 0} true;
  call normalize_buffer($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10092, 5} true;
  assume {:verifier.code 0} true;
  $i6 := 0;
  goto $bb3;
$bb37:
  assume !(($i61 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10096, 49} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10096, 49} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i16($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10096, 24} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i16.i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10096, 58} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i32($i66, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10096, 24} true;
  assume {:verifier.code 0} true;
  $i68 := $trunc.i32.i16($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10096, 13} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10096, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p69, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10097, 13} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i32($i57, $i31);
  // WARNING: %91 = add nsw i32 %.0210, %.17, !dbg !5891, !verifier.code !5780
  call {:cexpr "got"} boogie_si_record_i32($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10098, 13} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10098, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p71, $i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10099, 15} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10099, 15} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10099, 32} true;
  assume {:verifier.code 0} true;
  $i74 := $sext.i32.i64($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10099, 30} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p73, $mul.ref($i74, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10099, 54} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p75, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10100, 15} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i32($i58, 1);
  // WARNING: %97 = add nsw i32 %.059, 1, !dbg !5898, !verifier.code !5780
  call {:cexpr "segs"} boogie_si_record_i32($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 12} true;
  assume {:verifier.code 0} true;
  $i77 := $slt.i32($i76, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 23} true;
  assume {:verifier.code 0} true;
  $i57, $i58 := $i70, $i76;
  assume {:branchcond $i77} true;
  goto $bb39, $bb40;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 23} true;
  assume {:verifier.code 0} true;
  assume ($i77 == 1);
  goto $bb34;
$bb40:
  assume !(($i77 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 23} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb41:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10103, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb42:
  assume !(($i78 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10102, 7} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10107, 68} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10107, 68} true;
  assume {:verifier.code 0} true;
  $p80 := $load.ref($M.0, $p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10107, 56} true;
  assume {:verifier.code 0} true;
  $p81 := $load.ref($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10107, 13} true;
  assume {:verifier.code 0} true;
  call $p82 := lowmem_page_address($p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10108, 13} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10108, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p83, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10109, 3} true;
  assume {:verifier.code 0} true;
  $i6 := 1;
  goto $bb3;
$bb44:
  // WARNING: call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !13125, metadata !5777), !dbg !13126, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 48} true;
  assume {:verifier.code 0} true;
  $i84 := $mul.i64($i33, 16384);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 70} true;
  assume {:verifier.code 0} true;
  $i85 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 68} true;
  assume {:verifier.code 0} true;
  $i86 := $ult.i64($i84, $i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  $i37, $i38 := 16384, 2;
  assume {:branchcond $i86} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i86 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10066, 7} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i86 == 1));
  goto $bb21;
$bb47:
  // WARNING: call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !13125, metadata !5777), !dbg !13126, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 48} true;
  assume {:verifier.code 0} true;
  $i87 := $mul.i64($i33, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 70} true;
  assume {:verifier.code 0} true;
  $i88 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 68} true;
  assume {:verifier.code 0} true;
  $i89 := $ult.i64($i87, $i88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  $i37, $i38 := 32768, 3;
  assume {:branchcond $i89} true;
  goto $bb48, $bb49;
$bb48:
  assume ($i89 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10066, 7} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i89 == 1));
  goto $bb21;
$bb50:
  // WARNING: call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !13125, metadata !5777), !dbg !13126, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 48} true;
  assume {:verifier.code 0} true;
  $i90 := $mul.i64($i33, 65536);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 70} true;
  assume {:verifier.code 0} true;
  $i91 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 68} true;
  assume {:verifier.code 0} true;
  $i92 := $ult.i64($i90, $i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  $i37, $i38 := 65536, 4;
  assume {:branchcond $i92} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i92 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10066, 7} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb52:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i92 == 1));
  goto $bb21;
$bb53:
  // WARNING: call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !13125, metadata !5777), !dbg !13126, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 48} true;
  assume {:verifier.code 0} true;
  $i93 := $mul.i64($i33, 131072);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 70} true;
  assume {:verifier.code 0} true;
  $i94 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 68} true;
  assume {:verifier.code 0} true;
  $i95 := $ult.i64($i93, $i94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  $i37, $i38 := 131072, 5;
  assume {:branchcond $i95} true;
  goto $bb54, $bb55;
$bb54:
  assume ($i95 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10066, 7} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10065, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i95 == 1));
  goto $bb21;
$bb56:
  // WARNING: call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !13125, metadata !5777), !dbg !13126, !verifier.code !5775
  assume {:verifier.code 0} true;
  $i37, $i38 := 262144, 6;
  goto $bb21;
}
const check_tape: ref;
axiom (check_tape == $sub.ref(0, 435578));
procedure  check_tape($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i16;
  var $p6: ref;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i1;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $i22: i32;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $i27: i64;
  var $p28: ref;
  var $p29: ref;
  var $i30: i8;
  var $p31: ref;
  var $p32: ref;
  var $i33: i32;
  var $i34: i32;
  var $i35: i1;
  var $i36: i32;
  var $i37: i32;
  var $i38: i1;
  var $i40: i1;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $i45: i8;
  var $i46: i32;
  var $i47: i1;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p58: ref;
  var $i59: i8;
  var $i60: i32;
  var $i61: i32;
  var $i62: i32;
  var $i63: i8;
  var $p64: ref;
  var $i65: i1;
  var $i66: i1;
  var $i67: i1;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $i57: i32;
  var $p83: ref;
  var $i84: i8;
  var $i85: i32;
  var $i86: i1;
  var $p87: ref;
  var $p88: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $i98: i32;
  var $p99: ref;
  var $i100: i64;
  var $i101: i1;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $i105: i32;
  var $p106: ref;
  var $i107: i32;
  var $i108: i1;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $i113: i32;
  var $i114: i1;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $p118: ref;
  var $p119: ref;
  var $i120: i8;
  var $i121: i32;
  var $i122: i32;
  var $p123: ref;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $i128: i8;
  var $i129: i32;
  var $i130: i32;
  var $i131: i32;
  var $p132: ref;
  var $p133: ref;
  var $p134: ref;
  var $p135: ref;
  var $p136: ref;
  var $i137: i8;
  var $i138: i32;
  var $i139: i32;
  var $p140: ref;
  var $p141: ref;
  var $p142: ref;
  var $p143: ref;
  var $p144: ref;
  var $p145: ref;
  var $i146: i8;
  var $i147: i32;
  var $i148: i32;
  var $p149: ref;
  var $p150: ref;
  var $p151: ref;
  var $p152: ref;
  var $p153: ref;
  var $i154: i8;
  var $i155: i32;
  var $i156: i32;
  var $p157: ref;
  var $i158: i32;
  var $i159: i1;
  var $p160: ref;
  var $i161: i8;
  var $i162: i32;
  var $i163: i1;
  var $p164: ref;
  var $p165: ref;
  var $p166: ref;
  var $p167: ref;
  var $i168: i32;
  var $p169: ref;
  var $i170: i32;
  var $p171: ref;
  var $p172: ref;
  var $i173: i32;
  var $i174: i1;
  var $p175: ref;
  var $p176: ref;
  var $p177: ref;
  var $p89: ref;
  var $p178: ref;
  var $p179: ref;
  var $p180: ref;
  var $p181: ref;
  var $p182: ref;
  var $p183: ref;
  var $p184: ref;
  var $p185: ref;
  var $p186: ref;
  var $i187: i32;
  var $p188: ref;
  var $i189: i64;
  var $i190: i1;
  var $p191: ref;
  var $p192: ref;
  var $p193: ref;
  var $i194: i32;
  var $p195: ref;
  var $p196: ref;
  var $p197: ref;
  var $i198: i32;
  var $i199: i1;
  var $i200: i32;
  var $i201: i1;
  var $p202: ref;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $p206: ref;
  var $p207: ref;
  var $p208: ref;
  var $p209: ref;
  var $i210: i32;
  var $i211: i1;
  var $p212: ref;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $p216: ref;
  var $p217: ref;
  var $p218: ref;
  var $i219: i8;
  var $i220: i32;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $p225: ref;
  var $i226: i8;
  var $i227: i32;
  var $p228: ref;
  var $p229: ref;
  var $p230: ref;
  var $p231: ref;
  var $p232: ref;
  var $i233: i8;
  var $i234: i32;
  var $p235: ref;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $p239: ref;
  var $i240: i8;
  var $i241: i32;
  var $p242: ref;
  var $p243: ref;
  var $p244: ref;
  var $p245: ref;
  var $p246: ref;
  var $i247: i8;
  var $i248: i32;
  var $i249: i1;
  var $p250: ref;
  var $p251: ref;
  var $p252: ref;
  var $p253: ref;
  var $p254: ref;
  var $i255: i8;
  var $i256: i32;
  var $i257: i32;
  var $i258: i32;
  var $i259: i8;
  var $p260: ref;
  var $p261: ref;
  var $p262: ref;
  var $p263: ref;
  var $p264: ref;
  var $p265: ref;
  var $i266: i8;
  var $p267: ref;
  var $p268: ref;
  var $p269: ref;
  var $p270: ref;
  var $p271: ref;
  var $p272: ref;
  var $i273: i8;
  var $i274: i32;
  var $i275: i32;
  var $p276: ref;
  var $p277: ref;
  var $p278: ref;
  var $p279: ref;
  var $p280: ref;
  var $i281: i8;
  var $i282: i32;
  var $i283: i32;
  var $i284: i32;
  var $p285: ref;
  var $p286: ref;
  var $p287: ref;
  var $p288: ref;
  var $p289: ref;
  var $i290: i8;
  var $i291: i32;
  var $i292: i32;
  var $p293: ref;
  var $i294: i32;
  var $i295: i1;
  var $p296: ref;
  var $p297: ref;
  var $p298: ref;
  var $p299: ref;
  var $i300: i8;
  var $i301: i32;
  var $p302: ref;
  var $p303: ref;
  var $p304: ref;
  var $p305: ref;
  var $p306: ref;
  var $i307: i8;
  var $i308: i32;
  var $i309: i32;
  var $p310: ref;
  var $p311: ref;
  var $p312: ref;
  var $p313: ref;
  var $p314: ref;
  var $i315: i8;
  var $i316: i32;
  var $i317: i32;
  var $i318: i32;
  var $p319: ref;
  var $p320: ref;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $i324: i8;
  var $i325: i32;
  var $i326: i32;
  var $p327: ref;
  var $i328: i8;
  var $i329: i32;
  var $p330: ref;
  var $p331: ref;
  var $p332: ref;
  var $p333: ref;
  var $p334: ref;
  var $i335: i8;
  var $i336: i32;
  var $i337: i1;
  var $i338: i32;
  var $i339: i8;
  var $p340: ref;
  var $p341: ref;
  var $i342: i8;
  var $i343: i32;
  var $i344: i1;
  var $p345: ref;
  var $i346: i8;
  var $i347: i32;
  var $i348: i1;
  var $p349: ref;
  var $p350: ref;
  var $p351: ref;
  var $p352: ref;
  var $p353: ref;
  var $p354: ref;
  var $i355: i32;
  var $i356: i1;
  var $p357: ref;
  var $p358: ref;
  var $p359: ref;
  var $i360: i32;
  var $p361: ref;
  var $i362: i32;
  var $i363: i32;
  var $p364: ref;
  var $p365: ref;
  var $p366: ref;
  var $p367: ref;
  var $p368: ref;
  var $p369: ref;
  var $p370: ref;
  var $p371: ref;
  var $p372: ref;
  var $p373: ref;
  var $p374: ref;
  var $p375: ref;
  var $i376: i32;
  var $i377: i1;
  var $p378: ref;
  var $p379: ref;
  var $p380: ref;
  var $p381: ref;
  var $i382: i32;
  var $p383: ref;
  var $p384: ref;
  var $p385: ref;
  var $i386: i32;
  var $p387: ref;
  var $p388: ref;
  var $p389: ref;
  var $i390: i32;
  var $p391: ref;
  var $i392: i8;
  var $i393: i32;
  var $i394: i1;
  var $p395: ref;
  var $i396: i32;
  var $i397: i1;
  var $p398: ref;
  var $p399: ref;
  var $p400: ref;
  var $i401: i1;
  var $i402: i32;
  var $i403: i32;
  var $i404: i1;
  var $i405: i32;
  var $i406: i32;
  var $i407: i1;
  var $p408: ref;
  var $i409: i8;
  var $i410: i32;
  var $i411: i1;
  var $p412: ref;
  var $i413: i32;
  var $i414: i1;
  var $i415: i32;
  var $i416: i1;
  var $p417: ref;
  var $p418: ref;
  var $p419: ref;
  var $i420: i32;
  var $p421: ref;
  var $i422: i1;
  var $p423: ref;
  var $i424: i32;
  var $p425: ref;
  var $i426: i32;
  var $p427: ref;
  var $p428: ref;
  var $i429: i1;
  var $p430: ref;
  var $p431: ref;
  var $p432: ref;
  var $p433: ref;
  var $i434: i8;
  var $i435: i32;
  var $i436: i1;
  var $i437: i32;
  var $i438: i1;
  var $p439: ref;
  var $i440: i8;
  var $i441: i32;
  var $i442: i1;
  var $p443: ref;
  var $i444: i8;
  var $i445: i64;
  var $i446: i32;
  var $i447: i1;
  var $p448: ref;
  var $p449: ref;
  var $p450: ref;
  var $p451: ref;
  var $i452: i8;
  var $i453: i32;
  var $i39: i32;
  var $i82: i32;
  var $p454: ref;
  var $p455: ref;
  var $p456: ref;
  var $p457: ref;
  var $p458: ref;
  var $p459: ref;
  var $p460: ref;
  var $p461: ref;
  var $p462: ref;
  var $p463: ref;
  var $p464: ref;
  var $p465: ref;
  var $p466: ref;
  var $p467: ref;
  var $p468: ref;
  var $p469: ref;
  var $p470: ref;
  var $p471: ref;
  var $p472: ref;
  var $p473: ref;
  var $p474: ref;
  var $p475: ref;
  var $p476: ref;
  var $p477: ref;
  var $p478: ref;
  var $p479: ref;
  var $p480: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !13219, metadata !5777), !dbg !13220, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6208, 37} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6208, 37} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6208, 14} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i32.i16($i4);
  // WARNING: %6 = trunc i32 %5 to i16, !dbg !5789, !verifier.code !5777
  call {:cexpr "st_flags"} boogie_si_record_i16($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6210, 9} true;
  assume {:verifier.code 0} true;
  call $p6 := file_inode($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6212, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := iminor($p6);
  // WARNING: %8 = call i32 @iminor(%struct.inode* %7), !dbg !5799, !verifier.code !5777
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6213, 26} true;
  assume {:verifier.code 0} true;
  $i8 := $and.i32($i7, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6213, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $lshr.i32($i8, 5);
  // WARNING: %10 = lshr i32 %9, 5, !dbg !5803, !verifier.code !5777
  call {:cexpr "mode"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6214, 8} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6214, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6215, 12} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6215, 12} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6215, 25} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6215, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6216, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6216, 19} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6216, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  $i22 := 0;
  goto $bb6;
$bb3:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6217, 17} true;
  assume {:verifier.code 0} true;
  call $p16 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6218, 67} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6218, 67} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6219, 63} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6219, 63} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6218, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.12, $p18, $p16, .str.166, $i20, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6220, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6224, 10} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6224, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p21, $i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6225, 3} true;
  assume {:verifier.code 0} true;
  $i22 := 1;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6228, 38} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6228, 9} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6228, 68} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6228, 68} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i32($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6228, 47} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6228, 45} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p24, $mul.ref($i27, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6229, 25} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 638);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6229, 25} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.0, $p29);
  // WARNING: %36 = load i8, i8* %35, align 2, !dbg !5835, !verifier.code !5777
  call {:cexpr "saved_cleaning"} boogie_si_record_i8($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6230, 8} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 638);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6230, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6231, 20} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p1, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6231, 20} true;
  assume {:verifier.code 0} true;
  $i33 := $load.i32($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6231, 28} true;
  assume {:verifier.code 0} true;
  $i34 := $and.i32($i33, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6231, 37} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6231, 37} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i1.i32($i35);
  // WARNING: %42 = zext i1 %41 to i32, !dbg !5842, !verifier.code !5777
  call {:cexpr "do_wait"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6232, 12} true;
  assume {:verifier.code 0} true;
  call $i37 := test_ready($p0, $i36);
  // WARNING: %43 = call i32 @test_ready(%struct.scsi_tape* %0, i32 %42), !dbg !5845, !verifier.code !5777
  call {:cexpr "retval"} boogie_si_record_i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6233, 14} true;
  assume {:verifier.code 0} true;
  $i38 := $slt.i32($i37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6233, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i38} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6234, 5} true;
  assume {:verifier.code 0} true;
  $i39 := $i37;
  goto $bb9;
$bb8:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6475, 3} true;
  assume {:verifier.code 0} true;
  $i82 := $i39;
  goto $bb29;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6238, 14} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i37, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6238, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6239, 10} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 301);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6239, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p41, 0);
  // WARNING: store i8 0, i8* %50, align 1, !dbg !5858, !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6241, 10} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6241, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6242, 10} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6242, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6243, 29} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6243, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i8($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6243, 9} true;
  assume {:verifier.code 0} true;
  $i46 := $zext.i8.i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6243, 44} true;
  assume {:verifier.code 0} true;
  $i47 := $ne.i32($i46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6243, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i47} true;
  goto $bb13, $bb14;
$bb12:
  assume !(($i40 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6267, 36} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p0, 638);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6267, 36} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6267, 25} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6267, 51} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i8.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6267, 49} true;
  assume {:verifier.code 0} true;
  $i62 := $or.i32($i60, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6267, 25} true;
  assume {:verifier.code 0} true;
  $i63 := $trunc.i32.i8($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6267, 10} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 638);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6267, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p64, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6268, 16} true;
  assume {:verifier.code 0} true;
  $i65 := $eq.i32($i37, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6268, 21} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i65} true;
  goto $bb21, $bb23;
$bb13:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6244, 12} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 556);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6244, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p48, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6245, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6260, 9} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6261, 7} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 42} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 12} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6252, 11} true;
  assume {:verifier.code 0} true;
  $p51 := $p50;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6252, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6253, 11} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p50, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6253, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p52, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6254, 11} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p50, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6254, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p53, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6255, 11} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p50, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6255, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p54, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6256, 11} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p50, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6256, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p55, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6257, 11} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p50, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6257, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p56, 0);
  // WARNING: store i32 0, i32* %69, align 4, !dbg !5892, !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6261, 7} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 42} true;
  assume {:verifier.code 0} true;
  $p454 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 12} true;
  assume {:verifier.code 0} true;
  $p455 := $bitcast.ref.ref($p454);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 46} true;
  assume {:verifier.code 0} true;
  $p456 := $add.ref($p455, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6252, 11} true;
  assume {:verifier.code 0} true;
  $p457 := $add.ref($p455, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6252, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p457, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6253, 11} true;
  assume {:verifier.code 0} true;
  $p458 := $add.ref($add.ref($p455, 16), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6253, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p458, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6254, 11} true;
  assume {:verifier.code 0} true;
  $p459 := $add.ref($add.ref($p455, 16), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6254, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p459, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6255, 11} true;
  assume {:verifier.code 0} true;
  $p460 := $add.ref($add.ref($p455, 16), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6255, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p460, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6256, 11} true;
  assume {:verifier.code 0} true;
  $p461 := $add.ref($add.ref($p455, 16), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6256, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p461, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6257, 11} true;
  assume {:verifier.code 0} true;
  $p462 := $add.ref($add.ref($p455, 16), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6257, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p462, 0);
  // WARNING: store i32 0, i32* %567, align 4, !dbg !5892, !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6261, 7} true;
  assume {:verifier.code 0} true;
  goto $bb124;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6266, 3} true;
  assume {:verifier.code 0} true;
  $i57 := 1;
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6289, 27} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0, 284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6289, 27} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i8($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6289, 7} true;
  assume {:verifier.code 0} true;
  $i85 := $zext.i8.i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6289, 40} true;
  assume {:verifier.code 0} true;
  $i86 := $ne.i32($i85, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6289, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb31, $bb32;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6268, 21} true;
  assume {:verifier.code 0} true;
  assume ($i65 == 1);
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6269, 18} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i32($i37, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6269, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb26, $bb27;
$bb23:
  assume !(($i65 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6268, 31} true;
  assume {:verifier.code 0} true;
  $i66 := $eq.i32($i37, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6268, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i66} true;
  goto $bb24, $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6268, 9} true;
  assume {:verifier.code 0} true;
  assume ($i66 == 1);
  goto $bb22;
$bb25:
  assume !(($i66 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb26:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6270, 14} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6270, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p68, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6271, 7} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i67 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6272, 14} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6272, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p69, 1);
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6274, 12} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6274, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6275, 12} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p0, 626);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6275, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p71, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6276, 12} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6276, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p72, 0);
  // WARNING: store i32 0, i32* %92, align 8, !dbg !5926, !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6278, 12} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p0, 560);
  $p74 := $add.ref($p0, 560);
  $p75 := $add.ref($add.ref($p0, 560), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6278, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p75, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6279, 12} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0, 560);
  $p77 := $add.ref($p0, 560);
  $p78 := $add.ref($add.ref($p0, 560), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6279, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p78, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %98, align 4, !dbg !5932, !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6281, 12} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6281, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6282, 12} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6282, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6283, 12} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0, 634);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6283, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p81, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6284, 7} true;
  assume {:verifier.code 0} true;
  $i82 := 2;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6477, 1} true;
  assume {:verifier.code 0} true;
  $r := $i82;
  $exn := false;
  return;
$bb30:
  assume {:verifier.code 0} true;
  $i57 := $i22;
  goto $bb20;
$bb31:
  assume ($i86 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6291, 10} true;
  assume {:verifier.code 0} true;
  $p87 := $add.ref($p0, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6291, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p87, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6292, 10} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 644);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6292, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p88, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6293, 3} true;
  assume {:verifier.code 0} true;
  $p89 := $0.ref;
  goto $bb33;
$bb32:
  assume !(($i86 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6294, 5} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6294, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p90, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6295, 5} true;
  assume {:verifier.code 0} true;
  $p91 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6295, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p91, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6296, 36} true;
  assume {:verifier.code 0} true;
  $p92 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6296, 81} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6296, 81} true;
  assume {:verifier.code 0} true;
  $p94 := $load.ref($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6296, 90} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p94, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6296, 90} true;
  assume {:verifier.code 0} true;
  $p96 := $load.ref($M.0, $p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6296, 106} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p96, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6296, 106} true;
  assume {:verifier.code 0} true;
  $i98 := $load.i32($M.0, $p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6296, 13} true;
  assume {:verifier.code 0} true;
  call $p99 := st_do_scsi($0.ref, $p0, $p92, 6, 2, $i98, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6298, 9} true;
  assume {:verifier.code 0} true;
  $i100 := $p2i.ref.i64($p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6298, 31} true;
  assume {:verifier.code 0} true;
  $i101 := $eq.i64($i100, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6298, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i101} true;
  goto $bb34, $bb35;
$bb33:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6327, 3} true;
  assume {:verifier.code 0} true;
  $p178 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6327, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p178, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6328, 3} true;
  assume {:verifier.code 0} true;
  $p179 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6328, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p179, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6329, 3} true;
  assume {:verifier.code 0} true;
  $p180 := $add.ref($p2, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6329, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p180, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6330, 34} true;
  assume {:verifier.code 0} true;
  $p181 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6330, 80} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6330, 80} true;
  assume {:verifier.code 0} true;
  $p183 := $load.ref($M.0, $p182);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6330, 89} true;
  assume {:verifier.code 0} true;
  $p184 := $add.ref($p183, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6330, 89} true;
  assume {:verifier.code 0} true;
  $p185 := $load.ref($M.0, $p184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6330, 105} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p185, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6330, 105} true;
  assume {:verifier.code 0} true;
  $i187 := $load.i32($M.0, $p186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6330, 11} true;
  assume {:verifier.code 0} true;
  call $p188 := st_do_scsi($p89, $p0, $p181, 12, 2, $i187, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6332, 7} true;
  assume {:verifier.code 0} true;
  $i189 := $p2i.ref.i64($p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6332, 29} true;
  assume {:verifier.code 0} true;
  $i190 := $eq.i64($i189, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6332, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i190} true;
  goto $bb52, $bb53;
$bb34:
  assume ($i101 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6299, 22} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6299, 22} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6299, 31} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p103, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6299, 31} true;
  assume {:verifier.code 0} true;
  $i105 := $load.i32($M.0, $p104);
  // WARNING: %129 = load i32, i32* %128, align 8, !dbg !5970, !verifier.code !5777
  call {:cexpr "retval"} boogie_si_record_i32($i105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6300, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $i105;
  goto $bb9;
$bb35:
  assume !(($i101 == 1));
  assume {:verifier.code 0} true;
  goto $bb36;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 16} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p99, 112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 16} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 23} true;
  assume {:verifier.code 0} true;
  $i108 := $eq.i32($i107, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 28} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb37, $bb38;
$bb37:
  assume ($i108 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 37} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 37} true;
  assume {:verifier.code 0} true;
  $p110 := $load.ref($M.0, $p109);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 46} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p110, 40);
  $p112 := $add.ref($add.ref($p110, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 54} true;
  assume {:verifier.code 0} true;
  $i113 := $load.i32($M.0, $p112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 65} true;
  assume {:verifier.code 0} true;
  $i114 := $eq.i32($i113, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i114} true;
  goto $bb40, $bb41;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 28} true;
  assume {:verifier.code 0} true;
  assume !(($i108 == 1));
  goto $bb39;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6316, 12} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p0, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6316, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p171, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6317, 12} true;
  assume {:verifier.code 0} true;
  $p172 := $add.ref($p0, 644);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6317, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p172, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6318, 11} true;
  assume {:verifier.code 0} true;
  $i173 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6318, 21} true;
  assume {:verifier.code 0} true;
  $i174 := $ne.i32($i173, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6318, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i174} true;
  goto $bb49, $bb50;
$bb40:
  assume ($i114 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 40} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 40} true;
  assume {:verifier.code 0} true;
  $p116 := $load.ref($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 49} true;
  assume {:verifier.code 0} true;
  $p117 := $add.ref($p116, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 49} true;
  assume {:verifier.code 0} true;
  $p118 := $load.ref($M.0, $p117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 56} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p118, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 32} true;
  assume {:verifier.code 0} true;
  $i120 := $load.i8($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 26} true;
  assume {:verifier.code 0} true;
  $i121 := $zext.i8.i32($i120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 63} true;
  assume {:verifier.code 0} true;
  $i122 := $shl.i32($i121, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 87} true;
  assume {:verifier.code 0} true;
  $p123 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 87} true;
  assume {:verifier.code 0} true;
  $p124 := $load.ref($M.0, $p123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 96} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p124, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 96} true;
  assume {:verifier.code 0} true;
  $p126 := $load.ref($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 103} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p126, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 79} true;
  assume {:verifier.code 0} true;
  $i128 := $load.i8($M.0, $p127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 73} true;
  assume {:verifier.code 0} true;
  $i129 := $zext.i8.i32($i128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 110} true;
  assume {:verifier.code 0} true;
  $i130 := $shl.i32($i129, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 70} true;
  assume {:verifier.code 0} true;
  $i131 := $or.i32($i122, $i130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 133} true;
  assume {:verifier.code 0} true;
  $p132 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 133} true;
  assume {:verifier.code 0} true;
  $p133 := $load.ref($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 142} true;
  assume {:verifier.code 0} true;
  $p134 := $add.ref($p133, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 142} true;
  assume {:verifier.code 0} true;
  $p135 := $load.ref($M.0, $p134);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 149} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($p135, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 125} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i8($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 119} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i8.i32($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 117} true;
  assume {:verifier.code 0} true;
  $i139 := $or.i32($i131, $i138);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 12} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($p0, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6305, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p140, $i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 39} true;
  assume {:verifier.code 0} true;
  $p141 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 39} true;
  assume {:verifier.code 0} true;
  $p142 := $load.ref($M.0, $p141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 48} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p142, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 48} true;
  assume {:verifier.code 0} true;
  $p144 := $load.ref($M.0, $p143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 55} true;
  assume {:verifier.code 0} true;
  $p145 := $add.ref($p144, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 31} true;
  assume {:verifier.code 0} true;
  $i146 := $load.i8($M.0, $p145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 25} true;
  assume {:verifier.code 0} true;
  $i147 := $zext.i8.i32($i146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 62} true;
  assume {:verifier.code 0} true;
  $i148 := $shl.i32($i147, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 84} true;
  assume {:verifier.code 0} true;
  $p149 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 84} true;
  assume {:verifier.code 0} true;
  $p150 := $load.ref($M.0, $p149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 93} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p150, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 93} true;
  assume {:verifier.code 0} true;
  $p152 := $load.ref($M.0, $p151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 100} true;
  assume {:verifier.code 0} true;
  $p153 := $add.ref($p152, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 76} true;
  assume {:verifier.code 0} true;
  $i154 := $load.i8($M.0, $p153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 70} true;
  assume {:verifier.code 0} true;
  $i155 := $zext.i8.i32($i154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 68} true;
  assume {:verifier.code 0} true;
  $i156 := $or.i32($i148, $i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 12} true;
  assume {:verifier.code 0} true;
  $p157 := $add.ref($p0, 644);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6306, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p157, $i156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6307, 11} true;
  assume {:verifier.code 0} true;
  $i158 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6307, 21} true;
  assume {:verifier.code 0} true;
  $i159 := $ne.i32($i158, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6307, 26} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i159} true;
  goto $bb42, $bb44;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6304, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i114 == 1));
  goto $bb39;
$bb42:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6307, 26} true;
  assume {:verifier.code 0} true;
  assume ($i159 == 1);
  goto $bb43;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6308, 19} true;
  assume {:verifier.code 0} true;
  call $p164 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6309, 71} true;
  assume {:verifier.code 0} true;
  $p165 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6309, 71} true;
  assume {:verifier.code 0} true;
  $p166 := $load.ref($M.0, $p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6310, 66} true;
  assume {:verifier.code 0} true;
  $p167 := $add.ref($p0, 644);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6310, 66} true;
  assume {:verifier.code 0} true;
  $i168 := $load.i32($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6310, 82} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p0, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6310, 82} true;
  assume {:verifier.code 0} true;
  $i170 := $load.i32($M.0, $p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6309, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.1, $p166, $p164, .str.167, $i168, $i170);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6311, 7} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb44:
  assume !(($i159 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6307, 49} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p0, 637);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6307, 49} true;
  assume {:verifier.code 0} true;
  $i161 := $load.i8($M.0, $p160);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6307, 29} true;
  assume {:verifier.code 0} true;
  $i162 := $zext.i8.i32($i161);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6307, 56} true;
  assume {:verifier.code 0} true;
  $i163 := $eq.i32($i162, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6307, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i163} true;
  goto $bb45, $bb46;
$bb45:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6307, 11} true;
  assume {:verifier.code 0} true;
  assume ($i163 == 1);
  goto $bb43;
$bb46:
  assume !(($i163 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6314, 5} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:verifier.code 0} true;
  $p89 := $p99;
  goto $bb33;
$bb49:
  assume ($i174 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6319, 19} true;
  assume {:verifier.code 0} true;
  call $p175 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6320, 69} true;
  assume {:verifier.code 0} true;
  $p176 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6320, 69} true;
  assume {:verifier.code 0} true;
  $p177 := $load.ref($M.0, $p176);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6320, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p177, $p175, .str.168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6322, 7} true;
  assume {:verifier.code 0} true;
  goto $bb51;
$bb50:
  assume !(($i174 == 1));
  assume {:verifier.code 0} true;
  goto $bb51;
$bb51:
  assume {:verifier.code 0} true;
  goto $bb48;
$bb52:
  assume ($i190 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6333, 20} true;
  assume {:verifier.code 0} true;
  $p191 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6333, 20} true;
  assume {:verifier.code 0} true;
  $p192 := $load.ref($M.0, $p191);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6333, 29} true;
  assume {:verifier.code 0} true;
  $p193 := $add.ref($p192, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6333, 29} true;
  assume {:verifier.code 0} true;
  $i194 := $load.i32($M.0, $p193);
  // WARNING: %233 = load i32, i32* %232, align 8, !dbg !6071, !verifier.code !5777
  call {:cexpr "retval"} boogie_si_record_i32($i194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6334, 5} true;
  assume {:verifier.code 0} true;
  $i39 := $i194;
  goto $bb9;
$bb53:
  assume !(($i190 == 1));
  assume {:verifier.code 0} true;
  goto $bb54;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6338, 13} true;
  assume {:verifier.code 0} true;
  $p195 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6338, 13} true;
  assume {:verifier.code 0} true;
  $p196 := $load.ref($M.0, $p195);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6338, 22} true;
  assume {:verifier.code 0} true;
  $p197 := $add.ref($p196, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6338, 22} true;
  assume {:verifier.code 0} true;
  $i198 := $load.i32($M.0, $p197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6338, 37} true;
  assume {:verifier.code 0} true;
  $i199 := $ne.i32($i198, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6338, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i199} true;
  goto $bb55, $bb56;
$bb55:
  assume ($i199 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6339, 9} true;
  assume {:verifier.code 0} true;
  $i200 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6339, 19} true;
  assume {:verifier.code 0} true;
  $i201 := $ne.i32($i200, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6339, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i201} true;
  goto $bb57, $bb58;
$bb56:
  assume !(($i199 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6350, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6350, 19} true;
  assume {:verifier.code 0} true;
  $i211 := $ne.i32($i210, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6350, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb61, $bb62;
$bb57:
  assume ($i201 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6340, 17} true;
  assume {:verifier.code 0} true;
  call $p202 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6341, 67} true;
  assume {:verifier.code 0} true;
  $p203 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6341, 67} true;
  assume {:verifier.code 0} true;
  $p204 := $load.ref($M.0, $p203);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6341, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p204, $p202, .str.169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6343, 5} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i201 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6346, 10} true;
  assume {:verifier.code 0} true;
  $p205 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6346, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p205, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6347, 11} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6347, 11} true;
  assume {:verifier.code 0} true;
  $p207 := $load.ref($M.0, $p206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6347, 20} true;
  assume {:verifier.code 0} true;
  $p208 := $add.ref($p207, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6347, 35} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p208, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6348, 10} true;
  assume {:verifier.code 0} true;
  $p209 := $add.ref($p0, 627);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6348, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p209, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6349, 3} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6385, 3} true;
  assume {:verifier.code 0} true;
  call st_release_request($p188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6387, 8} true;
  assume {:verifier.code 0} true;
  $p353 := $add.ref($p0, 637);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6387, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p353, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6388, 12} true;
  assume {:verifier.code 0} true;
  $p354 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6388, 12} true;
  assume {:verifier.code 0} true;
  $i355 := $load.i32($M.0, $p354);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6388, 23} true;
  assume {:verifier.code 0} true;
  $i356 := $sgt.i32($i355, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6388, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i356} true;
  goto $bb76, $bb77;
$bb61:
  assume ($i211 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6351, 18} true;
  assume {:verifier.code 0} true;
  call $p212 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6352, 67} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6352, 67} true;
  assume {:verifier.code 0} true;
  $p214 := $load.ref($M.0, $p213);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6353, 94} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6353, 94} true;
  assume {:verifier.code 0} true;
  $p216 := $load.ref($M.0, $p215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6353, 103} true;
  assume {:verifier.code 0} true;
  $p217 := $add.ref($p216, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6353, 103} true;
  assume {:verifier.code 0} true;
  $p218 := $load.ref($M.0, $p217);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6353, 86} true;
  assume {:verifier.code 0} true;
  $i219 := $load.i8($M.0, $p218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6353, 80} true;
  assume {:verifier.code 0} true;
  $i220 := $zext.i8.i32($i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 40} true;
  assume {:verifier.code 0} true;
  $p221 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 40} true;
  assume {:verifier.code 0} true;
  $p222 := $load.ref($M.0, $p221);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 49} true;
  assume {:verifier.code 0} true;
  $p223 := $add.ref($p222, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 49} true;
  assume {:verifier.code 0} true;
  $p224 := $load.ref($M.0, $p223);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 56} true;
  assume {:verifier.code 0} true;
  $p225 := $add.ref($p224, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 32} true;
  assume {:verifier.code 0} true;
  $i226 := $load.i8($M.0, $p225);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 26} true;
  assume {:verifier.code 0} true;
  $i227 := $zext.i8.i32($i226);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 78} true;
  assume {:verifier.code 0} true;
  $p228 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 78} true;
  assume {:verifier.code 0} true;
  $p229 := $load.ref($M.0, $p228);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 87} true;
  assume {:verifier.code 0} true;
  $p230 := $add.ref($p229, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 87} true;
  assume {:verifier.code 0} true;
  $p231 := $load.ref($M.0, $p230);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 94} true;
  assume {:verifier.code 0} true;
  $p232 := $add.ref($p231, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 70} true;
  assume {:verifier.code 0} true;
  $i233 := $load.i8($M.0, $p232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6354, 64} true;
  assume {:verifier.code 0} true;
  $i234 := $zext.i8.i32($i233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6355, 40} true;
  assume {:verifier.code 0} true;
  $p235 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6355, 40} true;
  assume {:verifier.code 0} true;
  $p236 := $load.ref($M.0, $p235);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6355, 49} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($p236, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6355, 49} true;
  assume {:verifier.code 0} true;
  $p238 := $load.ref($M.0, $p237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6355, 56} true;
  assume {:verifier.code 0} true;
  $p239 := $add.ref($p238, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6355, 32} true;
  assume {:verifier.code 0} true;
  $i240 := $load.i8($M.0, $p239);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6355, 26} true;
  assume {:verifier.code 0} true;
  $i241 := $zext.i8.i32($i240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6352, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32.i32(.str.12, $p214, $p212, .str.170, $i220, $i227, $i234, $i241);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6356, 5} true;
  assume {:verifier.code 0} true;
  goto $bb63;
$bb62:
  assume !(($i211 == 1));
  assume {:verifier.code 0} true;
  goto $bb63;
$bb63:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6359, 32} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6359, 32} true;
  assume {:verifier.code 0} true;
  $p243 := $load.ref($M.0, $p242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6359, 41} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p243, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6359, 41} true;
  assume {:verifier.code 0} true;
  $p245 := $load.ref($M.0, $p244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6359, 48} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($p245, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6359, 24} true;
  assume {:verifier.code 0} true;
  $i247 := $load.i8($M.0, $p246);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6359, 9} true;
  assume {:verifier.code 0} true;
  $i248 := $zext.i8.i32($i247);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6359, 55} true;
  assume {:verifier.code 0} true;
  $i249 := $ugt.i32($i248, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6359, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i249} true;
  goto $bb64, $bb65;
$bb64:
  assume ($i249 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 55} true;
  assume {:verifier.code 0} true;
  $p250 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 55} true;
  assume {:verifier.code 0} true;
  $p251 := $load.ref($M.0, $p250);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 64} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($p251, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 64} true;
  assume {:verifier.code 0} true;
  $p253 := $load.ref($M.0, $p252);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 71} true;
  assume {:verifier.code 0} true;
  $p254 := $add.ref($p253, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 47} true;
  assume {:verifier.code 0} true;
  $i255 := $load.i8($M.0, $p254);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 41} true;
  assume {:verifier.code 0} true;
  $i256 := $zext.i8.i32($i255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 78} true;
  assume {:verifier.code 0} true;
  $i257 := $ashr.i32($i256, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 84} true;
  assume {:verifier.code 0} true;
  $i258 := $and.i32($i257, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 25} true;
  assume {:verifier.code 0} true;
  $i259 := $trunc.i32.i8($i258);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 12} true;
  assume {:verifier.code 0} true;
  $p260 := $add.ref($p0, 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6360, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p260, $i259);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6361, 30} true;
  assume {:verifier.code 0} true;
  $p261 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6361, 30} true;
  assume {:verifier.code 0} true;
  $p262 := $load.ref($M.0, $p261);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6361, 39} true;
  assume {:verifier.code 0} true;
  $p263 := $add.ref($p262, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6361, 39} true;
  assume {:verifier.code 0} true;
  $p264 := $load.ref($M.0, $p263);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6361, 46} true;
  assume {:verifier.code 0} true;
  $p265 := $add.ref($p264, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6361, 22} true;
  assume {:verifier.code 0} true;
  $i266 := $load.i8($M.0, $p265);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6361, 12} true;
  assume {:verifier.code 0} true;
  $p267 := $add.ref($p0, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6361, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p267, $i266);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 40} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 40} true;
  assume {:verifier.code 0} true;
  $p269 := $load.ref($M.0, $p268);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 49} true;
  assume {:verifier.code 0} true;
  $p270 := $add.ref($p269, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 49} true;
  assume {:verifier.code 0} true;
  $p271 := $load.ref($M.0, $p270);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 56} true;
  assume {:verifier.code 0} true;
  $p272 := $add.ref($p271, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 32} true;
  assume {:verifier.code 0} true;
  $i273 := $load.i8($M.0, $p272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 26} true;
  assume {:verifier.code 0} true;
  $i274 := $zext.i8.i32($i273);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 63} true;
  assume {:verifier.code 0} true;
  $i275 := $mul.i32($i274, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 85} true;
  assume {:verifier.code 0} true;
  $p276 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 85} true;
  assume {:verifier.code 0} true;
  $p277 := $load.ref($M.0, $p276);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 94} true;
  assume {:verifier.code 0} true;
  $p278 := $add.ref($p277, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 94} true;
  assume {:verifier.code 0} true;
  $p279 := $load.ref($M.0, $p278);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 101} true;
  assume {:verifier.code 0} true;
  $p280 := $add.ref($p279, 10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 77} true;
  assume {:verifier.code 0} true;
  $i281 := $load.i8($M.0, $p280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 71} true;
  assume {:verifier.code 0} true;
  $i282 := $zext.i8.i32($i281);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 69} true;
  assume {:verifier.code 0} true;
  $i283 := $add.i32($i275, $i282);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 110} true;
  assume {:verifier.code 0} true;
  $i284 := $mul.i32($i283, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 132} true;
  assume {:verifier.code 0} true;
  $p285 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 132} true;
  assume {:verifier.code 0} true;
  $p286 := $load.ref($M.0, $p285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 141} true;
  assume {:verifier.code 0} true;
  $p287 := $add.ref($p286, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 141} true;
  assume {:verifier.code 0} true;
  $p288 := $load.ref($M.0, $p287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 148} true;
  assume {:verifier.code 0} true;
  $p289 := $add.ref($p288, 11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 124} true;
  assume {:verifier.code 0} true;
  $i290 := $load.i8($M.0, $p289);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 118} true;
  assume {:verifier.code 0} true;
  $i291 := $zext.i8.i32($i290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 116} true;
  assume {:verifier.code 0} true;
  $i292 := $add.i32($i284, $i291);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 12} true;
  assume {:verifier.code 0} true;
  $p293 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6362, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p293, $i292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6363, 11} true;
  assume {:verifier.code 0} true;
  $i294 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6363, 21} true;
  assume {:verifier.code 0} true;
  $i295 := $ne.i32($i294, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6363, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i295} true;
  goto $bb66, $bb67;
$bb65:
  assume !(($i249 == 1));
  assume {:verifier.code 0} true;
  goto $bb69;
$bb66:
  assume ($i295 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6364, 20} true;
  assume {:verifier.code 0} true;
  call $p296 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6365, 69} true;
  assume {:verifier.code 0} true;
  $p297 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6365, 69} true;
  assume {:verifier.code 0} true;
  $p298 := $load.ref($M.0, $p297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6366, 88} true;
  assume {:verifier.code 0} true;
  $p299 := $add.ref($p0, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6366, 88} true;
  assume {:verifier.code 0} true;
  $i300 := $load.i8($M.0, $p299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6366, 77} true;
  assume {:verifier.code 0} true;
  $i301 := $zext.i8.i32($i300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 43} true;
  assume {:verifier.code 0} true;
  $p302 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 43} true;
  assume {:verifier.code 0} true;
  $p303 := $load.ref($M.0, $p302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 52} true;
  assume {:verifier.code 0} true;
  $p304 := $add.ref($p303, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 52} true;
  assume {:verifier.code 0} true;
  $p305 := $load.ref($M.0, $p304);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 59} true;
  assume {:verifier.code 0} true;
  $p306 := $add.ref($p305, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 35} true;
  assume {:verifier.code 0} true;
  $i307 := $load.i8($M.0, $p306);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 29} true;
  assume {:verifier.code 0} true;
  $i308 := $zext.i8.i32($i307);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 66} true;
  assume {:verifier.code 0} true;
  $i309 := $mul.i32($i308, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 88} true;
  assume {:verifier.code 0} true;
  $p310 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 88} true;
  assume {:verifier.code 0} true;
  $p311 := $load.ref($M.0, $p310);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 97} true;
  assume {:verifier.code 0} true;
  $p312 := $add.ref($p311, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 97} true;
  assume {:verifier.code 0} true;
  $p313 := $load.ref($M.0, $p312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 104} true;
  assume {:verifier.code 0} true;
  $p314 := $add.ref($p313, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 80} true;
  assume {:verifier.code 0} true;
  $i315 := $load.i8($M.0, $p314);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 74} true;
  assume {:verifier.code 0} true;
  $i316 := $zext.i8.i32($i315);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 72} true;
  assume {:verifier.code 0} true;
  $i317 := $add.i32($i309, $i316);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 112} true;
  assume {:verifier.code 0} true;
  $i318 := $mul.i32($i317, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 134} true;
  assume {:verifier.code 0} true;
  $p319 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 134} true;
  assume {:verifier.code 0} true;
  $p320 := $load.ref($M.0, $p319);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 143} true;
  assume {:verifier.code 0} true;
  $p321 := $add.ref($p320, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 143} true;
  assume {:verifier.code 0} true;
  $p322 := $load.ref($M.0, $p321);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 150} true;
  assume {:verifier.code 0} true;
  $p323 := $add.ref($p322, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 126} true;
  assume {:verifier.code 0} true;
  $i324 := $load.i8($M.0, $p323);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 120} true;
  assume {:verifier.code 0} true;
  $i325 := $zext.i8.i32($i324);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6367, 118} true;
  assume {:verifier.code 0} true;
  $i326 := $add.i32($i318, $i325);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6368, 39} true;
  assume {:verifier.code 0} true;
  $p327 := $add.ref($p0, 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6368, 39} true;
  assume {:verifier.code 0} true;
  $i328 := $load.i8($M.0, $p327);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6368, 28} true;
  assume {:verifier.code 0} true;
  $i329 := $zext.i8.i32($i328);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6365, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32(.str.12, $p298, $p296, .str.171, $i301, $i326, $i329);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6369, 7} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !(($i295 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6372, 5} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 56} true;
  assume {:verifier.code 0} true;
  $p330 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 56} true;
  assume {:verifier.code 0} true;
  $p331 := $load.ref($M.0, $p330);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 65} true;
  assume {:verifier.code 0} true;
  $p332 := $add.ref($p331, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 65} true;
  assume {:verifier.code 0} true;
  $p333 := $load.ref($M.0, $p332);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 72} true;
  assume {:verifier.code 0} true;
  $p334 := $add.ref($p333, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 48} true;
  assume {:verifier.code 0} true;
  $i335 := $load.i8($M.0, $p334);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 27} true;
  assume {:verifier.code 0} true;
  $i336 := $sext.i8.i32($i335);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 80} true;
  assume {:verifier.code 0} true;
  $i337 := $slt.i32($i336, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 80} true;
  assume {:verifier.code 0} true;
  $i338 := $zext.i1.i32($i337);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 27} true;
  assume {:verifier.code 0} true;
  $i339 := $trunc.i32.i8($i338);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 10} true;
  assume {:verifier.code 0} true;
  $p340 := $add.ref($p0, 627);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6375, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p340, $i339);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 29} true;
  assume {:verifier.code 0} true;
  $p341 := $add.ref($p0, 632);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 29} true;
  assume {:verifier.code 0} true;
  $i342 := $load.i8($M.0, $p341);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 9} true;
  assume {:verifier.code 0} true;
  $i343 := $zext.i8.i32($i342);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 40} true;
  assume {:verifier.code 0} true;
  $i344 := $eq.i32($i343, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 46} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i344} true;
  goto $bb70, $bb71;
$bb70:
  assume ($i344 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 69} true;
  assume {:verifier.code 0} true;
  $p345 := $add.ref($p0, 303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 69} true;
  assume {:verifier.code 0} true;
  $i346 := $load.i8($M.0, $p345);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 49} true;
  assume {:verifier.code 0} true;
  $i347 := $zext.i8.i32($i346);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 88} true;
  assume {:verifier.code 0} true;
  $i348 := $ne.i32($i347, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i348} true;
  goto $bb73, $bb74;
$bb71:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 46} true;
  assume {:verifier.code 0} true;
  assume !(($i344 == 1));
  goto $bb72;
$bb72:
  assume {:verifier.code 0} true;
  goto $bb75;
$bb73:
  assume ($i348 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6377, 18} true;
  assume {:verifier.code 0} true;
  call $p349 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6378, 67} true;
  assume {:verifier.code 0} true;
  $p350 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6378, 67} true;
  assume {:verifier.code 0} true;
  $p351 := $load.ref($M.0, $p350);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6378, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.89, $p351, $p349, .str.172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6380, 12} true;
  assume {:verifier.code 0} true;
  $p352 := $add.ref($p0, 303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6380, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p352, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6381, 5} true;
  assume {:verifier.code 0} true;
  goto $bb75;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6376, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i348 == 1));
  goto $bb72;
$bb75:
  assume {:verifier.code 0} true;
  goto $bb60;
$bb76:
  assume ($i356 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 42} true;
  assume {:verifier.code 0} true;
  $p357 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 42} true;
  assume {:verifier.code 0} true;
  $p358 := $load.ref($M.0, $p357);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 51} true;
  assume {:verifier.code 0} true;
  $p359 := $add.ref($p358, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 51} true;
  assume {:verifier.code 0} true;
  $i360 := $load.i32($M.0, $p359);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 70} true;
  assume {:verifier.code 0} true;
  $p361 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 70} true;
  assume {:verifier.code 0} true;
  $i362 := $load.i32($M.0, $p361);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 63} true;
  assume {:verifier.code 0} true;
  $i363 := $sdiv.i32($i360, $i362);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 11} true;
  assume {:verifier.code 0} true;
  $p364 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 11} true;
  assume {:verifier.code 0} true;
  $p365 := $load.ref($M.0, $p364);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 20} true;
  assume {:verifier.code 0} true;
  $p366 := $add.ref($p365, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6389, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p366, $i363);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6390, 3} true;
  assume {:verifier.code 0} true;
  goto $bb78;
$bb77:
  assume !(($i356 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6391, 11} true;
  assume {:verifier.code 0} true;
  $p367 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6391, 11} true;
  assume {:verifier.code 0} true;
  $p368 := $load.ref($M.0, $p367);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6391, 20} true;
  assume {:verifier.code 0} true;
  $p369 := $add.ref($p368, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6391, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p369, 1);
  assume {:verifier.code 0} true;
  goto $bb78;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6394, 9} true;
  assume {:verifier.code 0} true;
  $p370 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6394, 9} true;
  assume {:verifier.code 0} true;
  $p371 := $load.ref($M.0, $p370);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6394, 18} true;
  assume {:verifier.code 0} true;
  $p372 := $add.ref($p371, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6394, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p372, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6395, 9} true;
  assume {:verifier.code 0} true;
  $p373 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6395, 9} true;
  assume {:verifier.code 0} true;
  $p374 := $load.ref($M.0, $p373);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6395, 18} true;
  assume {:verifier.code 0} true;
  $p375 := $add.ref($p374, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6395, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p375, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6396, 7} true;
  assume {:verifier.code 0} true;
  $i376 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6396, 17} true;
  assume {:verifier.code 0} true;
  $i377 := $ne.i32($i376, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6396, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i377} true;
  goto $bb79, $bb80;
$bb79:
  assume ($i377 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6397, 16} true;
  assume {:verifier.code 0} true;
  call $p378 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6398, 65} true;
  assume {:verifier.code 0} true;
  $p379 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6398, 65} true;
  assume {:verifier.code 0} true;
  $p380 := $load.ref($M.0, $p379);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6399, 79} true;
  assume {:verifier.code 0} true;
  $p381 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6399, 79} true;
  assume {:verifier.code 0} true;
  $i382 := $load.i32($M.0, $p381);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6400, 30} true;
  assume {:verifier.code 0} true;
  $p383 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6400, 30} true;
  assume {:verifier.code 0} true;
  $p384 := $load.ref($M.0, $p383);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6400, 39} true;
  assume {:verifier.code 0} true;
  $p385 := $add.ref($p384, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6400, 39} true;
  assume {:verifier.code 0} true;
  $i386 := $load.i32($M.0, $p385);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6400, 58} true;
  assume {:verifier.code 0} true;
  $p387 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6400, 58} true;
  assume {:verifier.code 0} true;
  $p388 := $load.ref($M.0, $p387);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6400, 67} true;
  assume {:verifier.code 0} true;
  $p389 := $add.ref($p388, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6400, 67} true;
  assume {:verifier.code 0} true;
  $i390 := $load.i32($M.0, $p389);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6398, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32(.str.12, $p380, $p378, .str.173, $i382, $i386, $i390);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6401, 3} true;
  assume {:verifier.code 0} true;
  goto $bb81;
$bb80:
  assume !(($i377 == 1));
  assume {:verifier.code 0} true;
  goto $bb81;
$bb81:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6404, 27} true;
  assume {:verifier.code 0} true;
  $p391 := $add.ref($p0, 627);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6404, 27} true;
  assume {:verifier.code 0} true;
  $i392 := $load.i8($M.0, $p391);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6404, 7} true;
  assume {:verifier.code 0} true;
  $i393 := $zext.i8.i32($i392);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6404, 42} true;
  assume {:verifier.code 0} true;
  $i394 := $ne.i32($i393, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6404, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i394} true;
  goto $bb82, $bb83;
$bb82:
  assume ($i394 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6405, 10} true;
  assume {:verifier.code 0} true;
  $p395 := $add.ref($p0, 626);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6405, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p395, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6406, 9} true;
  assume {:verifier.code 0} true;
  $i396 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6406, 19} true;
  assume {:verifier.code 0} true;
  $i397 := $ne.i32($i396, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6406, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i397} true;
  goto $bb84, $bb85;
$bb83:
  assume !(($i394 == 1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb84:
  assume ($i397 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6407, 18} true;
  assume {:verifier.code 0} true;
  call $p398 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6408, 67} true;
  assume {:verifier.code 0} true;
  $p399 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6408, 67} true;
  assume {:verifier.code 0} true;
  $p400 := $load.ref($M.0, $p399);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6408, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p400, $p398, .str.174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6410, 5} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb85:
  assume !(($i397 == 1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 17} true;
  assume {:verifier.code 0} true;
  $i401 := $ne.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 22} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i401} true;
  goto $bb87, $bb88;
$bb87:
  assume ($i401 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 27} true;
  assume {:verifier.code 0} true;
  $i402 := $zext.i16.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 42} true;
  assume {:verifier.code 0} true;
  $i403 := $and.i32($i402, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 47} true;
  assume {:verifier.code 0} true;
  $i404 := $eq.i32($i403, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 52} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i404} true;
  goto $bb90, $bb92;
$bb88:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 22} true;
  assume {:verifier.code 0} true;
  assume !(($i401 == 1));
  goto $bb89;
$bb89:
  assume {:verifier.code 0} true;
  goto $bb95;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 52} true;
  assume {:verifier.code 0} true;
  assume ($i404 == 1);
  goto $bb91;
$bb91:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6415, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $sub.i32(0, 30);
  goto $bb9;
$bb92:
  assume !(($i404 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 56} true;
  assume {:verifier.code 0} true;
  $i405 := $zext.i16.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 71} true;
  assume {:verifier.code 0} true;
  $i406 := $and.i32($i405, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 76} true;
  assume {:verifier.code 0} true;
  $i407 := $eq.i32($i406, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i407} true;
  goto $bb93, $bb94;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 9} true;
  assume {:verifier.code 0} true;
  assume ($i407 == 1);
  goto $bb91;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6413, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i407 == 1));
  goto $bb89;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6419, 3} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 27} true;
  assume {:verifier.code 0} true;
  $p408 := $add.ref($p0, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 27} true;
  assume {:verifier.code 0} true;
  $i409 := $load.i8($M.0, $p408);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 7} true;
  assume {:verifier.code 0} true;
  $i410 := $zext.i8.i32($i409);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 42} true;
  assume {:verifier.code 0} true;
  $i411 := $ne.i32($i410, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 48} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i411} true;
  goto $bb97, $bb98;
$bb97:
  assume ($i411 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 56} true;
  assume {:verifier.code 0} true;
  $p412 := $add.ref($p0, 556);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 56} true;
  assume {:verifier.code 0} true;
  $i413 := $load.i32($M.0, $p412);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 71} true;
  assume {:verifier.code 0} true;
  $i414 := $sle.i32($i413, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i414} true;
  goto $bb100, $bb101;
$bb98:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 48} true;
  assume {:verifier.code 0} true;
  assume !(($i411 == 1));
  goto $bb99;
$bb99:
  assume {:verifier.code 0} true;
  goto $bb108;
$bb100:
  assume ($i414 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6423, 9} true;
  assume {:verifier.code 0} true;
  $i415 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6423, 19} true;
  assume {:verifier.code 0} true;
  $i416 := $ne.i32($i415, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6423, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i416} true;
  goto $bb102, $bb103;
$bb101:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6422, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i414 == 1));
  goto $bb99;
$bb102:
  assume ($i416 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6424, 18} true;
  assume {:verifier.code 0} true;
  call $p417 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6425, 67} true;
  assume {:verifier.code 0} true;
  $p418 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6425, 67} true;
  assume {:verifier.code 0} true;
  $p419 := $load.ref($M.0, $p418);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6425, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p419, $p417, .str.175);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6427, 5} true;
  assume {:verifier.code 0} true;
  goto $bb104;
$bb103:
  assume !(($i416 == 1));
  assume {:verifier.code 0} true;
  goto $bb104;
$bb104:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6430, 16} true;
  assume {:verifier.code 0} true;
  call $i420 := find_partition($p0);
  // WARNING: %502 = call i32 @find_partition(%struct.scsi_tape* %0), !dbg !6337, !verifier.code !5777
  call {:cexpr "tmp___17"} boogie_si_record_i32($i420);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6431, 10} true;
  assume {:verifier.code 0} true;
  $p421 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6431, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p421, $i420);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6432, 18} true;
  assume {:verifier.code 0} true;
  $i422 := $slt.i32($i420, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6432, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i422} true;
  goto $bb105, $bb106;
$bb105:
  assume ($i422 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6433, 21} true;
  assume {:verifier.code 0} true;
  $p423 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6433, 21} true;
  assume {:verifier.code 0} true;
  $i424 := $load.i32($M.0, $p423);
  // WARNING: %507 = load i32, i32* %506, align 4, !dbg !6345, !verifier.code !5777
  call {:cexpr "retval"} boogie_si_record_i32($i424);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6434, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $i424;
  goto $bb9;
$bb106:
  assume !(($i422 == 1));
  assume {:verifier.code 0} true;
  goto $bb107;
$bb107:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6438, 31} true;
  assume {:verifier.code 0} true;
  $p425 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6438, 31} true;
  assume {:verifier.code 0} true;
  $i426 := $load.i32($M.0, $p425);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6438, 10} true;
  assume {:verifier.code 0} true;
  $p427 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6438, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p427, $i426);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6439, 10} true;
  assume {:verifier.code 0} true;
  $p428 := $add.ref($p0, 556);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6439, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p428, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6440, 3} true;
  assume {:verifier.code 0} true;
  goto $bb108;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6443, 19} true;
  assume {:verifier.code 0} true;
  $i429 := $ne.i32($i57, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6443, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i429} true;
  goto $bb109, $bb110;
$bb109:
  assume ($i429 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6445, 10} true;
  assume {:verifier.code 0} true;
  $p430 := $add.ref($p0, 629);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6445, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p430, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6446, 10} true;
  assume {:verifier.code 0} true;
  $p431 := $add.ref($p0, 630);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6446, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p431, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6447, 10} true;
  assume {:verifier.code 0} true;
  $p432 := $add.ref($p0, 631);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6447, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p432, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6448, 29} true;
  assume {:verifier.code 0} true;
  $p433 := $add.ref($add.ref($p24, $mul.ref($i27, 56)), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6448, 29} true;
  assume {:verifier.code 0} true;
  $i434 := $load.i8($M.0, $p433);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6448, 9} true;
  assume {:verifier.code 0} true;
  $i435 := $zext.i8.i32($i434);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6448, 49} true;
  assume {:verifier.code 0} true;
  $i436 := $eq.i32($i435, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6448, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i436} true;
  goto $bb111, $bb112;
$bb110:
  assume !(($i429 == 1));
  assume {:verifier.code 0} true;
  goto $bb123;
$bb111:
  assume ($i436 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6449, 16} true;
  assume {:verifier.code 0} true;
  call $i437 := set_mode_densblk($p0, $p28);
  // WARNING: %526 = call i32 @set_mode_densblk(%struct.scsi_tape* %0, %struct.st_modedef* %34), !dbg !6371, !verifier.code !5777
  call {:cexpr "retval"} boogie_si_record_i32($i437);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6450, 18} true;
  assume {:verifier.code 0} true;
  $i438 := $slt.i32($i437, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6450, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i438} true;
  goto $bb113, $bb114;
$bb112:
  assume !(($i436 == 1));
  assume {:verifier.code 0} true;
  goto $bb116;
$bb113:
  assume ($i438 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6451, 9} true;
  assume {:verifier.code 0} true;
  $i39 := $i437;
  goto $bb9;
$bb114:
  assume !(($i438 == 1));
  assume {:verifier.code 0} true;
  goto $bb115;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6455, 5} true;
  assume {:verifier.code 0} true;
  goto $bb116;
$bb116:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6458, 29} true;
  assume {:verifier.code 0} true;
  $p439 := $add.ref($p0, 293);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6458, 29} true;
  assume {:verifier.code 0} true;
  $i440 := $load.i8($M.0, $p439);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6458, 9} true;
  assume {:verifier.code 0} true;
  $i441 := $zext.i8.i32($i440);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6458, 47} true;
  assume {:verifier.code 0} true;
  $i442 := $ne.i32($i441, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6458, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i442} true;
  goto $bb117, $bb118;
$bb117:
  assume ($i442 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6459, 62} true;
  assume {:verifier.code 0} true;
  $p443 := $add.ref($p0, 293);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6459, 62} true;
  assume {:verifier.code 0} true;
  $i444 := $load.i8($M.0, $p443);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6459, 41} true;
  assume {:verifier.code 0} true;
  $i445 := $zext.i8.i64($i444);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6459, 18} true;
  assume {:verifier.code 0} true;
  call $i446 := st_int_ioctl($p0, 24, $i445);
  // WARNING: %541 = call i32 @st_int_ioctl(%struct.scsi_tape* %0, i32 24, i64 %540), !dbg !6387, !verifier.code !5777
  call {:cexpr "tmp___20"} boogie_si_record_i32($i446);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6460, 20} true;
  assume {:verifier.code 0} true;
  $i447 := $ne.i32($i446, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6460, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i447} true;
  goto $bb119, $bb120;
$bb118:
  assume !(($i442 == 1));
  assume {:verifier.code 0} true;
  goto $bb122;
$bb119:
  assume ($i447 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6461, 20} true;
  assume {:verifier.code 0} true;
  call $p448 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6462, 69} true;
  assume {:verifier.code 0} true;
  $p449 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6462, 69} true;
  assume {:verifier.code 0} true;
  $p450 := $load.ref($M.0, $p449);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6463, 86} true;
  assume {:verifier.code 0} true;
  $p451 := $add.ref($p0, 293);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6463, 86} true;
  assume {:verifier.code 0} true;
  $i452 := $load.i8($M.0, $p451);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6463, 75} true;
  assume {:verifier.code 0} true;
  $i453 := $zext.i8.i32($i452);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6462, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.89, $p450, $p448, .str.176, $i453);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6464, 7} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb120:
  assume !(($i447 == 1));
  assume {:verifier.code 0} true;
  goto $bb121;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6467, 5} true;
  assume {:verifier.code 0} true;
  goto $bb122;
$bb122:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6470, 3} true;
  assume {:verifier.code 0} true;
  goto $bb123;
$bb123:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6473, 3} true;
  assume {:verifier.code 0} true;
  $i82 := 0;
  goto $bb29;
$bb124:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 42} true;
  assume {:verifier.code 0} true;
  $p463 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 12} true;
  assume {:verifier.code 0} true;
  $p464 := $bitcast.ref.ref($p463);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 46} true;
  assume {:verifier.code 0} true;
  $p465 := $add.ref($p464, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6252, 11} true;
  assume {:verifier.code 0} true;
  $p466 := $add.ref($p464, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6252, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p466, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6253, 11} true;
  assume {:verifier.code 0} true;
  $p467 := $add.ref($add.ref($p464, 32), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6253, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p467, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6254, 11} true;
  assume {:verifier.code 0} true;
  $p468 := $add.ref($add.ref($p464, 32), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6254, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p468, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6255, 11} true;
  assume {:verifier.code 0} true;
  $p469 := $add.ref($add.ref($p464, 32), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6255, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p469, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6256, 11} true;
  assume {:verifier.code 0} true;
  $p470 := $add.ref($add.ref($p464, 32), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6256, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p470, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6257, 11} true;
  assume {:verifier.code 0} true;
  $p471 := $add.ref($add.ref($p464, 32), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6257, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p471, 0);
  // WARNING: store i32 0, i32* %577, align 4, !dbg !5892, !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6261, 7} true;
  assume {:verifier.code 0} true;
  goto $bb125;
$bb125:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 42} true;
  assume {:verifier.code 0} true;
  $p472 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 12} true;
  assume {:verifier.code 0} true;
  $p473 := $bitcast.ref.ref($p472);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6251, 46} true;
  assume {:verifier.code 0} true;
  $p474 := $add.ref($p473, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6252, 11} true;
  assume {:verifier.code 0} true;
  $p475 := $add.ref($p473, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6252, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p475, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6253, 11} true;
  assume {:verifier.code 0} true;
  $p476 := $add.ref($add.ref($p473, 48), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6253, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p476, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6254, 11} true;
  assume {:verifier.code 0} true;
  $p477 := $add.ref($add.ref($p473, 48), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6254, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p477, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6255, 11} true;
  assume {:verifier.code 0} true;
  $p478 := $add.ref($add.ref($p473, 48), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6255, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p478, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6256, 11} true;
  assume {:verifier.code 0} true;
  $p479 := $add.ref($add.ref($p473, 48), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6256, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p479, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6257, 11} true;
  assume {:verifier.code 0} true;
  $p480 := $add.ref($add.ref($p473, 48), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6257, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p480, 0);
  // WARNING: store i32 0, i32* %587, align 4, !dbg !5892, !verifier.code !5777
  assume {:verifier.code 0} true;
  goto $bb19;
}
const file_inode: ref;
axiom (file_inode == $sub.ref(0, 436610));
procedure  file_inode($p0: ref)
  returns ($r: ref)
{
  var $p1: ref;
  var $p2: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5000, 30} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5000, 30} true;
  assume {:verifier.code 0} true;
  $p2 := $load.ref($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5000, 3} true;
  assume {:verifier.code 0} true;
  $r := $p2;
  $exn := false;
  return;
}
const test_ready: ref;
axiom (test_ready == $sub.ref(0, 437642));
procedure  test_ready($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i1;
  var $i7: i32;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i32;
  var $p13: ref;
  var $i14: i64;
  var $i15: i1;
  var $p21: ref;
  var $p16: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $p17: ref;
  var $i18: i32;
  var $i19: i32;
  var $i20: i32;
  var $p28: ref;
  var $i29: i32;
  var $i30: i1;
  var $p33: ref;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $i37: i1;
  var $i38: i1;
  var $i40: i32;
  var $p39: ref;
  var $i44: i1;
  var $i47: i1;
  var $i49: i64;
  var $i50: i1;
  var $p51: ref;
  var $i52: i32;
  var $p48: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $i56: i8;
  var $i57: i32;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $i61: i8;
  var $i62: i32;
  var $i63: i1;
  var $i64: i32;
  var $i45: i32;
  var $p46: ref;
  var $i31: i32;
  var $p32: ref;
  var $i65: i32;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $i70: i32;
  var $i71: i1;
  var $i72: i1;
  var $i73: i32;
  var $i74: i32;
  var $i41: i32;
  var $i42: i32;
  var $i43: i32;
  var $i75: i32;
  var $p76: ref;
  var $i77: i64;
  var $i78: i1;
  var $p26: ref;
  var $i27: i32;
  var $i79: i64;
  var $i80: i1;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !13853, metadata !5777), !dbg !13854, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !13857, metadata !5777), !dbg !13858, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !13859, metadata !5777), !dbg !13860, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6097, 22} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6097, 22} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6097, 31} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6098, 22} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6098, 14} true;
  assume {:verifier.code 0} true;
  havoc $i7;
  assume ((($i6 == 1) ==> ($i7 == 120)) && (($i6 != 1) ==> ($i7 == 0)));
  // WARNING: %8 = select i1 %7, i32 120, i32 0, !dbg !5798, !verifier.code !5777
  call {:cexpr "max_wait"} boogie_si_record_i32($i7);
  // WARNING: call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !13872, metadata !5777), !dbg !13873, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !13874, metadata !5777), !dbg !13875, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6102, 3} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6102, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p8, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6103, 3} true;
  assume {:verifier.code 0} true;
  $p9 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6103, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6104, 34} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6104, 71} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6104, 71} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6104, 11} true;
  assume {:verifier.code 0} true;
  call $p13 := st_do_scsi($0.ref, $p0, $p10, 0, 3, $i12, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6106, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $p2i.ref.i64($p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6106, 29} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i64($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6106, 7} true;
  assume {:verifier.code 0} true;
  $p16 := $p13;
  assume {:branchcond $i15} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6106, 7} true;
  assume {:verifier.code 0} true;
  assume ($i15 == 1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6107, 20} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6107, 20} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6107, 29} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p23, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6107, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  // WARNING: %21 = load i32, i32* %20, align 8, !dbg !5817, !verifier.code !5777
  call {:cexpr "retval"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6108, 5} true;
  assume {:verifier.code 0} true;
  $p26, $i27 := $p16, $i25;
  goto $bb6;
$bb3:
  assume !(($i15 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6106, 7} true;
  assume {:verifier.code 0} true;
  $p17, $i18, $i19, $i20 := $p13, 0, 0, 0;
  goto $bb4;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb7;
$bb5:
  assume ($i78 == 1);
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6106, 7} true;
  assume {:verifier.code 0} true;
  $p16 := $p21;
  goto $bb2;
$bb6:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6161, 7} true;
  assume {:verifier.code 0} true;
  $i79 := $p2i.ref.i64($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6161, 29} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.i64($i79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6161, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb35, $bb36;
$bb7:
  $p28 := $add.ref($add.ref($p4, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6112, 17} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i32($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6112, 28} true;
  assume {:verifier.code 0} true;
  $i30 := $ne.i32($i29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6112, 7} true;
  assume {:verifier.code 0} true;
  $i31, $p32 := $i18, $p17;
  assume {:branchcond $i30} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i30 == 1);
  $p33 := $add.ref($add.ref($p4, 40), 4);
  $p34 := $add.ref($add.ref($add.ref($p4, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6113, 39} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6113, 13} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  // WARNING: %32 = zext i8 %31 to i32, !dbg !5825, !verifier.code !5777
  call {:cexpr "scode"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6114, 15} true;
  assume {:verifier.code 0} true;
  $i37 := $eq.i32($i36, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6114, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb10, $bb11;
$bb9:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i65, $p66 := $i31, $p32;
  goto $bb30;
$bb10:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6116, 22} true;
  assume {:verifier.code 0} true;
  $i38 := $sle.i32($i19, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6116, 11} true;
  assume {:verifier.code 0} true;
  $p39 := $p17;
  assume {:branchcond $i38} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i37 == 1));
  assume {:verifier.code 0} true;
  goto $bb15;
$bb12:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6117, 33} true;
  assume {:verifier.code 0} true;
  $i40 := $add.i32($i19, 1);
  // WARNING: %37 = add nsw i32 %.0220, 1, !dbg !5835, !verifier.code !5777
  call {:cexpr "attentions"} boogie_si_record_i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6118, 9} true;
  assume {:verifier.code 0} true;
  $i41, $i42, $i43 := $i20, $i40, 1;
  goto $bb14;
$bb13:
  assume !(($i38 == 1));
  assume {:verifier.code 0} true;
  // WARNING: %.lcssa12 = phi %struct.st_request* [ %23, %34 ], !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6121, 9} true;
  assume {:verifier.code 0} true;
  $p26, $i27 := $p39, $sub.i32(0, 5);
  goto $bb6;
$bb14:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6102, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p8, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6103, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6104, 71} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6104, 11} true;
  assume {:verifier.code 0} true;
  call $p76 := st_do_scsi($p17, $p0, $p10, 0, 3, $i75, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6106, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $p2i.ref.i64($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6106, 29} true;
  assume {:verifier.code 0} true;
  $i78 := $eq.i64($i77, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6106, 7} true;
  assume {:verifier.code 0} true;
  $p21, $p17, $i18, $i19, $i20 := $p76, $p76, $i43, $i42, $i41;
  assume {:branchcond $i78} true;
  goto $bb5, $bb34;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6126, 15} true;
  assume {:verifier.code 0} true;
  $i44 := $eq.i32($i36, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6126, 9} true;
  assume {:verifier.code 0} true;
  $i45, $p46 := $i18, $p17;
  assume {:branchcond $i44} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6127, 17} true;
  assume {:verifier.code 0} true;
  $i47 := $slt.i32($i20, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6127, 11} true;
  assume {:verifier.code 0} true;
  $p48 := $p17;
  assume {:branchcond $i47} true;
  goto $bb18, $bb19;
$bb17:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb18:
  assume ($i47 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6128, 15} true;
  assume {:verifier.code 0} true;
  call $i49 := msleep_interruptible(1000);
  // WARNING: %45 = call i64 @msleep_interruptible(i32 1000), !dbg !5847, !verifier.code !5777
  call {:cexpr "tmp"} boogie_si_record_i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6129, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i64($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6129, 13} true;
  assume {:verifier.code 0} true;
  $p51 := $p17;
  assume {:branchcond $i50} true;
  goto $bb20, $bb21;
$bb19:
  assume !(($i47 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 40} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 40} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 49} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 49} true;
  assume {:verifier.code 0} true;
  $i56 := $load.i8($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 13} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i8.i32($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 61} true;
  assume {:verifier.code 0} true;
  $i58 := $sgt.i32($i57, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 65} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb23, $bb24;
$bb20:
  assume ($i50 == 1);
  assume {:verifier.code 0} true;
  // WARNING: %.lcssa11 = phi %struct.st_request* [ %23, %44 ], !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6131, 11} true;
  assume {:verifier.code 0} true;
  $p26, $i27 := $p51, $sub.i32(0, 4);
  goto $bb6;
$bb21:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6135, 23} true;
  assume {:verifier.code 0} true;
  $i52 := $add.i32($i20, 1);
  // WARNING: %50 = add nsw i32 %.0419, 1, !dbg !5856, !verifier.code !5777
  call {:cexpr "waits"} boogie_si_record_i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6136, 9} true;
  assume {:verifier.code 0} true;
  $i41, $i42, $i43 := $i52, $i19, $i18;
  goto $bb14;
$bb23:
  assume ($i58 == 1);
  $p59 := $add.ref($add.ref($p4, 40), 4);
  $p60 := $add.ref($add.ref($add.ref($p4, 40), 4), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 103} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i8($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 68} true;
  assume {:verifier.code 0} true;
  $i62 := $zext.i8.i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 107} true;
  assume {:verifier.code 0} true;
  $i63 := $eq.i32($i62, 58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb26, $bb27;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 65} true;
  assume {:verifier.code 0} true;
  assume !(($i58 == 1));
  goto $bb25;
$bb25:
  assume {:verifier.code 0} true;
  $i64 := 2;
  goto $bb28;
$bb26:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6140, 9} true;
  assume {:verifier.code 0} true;
  $i64 := 3;
  goto $bb28;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6138, 13} true;
  assume {:verifier.code 0} true;
  assume !(($i63 == 1));
  goto $bb25;
$bb28:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6143, 9} true;
  assume {:verifier.code 0} true;
  $p26, $i27 := $p48, $i64;
  goto $bb6;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6148, 3} true;
  assume {:verifier.code 0} true;
  $i65, $p66 := $i45, $p46;
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6151, 18} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6151, 18} true;
  assume {:verifier.code 0} true;
  $p68 := $load.ref($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6151, 27} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p68, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6151, 27} true;
  assume {:verifier.code 0} true;
  $i70 := $load.i32($M.0, $p69);
  // WARNING: %75 = load i32, i32* %74, align 8, !dbg !5875, !verifier.code !5777
  call {:cexpr "retval"} boogie_si_record_i32($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6152, 14} true;
  assume {:verifier.code 0} true;
  $i71 := $eq.i32($i70, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6152, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i71} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i71 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6153, 26} true;
  assume {:verifier.code 0} true;
  $i72 := $ne.i32($i65, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6153, 26} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i1.i32($i72);
  // WARNING: %79 = zext i1 %78 to i32, !dbg !5879, !verifier.code !5777
  call {:cexpr "retval"} boogie_si_record_i32($i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6154, 3} true;
  assume {:verifier.code 0} true;
  $i74 := $i73;
  goto $bb33;
$bb32:
  assume !(($i71 == 1));
  assume {:verifier.code 0} true;
  $i74 := $i70;
  goto $bb33;
$bb33:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6157, 3} true;
  assume {:verifier.code 0} true;
  $p26, $i27 := $p66, $i74;
  goto $bb6;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6106, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i78 == 1));
  goto $bb4;
$bb35:
  assume ($i80 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6162, 5} true;
  assume {:verifier.code 0} true;
  call st_release_request($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6163, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i80 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6166, 3} true;
  assume {:verifier.code 0} true;
  $r := $i27;
  $exn := false;
  return;
}
const set_mode_densblk: ref;
axiom (set_mode_densblk == $sub.ref(0, 438674));
procedure  set_mode_densblk($p0: ref, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i8;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $i7: i16;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $i11: i16;
  var $i12: i32;
  var $p13: ref;
  var $i14: i8;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $i18: i16;
  var $i19: i64;
  var $p22: ref;
  var $i23: i8;
  var $i24: i64;
  var $i20: i32;
  var $i21: i64;
  var $i25: i64;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i1;
  var $p30: ref;
  var $i31: i32;
  var $i32: i1;
  var $p33: ref;
  var $i34: i32;
  var $p35: ref;
  var $i36: i32;
  var $i37: i1;
  var $p38: ref;
  var $i39: i32;
  var $i40: i64;
  var $i41: i64;
  var $p44: ref;
  var $i45: i32;
  var $i46: i64;
  var $i47: i64;
  var $i42: i32;
  var $i43: i64;
  var $i48: i1;
  var $i49: i32;
  var $i50: i1;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $i55: i32;
  var $p56: ref;
  var $i57: i16;
  var $i58: i32;
  var $i59: i32;
  var $i60: i1;
  var $i61: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_modedef* %1, i64 0, metadata !13969, metadata !5777), !dbg !13970, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 28} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 630);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 28} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i8($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 8} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i8.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 44} true;
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 50} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 64} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 64} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i16($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 53} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i16.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 80} true;
  assume {:verifier.code 0} true;
  $i9 := $sge.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 86} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 50} true;
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5989, 32} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5989, 32} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5989, 11} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i64($i23);
  // WARNING: %27 = zext i8 %26 to i64, !dbg !5811, !verifier.code !5780
  call {:cexpr "arg"} boogie_si_record_i64($i24);
  assume {:verifier.code 0} true;
  $i20, $i21 := 0, $i24;
  goto $bb8;
$bb4:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 100} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 100} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i16($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 89} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i16.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 130} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 633);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 130} true;
  assume {:verifier.code 0} true;
  $i14 := $load.i8($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 119} true;
  assume {:verifier.code 0} true;
  $i15 := $zext.i8.i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 116} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i12, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 86} true;
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb3;
$bb6:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5986, 32} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5986, 32} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i16($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5986, 11} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i16.i64($i18);
  // WARNING: %23 = sext i16 %22 to i64, !dbg !5805, !verifier.code !5780
  call {:cexpr "arg"} boogie_si_record_i64($i19);
  // WARNING: call void @llvm.dbg.value(metadata i64 %23, i64 0, metadata !13994, metadata !5777), !dbg !13995, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5988, 3} true;
  assume {:verifier.code 0} true;
  $i20, $i21 := 1, $i19;
  goto $bb8;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5985, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i16 == 1));
  goto $bb3;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5991, 13} true;
  assume {:verifier.code 0} true;
  $i25 := $shl.i64($i21, 24);
  // WARNING: %29 = shl i64 %.01, 24, !dbg !5812, !verifier.code !5780
  call {:cexpr "arg"} boogie_si_record_i64($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 28} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 629);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 28} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 8} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 44} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 50} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 58} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 58} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i32($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 74} true;
  assume {:verifier.code 0} true;
  $i32 := $sge.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 80} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb12, $bb13;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 50} true;
  assume {:verifier.code 0} true;
  assume !(($i29 == 1));
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5996, 32} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5996, 32} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5996, 11} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5996, 43} true;
  assume {:verifier.code 0} true;
  $i47 := $or.i64($i46, $i25);
  // WARNING: %53 = or i64 %52, %29, !dbg !5835, !verifier.code !5780
  call {:cexpr "arg"} boogie_si_record_i64($i47);
  assume {:verifier.code 0} true;
  $i42, $i43 := $i20, $i47;
  goto $bb16;
$bb12:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 88} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 88} true;
  assume {:verifier.code 0} true;
  $i34 := $load.i32($M.0, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 112} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 112} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i32($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 104} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i34, $i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i37} true;
  goto $bb14, $bb15;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 80} true;
  assume {:verifier.code 0} true;
  assume !(($i32 == 1));
  goto $bb11;
$bb14:
  assume ($i37 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5993, 32} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5993, 32} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i32($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5993, 11} true;
  assume {:verifier.code 0} true;
  $i40 := $sext.i32.i64($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5993, 48} true;
  assume {:verifier.code 0} true;
  $i41 := $or.i64($i40, $i25);
  // WARNING: %48 = or i64 %47, %29, !dbg !5830, !verifier.code !5780
  call {:cexpr "arg"} boogie_si_record_i64($i41);
  // WARNING: call void @llvm.dbg.value(metadata i64 %48, i64 0, metadata !13994, metadata !5777), !dbg !13995, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5995, 3} true;
  assume {:verifier.code 0} true;
  $i42, $i43 := 1, $i41;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5992, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i37 == 1));
  goto $bb11;
$bb16:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5998, 14} true;
  assume {:verifier.code 0} true;
  $i48 := $ne.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5998, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5999, 15} true;
  assume {:verifier.code 0} true;
  call $i49 := st_int_ioctl($p0, 65537, $i43);
  // WARNING: %57 = call i32 @st_int_ioctl(%struct.scsi_tape* %0, i32 65537, i64 %.1), !dbg !5839, !verifier.code !5780
  call {:cexpr "tmp___0"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6000, 17} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i32($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6000, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb19, $bb20;
$bb18:
  assume !(($i48 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb19:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6001, 13} true;
  assume {:verifier.code 0} true;
  call $p51 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6002, 67} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6002, 67} true;
  assume {:verifier.code 0} true;
  $p53 := $load.ref($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6004, 31} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6004, 31} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i32($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6004, 59} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6004, 59} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i16($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6004, 48} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i16.i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6002, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.89, $p53, $p51, .str.127, $i55, $i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6005, 11} true;
  assume {:verifier.code 0} true;
  $i59 := $M.12;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6005, 25} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i32($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6005, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb21, $bb22;
$bb20:
  assume !(($i50 == 1));
  assume {:verifier.code 0} true;
  goto $bb25;
$bb21:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6006, 9} true;
  assume {:verifier.code 0} true;
  $i61 := $sub.i32(0, 22);
  goto $bb23;
$bb22:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6018, 1} true;
  assume {:verifier.code 0} true;
  $r := $i61;
  $exn := false;
  return;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6010, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6013, 3} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6016, 3} true;
  assume {:verifier.code 0} true;
  $i61 := 0;
  goto $bb23;
}
const msleep_interruptible: ref;
axiom (msleep_interruptible == $sub.ref(0, 439706));
procedure  msleep_interruptible($i0: i32)
  returns ($r: i64);
const alloc_pages: ref;
axiom (alloc_pages == $sub.ref(0, 440738));
procedure  alloc_pages($i0: i32, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !14056, metadata !5777), !dbg !14057, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12369, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_alloc_flags($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12370, 9} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_undef_ptr();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12371, 11} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12371, 3} true;
  assume {:verifier.code 0} true;
  $r := $p3;
  $exn := false;
  return;
}
const lowmem_page_address: ref;
axiom (lowmem_page_address == $sub.ref(0, 441770));
procedure  lowmem_page_address($p0: ref)
  returns ($r: ref)
{
  var $i1: i64;
  var $i2: i64;
  var $i3: i64;
  var $i4: i64;
  var $i5: i64;
  var $p6: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5021, 60} true;
  assume {:verifier.code 0} true;
  $i1 := $p2i.ref.i64($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5021, 72} true;
  assume {:verifier.code 0} true;
  $i2 := $add.i64($i1, 24189255811072);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5021, 91} true;
  assume {:verifier.code 0} true;
  $i3 := $sdiv.i64($i2, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5021, 98} true;
  assume {:verifier.code 0} true;
  $i4 := $shl.i64($i3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5021, 105} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i4, $sub.i64(0, 131941395333120));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5021, 11} true;
  assume {:verifier.code 0} true;
  $p6 := $i2p.i64.ref($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5021, 3} true;
  assume {:verifier.code 0} true;
  $r := $p6;
  $exn := false;
  return;
}
const idr_find: ref;
axiom (idr_find == $sub.ref(0, 442802));
procedure  idr_find($p0: ref, $i1: i32)
  returns ($r: ref)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i32;
  var $i11: i64;
  var $i12: i1;
  var $i13: i32;
  var $p14: ref;
  var $i15: i32;
  var $i16: i1;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $i26: i32;
  var $p27: ref;
  var $p29: ref;
  var $p28: ref;
$bb0:
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.idr* %0, i64 0, metadata !14084, metadata !5777), !dbg !14085, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4832, 53} true;
  assume {:verifier.code 0} true;
  $p4 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4832, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4832, 75} true;
  assume {:verifier.code 0} true;
  $p6 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4832, 60} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4832, 3} true;
  assume {:verifier.code 0} true;
  call __read_once_size($p5, $p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4833, 21} true;
  assume {:verifier.code 0} true;
  $p8 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4833, 21} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4835, 9} true;
  assume {:verifier.code 0} true;
  call $i10 := debug_lockdep_rcu_enabled();
  // WARNING: %11 = call i32 @debug_lockdep_rcu_enabled(), !dbg !5808, !verifier.code !5778
  call {:cexpr "tmp"} boogie_si_record_i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4837, 7} true;
  assume {:verifier.code 0} true;
  $i11 := $p2i.ref.i64($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4837, 28} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i64($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4837, 71} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4837, 78} true;
  assume {:verifier.code 0} true;
  $i13 := $and.i32($i1, $sub.i32(0, 256));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4837, 95} true;
  assume {:verifier.code 0} true;
  $p14 := $p9;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4837, 95} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4837, 86} true;
  assume {:verifier.code 0} true;
  $i16 := $eq.i32($i13, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4837, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4837, 71} true;
  assume {:verifier.code 0} true;
  assume !(($i12 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb7;
$bb4:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4838, 56} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p9, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4838, 22} true;
  assume {:verifier.code 0} true;
  $p18 := $bitcast.ref.ref($p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4838, 64} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4838, 83} true;
  assume {:verifier.code 0} true;
  $i20 := $and.i64($i19, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4838, 61} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p18, $mul.ref($i20, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4839, 41} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4839, 22} true;
  assume {:verifier.code 0} true;
  $p23 := $bitcast.ref.ref($p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4838, 5} true;
  assume {:verifier.code 0} true;
  call __read_once_size($p21, $p23, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4840, 31} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4840, 31} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4842, 15} true;
  assume {:verifier.code 0} true;
  call $i26 := debug_lockdep_rcu_enabled();
  // WARNING: %29 = call i32 @debug_lockdep_rcu_enabled(), !dbg !5836, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4843, 13} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4843, 5} true;
  assume {:verifier.code 0} true;
  $p28 := $p25;
  goto $bb6;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4837, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i16 == 1));
  goto $bb3;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4850, 1} true;
  assume {:verifier.code 0} true;
  $r := $p28;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4847, 13} true;
  assume {:verifier.code 0} true;
  call $p29 := idr_find_slowpath($p0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4848, 3} true;
  assume {:verifier.code 0} true;
  $p28 := $p29;
  goto $bb6;
}
const kref_get: ref;
axiom (kref_get == $sub.ref(0, 443834));
procedure  kref_get($p0: ref)
{
  var $p1: ref;
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
  var $i7: i64;
  var $i8: i64;
  var $i9: i1;
  var $i10: i1;
  var $i11: i1;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
  var $i17: i1;
  var $i18: i1;
  var $i19: i32;
  var $i20: i64;
  var $i21: i64;
  var $i22: i1;
  var $i23: i1;
  var $i24: i32;
  var $i25: i64;
  var $i26: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4873, 38} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4873, 9} true;
  assume {:verifier.code 0} true;
  call $i2 := atomic_add_return(1, $p1);
  // WARNING: %3 = call i32 @atomic_add_return(i32 1, %struct.__anonstruct_kuid_t_46* %2), !dbg !5781, !verifier.code !5778
  call {:cexpr "tmp"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4874, 25} true;
  assume {:verifier.code 0} true;
  $i3 := $sle.i32($i2, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4874, 25} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i1.i32($i3);
  // WARNING: %5 = zext i1 %4 to i32, !dbg !5784, !verifier.code !5778
  call {:cexpr "__ret_warn_once"} boogie_si_record_i32($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4875, 49} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4875, 49} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i1.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4875, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4875, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := ldv__builtin_expect($i7, 0);
  // WARNING: %9 = call i64 @ldv__builtin_expect(i64 %8, i64 0), !dbg !5789, !verifier.code !5778
  call {:cexpr "tmp___2"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4876, 15} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i64($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4876, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4877, 23} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i8.i1(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4877, 21} true;
  assume {:verifier.code 0} true;
  $i11 := $xor.i1($i10, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4877, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i1.i32($i11);
  // WARNING: %14 = zext i1 %13 to i32, !dbg !5797, !verifier.code !5778
  call {:cexpr "__ret_warn_on"} boogie_si_record_i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4878, 49} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4878, 49} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i1.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4878, 35} true;
  assume {:verifier.code 0} true;
  $i15 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4878, 15} true;
  assume {:verifier.code 0} true;
  call $i16 := ldv__builtin_expect($i15, 0);
  // WARNING: %18 = call i64 @ldv__builtin_expect(i64 %17, i64 0), !dbg !5802, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4879, 17} true;
  assume {:verifier.code 0} true;
  $i17 := $ne.i64($i16, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4879, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb3:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4880, 7} true;
  assume {:verifier.code 0} true;
  call warn_slowpath_null(.str.74, 47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4881, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4884, 49} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4884, 49} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i1.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4884, 35} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4884, 15} true;
  assume {:verifier.code 0} true;
  call $i21 := ldv__builtin_expect($i20, 0);
  // WARNING: %26 = call i64 @ldv__builtin_expect(i64 %25, i64 0), !dbg !5813, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4885, 17} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i64($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4885, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4887, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4890, 3} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4893, 39} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4893, 39} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i1.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4893, 23} true;
  assume {:verifier.code 0} true;
  $i25 := $sext.i32.i64($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4893, 3} true;
  assume {:verifier.code 0} true;
  call $i26 := ldv__builtin_expect($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4894, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const scsi_device_get: ref;
axiom (scsi_device_get == $sub.ref(0, 444866));
procedure  scsi_device_get($p0: ref)
  returns ($r: i32);
const atomic_add_return: ref;
axiom (atomic_add_return == $sub.ref(0, 445898));
procedure  atomic_add_return($i0: i32, $p1: ref)
  returns ($r: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.__anonstruct_kuid_t_46* %1, i64 0, metadata !14205, metadata !5777), !dbg !14206, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4636, 33} true;
  assume {:verifier.code 0} true;
  $p2 := $p1;
  call $i3 := devirtbounce.10(0, $p2, $i0, $p2);
  // WARNING: %4 = call i32 @devirtbounce.10(i32 (i32*, i32, i32*)* asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}", i32* %3, i32 %0, i32* %3)
  call {:cexpr "__ret"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4637, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4646, 17} true;
  assume {:verifier.code 0} true;
  $i4 := $add.i32($i3, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4646, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const __read_once_size: ref;
axiom (__read_once_size == $sub.ref(0, 446930));
procedure  __read_once_size($p0: ref, $p1: ref, $i2: i32)
{
  var $i3: i1;
  var $i4: i1;
  var $i5: i1;
  var $i6: i1;
  var $i7: i1;
  var $i8: i1;
  var $i9: i1;
  var $i10: i8;
  var $p11: ref;
  var $i12: i16;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $p16: ref;
  var $p17: ref;
  var $i18: i64;
  var $p19: ref;
  var $i20: i64;
  var $i21: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !14219, metadata !5777), !dbg !14220, !verifier.code !5775
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:verifier.code 0} true;
  $i3 := $slt.i32($i2, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i3 == 1);
  assume {:verifier.code 0} true;
  $i7 := $slt.i32($i2, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb11, $bb12;
$bb3:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  $i4 := $slt.i32($i2, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i4 == 1);
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i2, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb9, $bb10;
$bb5:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  $i5 := $eq.i32($i2, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4408, 23} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4408, 21} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i64($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4408, 5} true;
  assume {:verifier.code 0} true;
  $p19 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4408, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p19, $i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4409, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb7:
  assume {:verifier.code 0} true;
  assume !(($i5 == 1));
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  goto $bb18;
$bb9:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4405, 23} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4405, 21} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4405, 5} true;
  assume {:verifier.code 0} true;
  $p16 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4405, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p16, $i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4406, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb10:
  assume {:verifier.code 0} true;
  assume !(($i6 == 1));
  goto $bb8;
$bb11:
  assume ($i7 == 1);
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i2, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb15, $bb16;
$bb12:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i2, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4402, 23} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4402, 21} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i16($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4402, 5} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4402, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p13, $i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4403, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb14:
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb8;
$bb15:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4399, 20} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4399, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p1, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4400, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:verifier.code 0} true;
  assume !(($i9 == 1));
  goto $bb8;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4416, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb18:
  call devirtbounce.2(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4412, 44} true;
  assume {:verifier.code 0} true;
  $i20 := $sext.i32.i64($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4412, 3} true;
  assume {:verifier.code 0} true;
  call $i21 := __builtinx_memcpy.ref.ref.i64($p1, $p0, $i20);
  call devirtbounce.2(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4414, 3} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4414, 3} true;
  assume {:verifier.code 0} true;
  goto $bb17;
}
const debug_lockdep_rcu_enabled: ref;
axiom (debug_lockdep_rcu_enabled == $sub.ref(0, 447962));
procedure  debug_lockdep_rcu_enabled()
  returns ($r: i32);
const idr_find_slowpath: ref;
axiom (idr_find_slowpath == $sub.ref(0, 448994));
procedure  idr_find_slowpath($p0: ref, $i1: i32)
  returns ($r: ref);
const __builtinx_memcpy: ref;
axiom (__builtinx_memcpy == $sub.ref(0, 450026));
procedure  __builtinx_memcpy()
  returns ($r: i32);
procedure  __builtinx_memcpy.ref.ref.i64(p.0: ref, p.1: ref, p.2: i64)
  returns ($r: i32);
const mutex_lock_interruptible_nested: ref;
axiom (mutex_lock_interruptible_nested == $sub.ref(0, 451058));
procedure  mutex_lock_interruptible_nested($p0: ref, $i1: i32)
  returns ($r: i32);
const scsi_ioctl_block_when_processing_errors: ref;
axiom (scsi_ioctl_block_when_processing_errors == $sub.ref(0, 452090));
procedure  scsi_ioctl_block_when_processing_errors($p0: ref, $i1: i32, $i2: i1)
  returns ($r: i32);
const copy_from_user: ref;
axiom (copy_from_user == $sub.ref(0, 453122));
procedure  copy_from_user($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i64)
{
  var $i3: i32;
  var $i4: i64;
  var $i5: i32;
  var $i6: i1;
  var $i8: i64;
  var $i9: i1;
  var $i7: i1;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !14254, metadata !5777), !dbg !14255, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5064, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __builtinx_object_size.ref.i32($p0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5064, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  // WARNING: %5 = sext i32 %4 to i64, !dbg !5785, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5065, 8} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  // WARNING: %6 = trunc i64 %5 to i32, !dbg !5789, !verifier.code !5780
  call {:cexpr "sz"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5066, 3} true;
  assume {:verifier.code 0} true;
  call __might_fault(.str.140, 697);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5067, 44} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5067, 48} true;
  assume {:verifier.code 0} true;
  $i7 := 1;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5067, 48} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5067, 48} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5067, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5067, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 1);
  // WARNING: %15 = call i64 @ldv__builtin_expect(i64 %14, i64 1), !dbg !5802, !verifier.code !5780
  call {:cexpr "tmp___0"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5068, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5068, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb3:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5067, 51} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5067, 70} true;
  assume {:verifier.code 0} true;
  $i9 := $uge.i64($i8, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5067, 48} true;
  assume {:verifier.code 0} true;
  $i7 := $i9;
  goto $bb2;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5069, 35} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5069, 9} true;
  assume {:verifier.code 0} true;
  call $i15 := _copy_from_user($p0, $p1, $i14);
  // WARNING: %19 = call i64 @_copy_from_user(i8* %0, i8* %1, i32 %18), !dbg !5810, !verifier.code !5780
  call {:cexpr "n"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5070, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i15;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5071, 5} true;
  assume {:verifier.code 0} true;
  call __copy_from_user_overflow();
  assume {:verifier.code 0} true;
  $i16 := $i2;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5073, 3} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
}
const capable: ref;
axiom (capable == $sub.ref(0, 454154));
procedure  capable($i0: i32)
  returns ($r: i1);
const reset_state: ref;
axiom (reset_state == $sub.ref(0, 455186));
procedure  reset_state($p0: ref)
{
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $i11: i8;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $i17: i32;
  var $i18: i1;
  var $p19: ref;
  var $p20: ref;
  var $i21: i32;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6047, 8} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 301);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6047, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p1, 0);
  // WARNING: store i8 0, i8* %2, align 1, !dbg !5783, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6060, 7} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6061, 5} true;
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 40} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 10} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6052, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6052, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6053, 9} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6053, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6054, 9} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6054, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6055, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6055, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6056, 9} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6056, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p8, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6057, 9} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p3, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6057, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p9, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %11, align 4, !dbg !5802, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6061, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 40} true;
  assume {:verifier.code 0} true;
  $p23 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 10} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 44} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p24, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6052, 9} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p24, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6052, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p26, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6053, 9} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p24, 16), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6053, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p27, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6054, 9} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($add.ref($p24, 16), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6054, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6055, 9} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p24, 16), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6055, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6056, 9} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($add.ref($p24, 16), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6056, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p30, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6057, 9} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p24, 16), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6057, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p31, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %42, align 4, !dbg !5802, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6061, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6066, 27} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6066, 27} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i8($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6066, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i8.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6066, 42} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6066, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6067, 22} true;
  assume {:verifier.code 0} true;
  call $i14 := find_partition($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6067, 10} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6067, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p15, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6068, 14} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6068, 14} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i32($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6068, 24} true;
  assume {:verifier.code 0} true;
  $i18 := $slt.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6068, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i13 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6069, 12} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6069, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p19, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6073, 31} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6073, 31} true;
  assume {:verifier.code 0} true;
  $i21 := $load.i32($M.0, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6073, 10} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 552);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6073, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p22, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6074, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6077, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 40} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 10} true;
  assume {:verifier.code 0} true;
  $p33 := $bitcast.ref.ref($p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 44} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p33, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6052, 9} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p33, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6052, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6053, 9} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p33, 32), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6053, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6054, 9} true;
  assume {:verifier.code 0} true;
  $p37 := $add.ref($add.ref($p33, 32), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6054, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p37, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6055, 9} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($add.ref($p33, 32), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6055, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6056, 9} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($add.ref($p33, 32), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6056, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p39, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6057, 9} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($add.ref($p33, 32), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6057, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p40, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %52, align 4, !dbg !5802, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6061, 5} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 40} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 10} true;
  assume {:verifier.code 0} true;
  $p42 := $bitcast.ref.ref($p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6051, 44} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p42, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6052, 9} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p42, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6052, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6053, 9} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($add.ref($p42, 48), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6053, 13} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p45, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6054, 9} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($add.ref($p42, 48), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6054, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p46, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6055, 9} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($add.ref($p42, 48), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6055, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6056, 9} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p42, 48), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6056, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p48, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6057, 9} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($add.ref($p42, 48), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6057, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p49, $sub.i32(0, 1));
  // WARNING: store i32 -1, i32* %62, align 4, !dbg !5802, !verifier.code !5780
  assume {:verifier.code 0} true;
  goto $bb4;
}
const st_set_options: ref;
axiom (st_set_options == $sub.ref(0, 456218));
procedure  st_set_options($p0: ref, $i1: i64)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i64;
  var $p7: ref;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $i35: i32;
  var $i36: i1;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $i41: i32;
  var $i42: i64;
  var $i43: i1;
  var $i44: i8;
  var $i45: i32;
  var $i46: i32;
  var $i47: i8;
  var $p48: ref;
  var $i49: i64;
  var $i50: i1;
  var $i51: i32;
  var $i52: i8;
  var $p53: ref;
  var $i54: i64;
  var $i55: i1;
  var $i56: i32;
  var $i57: i8;
  var $p58: ref;
  var $i59: i64;
  var $i60: i1;
  var $i61: i32;
  var $i62: i8;
  var $p63: ref;
  var $i64: i64;
  var $i65: i1;
  var $i66: i32;
  var $i67: i8;
  var $p68: ref;
  var $i69: i64;
  var $i70: i1;
  var $i71: i32;
  var $i72: i8;
  var $p73: ref;
  var $i74: i64;
  var $i75: i1;
  var $i76: i32;
  var $i77: i8;
  var $p78: ref;
  var $i79: i64;
  var $i80: i1;
  var $i81: i32;
  var $i82: i8;
  var $p83: ref;
  var $i84: i64;
  var $i85: i1;
  var $i86: i32;
  var $i87: i8;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $i92: i8;
  var $i93: i32;
  var $i94: i1;
  var $i95: i64;
  var $i96: i1;
  var $i97: i32;
  var $i98: i8;
  var $p99: ref;
  var $i100: i64;
  var $i101: i1;
  var $i102: i32;
  var $i103: i8;
  var $p104: ref;
  var $i105: i64;
  var $i106: i1;
  var $i107: i32;
  var $i108: i8;
  var $p109: ref;
  var $i110: i64;
  var $i111: i1;
  var $i112: i32;
  var $i113: i8;
  var $p114: ref;
  var $i115: i64;
  var $i116: i1;
  var $i117: i32;
  var $i118: i8;
  var $p119: ref;
  var $i120: i64;
  var $i121: i1;
  var $i122: i32;
  var $i123: i8;
  var $p124: ref;
  var $i125: i64;
  var $i126: i1;
  var $i127: i32;
  var $i128: i1;
  var $i129: i1;
  var $i130: i1;
  var $i131: i32;
  var $i132: i32;
  var $i133: i32;
  var $i134: i1;
  var $i135: i8;
  var $p136: ref;
  var $i137: i64;
  var $i138: i1;
  var $i139: i8;
  var $p140: ref;
  var $i141: i64;
  var $i142: i1;
  var $i143: i8;
  var $p144: ref;
  var $i145: i64;
  var $i146: i1;
  var $i147: i8;
  var $p148: ref;
  var $i149: i64;
  var $i150: i1;
  var $i151: i8;
  var $p152: ref;
  var $i153: i64;
  var $i154: i1;
  var $i155: i8;
  var $p156: ref;
  var $i157: i64;
  var $i158: i1;
  var $i159: i8;
  var $p160: ref;
  var $i161: i64;
  var $i162: i1;
  var $i163: i8;
  var $p164: ref;
  var $i165: i64;
  var $i166: i1;
  var $i167: i8;
  var $p168: ref;
  var $p169: ref;
  var $p170: ref;
  var $p171: ref;
  var $i172: i8;
  var $i173: i32;
  var $i174: i1;
  var $i175: i64;
  var $i176: i1;
  var $i177: i8;
  var $p178: ref;
  var $i179: i64;
  var $i180: i1;
  var $i181: i8;
  var $p182: ref;
  var $i183: i64;
  var $i184: i1;
  var $i185: i8;
  var $p186: ref;
  var $i187: i64;
  var $i188: i1;
  var $i189: i8;
  var $p190: ref;
  var $i191: i64;
  var $i192: i1;
  var $i193: i8;
  var $p194: ref;
  var $i195: i64;
  var $i196: i1;
  var $i197: i8;
  var $p198: ref;
  var $i199: i64;
  var $i200: i1;
  var $i201: i1;
  var $i202: i1;
  var $i203: i32;
  var $i204: i32;
  var $i205: i1;
  var $p206: ref;
  var $i207: i32;
  var $i208: i1;
  var $p209: ref;
  var $p210: ref;
  var $p211: ref;
  var $p212: ref;
  var $i213: i32;
  var $i214: i1;
  var $p215: ref;
  var $p216: ref;
  var $p217: ref;
  var $p218: ref;
  var $i219: i32;
  var $p220: ref;
  var $i221: i8;
  var $i222: i32;
  var $i223: i1;
  var $p224: ref;
  var $i225: i32;
  var $i226: i1;
  var $i227: i32;
  var $i228: i32;
  var $i229: i32;
  var $i230: i1;
  var $i231: i32;
  var $i232: i32;
  var $p233: ref;
  var $i234: i32;
  var $i235: i1;
  var $p236: ref;
  var $p237: ref;
  var $p238: ref;
  var $i239: i32;
  var $p240: ref;
  var $p241: ref;
  var $p242: ref;
  var $p243: ref;
  var $i244: i32;
  var $i245: i32;
  var $i246: i1;
  var $p247: ref;
  var $p248: ref;
  var $p249: ref;
  var $i250: i1;
  var $i251: i32;
  var $i252: i32;
  var $i253: i1;
  var $i254: i1;
  var $i255: i1;
  var $i257: i8;
  var $p258: ref;
  var $i259: i64;
  var $i260: i8;
  var $p261: ref;
  var $i262: i64;
  var $i263: i8;
  var $p264: ref;
  var $p265: ref;
  var $p266: ref;
  var $p267: ref;
  var $p268: ref;
  var $i269: i8;
  var $i270: i32;
  var $p271: ref;
  var $i272: i8;
  var $i273: i32;
  var $i274: i1;
  var $i275: i64;
  var $i276: i32;
  var $i277: i32;
  var $i278: i1;
  var $i279: i1;
  var $p280: ref;
  var $i281: i32;
  var $i282: i1;
  var $p283: ref;
  var $p284: ref;
  var $p285: ref;
  var $i286: i16;
  var $i287: i32;
  var $i288: i32;
  var $i289: i16;
  var $p290: ref;
  var $i291: i32;
  var $i292: i1;
  var $p293: ref;
  var $p294: ref;
  var $p295: ref;
  var $p296: ref;
  var $i297: i16;
  var $i298: i32;
  var $p299: ref;
  var $i300: i8;
  var $i301: i32;
  var $i302: i1;
  var $p303: ref;
  var $i304: i32;
  var $i305: i1;
  var $i306: i1;
  var $p307: ref;
  var $i308: i32;
  var $i309: i1;
  var $p310: ref;
  var $p311: ref;
  var $p312: ref;
  var $i313: i8;
  var $i314: i32;
  var $i315: i32;
  var $i316: i8;
  var $p317: ref;
  var $i318: i32;
  var $i319: i1;
  var $p320: ref;
  var $p321: ref;
  var $p322: ref;
  var $p323: ref;
  var $i324: i8;
  var $i325: i32;
  var $p326: ref;
  var $i327: i8;
  var $i328: i32;
  var $i329: i1;
  var $p330: ref;
  var $i331: i8;
  var $i332: i64;
  var $i333: i32;
  var $i334: i1;
  var $i335: i1;
  var $p336: ref;
  var $i337: i32;
  var $i338: i1;
  var $p339: ref;
  var $p340: ref;
  var $p341: ref;
  var $i342: i32;
  var $i343: i1;
  var $i344: i32;
  var $i345: i32;
  var $i346: i8;
  var $p347: ref;
  var $i348: i32;
  var $i349: i1;
  var $p350: ref;
  var $p351: ref;
  var $p352: ref;
  var $p353: ref;
  var $i354: i8;
  var $i355: i32;
  var $i356: i32;
  var $i357: i1;
  var $i358: i32;
  var $i359: i1;
  var $i360: i32;
  var $i361: i8;
  var $p362: ref;
  var $i363: i32;
  var $i364: i1;
  var $p365: ref;
  var $p366: ref;
  var $p367: ref;
  var $i368: i32;
  var $p369: ref;
  var $i370: i8;
  var $i371: i32;
  var $i372: i1;
  var $p373: ref;
  var $p374: ref;
  var $i375: i8;
  var $i376: i32;
  var $i377: i1;
  var $i378: i32;
  var $i379: i32;
  var $i256: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !14342, metadata !5777), !dbg !14343, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7928, 38} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7928, 9} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7928, 68} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7928, 68} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i32($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7928, 47} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7928, 45} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p3, $mul.ref($i6, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7929, 27} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, $mul.ref($i6, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7929, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7929, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7929, 35} true;
  assume {:verifier.code 0} true;
  $i11 := $eq.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7929, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7930, 16} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 40);
  $p13 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7930, 11} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7931, 16} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 40);
  $p16 := $add.ref($add.ref($add.ref($p3, $mul.ref($i6, 56)), 40), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7931, 11} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7932, 15} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 24);
  $p19 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7932, 10} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7933, 15} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 24);
  $p22 := $add.ref($add.ref($add.ref($p3, $mul.ref($i6, 56)), 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7933, 10} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7934, 5} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7934, 49} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7934, 5} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7934, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memcpy.i8($M.0, $M.0, $p24, $p26, 56, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7935, 10} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 40);
  $p28 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7935, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p28, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7936, 10} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 40);
  $p30 := $add.ref($add.ref($add.ref($p3, $mul.ref($i6, 56)), 40), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7936, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p30, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7937, 10} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 24);
  $p32 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7937, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p32, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7938, 10} true;
  assume {:verifier.code 0} true;
  $p33 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 24);
  $p34 := $add.ref($add.ref($add.ref($p3, $mul.ref($i6, 56)), 24), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7938, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p34, $p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7939, 19} true;
  assume {:verifier.code 0} true;
  $M.12 := 1;
  call {:cexpr "modes_defined"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7940, 9} true;
  assume {:verifier.code 0} true;
  $i35 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7940, 19} true;
  assume {:verifier.code 0} true;
  $i36 := $ne.i32($i35, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7940, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i36} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb3:
  assume ($i36 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7941, 13} true;
  assume {:verifier.code 0} true;
  call $p37 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7942, 67} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7942, 67} true;
  assume {:verifier.code 0} true;
  $p39 := $load.ref($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7943, 79} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7943, 79} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i32($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7942, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p39, $p37, .str.178, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7944, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i36 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7947, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7950, 18} true;
  assume {:verifier.code 0} true;
  $i42 := $and.i64($i1, 4026531840);
  // WARNING: %49 = and i64 %1, 4026531840, !dbg !5837, !verifier.code !5780
  call {:cexpr "code"} boogie_si_record_i64($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7951, 12} true;
  assume {:verifier.code 0} true;
  $i43 := $eq.i64($i42, 268435456);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7951, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i43} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i43 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7952, 45} true;
  assume {:verifier.code 0} true;
  $i44 := $trunc.i64.i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7952, 29} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i8.i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7952, 70} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i32($i45, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7952, 29} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7952, 10} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7952, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7953, 37} true;
  assume {:verifier.code 0} true;
  $i49 := $and.i64($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7953, 43} true;
  assume {:verifier.code 0} true;
  $i50 := $ne.i64($i49, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7953, 43} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i1.i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7953, 28} true;
  assume {:verifier.code 0} true;
  $i52 := $trunc.i32.i8($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7953, 10} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7953, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p53, $i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7954, 41} true;
  assume {:verifier.code 0} true;
  $i54 := $and.i64($i1, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7954, 49} true;
  assume {:verifier.code 0} true;
  $i55 := $ne.i64($i54, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7954, 49} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i1.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7954, 32} true;
  assume {:verifier.code 0} true;
  $i57 := $trunc.i32.i8($i56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7954, 10} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7954, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p58, $i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7955, 35} true;
  assume {:verifier.code 0} true;
  $i59 := $and.i64($i1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7955, 41} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i64($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7955, 41} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i1.i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7955, 26} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.i32.i8($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7955, 10} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7955, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p63, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7956, 28} true;
  assume {:verifier.code 0} true;
  $i64 := $and.i64($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7956, 35} true;
  assume {:verifier.code 0} true;
  $i65 := $ne.i64($i64, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7956, 35} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i1.i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7956, 19} true;
  assume {:verifier.code 0} true;
  $i67 := $trunc.i32.i8($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7956, 10} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7956, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p68, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7957, 32} true;
  assume {:verifier.code 0} true;
  $i69 := $and.i64($i1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7957, 39} true;
  assume {:verifier.code 0} true;
  $i70 := $ne.i64($i69, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7957, 39} true;
  assume {:verifier.code 0} true;
  $i71 := $zext.i1.i32($i70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7957, 23} true;
  assume {:verifier.code 0} true;
  $i72 := $trunc.i32.i8($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7957, 10} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p0, 289);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7957, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p73, $i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7958, 34} true;
  assume {:verifier.code 0} true;
  $i74 := $and.i64($i1, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7958, 41} true;
  assume {:verifier.code 0} true;
  $i75 := $ne.i64($i74, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7958, 41} true;
  assume {:verifier.code 0} true;
  $i76 := $zext.i1.i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7958, 25} true;
  assume {:verifier.code 0} true;
  $i77 := $trunc.i32.i8($i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7958, 10} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p0, 285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7958, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p78, $i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7959, 29} true;
  assume {:verifier.code 0} true;
  $i79 := $and.i64($i1, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7959, 37} true;
  assume {:verifier.code 0} true;
  $i80 := $ne.i64($i79, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7959, 37} true;
  assume {:verifier.code 0} true;
  $i81 := $zext.i1.i32($i80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7959, 20} true;
  assume {:verifier.code 0} true;
  $i82 := $trunc.i32.i8($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7959, 10} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0, 286);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7959, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p83, $i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7960, 34} true;
  assume {:verifier.code 0} true;
  $i84 := $and.i64($i1, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7960, 42} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i64($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7960, 42} true;
  assume {:verifier.code 0} true;
  $i86 := $zext.i1.i32($i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7960, 25} true;
  assume {:verifier.code 0} true;
  $i87 := $trunc.i32.i8($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7960, 10} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7960, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p88, $i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7961, 36} true;
  assume {:verifier.code 0} true;
  $p89 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7961, 36} true;
  assume {:verifier.code 0} true;
  $p90 := $load.ref($M.0, $p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7961, 45} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p90, 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7961, 45} true;
  assume {:verifier.code 0} true;
  $i92 := $load.i8($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7961, 9} true;
  assume {:verifier.code 0} true;
  $i93 := $sext.i8.i32($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7961, 57} true;
  assume {:verifier.code 0} true;
  $i94 := $sgt.i32($i93, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7961, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i94} true;
  goto $bb9, $bb10;
$bb8:
  assume !(($i43 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7974, 12} true;
  assume {:verifier.code 0} true;
  $i128 := $eq.i64($i42, 805306368);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7974, 26} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i128} true;
  goto $bb13, $bb15;
$bb9:
  assume ($i94 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7962, 38} true;
  assume {:verifier.code 0} true;
  $i95 := $and.i64($i1, 1024);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7962, 47} true;
  assume {:verifier.code 0} true;
  $i96 := $ne.i64($i95, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7962, 47} true;
  assume {:verifier.code 0} true;
  $i97 := $zext.i1.i32($i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7962, 29} true;
  assume {:verifier.code 0} true;
  $i98 := $trunc.i32.i8($i97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7962, 12} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p0, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7962, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p99, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7963, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb10:
  assume !(($i94 == 1));
  assume {:verifier.code 0} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7966, 35} true;
  assume {:verifier.code 0} true;
  $i100 := $and.i64($i1, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7966, 44} true;
  assume {:verifier.code 0} true;
  $i101 := $ne.i64($i100, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7966, 44} true;
  assume {:verifier.code 0} true;
  $i102 := $zext.i1.i32($i101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7966, 26} true;
  assume {:verifier.code 0} true;
  $i103 := $trunc.i32.i8($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7966, 10} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p0, 292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7966, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p104, $i103);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7967, 31} true;
  assume {:verifier.code 0} true;
  $i105 := $and.i64($i1, 8192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7967, 40} true;
  assume {:verifier.code 0} true;
  $i106 := $ne.i64($i105, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7967, 40} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i1.i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7967, 22} true;
  assume {:verifier.code 0} true;
  $i108 := $trunc.i32.i8($i107);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7967, 10} true;
  assume {:verifier.code 0} true;
  $p109 := $add.ref($p0, 290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7967, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p109, $i108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7968, 40} true;
  assume {:verifier.code 0} true;
  $i110 := $and.i64($i1, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7968, 50} true;
  assume {:verifier.code 0} true;
  $i111 := $ne.i64($i110, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7968, 50} true;
  assume {:verifier.code 0} true;
  $i112 := $zext.i1.i32($i111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7968, 31} true;
  assume {:verifier.code 0} true;
  $i113 := $trunc.i32.i8($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7968, 10} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p0, 303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7968, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p114, $i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7969, 26} true;
  assume {:verifier.code 0} true;
  $i115 := $and.i64($i1, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7969, 35} true;
  assume {:verifier.code 0} true;
  $i116 := $ne.i64($i115, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7969, 35} true;
  assume {:verifier.code 0} true;
  $i117 := $zext.i1.i32($i116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7969, 17} true;
  assume {:verifier.code 0} true;
  $i118 := $trunc.i32.i8($i117);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7969, 10} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7969, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p119, $i118);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7970, 26} true;
  assume {:verifier.code 0} true;
  $i120 := $and.i64($i1, 16384);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7970, 36} true;
  assume {:verifier.code 0} true;
  $i121 := $ne.i64($i120, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7970, 36} true;
  assume {:verifier.code 0} true;
  $i122 := $zext.i1.i32($i121);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7970, 17} true;
  assume {:verifier.code 0} true;
  $i123 := $trunc.i32.i8($i122);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7970, 10} true;
  assume {:verifier.code 0} true;
  $p124 := $add.ref($p0, 302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7970, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p124, $i123);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7971, 26} true;
  assume {:verifier.code 0} true;
  $i125 := $and.i64($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7971, 32} true;
  assume {:verifier.code 0} true;
  $i126 := $ne.i64($i125, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7971, 32} true;
  assume {:verifier.code 0} true;
  $i127 := $zext.i1.i32($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7971, 15} true;
  assume {:verifier.code 0} true;
  $M.11 := $i127;
  call {:cexpr "debugging"} boogie_si_record_i32($i127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7972, 5} true;
  assume {:verifier.code 0} true;
  call st_log_options($p0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7973, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8230, 3} true;
  assume {:verifier.code 0} true;
  $i256 := 0;
  goto $bb110;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7974, 26} true;
  assume {:verifier.code 0} true;
  assume ($i128 == 1);
  goto $bb14;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7975, 18} true;
  assume {:verifier.code 0} true;
  $i130 := $eq.i64($i42, 805306368);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7975, 18} true;
  assume {:verifier.code 0} true;
  $i131 := $zext.i1.i32($i130);
  // WARNING: %145 = zext i1 %144 to i32, !dbg !5938, !verifier.code !5780
  call {:cexpr "value"} boogie_si_record_i32($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7976, 9} true;
  assume {:verifier.code 0} true;
  $i132 := $trunc.i64.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7976, 23} true;
  assume {:verifier.code 0} true;
  $i133 := $and.i32($i132, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7976, 23} true;
  assume {:verifier.code 0} true;
  $i134 := $ne.i32($i133, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7976, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i134} true;
  goto $bb18, $bb19;
$bb15:
  assume !(($i128 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7974, 34} true;
  assume {:verifier.code 0} true;
  $i129 := $eq.i64($i42, 1073741824);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7974, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb16, $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7974, 7} true;
  assume {:verifier.code 0} true;
  assume ($i129 == 1);
  goto $bb14;
$bb17:
  assume !(($i129 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8058, 12} true;
  assume {:verifier.code 0} true;
  $i201 := $eq.i64($i42, 536870912);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8058, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i201} true;
  goto $bb70, $bb71;
$bb18:
  assume ($i134 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7977, 31} true;
  assume {:verifier.code 0} true;
  $i135 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7977, 12} true;
  assume {:verifier.code 0} true;
  $p136 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7977, 29} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p136, $i135);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7978, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i134 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7981, 18} true;
  assume {:verifier.code 0} true;
  $i137 := $and.i64($i1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7981, 24} true;
  assume {:verifier.code 0} true;
  $i138 := $ne.i64($i137, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7981, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i138 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7982, 30} true;
  assume {:verifier.code 0} true;
  $i139 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7982, 12} true;
  assume {:verifier.code 0} true;
  $p140 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7982, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p140, $i139);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7983, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb22:
  assume !(($i138 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7986, 18} true;
  assume {:verifier.code 0} true;
  $i141 := $and.i64($i1, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7986, 26} true;
  assume {:verifier.code 0} true;
  $i142 := $ne.i64($i141, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7986, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i142} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i142 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7987, 34} true;
  assume {:verifier.code 0} true;
  $i143 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7987, 12} true;
  assume {:verifier.code 0} true;
  $p144 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7987, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p144, $i143);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7988, 5} true;
  assume {:verifier.code 0} true;
  goto $bb26;
$bb25:
  assume !(($i142 == 1));
  assume {:verifier.code 0} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7991, 18} true;
  assume {:verifier.code 0} true;
  $i145 := $and.i64($i1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7991, 24} true;
  assume {:verifier.code 0} true;
  $i146 := $ne.i64($i145, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7991, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i146} true;
  goto $bb27, $bb28;
$bb27:
  assume ($i146 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7992, 28} true;
  assume {:verifier.code 0} true;
  $i147 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7992, 12} true;
  assume {:verifier.code 0} true;
  $p148 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7992, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p148, $i147);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7993, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i146 == 1));
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7996, 18} true;
  assume {:verifier.code 0} true;
  $i149 := $and.i64($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7996, 25} true;
  assume {:verifier.code 0} true;
  $i150 := $ne.i64($i149, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7996, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i150} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i150 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7997, 21} true;
  assume {:verifier.code 0} true;
  $i151 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7997, 12} true;
  assume {:verifier.code 0} true;
  $p152 := $add.ref($p0, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7997, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p152, $i151);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7998, 5} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb31:
  assume !(($i150 == 1));
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8001, 18} true;
  assume {:verifier.code 0} true;
  $i153 := $and.i64($i1, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8001, 25} true;
  assume {:verifier.code 0} true;
  $i154 := $ne.i64($i153, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8001, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  goto $bb33, $bb34;
$bb33:
  assume ($i154 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8002, 25} true;
  assume {:verifier.code 0} true;
  $i155 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8002, 12} true;
  assume {:verifier.code 0} true;
  $p156 := $add.ref($p0, 289);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8002, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p156, $i155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8003, 5} true;
  assume {:verifier.code 0} true;
  goto $bb35;
$bb34:
  assume !(($i154 == 1));
  assume {:verifier.code 0} true;
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8006, 18} true;
  assume {:verifier.code 0} true;
  $i157 := $and.i64($i1, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8006, 25} true;
  assume {:verifier.code 0} true;
  $i158 := $ne.i64($i157, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8006, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i158} true;
  goto $bb36, $bb37;
$bb36:
  assume ($i158 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8007, 27} true;
  assume {:verifier.code 0} true;
  $i159 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8007, 12} true;
  assume {:verifier.code 0} true;
  $p160 := $add.ref($p0, 285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8007, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p160, $i159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8008, 5} true;
  assume {:verifier.code 0} true;
  goto $bb38;
$bb37:
  assume !(($i158 == 1));
  assume {:verifier.code 0} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8011, 18} true;
  assume {:verifier.code 0} true;
  $i161 := $and.i64($i1, 256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8011, 26} true;
  assume {:verifier.code 0} true;
  $i162 := $ne.i64($i161, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8011, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i162} true;
  goto $bb39, $bb40;
$bb39:
  assume ($i162 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8012, 22} true;
  assume {:verifier.code 0} true;
  $i163 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8012, 12} true;
  assume {:verifier.code 0} true;
  $p164 := $add.ref($p0, 286);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8012, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p164, $i163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8013, 5} true;
  assume {:verifier.code 0} true;
  goto $bb41;
$bb40:
  assume !(($i162 == 1));
  assume {:verifier.code 0} true;
  goto $bb41;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8016, 18} true;
  assume {:verifier.code 0} true;
  $i165 := $and.i64($i1, 512);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8016, 26} true;
  assume {:verifier.code 0} true;
  $i166 := $ne.i64($i165, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8016, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i166} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i166 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8017, 27} true;
  assume {:verifier.code 0} true;
  $i167 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8017, 12} true;
  assume {:verifier.code 0} true;
  $p168 := $add.ref($p0, 284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8017, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p168, $i167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8018, 5} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb43:
  assume !(($i166 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 36} true;
  assume {:verifier.code 0} true;
  $p169 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 36} true;
  assume {:verifier.code 0} true;
  $p170 := $load.ref($M.0, $p169);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 45} true;
  assume {:verifier.code 0} true;
  $p171 := $add.ref($p170, 233);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 45} true;
  assume {:verifier.code 0} true;
  $i172 := $load.i8($M.0, $p171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 9} true;
  assume {:verifier.code 0} true;
  $i173 := $sext.i8.i32($i172);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 57} true;
  assume {:verifier.code 0} true;
  $i174 := $sgt.i32($i173, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 61} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i174} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i174 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 73} true;
  assume {:verifier.code 0} true;
  $i175 := $and.i64($i1, 1024);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 82} true;
  assume {:verifier.code 0} true;
  $i176 := $ne.i64($i175, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i176} true;
  goto $bb48, $bb49;
$bb46:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 61} true;
  assume {:verifier.code 0} true;
  assume !(($i174 == 1));
  goto $bb47;
$bb47:
  assume {:verifier.code 0} true;
  goto $bb50;
$bb48:
  assume ($i176 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8022, 29} true;
  assume {:verifier.code 0} true;
  $i177 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8022, 12} true;
  assume {:verifier.code 0} true;
  $p178 := $add.ref($p0, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8022, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p178, $i177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8023, 5} true;
  assume {:verifier.code 0} true;
  goto $bb50;
$bb49:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8021, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i176 == 1));
  goto $bb47;
$bb50:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8026, 18} true;
  assume {:verifier.code 0} true;
  $i179 := $and.i64($i1, 2048);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8026, 27} true;
  assume {:verifier.code 0} true;
  $i180 := $ne.i64($i179, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8026, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i180} true;
  goto $bb51, $bb52;
$bb51:
  assume ($i180 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8027, 28} true;
  assume {:verifier.code 0} true;
  $i181 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8027, 12} true;
  assume {:verifier.code 0} true;
  $p182 := $add.ref($p0, 292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8027, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p182, $i181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8028, 5} true;
  assume {:verifier.code 0} true;
  goto $bb53;
$bb52:
  assume !(($i180 == 1));
  assume {:verifier.code 0} true;
  goto $bb53;
$bb53:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8031, 18} true;
  assume {:verifier.code 0} true;
  $i183 := $and.i64($i1, 8192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8031, 27} true;
  assume {:verifier.code 0} true;
  $i184 := $ne.i64($i183, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8031, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb54, $bb55;
$bb54:
  assume ($i184 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8032, 24} true;
  assume {:verifier.code 0} true;
  $i185 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8032, 12} true;
  assume {:verifier.code 0} true;
  $p186 := $add.ref($p0, 290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8032, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p186, $i185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8033, 5} true;
  assume {:verifier.code 0} true;
  goto $bb56;
$bb55:
  assume !(($i184 == 1));
  assume {:verifier.code 0} true;
  goto $bb56;
$bb56:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8036, 18} true;
  assume {:verifier.code 0} true;
  $i187 := $and.i64($i1, 32768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8036, 28} true;
  assume {:verifier.code 0} true;
  $i188 := $ne.i64($i187, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8036, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i188} true;
  goto $bb57, $bb58;
$bb57:
  assume ($i188 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8037, 33} true;
  assume {:verifier.code 0} true;
  $i189 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8037, 12} true;
  assume {:verifier.code 0} true;
  $p190 := $add.ref($p0, 303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8037, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p190, $i189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8038, 5} true;
  assume {:verifier.code 0} true;
  goto $bb59;
$bb58:
  assume !(($i188 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8041, 18} true;
  assume {:verifier.code 0} true;
  $i191 := $and.i64($i1, 4096);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8041, 27} true;
  assume {:verifier.code 0} true;
  $i192 := $ne.i64($i191, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8041, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i192} true;
  goto $bb60, $bb61;
$bb60:
  assume ($i192 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8042, 19} true;
  assume {:verifier.code 0} true;
  $i193 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8042, 12} true;
  assume {:verifier.code 0} true;
  $p194 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8042, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p194, $i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8043, 5} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb61:
  assume !(($i192 == 1));
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8046, 18} true;
  assume {:verifier.code 0} true;
  $i195 := $and.i64($i1, 16384);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8046, 28} true;
  assume {:verifier.code 0} true;
  $i196 := $ne.i64($i195, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8046, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i196} true;
  goto $bb63, $bb64;
$bb63:
  assume ($i196 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8047, 19} true;
  assume {:verifier.code 0} true;
  $i197 := $trunc.i32.i8($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8047, 12} true;
  assume {:verifier.code 0} true;
  $p198 := $add.ref($p0, 302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8047, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p198, $i197);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8048, 5} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb64:
  assume !(($i196 == 1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8051, 18} true;
  assume {:verifier.code 0} true;
  $i199 := $and.i64($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8051, 24} true;
  assume {:verifier.code 0} true;
  $i200 := $ne.i64($i199, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8051, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i200} true;
  goto $bb66, $bb67;
$bb66:
  assume ($i200 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8052, 17} true;
  assume {:verifier.code 0} true;
  $M.11 := $i131;
  call {:cexpr "debugging"} boogie_si_record_i32($i131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8053, 5} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !(($i200 == 1));
  assume {:verifier.code 0} true;
  goto $bb68;
$bb68:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8056, 5} true;
  assume {:verifier.code 0} true;
  call st_log_options($p0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8057, 3} true;
  assume {:verifier.code 0} true;
  goto $bb69;
$bb69:
  assume {:verifier.code 0} true;
  goto $bb12;
$bb70:
  assume ($i201 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8060, 3} true;
  assume {:verifier.code 0} true;
  goto $bb72;
$bb71:
  assume !(($i201 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8061, 12} true;
  assume {:verifier.code 0} true;
  $i202 := $eq.i64($i42, 1342177280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8061, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i202} true;
  goto $bb73, $bb74;
$bb72:
  assume {:verifier.code 0} true;
  goto $bb69;
$bb73:
  assume ($i202 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8062, 13} true;
  assume {:verifier.code 0} true;
  $i203 := $trunc.i64.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8062, 27} true;
  assume {:verifier.code 0} true;
  $i204 := $and.i32($i203, 268435455);
  // WARNING: %271 = and i32 %270, 268435455, !dbg !6102, !verifier.code !5780
  call {:cexpr "value"} boogie_si_record_i32($i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8063, 15} true;
  assume {:verifier.code 0} true;
  $i205 := $eq.i32($i204, 268435455);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8063, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i205} true;
  goto $bb75, $bb76;
$bb74:
  assume !(($i202 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8089, 12} true;
  assume {:verifier.code 0} true;
  $i226 := $eq.i64($i42, 1879048192);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8089, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i226} true;
  goto $bb88, $bb89;
$bb75:
  assume ($i205 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8064, 12} true;
  assume {:verifier.code 0} true;
  $p206 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8064, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p206, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8065, 11} true;
  assume {:verifier.code 0} true;
  $i207 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8065, 21} true;
  assume {:verifier.code 0} true;
  $i208 := $ne.i32($i207, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8065, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i208} true;
  goto $bb77, $bb78;
$bb76:
  assume !(($i205 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8073, 12} true;
  assume {:verifier.code 0} true;
  $p212 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8073, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p212, $i204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8074, 11} true;
  assume {:verifier.code 0} true;
  $i213 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8074, 21} true;
  assume {:verifier.code 0} true;
  $i214 := $ne.i32($i213, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8074, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i214} true;
  goto $bb81, $bb82;
$bb77:
  assume ($i208 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8066, 19} true;
  assume {:verifier.code 0} true;
  call $p209 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8067, 69} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8067, 69} true;
  assume {:verifier.code 0} true;
  $p211 := $load.ref($M.0, $p210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8067, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p211, $p209, .str.179);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8069, 7} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb78:
  assume !(($i208 == 1));
  assume {:verifier.code 0} true;
  goto $bb79;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8072, 5} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8088, 3} true;
  assume {:verifier.code 0} true;
  goto $bb87;
$bb81:
  assume ($i214 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8075, 19} true;
  assume {:verifier.code 0} true;
  call $p215 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8076, 69} true;
  assume {:verifier.code 0} true;
  $p216 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8076, 69} true;
  assume {:verifier.code 0} true;
  $p217 := $load.ref($M.0, $p216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8077, 74} true;
  assume {:verifier.code 0} true;
  $p218 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8077, 74} true;
  assume {:verifier.code 0} true;
  $i219 := $load.i32($M.0, $p218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8076, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p217, $p215, .str.180, $i219);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8078, 7} true;
  assume {:verifier.code 0} true;
  goto $bb83;
$bb82:
  assume !(($i214 == 1));
  assume {:verifier.code 0} true;
  goto $bb83;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8081, 31} true;
  assume {:verifier.code 0} true;
  $p220 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8081, 31} true;
  assume {:verifier.code 0} true;
  $i221 := $load.i8($M.0, $p220);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8081, 11} true;
  assume {:verifier.code 0} true;
  $i222 := $zext.i8.i32($i221);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8081, 37} true;
  assume {:verifier.code 0} true;
  $i223 := $eq.i32($i222, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8081, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i223} true;
  goto $bb84, $bb85;
$bb84:
  assume ($i223 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8082, 14} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($p0, 629);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8082, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p224, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8083, 9} true;
  assume {:verifier.code 0} true;
  call $i225 := set_mode_densblk($p0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8084, 7} true;
  assume {:verifier.code 0} true;
  goto $bb86;
$bb85:
  assume !(($i223 == 1));
  assume {:verifier.code 0} true;
  goto $bb86;
$bb86:
  assume {:verifier.code 0} true;
  goto $bb80;
$bb87:
  assume {:verifier.code 0} true;
  goto $bb72;
$bb88:
  assume ($i226 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8090, 13} true;
  assume {:verifier.code 0} true;
  $i227 := $trunc.i64.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8090, 27} true;
  assume {:verifier.code 0} true;
  $i228 := $and.i32($i227, 268435455);
  // WARNING: %309 = and i32 %308, 268435455, !dbg !6152, !verifier.code !5780
  call {:cexpr "value"} boogie_si_record_i32($i228);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8091, 16} true;
  assume {:verifier.code 0} true;
  $i229 := $and.i32($i228, 1880096768);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8091, 30} true;
  assume {:verifier.code 0} true;
  $i230 := $ne.i32($i229, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8091, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i230} true;
  goto $bb90, $bb91;
$bb89:
  assume !(($i226 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8111, 12} true;
  assume {:verifier.code 0} true;
  $i250 := $eq.i64($i42, 2147483648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8111, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i250} true;
  goto $bb100, $bb101;
$bb90:
  assume ($i230 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8092, 34} true;
  assume {:verifier.code 0} true;
  $i231 := $and.i32($i228, $sub.i32(0, 1880096769));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8092, 49} true;
  assume {:verifier.code 0} true;
  $i232 := $mul.i32($i231, 250);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8092, 12} true;
  assume {:verifier.code 0} true;
  $p233 := $add.ref($p0, 308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8092, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p233, $i232);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8093, 11} true;
  assume {:verifier.code 0} true;
  $i234 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8093, 21} true;
  assume {:verifier.code 0} true;
  $i235 := $ne.i32($i234, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8093, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i235} true;
  goto $bb92, $bb93;
$bb91:
  assume !(($i230 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8101, 34} true;
  assume {:verifier.code 0} true;
  $p240 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8101, 34} true;
  assume {:verifier.code 0} true;
  $p241 := $load.ref($M.0, $p240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8101, 43} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($p241, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8101, 43} true;
  assume {:verifier.code 0} true;
  $p243 := $load.ref($M.0, $p242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8101, 80} true;
  assume {:verifier.code 0} true;
  $i244 := $mul.i32($i228, 250);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8101, 7} true;
  assume {:verifier.code 0} true;
  call blk_queue_rq_timeout($p243, $i244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8102, 11} true;
  assume {:verifier.code 0} true;
  $i245 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8102, 21} true;
  assume {:verifier.code 0} true;
  $i246 := $ne.i32($i245, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8102, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i246} true;
  goto $bb96, $bb97;
$bb92:
  assume ($i235 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8094, 19} true;
  assume {:verifier.code 0} true;
  call $p236 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8095, 69} true;
  assume {:verifier.code 0} true;
  $p237 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8095, 69} true;
  assume {:verifier.code 0} true;
  $p238 := $load.ref($M.0, $p237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8096, 71} true;
  assume {:verifier.code 0} true;
  $i239 := $and.i32($i228, $sub.i32(0, 1880096769));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8095, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p238, $p236, .str.181, $i239);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8097, 7} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb93:
  assume !(($i235 == 1));
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8100, 5} true;
  assume {:verifier.code 0} true;
  goto $bb95;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8110, 3} true;
  assume {:verifier.code 0} true;
  goto $bb99;
$bb96:
  assume ($i246 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8103, 19} true;
  assume {:verifier.code 0} true;
  call $p247 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8104, 69} true;
  assume {:verifier.code 0} true;
  $p248 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8104, 69} true;
  assume {:verifier.code 0} true;
  $p249 := $load.ref($M.0, $p248);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8104, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p249, $p247, .str.182, $i228);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8106, 7} true;
  assume {:verifier.code 0} true;
  goto $bb98;
$bb97:
  assume !(($i246 == 1));
  assume {:verifier.code 0} true;
  goto $bb98;
$bb98:
  assume {:verifier.code 0} true;
  goto $bb95;
$bb99:
  assume {:verifier.code 0} true;
  goto $bb87;
$bb100:
  assume ($i250 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8112, 13} true;
  assume {:verifier.code 0} true;
  $i251 := $trunc.i64.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8112, 27} true;
  assume {:verifier.code 0} true;
  $i252 := $and.i32($i251, 255);
  // WARNING: %344 = and i32 %343, 255, !dbg !6197, !verifier.code !5780
  call {:cexpr "value"} boogie_si_record_i32($i252);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8113, 15} true;
  assume {:verifier.code 0} true;
  $i253 := $ne.i32($i252, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8113, 20} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i253} true;
  goto $bb102, $bb103;
$bb101:
  assume !(($i250 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8126, 12} true;
  assume {:verifier.code 0} true;
  $i274 := $eq.i64($i42, 1610612736);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8126, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i274} true;
  goto $bb113, $bb114;
$bb102:
  assume ($i253 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8113, 30} true;
  assume {:verifier.code 0} true;
  $i254 := $sle.i32($i252, 17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8113, 36} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i254} true;
  goto $bb105, $bb107;
$bb103:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8113, 20} true;
  assume {:verifier.code 0} true;
  assume !(($i253 == 1));
  goto $bb104;
$bb104:
  assume {:verifier.code 0} true;
  goto $bb111;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8113, 36} true;
  assume {:verifier.code 0} true;
  assume ($i254 == 1);
  goto $bb106;
$bb106:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8114, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $sub.i32(0, 22);
  goto $bb110;
$bb107:
  assume !(($i254 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8113, 45} true;
  assume {:verifier.code 0} true;
  $i255 := $sgt.i32($i252, 95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8113, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i255} true;
  goto $bb108, $bb109;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8113, 9} true;
  assume {:verifier.code 0} true;
  assume ($i255 == 1);
  goto $bb106;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8113, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i255 == 1));
  goto $bb104;
$bb110:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8232, 1} true;
  assume {:verifier.code 0} true;
  $r := $i256;
  $exn := false;
  return;
$bb111:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8118, 21} true;
  assume {:verifier.code 0} true;
  $i257 := $trunc.i32.i8($i252);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8118, 10} true;
  assume {:verifier.code 0} true;
  $p258 := $add.ref($p0, 294);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8118, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p258, $i257);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8119, 52} true;
  assume {:verifier.code 0} true;
  $i259 := $ashr.i64($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8119, 27} true;
  assume {:verifier.code 0} true;
  $i260 := $trunc.i64.i8($i259);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8119, 10} true;
  assume {:verifier.code 0} true;
  $p261 := $add.ref($p0, 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8119, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p261, $i260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8120, 53} true;
  assume {:verifier.code 0} true;
  $i262 := $ashr.i64($i1, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8120, 28} true;
  assume {:verifier.code 0} true;
  $i263 := $trunc.i64.i8($i262);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8120, 10} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($p0, 295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8120, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p264, $i263);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8121, 15} true;
  assume {:verifier.code 0} true;
  call $p265 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8122, 67} true;
  assume {:verifier.code 0} true;
  $p266 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8122, 67} true;
  assume {:verifier.code 0} true;
  $p267 := $load.ref($M.0, $p266);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8124, 35} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($p0, 296);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8124, 35} true;
  assume {:verifier.code 0} true;
  $i269 := $load.i8($M.0, $p268);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8124, 24} true;
  assume {:verifier.code 0} true;
  $i270 := $zext.i8.i32($i269);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8124, 62} true;
  assume {:verifier.code 0} true;
  $p271 := $add.ref($p0, 295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8124, 62} true;
  assume {:verifier.code 0} true;
  $i272 := $load.i8($M.0, $p271);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8124, 51} true;
  assume {:verifier.code 0} true;
  $i273 := $zext.i8.i32($i272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8122, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32(.str.1, $p267, $p265, .str.183, $i252, $i270, $i273);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8125, 3} true;
  assume {:verifier.code 0} true;
  goto $bb112;
$bb112:
  assume {:verifier.code 0} true;
  goto $bb99;
$bb113:
  assume ($i274 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8127, 20} true;
  assume {:verifier.code 0} true;
  $i275 := $and.i64($i1, $sub.i64(0, 1048576));
  // WARNING: %373 = and i64 %1, -1048576, !dbg !6233, !verifier.code !5780
  call {:cexpr "code"} boogie_si_record_i64($i275);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8128, 13} true;
  assume {:verifier.code 0} true;
  $i276 := $trunc.i64.i32($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8128, 27} true;
  assume {:verifier.code 0} true;
  $i277 := $and.i32($i276, 1048575);
  // WARNING: %375 = and i32 %374, 1048575, !dbg !6236, !verifier.code !5780
  call {:cexpr "value"} boogie_si_record_i32($i277);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8129, 14} true;
  assume {:verifier.code 0} true;
  $i278 := $eq.i64($i275, 1611661312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8129, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i278} true;
  goto $bb115, $bb116;
$bb114:
  assume !(($i274 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8228, 5} true;
  assume {:verifier.code 0} true;
  $i256 := $sub.i32(0, 5);
  goto $bb110;
$bb115:
  assume ($i278 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8130, 17} true;
  assume {:verifier.code 0} true;
  $i279 := $eq.i32($i277, 1048575);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8130, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i279} true;
  goto $bb117, $bb118;
$bb116:
  assume !(($i278 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8156, 14} true;
  assume {:verifier.code 0} true;
  $i305 := $eq.i64($i275, 1613758464);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8156, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i305} true;
  goto $bb130, $bb131;
$bb117:
  assume ($i279 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8131, 14} true;
  assume {:verifier.code 0} true;
  $p280 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8131, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p280, $sub.i16(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8132, 13} true;
  assume {:verifier.code 0} true;
  $i281 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8132, 23} true;
  assume {:verifier.code 0} true;
  $i282 := $ne.i32($i281, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8132, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i282} true;
  goto $bb119, $bb120;
$bb118:
  assume !(($i279 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8140, 39} true;
  assume {:verifier.code 0} true;
  $i286 := $trunc.i32.i16($i277);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8140, 32} true;
  assume {:verifier.code 0} true;
  $i287 := $sext.i16.i32($i286);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8140, 54} true;
  assume {:verifier.code 0} true;
  $i288 := $and.i32($i287, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8140, 32} true;
  assume {:verifier.code 0} true;
  $i289 := $trunc.i32.i16($i288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8140, 14} true;
  assume {:verifier.code 0} true;
  $p290 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8140, 30} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p290, $i289);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8141, 13} true;
  assume {:verifier.code 0} true;
  $i291 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8141, 23} true;
  assume {:verifier.code 0} true;
  $i292 := $ne.i32($i291, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8141, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i292} true;
  goto $bb123, $bb124;
$bb119:
  assume ($i282 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8133, 21} true;
  assume {:verifier.code 0} true;
  call $p283 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8134, 71} true;
  assume {:verifier.code 0} true;
  $p284 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8134, 71} true;
  assume {:verifier.code 0} true;
  $p285 := $load.ref($M.0, $p284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8134, 11} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p285, $p283, .str.184);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8136, 9} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb120:
  assume !(($i282 == 1));
  assume {:verifier.code 0} true;
  goto $bb121;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8139, 7} true;
  assume {:verifier.code 0} true;
  goto $bb122;
$bb122:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8155, 5} true;
  assume {:verifier.code 0} true;
  goto $bb129;
$bb123:
  assume ($i292 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8142, 21} true;
  assume {:verifier.code 0} true;
  call $p293 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8143, 71} true;
  assume {:verifier.code 0} true;
  $p294 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8143, 71} true;
  assume {:verifier.code 0} true;
  $p295 := $load.ref($M.0, $p294);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8144, 72} true;
  assume {:verifier.code 0} true;
  $p296 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8144, 72} true;
  assume {:verifier.code 0} true;
  $i297 := $load.i16($M.0, $p296);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8144, 61} true;
  assume {:verifier.code 0} true;
  $i298 := $sext.i16.i32($i297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8143, 11} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p295, $p293, .str.185, $i298);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8145, 9} true;
  assume {:verifier.code 0} true;
  goto $bb125;
$bb124:
  assume !(($i292 == 1));
  assume {:verifier.code 0} true;
  goto $bb125;
$bb125:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8148, 33} true;
  assume {:verifier.code 0} true;
  $p299 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8148, 33} true;
  assume {:verifier.code 0} true;
  $i300 := $load.i8($M.0, $p299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8148, 13} true;
  assume {:verifier.code 0} true;
  $i301 := $zext.i8.i32($i300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8148, 39} true;
  assume {:verifier.code 0} true;
  $i302 := $eq.i32($i301, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8148, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i302} true;
  goto $bb126, $bb127;
$bb126:
  assume ($i302 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8149, 16} true;
  assume {:verifier.code 0} true;
  $p303 := $add.ref($p0, 630);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8149, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p303, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8150, 11} true;
  assume {:verifier.code 0} true;
  call $i304 := set_mode_densblk($p0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8151, 9} true;
  assume {:verifier.code 0} true;
  goto $bb128;
$bb127:
  assume !(($i302 == 1));
  assume {:verifier.code 0} true;
  goto $bb128;
$bb128:
  assume {:verifier.code 0} true;
  goto $bb122;
$bb129:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8227, 3} true;
  assume {:verifier.code 0} true;
  goto $bb169;
$bb130:
  assume ($i305 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8157, 17} true;
  assume {:verifier.code 0} true;
  $i306 := $eq.i32($i277, 1048575);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8157, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i306} true;
  goto $bb132, $bb133;
$bb131:
  assume !(($i305 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8182, 14} true;
  assume {:verifier.code 0} true;
  $i334 := $eq.i64($i275, 1612709888);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8182, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i334} true;
  goto $bb145, $bb146;
$bb132:
  assume ($i306 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8158, 14} true;
  assume {:verifier.code 0} true;
  $p307 := $add.ref($p0, 293);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8158, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p307, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8159, 13} true;
  assume {:verifier.code 0} true;
  $i308 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8159, 23} true;
  assume {:verifier.code 0} true;
  $i309 := $ne.i32($i308, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8159, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i309} true;
  goto $bb134, $bb135;
$bb133:
  assume !(($i306 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8167, 50} true;
  assume {:verifier.code 0} true;
  $i313 := $trunc.i32.i8($i277);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8167, 34} true;
  assume {:verifier.code 0} true;
  $i314 := $zext.i8.i32($i313);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8167, 73} true;
  assume {:verifier.code 0} true;
  $i315 := $and.i32($i314, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8167, 34} true;
  assume {:verifier.code 0} true;
  $i316 := $trunc.i32.i8($i315);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8167, 14} true;
  assume {:verifier.code 0} true;
  $p317 := $add.ref($p0, 293);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8167, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p317, $i316);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8168, 13} true;
  assume {:verifier.code 0} true;
  $i318 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8168, 23} true;
  assume {:verifier.code 0} true;
  $i319 := $ne.i32($i318, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8168, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i319} true;
  goto $bb138, $bb139;
$bb134:
  assume ($i309 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8160, 21} true;
  assume {:verifier.code 0} true;
  call $p310 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8161, 71} true;
  assume {:verifier.code 0} true;
  $p311 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8161, 71} true;
  assume {:verifier.code 0} true;
  $p312 := $load.ref($M.0, $p311);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8161, 11} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p312, $p310, .str.186);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8163, 9} true;
  assume {:verifier.code 0} true;
  goto $bb136;
$bb135:
  assume !(($i309 == 1));
  assume {:verifier.code 0} true;
  goto $bb136;
$bb136:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8166, 7} true;
  assume {:verifier.code 0} true;
  goto $bb137;
$bb137:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8181, 5} true;
  assume {:verifier.code 0} true;
  goto $bb144;
$bb138:
  assume ($i319 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8169, 21} true;
  assume {:verifier.code 0} true;
  call $p320 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8170, 71} true;
  assume {:verifier.code 0} true;
  $p321 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8170, 71} true;
  assume {:verifier.code 0} true;
  $p322 := $load.ref($M.0, $p321);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8171, 77} true;
  assume {:verifier.code 0} true;
  $p323 := $add.ref($p0, 293);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8171, 77} true;
  assume {:verifier.code 0} true;
  $i324 := $load.i8($M.0, $p323);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8171, 66} true;
  assume {:verifier.code 0} true;
  $i325 := $zext.i8.i32($i324);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8170, 11} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p322, $p320, .str.187, $i325);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8172, 9} true;
  assume {:verifier.code 0} true;
  goto $bb140;
$bb139:
  assume !(($i319 == 1));
  assume {:verifier.code 0} true;
  goto $bb140;
$bb140:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8175, 33} true;
  assume {:verifier.code 0} true;
  $p326 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8175, 33} true;
  assume {:verifier.code 0} true;
  $i327 := $load.i8($M.0, $p326);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8175, 13} true;
  assume {:verifier.code 0} true;
  $i328 := $zext.i8.i32($i327);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8175, 39} true;
  assume {:verifier.code 0} true;
  $i329 := $eq.i32($i328, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8175, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i329} true;
  goto $bb141, $bb142;
$bb141:
  assume ($i329 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8176, 55} true;
  assume {:verifier.code 0} true;
  $p330 := $add.ref($p0, 293);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8176, 55} true;
  assume {:verifier.code 0} true;
  $i331 := $load.i8($M.0, $p330);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8176, 34} true;
  assume {:verifier.code 0} true;
  $i332 := $zext.i8.i64($i331);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8176, 11} true;
  assume {:verifier.code 0} true;
  call $i333 := st_int_ioctl($p0, 24, $i332);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8177, 9} true;
  assume {:verifier.code 0} true;
  goto $bb143;
$bb142:
  assume !(($i329 == 1));
  assume {:verifier.code 0} true;
  goto $bb143;
$bb143:
  assume {:verifier.code 0} true;
  goto $bb137;
$bb144:
  assume {:verifier.code 0} true;
  goto $bb129;
$bb145:
  assume ($i334 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8183, 17} true;
  assume {:verifier.code 0} true;
  $i335 := $eq.i32($i277, 1048575);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8183, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i335} true;
  goto $bb147, $bb148;
$bb146:
  assume !(($i334 == 1));
  assume {:verifier.code 0} true;
  goto $bb168;
$bb147:
  assume ($i335 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8184, 14} true;
  assume {:verifier.code 0} true;
  $p336 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8184, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p336, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8185, 13} true;
  assume {:verifier.code 0} true;
  $i337 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8185, 23} true;
  assume {:verifier.code 0} true;
  $i338 := $ne.i32($i337, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8185, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i338} true;
  goto $bb149, $bb150;
$bb148:
  assume !(($i335 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8193, 20} true;
  assume {:verifier.code 0} true;
  $i342 := $and.i32($i277, 65280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8193, 29} true;
  assume {:verifier.code 0} true;
  $i343 := $ne.i32($i342, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8193, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i343} true;
  goto $bb153, $bb154;
$bb149:
  assume ($i338 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8186, 21} true;
  assume {:verifier.code 0} true;
  call $p339 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8187, 71} true;
  assume {:verifier.code 0} true;
  $p340 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8187, 71} true;
  assume {:verifier.code 0} true;
  $p341 := $load.ref($M.0, $p340);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8187, 11} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p341, $p339, .str.188);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8189, 9} true;
  assume {:verifier.code 0} true;
  goto $bb151;
$bb150:
  assume !(($i338 == 1));
  assume {:verifier.code 0} true;
  goto $bb151;
$bb151:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8192, 7} true;
  assume {:verifier.code 0} true;
  goto $bb152;
$bb152:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8224, 5} true;
  assume {:verifier.code 0} true;
  goto $bb168;
$bb153:
  assume ($i343 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8194, 49} true;
  assume {:verifier.code 0} true;
  $i344 := $and.i32($i277, 65280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8194, 58} true;
  assume {:verifier.code 0} true;
  $i345 := $ashr.i32($i344, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8194, 25} true;
  assume {:verifier.code 0} true;
  $i346 := $trunc.i32.i8($i345);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8194, 16} true;
  assume {:verifier.code 0} true;
  $p347 := $add.ref($p0, 300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8194, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p347, $i346);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8195, 15} true;
  assume {:verifier.code 0} true;
  $i348 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8195, 25} true;
  assume {:verifier.code 0} true;
  $i349 := $ne.i32($i348, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8195, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i349} true;
  goto $bb155, $bb156;
$bb154:
  assume !(($i343 == 1));
  assume {:verifier.code 0} true;
  goto $bb158;
$bb155:
  assume ($i349 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8196, 24} true;
  assume {:verifier.code 0} true;
  call $p350 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8197, 73} true;
  assume {:verifier.code 0} true;
  $p351 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8197, 73} true;
  assume {:verifier.code 0} true;
  $p352 := $load.ref($M.0, $p351);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8198, 83} true;
  assume {:verifier.code 0} true;
  $p353 := $add.ref($p0, 300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8198, 83} true;
  assume {:verifier.code 0} true;
  $i354 := $load.i8($M.0, $p353);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8198, 72} true;
  assume {:verifier.code 0} true;
  $i355 := $zext.i8.i32($i354);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8197, 13} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p352, $p350, .str.189, $i355);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8199, 11} true;
  assume {:verifier.code 0} true;
  goto $bb157;
$bb156:
  assume !(($i349 == 1));
  assume {:verifier.code 0} true;
  goto $bb157;
$bb157:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8202, 9} true;
  assume {:verifier.code 0} true;
  goto $bb158;
$bb158:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8205, 20} true;
  assume {:verifier.code 0} true;
  $i356 := $and.i32($i277, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8205, 27} true;
  assume {:verifier.code 0} true;
  $i357 := $ne.i32($i356, 255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8205, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i357} true;
  goto $bb159, $bb160;
$bb159:
  assume ($i357 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8206, 44} true;
  assume {:verifier.code 0} true;
  $i358 := $and.i32($i277, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8206, 38} true;
  assume {:verifier.code 0} true;
  $i359 := $ne.i32($i358, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8206, 38} true;
  assume {:verifier.code 0} true;
  havoc $i360;
  assume ((($i359 == 1) ==> ($i360 == 2)) && (($i359 != 1) ==> ($i360 == 1)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8206, 38} true;
  assume {:verifier.code 0} true;
  $i361 := $trunc.i32.i8($i360);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8206, 16} true;
  assume {:verifier.code 0} true;
  $p362 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8206, 36} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p362, $i361);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8207, 15} true;
  assume {:verifier.code 0} true;
  $i363 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8207, 25} true;
  assume {:verifier.code 0} true;
  $i364 := $ne.i32($i363, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8207, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i364} true;
  goto $bb161, $bb162;
$bb160:
  assume !(($i357 == 1));
  assume {:verifier.code 0} true;
  goto $bb167;
$bb161:
  assume ($i364 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8208, 24} true;
  assume {:verifier.code 0} true;
  call $p365 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8209, 73} true;
  assume {:verifier.code 0} true;
  $p366 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8209, 73} true;
  assume {:verifier.code 0} true;
  $p367 := $load.ref($M.0, $p366);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8210, 73} true;
  assume {:verifier.code 0} true;
  $i368 := $and.i32($i277, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8209, 13} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p367, $p365, .str.190, $i368);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8211, 11} true;
  assume {:verifier.code 0} true;
  goto $bb163;
$bb162:
  assume !(($i364 == 1));
  assume {:verifier.code 0} true;
  goto $bb163;
$bb163:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8214, 35} true;
  assume {:verifier.code 0} true;
  $p369 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8214, 35} true;
  assume {:verifier.code 0} true;
  $i370 := $load.i8($M.0, $p369);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8214, 15} true;
  assume {:verifier.code 0} true;
  $i371 := $zext.i8.i32($i370);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8214, 41} true;
  assume {:verifier.code 0} true;
  $i372 := $eq.i32($i371, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8214, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i372} true;
  goto $bb164, $bb165;
$bb164:
  assume ($i372 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8215, 18} true;
  assume {:verifier.code 0} true;
  $p373 := $add.ref($p0, 631);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8215, 38} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p373, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8216, 53} true;
  assume {:verifier.code 0} true;
  $p374 := $add.ref($add.ref($p3, $mul.ref($i6, 56)), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8216, 53} true;
  assume {:verifier.code 0} true;
  $i375 := $load.i8($M.0, $p374);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8216, 33} true;
  assume {:verifier.code 0} true;
  $i376 := $zext.i8.i32($i375);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8216, 73} true;
  assume {:verifier.code 0} true;
  $i377 := $eq.i32($i376, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8216, 73} true;
  assume {:verifier.code 0} true;
  $i378 := $zext.i1.i32($i377);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8216, 13} true;
  assume {:verifier.code 0} true;
  call $i379 := st_compression($p0, $i378);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8217, 11} true;
  assume {:verifier.code 0} true;
  goto $bb166;
$bb165:
  assume !(($i372 == 1));
  assume {:verifier.code 0} true;
  goto $bb166;
$bb166:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8220, 9} true;
  assume {:verifier.code 0} true;
  goto $bb167;
$bb167:
  assume {:verifier.code 0} true;
  goto $bb152;
$bb168:
  assume {:verifier.code 0} true;
  goto $bb144;
$bb169:
  assume {:verifier.code 0} true;
  goto $bb112;
}
const nbr_partitions: ref;
axiom (nbr_partitions == $sub.ref(0, 457250));
procedure  nbr_partitions($p0: ref)
  returns ($r: i32)
{
  var $p1: ref;
  var $i2: i8;
  var $i3: i32;
  var $i4: i1;
  var $i6: i32;
  var $i7: i1;
  var $i8: i32;
  var $i9: i1;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i13: i32;
  var $i5: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9342, 27} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9342, 27} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i8($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9342, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i8.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9342, 33} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9342, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9343, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i32(0, 5);
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9369, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9347, 12} true;
  assume {:verifier.code 0} true;
  call $i6 := read_mode_page($p0, 17, 1);
  // WARNING: %9 = call i32 @read_mode_page(%struct.scsi_tape* %0, i32 17, i32 1), !dbg !5789, !verifier.code !5780
  call {:cexpr "result"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9348, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9348, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9349, 9} true;
  assume {:verifier.code 0} true;
  $i8 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9349, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9349, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i7 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9358, 28} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9358, 28} true;
  assume {:verifier.code 0} true;
  $p15 := $load.ref($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9358, 37} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p15, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9358, 37} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9358, 44} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p17, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9358, 20} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9358, 14} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9358, 51} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i20, 1);
  // WARNING: %28 = add nsw i32 %27, 1, !dbg !5814, !verifier.code !5780
  call {:cexpr "result"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9359, 9} true;
  assume {:verifier.code 0} true;
  $i22 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9359, 19} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9359, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb7:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9350, 13} true;
  assume {:verifier.code 0} true;
  call $p10 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9351, 67} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9351, 67} true;
  assume {:verifier.code 0} true;
  $p12 := $load.ref($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9351, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p12, $p10, .str.196);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9353, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9357, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 5);
  goto $bb10;
$bb10:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9367, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i13;
  goto $bb3;
$bb11:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9360, 17} true;
  assume {:verifier.code 0} true;
  call $p24 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9361, 67} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9361, 67} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9361, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p26, $p24, .str.197, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9363, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  $i13 := $i21;
  goto $bb10;
}
const partition_tape: ref;
axiom (partition_tape == $sub.ref(0, 458282));
procedure  partition_tape($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $i2: i32;
  var $i3: i1;
  var $i4: i32;
  var $i5: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i8;
  var $i16: i32;
  var $i17: i32;
  var $i18: i32;
  var $i19: i1;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i64;
  var $i24: i64;
  var $p25: ref;
  var $i26: i8;
  var $i27: i32;
  var $i28: i32;
  var $i29: i64;
  var $i30: i64;
  var $p31: ref;
  var $i32: i8;
  var $i33: i32;
  var $i34: i32;
  var $i35: i32;
  var $i36: i32;
  var $i37: i64;
  var $i38: i64;
  var $p39: ref;
  var $i40: i8;
  var $i41: i32;
  var $i42: i1;
  var $i43: i64;
  var $i44: i64;
  var $p45: ref;
  var $i46: i64;
  var $p47: ref;
  var $i48: i32;
  var $i49: i32;
  var $i50: i64;
  var $p51: ref;
  var $i52: i64;
  var $i53: i64;
  var $p54: ref;
  var $i55: i8;
  var $i56: i32;
  var $i57: i32;
  var $i58: i64;
  var $i59: i32;
  var $i60: i1;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $i64: i64;
  var $i65: i64;
  var $p66: ref;
  var $i67: i8;
  var $i68: i32;
  var $i69: i64;
  var $i70: i64;
  var $p71: ref;
  var $i72: i8;
  var $i73: i32;
  var $i74: i1;
  var $i75: i64;
  var $i76: i64;
  var $p77: ref;
  var $i78: i64;
  var $i79: i64;
  var $p80: ref;
  var $i81: i8;
  var $i82: i32;
  var $i83: i1;
  var $i84: i64;
  var $i85: i64;
  var $p86: ref;
  var $i87: i32;
  var $i88: i1;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $i92: i32;
  var $i93: i8;
  var $i94: i64;
  var $p95: ref;
  var $i96: i8;
  var $i97: i64;
  var $i98: i64;
  var $p99: ref;
  var $i100: i64;
  var $i101: i64;
  var $p102: ref;
  var $i103: i64;
  var $i104: i64;
  var $p105: ref;
  var $i106: i8;
  var $i107: i32;
  var $i108: i1;
  var $i109: i64;
  var $i110: i64;
  var $p111: ref;
  var $i112: i32;
  var $i113: i1;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i64;
  var $i118: i64;
  var $p119: ref;
  var $i120: i64;
  var $i121: i64;
  var $p122: ref;
  var $i123: i64;
  var $i124: i64;
  var $p125: ref;
  var $i126: i32;
  var $i127: i1;
  var $p128: ref;
  var $p129: ref;
  var $p130: ref;
  var $i131: i32;
  var $i9: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !15043, metadata !5777), !dbg !15044, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9386, 12} true;
  assume {:verifier.code 0} true;
  call $i2 := read_mode_page($p0, 17, 0);
  // WARNING: %3 = call i32 @read_mode_page(%struct.scsi_tape* %0, i32 17, i32 0), !dbg !5783, !verifier.code !5780
  call {:cexpr "result"} boogie_si_record_i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9387, 14} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9387, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9388, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9388, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $ne.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9388, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb3:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9389, 13} true;
  assume {:verifier.code 0} true;
  call $p6 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9390, 67} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9390, 67} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9390, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p8, $p6, .str.198);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9392, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb4:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9395, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $i2;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9472, 1} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9399, 14} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9399, 14} true;
  assume {:verifier.code 0} true;
  $p11 := $load.ref($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9399, 23} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p11, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9399, 23} true;
  assume {:verifier.code 0} true;
  $p13 := $load.ref($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9400, 20} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p13, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9400, 15} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i8($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9400, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $zext.i8.i32($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9400, 27} true;
  assume {:verifier.code 0} true;
  $i17 := $add.i32($i16, 4);
  // WARNING: %23 = add nsw i32 %22, 4, !dbg !5810, !verifier.code !5780
  call {:cexpr "pgo"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9401, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9401, 17} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9401, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i19} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9402, 15} true;
  assume {:verifier.code 0} true;
  call $p20 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9403, 65} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9403, 65} true;
  assume {:verifier.code 0} true;
  $p22 := $load.ref($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9404, 78} true;
  assume {:verifier.code 0} true;
  $i23 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9404, 98} true;
  assume {:verifier.code 0} true;
  $i24 := $add.i64($i23, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9404, 75} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p13, $mul.ref($i24, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9404, 70} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i8($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9404, 64} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i8.i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9404, 106} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i32($i27, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9403, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p22, $p20, .str.199, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9405, 3} true;
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9408, 28} true;
  assume {:verifier.code 0} true;
  $i29 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9408, 48} true;
  assume {:verifier.code 0} true;
  $i30 := $add.i64($i29, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9408, 25} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p13, $mul.ref($i30, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9408, 20} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i8($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9408, 14} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9408, 56} true;
  assume {:verifier.code 0} true;
  $i34 := $add.i32($i33, $sub.i32(0, 6));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9408, 62} true;
  assume {:verifier.code 0} true;
  $i35 := $sdiv.i32($i34, 2);
  // WARNING: %44 = sdiv i32 %43, 2, !dbg !5836, !verifier.code !5780
  call {:cexpr "psd_cnt"} boogie_si_record_i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9409, 14} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i32($i17, 8);
  // WARNING: %45 = add nsw i32 %23, 8, !dbg !5839, !verifier.code !5780
  call {:cexpr "psdo"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9410, 21} true;
  assume {:verifier.code 0} true;
  $i37 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9410, 41} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i64($i37, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9410, 18} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p13, $mul.ref($i38, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9410, 13} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9410, 7} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9410, 49} true;
  assume {:verifier.code 0} true;
  $i42 := $slt.i32($i41, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9410, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9412, 13} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9412, 34} true;
  assume {:verifier.code 0} true;
  $i44 := $add.i64($i43, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9412, 10} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p13, $mul.ref($i44, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9412, 42} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p45, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9413, 12} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9413, 10} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p13, $mul.ref($i46, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9413, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p47, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9414, 17} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i32($i36, 2);
  // WARNING: %58 = add nsw i32 %45, 2, !dbg !5860, !verifier.code !5780
  call {:cexpr "psdo"} boogie_si_record_i32($i48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9415, 3} true;
  assume {:verifier.code 0} true;
  $i49 := $i48;
  goto $bb13;
$bb12:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  $i49 := $i36;
  goto $bb13;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9418, 23} true;
  assume {:verifier.code 0} true;
  $i50 := $sext.i32.i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9418, 21} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p13, $mul.ref($i50, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9418, 72} true;
  assume {:verifier.code 0} true;
  $i52 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9418, 92} true;
  assume {:verifier.code 0} true;
  $i53 := $add.i64($i52, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9418, 69} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p13, $mul.ref($i53, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9418, 64} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i8($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9418, 58} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i8.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9418, 100} true;
  assume {:verifier.code 0} true;
  $i57 := $mul.i32($i56, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9418, 48} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9418, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p51, 0, $i58, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9419, 7} true;
  assume {:verifier.code 0} true;
  $i59 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9419, 17} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i32($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9419, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9420, 15} true;
  assume {:verifier.code 0} true;
  call $p61 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9421, 65} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9421, 65} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9422, 91} true;
  assume {:verifier.code 0} true;
  $i64 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9422, 111} true;
  assume {:verifier.code 0} true;
  $i65 := $add.i64($i64, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9422, 88} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p13, $mul.ref($i65, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9422, 83} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i8($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9422, 77} true;
  assume {:verifier.code 0} true;
  $i68 := $zext.i8.i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9423, 38} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9423, 58} true;
  assume {:verifier.code 0} true;
  $i70 := $add.i64($i69, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9423, 35} true;
  assume {:verifier.code 0} true;
  $p71 := $add.ref($p13, $mul.ref($i70, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9423, 30} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i8($M.0, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9423, 24} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i8.i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9421, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32(.str.12, $p63, $p61, .str.200, $i35, $i68, $i73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9424, 3} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9427, 12} true;
  assume {:verifier.code 0} true;
  $i74 := $sle.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9427, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i74 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9428, 13} true;
  assume {:verifier.code 0} true;
  $i75 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9428, 33} true;
  assume {:verifier.code 0} true;
  $i76 := $add.i64($i75, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9428, 10} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p13, $mul.ref($i76, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9428, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p77, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9429, 23} true;
  assume {:verifier.code 0} true;
  $i78 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9429, 43} true;
  assume {:verifier.code 0} true;
  $i79 := $add.i64($i78, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9429, 20} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p13, $mul.ref($i79, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9429, 15} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i8($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9429, 9} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.i8.i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9429, 51} true;
  assume {:verifier.code 0} true;
  $i83 := $sge.i32($i82, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9429, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i83} true;
  goto $bb19, $bb20;
$bb18:
  assume !(($i74 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9442, 58} true;
  assume {:verifier.code 0} true;
  $i92 := $ashr.i32($i1, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9442, 36} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i32.i8($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9442, 12} true;
  assume {:verifier.code 0} true;
  $i94 := $sext.i32.i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9442, 10} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p13, $mul.ref($i94, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9442, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p95, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9443, 44} true;
  assume {:verifier.code 0} true;
  $i96 := $trunc.i32.i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9443, 13} true;
  assume {:verifier.code 0} true;
  $i97 := $sext.i32.i64($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9443, 34} true;
  assume {:verifier.code 0} true;
  $i98 := $add.i64($i97, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9443, 10} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p13, $mul.ref($i98, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9443, 42} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p99, $i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9444, 13} true;
  assume {:verifier.code 0} true;
  $i100 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9444, 33} true;
  assume {:verifier.code 0} true;
  $i101 := $add.i64($i100, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9444, 10} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p13, $mul.ref($i101, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9444, 41} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p102, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9445, 32} true;
  assume {:verifier.code 0} true;
  $i103 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9445, 52} true;
  assume {:verifier.code 0} true;
  $i104 := $add.i64($i103, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9445, 29} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p13, $mul.ref($i104, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9445, 24} true;
  assume {:verifier.code 0} true;
  $i106 := $load.i8($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9445, 9} true;
  assume {:verifier.code 0} true;
  $i107 := $zext.i8.i32($i106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9445, 60} true;
  assume {:verifier.code 0} true;
  $i108 := $ule.i32($i107, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9445, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i108} true;
  goto $bb26, $bb27;
$bb19:
  assume ($i83 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9430, 15} true;
  assume {:verifier.code 0} true;
  $i84 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9430, 35} true;
  assume {:verifier.code 0} true;
  $i85 := $add.i64($i84, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9430, 12} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p13, $mul.ref($i85, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9430, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p86, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9431, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i83 == 1));
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9434, 9} true;
  assume {:verifier.code 0} true;
  $i87 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9434, 19} true;
  assume {:verifier.code 0} true;
  $i88 := $ne.i32($i87, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9434, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i88} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i88 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9435, 17} true;
  assume {:verifier.code 0} true;
  call $p89 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9436, 67} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9436, 67} true;
  assume {:verifier.code 0} true;
  $p91 := $load.ref($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9436, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p91, $p89, .str.201);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9438, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i88 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9441, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9458, 11} true;
  assume {:verifier.code 0} true;
  $i117 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9458, 31} true;
  assume {:verifier.code 0} true;
  $i118 := $add.i64($i117, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9458, 8} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p13, $mul.ref($i118, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9458, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p119, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9459, 11} true;
  assume {:verifier.code 0} true;
  $i120 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9459, 31} true;
  assume {:verifier.code 0} true;
  $i121 := $add.i64($i120, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9459, 8} true;
  assume {:verifier.code 0} true;
  $p122 := $add.ref($p13, $mul.ref($i121, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9459, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p122, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9460, 11} true;
  assume {:verifier.code 0} true;
  $i123 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9460, 31} true;
  assume {:verifier.code 0} true;
  $i124 := $add.i64($i123, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9460, 8} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p13, $mul.ref($i124, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9460, 39} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p125, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9461, 12} true;
  assume {:verifier.code 0} true;
  call $i126 := write_mode_page($p0, 17, 1);
  // WARNING: %155 = call i32 @write_mode_page(%struct.scsi_tape* %0, i32 17, i32 1), !dbg !5979, !verifier.code !5780
  call {:cexpr "result"} boogie_si_record_i32($i126);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9462, 14} true;
  assume {:verifier.code 0} true;
  $i127 := $ne.i32($i126, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9462, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb32, $bb33;
$bb26:
  assume ($i108 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9446, 15} true;
  assume {:verifier.code 0} true;
  $i109 := $sext.i32.i64($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9446, 35} true;
  assume {:verifier.code 0} true;
  $i110 := $add.i64($i109, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9446, 12} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p13, $mul.ref($i110, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9446, 43} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p111, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9447, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i108 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9450, 9} true;
  assume {:verifier.code 0} true;
  $i112 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9450, 19} true;
  assume {:verifier.code 0} true;
  $i113 := $ne.i32($i112, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9450, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i113} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i113 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9451, 17} true;
  assume {:verifier.code 0} true;
  call $p114 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9452, 67} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9452, 67} true;
  assume {:verifier.code 0} true;
  $p116 := $load.ref($M.0, $p115);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9452, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p116, $p114, .str.202, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9454, 5} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume !(($i113 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb32:
  assume ($i127 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9463, 15} true;
  assume {:verifier.code 0} true;
  call $p128 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9464, 67} true;
  assume {:verifier.code 0} true;
  $p129 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9464, 67} true;
  assume {:verifier.code 0} true;
  $p130 := $load.ref($M.0, $p129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9464, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.1, $p130, $p128, .str.203);
  // WARNING: call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0), %struct.scsi_device* %160, i8* %158, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.203, i32 0, i32 0)), !dbg !5988, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9467, 3} true;
  assume {:verifier.code 0} true;
  $i131 := $sub.i32(0, 5);
  goto $bb34;
$bb33:
  assume !(($i127 == 1));
  assume {:verifier.code 0} true;
  $i131 := $i126;
  goto $bb34;
$bb34:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 9470, 3} true;
  assume {:verifier.code 0} true;
  $i9 := $i131;
  goto $bb6;
}
const do_load_unload: ref;
axiom (do_load_unload == $sub.ref(0, 459314));
procedure  do_load_unload($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i8;
  var $i6: i32;
  var $i7: i1;
  var $i8: i1;
  var $p9: ref;
  var $i10: i8;
  var $i11: i32;
  var $i12: i1;
  var $p14: ref;
  var $p15: ref;
  var $i16: i1;
  var $p17: ref;
  var $i18: i8;
  var $i19: i32;
  var $i20: i32;
  var $i21: i8;
  var $p22: ref;
  var $i23: i1;
  var $i24: i1;
  var $i25: i32;
  var $i26: i1;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $i31: i8;
  var $i32: i32;
  var $i33: i1;
  var $p34: ref;
  var $i35: i32;
  var $i36: i8;
  var $i37: i32;
  var $i38: i32;
  var $i39: i8;
  var $p40: ref;
  var $p41: ref;
  var $i42: i8;
  var $i43: i32;
  var $i44: i1;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $i51: i32;
  var $p53: ref;
  var $i54: i32;
  var $i52: i32;
  var $i55: i32;
  var $i56: i1;
  var $i57: i1;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i64;
  var $i67: i1;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $i71: i32;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $i75: i32;
  var $i76: i1;
  var $i77: i1;
  var $p78: ref;
  var $p79: ref;
  var $p81: ref;
  var $i82: i8;
  var $p83: ref;
  var $i84: i32;
  var $i85: i1;
  var $i86: i32;
  var $i80: i32;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $i91: i32;
  var $i92: i64;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $i87: i32;
  var $i13: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %1, i64 0, metadata !15261, metadata !5777), !dbg !15262, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !15265, metadata !5777), !dbg !15266, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8392, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8392, 27} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i8($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8392, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i8.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8392, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8392, 39} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8392, 52} true;
  assume {:verifier.code 0} true;
  $i8 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8392, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i8} true;
  goto $bb4, $bb5;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8392, 39} true;
  assume {:verifier.code 0} true;
  assume !(($i7 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb9;
$bb4:
  assume ($i8 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8393, 29} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8393, 29} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8393, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8393, 35} true;
  assume {:verifier.code 0} true;
  $i12 := $eq.i32($i11, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8393, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb6, $bb7;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8392, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i8 == 1));
  goto $bb3;
$bb6:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8394, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 123);
  goto $bb8;
$bb7:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8396, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $sub.i32(0, 5);
  goto $bb8;
$bb8:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8470, 1} true;
  assume {:verifier.code 0} true;
  $r := $i13;
  $exn := false;
  return;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8401, 3} true;
  assume {:verifier.code 0} true;
  $p14 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8401, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p14, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8402, 3} true;
  assume {:verifier.code 0} true;
  $p15 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8402, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p15, 27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8403, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8403, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8404, 29} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8404, 29} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i8($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8404, 14} true;
  assume {:verifier.code 0} true;
  $i19 := $zext.i8.i32($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8404, 36} true;
  assume {:verifier.code 0} true;
  $i20 := $or.i32($i19, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8404, 14} true;
  assume {:verifier.code 0} true;
  $i21 := $trunc.i32.i8($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8404, 5} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8404, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p22, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8405, 3} true;
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8408, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $sgt.i32($i2, 10000);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8408, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8408, 38} true;
  assume {:verifier.code 0} true;
  $i24 := $sle.i32($i2, 10006);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8408, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb16, $bb17;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8408, 25} true;
  assume {:verifier.code 0} true;
  assume !(($i23 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb21;
$bb16:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8409, 9} true;
  assume {:verifier.code 0} true;
  $i25 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8409, 19} true;
  assume {:verifier.code 0} true;
  $i26 := $ne.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8409, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb18, $bb19;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8408, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i24 == 1));
  goto $bb15;
$bb18:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8410, 13} true;
  assume {:verifier.code 0} true;
  call $p27 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8411, 67} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8411, 67} true;
  assume {:verifier.code 0} true;
  $p29 := $load.ref($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8412, 73} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8412, 73} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8412, 58} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8412, 80} true;
  assume {:verifier.code 0} true;
  $i33 := $ne.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8412, 58} true;
  assume {:verifier.code 0} true;
  havoc $p34;
  assume ((($i33 == 1) ==> ($p34 == .str.20)) && (($i33 != 1) ==> ($p34 == .str.205)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8413, 36} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i32($i2, $sub.i32(0, 10000));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8411, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.ref.i32(.str.12, $p29, $p27, .str.204, $p34, $i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8414, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb19:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8417, 30} true;
  assume {:verifier.code 0} true;
  $i36 := $trunc.i32.i8($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8417, 14} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i8.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8417, 57} true;
  assume {:verifier.code 0} true;
  $i38 := $add.i32($i37, 240);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8417, 14} true;
  assume {:verifier.code 0} true;
  $i39 := $trunc.i32.i8($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8417, 5} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8417, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p40, $i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8418, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8421, 27} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p0, 290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8421, 27} true;
  assume {:verifier.code 0} true;
  $i42 := $load.i8($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8421, 7} true;
  assume {:verifier.code 0} true;
  $i43 := $zext.i8.i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8421, 37} true;
  assume {:verifier.code 0} true;
  $i44 := $ne.i32($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8421, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8422, 5} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8422, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p45, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8423, 28} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8423, 28} true;
  assume {:verifier.code 0} true;
  $p47 := $load.ref($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8423, 37} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p47, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8423, 37} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8423, 53} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p49, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8423, 53} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i32($M.0, $p50);
  // WARNING: %68 = load i32, i32* %67, align 8, !dbg !5859, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8424, 3} true;
  assume {:verifier.code 0} true;
  $i52 := $i51;
  goto $bb24;
$bb23:
  assume !(($i44 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8425, 20} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8425, 20} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i32($M.0, $p53);
  // WARNING: %71 = load i32, i32* %70, align 4, !dbg !5863, !verifier.code !5777
  call {:cexpr "timeout"} boogie_si_record_i32($i54);
  assume {:verifier.code 0} true;
  $i52 := $i54;
  goto $bb24;
$bb24:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8427, 7} true;
  assume {:verifier.code 0} true;
  $i55 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8427, 17} true;
  assume {:verifier.code 0} true;
  $i56 := $ne.i32($i55, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8427, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i56} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i56 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8428, 19} true;
  assume {:verifier.code 0} true;
  $i57 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8428, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i57} true;
  goto $bb27, $bb28;
$bb26:
  assume !(($i56 == 1));
  assume {:verifier.code 0} true;
  goto $bb30;
$bb27:
  assume ($i57 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8429, 17} true;
  assume {:verifier.code 0} true;
  call $p58 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8430, 67} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8430, 67} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8430, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p60, $p58, .str.206);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8432, 5} true;
  assume {:verifier.code 0} true;
  goto $bb29;
$bb28:
  assume !(($i57 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8433, 17} true;
  assume {:verifier.code 0} true;
  call $p61 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8434, 67} true;
  assume {:verifier.code 0} true;
  $p62 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8434, 67} true;
  assume {:verifier.code 0} true;
  $p63 := $load.ref($M.0, $p62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8434, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p63, $p61, .str.207);
  assume {:verifier.code 0} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8437, 3} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8440, 51} true;
  assume {:verifier.code 0} true;
  $p64 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8440, 11} true;
  assume {:verifier.code 0} true;
  call $p65 := st_do_scsi($0.ref, $p0, $p64, 0, 3, $i52, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8442, 7} true;
  assume {:verifier.code 0} true;
  $i66 := $p2i.ref.i64($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8442, 29} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i64($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8442, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb31, $bb32;
$bb31:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8443, 19} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8443, 19} true;
  assume {:verifier.code 0} true;
  $p69 := $load.ref($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8443, 28} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p69, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8443, 28} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i32($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8443, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $i71;
  goto $bb8;
$bb32:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8447, 18} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8447, 18} true;
  assume {:verifier.code 0} true;
  $p73 := $load.ref($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8447, 27} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p73, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8447, 27} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  // WARNING: %102 = load i32, i32* %101, align 8, !dbg !5900, !verifier.code !5777
  call {:cexpr "retval"} boogie_si_record_i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8448, 3} true;
  assume {:verifier.code 0} true;
  call st_release_request($p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8449, 14} true;
  assume {:verifier.code 0} true;
  $i76 := $eq.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8449, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8450, 19} true;
  assume {:verifier.code 0} true;
  $i77 := $eq.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8450, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i77} true;
  goto $bb36, $bb37;
$bb35:
  assume !(($i76 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8463, 42} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8463, 12} true;
  assume {:verifier.code 0} true;
  $p89 := $bitcast.ref.ref($p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8463, 69} true;
  assume {:verifier.code 0} true;
  $p90 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8463, 69} true;
  assume {:verifier.code 0} true;
  $i91 := $load.i32($M.0, $p90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8463, 48} true;
  assume {:verifier.code 0} true;
  $i92 := $sext.i32.i64($i91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8463, 46} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p89, $mul.ref($i92, 16));
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_partstat* %125, i64 0, metadata !15412, metadata !5777), !dbg !15413, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8465, 11} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($add.ref($p89, $mul.ref($i92, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8465, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p94, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8466, 11} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($add.ref($p89, $mul.ref($i92, 16)), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8466, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p95, $sub.i32(0, 1));
  assume {:verifier.code 0} true;
  $i87 := $i75;
  goto $bb42;
$bb36:
  assume ($i77 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8451, 12} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p0, 636);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8451, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p78, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8452, 12} true;
  assume {:verifier.code 0} true;
  $p79 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8452, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p79, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8453, 5} true;
  assume {:verifier.code 0} true;
  $i80 := $i75;
  goto $bb38;
$bb37:
  assume !(($i77 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8454, 32} true;
  assume {:verifier.code 0} true;
  $p81 := $add.ref($p0, 635);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8454, 32} true;
  assume {:verifier.code 0} true;
  $i82 := $load.i8($M.0, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8454, 12} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0, 636);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8454, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p83, $i82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8455, 16} true;
  assume {:verifier.code 0} true;
  call $i84 := check_tape($p0, $p1);
  // WARNING: %113 = call i32 @check_tape(%struct.scsi_tape* %0, %struct.file* %1), !dbg !5919, !verifier.code !5777
  call {:cexpr "retval"} boogie_si_record_i32($i84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8456, 18} true;
  assume {:verifier.code 0} true;
  $i85 := $sgt.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8456, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb39, $bb40;
$bb38:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8462, 3} true;
  assume {:verifier.code 0} true;
  $i87 := $i80;
  goto $bb42;
$bb39:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8458, 7} true;
  assume {:verifier.code 0} true;
  $i86 := 0;
  goto $bb41;
$bb40:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  $i86 := $i84;
  goto $bb41;
$bb41:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i80 := $i86;
  goto $bb38;
$bb42:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8468, 3} true;
  assume {:verifier.code 0} true;
  $i13 := $i87;
  goto $bb8;
}
const st_compression: ref;
axiom (st_compression == $sub.ref(0, 460346));
procedure  st_compression($p0: ref, $i1: i32)
  returns ($r: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $i7: i8;
  var $i8: i32;
  var $i9: i1;
  var $i11: i32;
  var $i12: i1;
  var $i13: i32;
  var $i14: i1;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i32;
  var $i22: i32;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i64;
  var $i28: i64;
  var $p29: ref;
  var $i30: i8;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $i34: i64;
  var $i35: i64;
  var $p36: ref;
  var $i37: i8;
  var $i38: i32;
  var $i39: i32;
  var $i40: i1;
  var $i41: i32;
  var $i42: i1;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i1;
  var $i47: i64;
  var $i48: i64;
  var $p49: ref;
  var $i50: i8;
  var $i51: i32;
  var $i52: i32;
  var $i53: i8;
  var $i54: i64;
  var $i55: i64;
  var $p56: ref;
  var $p57: ref;
  var $i58: i8;
  var $i59: i32;
  var $i60: i1;
  var $p61: ref;
  var $i62: i8;
  var $i63: i64;
  var $i64: i64;
  var $p65: ref;
  var $i66: i64;
  var $i67: i64;
  var $p68: ref;
  var $i69: i8;
  var $i70: i32;
  var $i71: i32;
  var $i72: i8;
  var $i73: i64;
  var $i74: i64;
  var $p75: ref;
  var $p76: ref;
  var $i77: i8;
  var $i78: i32;
  var $i79: i1;
  var $i80: i64;
  var $i81: i64;
  var $p82: ref;
  var $i83: i32;
  var $i84: i1;
  var $i85: i32;
  var $i86: i1;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $i90: i32;
  var $i91: i1;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $i10: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !15423, metadata !5777), !dbg !15424, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8300, 18} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8300, 18} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8300, 27} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8300, 27} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8301, 27} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8301, 27} true;
  assume {:verifier.code 0} true;
  $i7 := $load.i8($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8301, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $zext.i8.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8301, 33} true;
  assume {:verifier.code 0} true;
  $i9 := $ne.i32($i8, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8301, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i9 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8302, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(0, 5);
  goto $bb3;
$bb2:
  assume !(($i9 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8377, 1} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8306, 12} true;
  assume {:verifier.code 0} true;
  call $i11 := read_mode_page($p0, 15, 0);
  // WARNING: %14 = call i32 @read_mode_page(%struct.scsi_tape* %0, i32 15, i32 0), !dbg !5795, !verifier.code !5780
  call {:cexpr "retval"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8307, 14} true;
  assume {:verifier.code 0} true;
  $i12 := $ne.i32($i11, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8307, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i12} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i12 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8308, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8308, 19} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8308, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i12 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8309, 13} true;
  assume {:verifier.code 0} true;
  call $p15 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8310, 67} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8310, 67} true;
  assume {:verifier.code 0} true;
  $p17 := $load.ref($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8310, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p17, $p15, .str.128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8312, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb8:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8315, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(0, 5);
  goto $bb3;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8319, 27} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p5, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8319, 18} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8319, 12} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8319, 34} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i20, 4);
  // WARNING: %30 = add nsw i32 %29, 4, !dbg !5817, !verifier.code !5780
  call {:cexpr "mpoffs"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8320, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8320, 17} true;
  assume {:verifier.code 0} true;
  $i23 := $ne.i32($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8320, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8321, 15} true;
  assume {:verifier.code 0} true;
  call $p24 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8322, 65} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8322, 65} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8323, 87} true;
  assume {:verifier.code 0} true;
  $i27 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8323, 110} true;
  assume {:verifier.code 0} true;
  $i28 := $add.i64($i27, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8323, 84} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p5, $mul.ref($i28, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8323, 75} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i8($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8323, 54} true;
  assume {:verifier.code 0} true;
  $i31 := $sext.i8.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8323, 119} true;
  assume {:verifier.code 0} true;
  $i32 := $slt.i32($i31, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8323, 119} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i1.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8322, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p26, $p24, .str.129, $i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8324, 3} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8327, 26} true;
  assume {:verifier.code 0} true;
  $i34 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8327, 49} true;
  assume {:verifier.code 0} true;
  $i35 := $add.i64($i34, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8327, 23} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p5, $mul.ref($i35, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8327, 14} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i8($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8327, 8} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8327, 57} true;
  assume {:verifier.code 0} true;
  $i39 := $and.i32($i38, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8327, 63} true;
  assume {:verifier.code 0} true;
  $i40 := $eq.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8327, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i40} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i40 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8328, 9} true;
  assume {:verifier.code 0} true;
  $i41 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8328, 19} true;
  assume {:verifier.code 0} true;
  $i42 := $ne.i32($i41, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8328, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb16, $bb17;
$bb15:
  assume !(($i40 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb16:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8329, 17} true;
  assume {:verifier.code 0} true;
  call $p43 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8330, 67} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8330, 67} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8330, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p45, $p43, .str.130);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8332, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i42 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8335, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(0, 5);
  goto $bb3;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8339, 13} true;
  assume {:verifier.code 0} true;
  $i46 := $ne.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8339, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i46} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i46 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 77} true;
  assume {:verifier.code 0} true;
  $i47 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 100} true;
  assume {:verifier.code 0} true;
  $i48 := $add.i64($i47, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 74} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p5, $mul.ref($i48, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 65} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i8($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 50} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i8.i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 108} true;
  assume {:verifier.code 0} true;
  $i52 := $or.i32($i51, 128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 50} true;
  assume {:verifier.code 0} true;
  $i53 := $trunc.i32.i8($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 17} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 40} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i64($i54, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 14} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p5, $mul.ref($i55, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8340, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p56, $i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8341, 29} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8341, 29} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i8($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8341, 9} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i8.i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8341, 36} true;
  assume {:verifier.code 0} true;
  $i60 := $ne.i32($i59, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8341, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i60} true;
  goto $bb22, $bb23;
$bb21:
  assume !(($i46 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 77} true;
  assume {:verifier.code 0} true;
  $i66 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 100} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i64($i66, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 74} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p5, $mul.ref($i67, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 65} true;
  assume {:verifier.code 0} true;
  $i69 := $load.i8($M.0, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 50} true;
  assume {:verifier.code 0} true;
  $i70 := $zext.i8.i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 108} true;
  assume {:verifier.code 0} true;
  $i71 := $and.i32($i70, 127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 50} true;
  assume {:verifier.code 0} true;
  $i72 := $trunc.i32.i8($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 17} true;
  assume {:verifier.code 0} true;
  $i73 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 40} true;
  assume {:verifier.code 0} true;
  $i74 := $add.i64($i73, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 14} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p5, $mul.ref($i74, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8347, 48} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p75, $i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8348, 29} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p0, 300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8348, 29} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i8($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8348, 9} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i8.i32($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8348, 36} true;
  assume {:verifier.code 0} true;
  $i79 := $ne.i32($i78, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8348, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i79} true;
  goto $bb26, $bb27;
$bb22:
  assume ($i60 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8342, 57} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 300);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8342, 57} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i8($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8342, 19} true;
  assume {:verifier.code 0} true;
  $i63 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8342, 42} true;
  assume {:verifier.code 0} true;
  $i64 := $add.i64($i63, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8342, 16} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p5, $mul.ref($i64, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8342, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p65, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8343, 5} true;
  assume {:verifier.code 0} true;
  goto $bb24;
$bb23:
  assume !(($i60 == 1));
  assume {:verifier.code 0} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8346, 3} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8354, 12} true;
  assume {:verifier.code 0} true;
  call $i83 := write_mode_page($p0, 15, 0);
  // WARNING: %110 = call i32 @write_mode_page(%struct.scsi_tape* %0, i32 15, i32 0), !dbg !5908, !verifier.code !5780
  call {:cexpr "retval"} boogie_si_record_i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8355, 14} true;
  assume {:verifier.code 0} true;
  $i84 := $ne.i32($i83, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8355, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i84} true;
  goto $bb29, $bb30;
$bb26:
  assume ($i79 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8349, 19} true;
  assume {:verifier.code 0} true;
  $i80 := $sext.i32.i64($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8349, 42} true;
  assume {:verifier.code 0} true;
  $i81 := $add.i64($i80, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8349, 16} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p5, $mul.ref($i81, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8349, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p82, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8350, 5} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb27:
  assume !(($i79 == 1));
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb29:
  assume ($i84 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8356, 9} true;
  assume {:verifier.code 0} true;
  $i85 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8356, 19} true;
  assume {:verifier.code 0} true;
  $i86 := $ne.i32($i85, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8356, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i86} true;
  goto $bb31, $bb32;
$bb30:
  assume !(($i84 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb31:
  assume ($i86 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8357, 17} true;
  assume {:verifier.code 0} true;
  call $p87 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8358, 67} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8358, 67} true;
  assume {:verifier.code 0} true;
  $p89 := $load.ref($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8358, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p89, $p87, .str.131);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8360, 5} true;
  assume {:verifier.code 0} true;
  goto $bb33;
$bb32:
  assume !(($i86 == 1));
  assume {:verifier.code 0} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8363, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32(0, 5);
  goto $bb3;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8367, 7} true;
  assume {:verifier.code 0} true;
  $i90 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8367, 17} true;
  assume {:verifier.code 0} true;
  $i91 := $ne.i32($i90, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8367, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i91 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8368, 15} true;
  assume {:verifier.code 0} true;
  call $p92 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8369, 65} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8369, 65} true;
  assume {:verifier.code 0} true;
  $p94 := $load.ref($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8369, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p94, $p92, .str.132, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8371, 3} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume !(($i91 == 1));
  assume {:verifier.code 0} true;
  goto $bb37;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8374, 8} true;
  assume {:verifier.code 0} true;
  $p95 := $add.ref($p0, 631);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8374, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p95, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8375, 3} true;
  assume {:verifier.code 0} true;
  $i10 := 0;
  goto $bb3;
}
const copy_to_user: ref;
axiom (copy_to_user == $sub.ref(0, 461378));
procedure  copy_to_user($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i64)
{
  var $i3: i32;
  var $i4: i64;
  var $i5: i32;
  var $i6: i1;
  var $i8: i64;
  var $i9: i1;
  var $i7: i1;
  var $i10: i32;
  var $i11: i64;
  var $i12: i64;
  var $i13: i1;
  var $i14: i32;
  var $i15: i64;
  var $i16: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !15587, metadata !5777), !dbg !15588, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5083, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := __builtinx_object_size.ref.i32($p1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5083, 9} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  // WARNING: %5 = sext i32 %4 to i64, !dbg !5785, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5084, 8} true;
  assume {:verifier.code 0} true;
  $i5 := $trunc.i64.i32($i4);
  // WARNING: %6 = trunc i64 %5 to i32, !dbg !5789, !verifier.code !5780
  call {:cexpr "sz"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5085, 3} true;
  assume {:verifier.code 0} true;
  call __might_fault(.str.140, 732);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5086, 44} true;
  assume {:verifier.code 0} true;
  $i6 := $slt.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5086, 48} true;
  assume {:verifier.code 0} true;
  $i7 := 1;
  assume {:branchcond $i6} true;
  goto $bb1, $bb3;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5086, 48} true;
  assume {:verifier.code 0} true;
  assume ($i6 == 1);
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5086, 48} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i1.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5086, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $sext.i32.i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5086, 13} true;
  assume {:verifier.code 0} true;
  call $i12 := ldv__builtin_expect($i11, 1);
  // WARNING: %15 = call i64 @ldv__builtin_expect(i64 %14, i64 1), !dbg !5802, !verifier.code !5780
  call {:cexpr "tmp___0"} boogie_si_record_i64($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5087, 15} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i64($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5087, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb4, $bb5;
$bb3:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5086, 51} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5086, 70} true;
  assume {:verifier.code 0} true;
  $i9 := $uge.i64($i8, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5086, 48} true;
  assume {:verifier.code 0} true;
  $i7 := $i9;
  goto $bb2;
$bb4:
  assume ($i13 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5088, 33} true;
  assume {:verifier.code 0} true;
  $i14 := $trunc.i64.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5088, 9} true;
  assume {:verifier.code 0} true;
  call $i15 := _copy_to_user($p0, $p1, $i14);
  // WARNING: %19 = call i64 @_copy_to_user(i8* %0, i8* %1, i32 %18), !dbg !5810, !verifier.code !5780
  call {:cexpr "n"} boogie_si_record_i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5089, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i15;
  goto $bb6;
$bb5:
  assume !(($i13 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5090, 5} true;
  assume {:verifier.code 0} true;
  call __copy_to_user_overflow();
  assume {:verifier.code 0} true;
  $i16 := $i2;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5092, 3} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
}
const scsi_cmd_ioctl: ref;
axiom (scsi_cmd_ioctl == $sub.ref(0, 462410));
procedure  scsi_cmd_ioctl($p0: ref, $p1: ref, $i2: i32, $i3: i32, $p4: ref)
  returns ($r: i32);
const scsi_ioctl: ref;
axiom (scsi_ioctl == $sub.ref(0, 463442));
procedure  scsi_ioctl($p0: ref, $i1: i32, $p2: ref)
  returns ($r: i32);
const __builtinx_object_size: ref;
axiom (__builtinx_object_size == $sub.ref(0, 464474));
procedure  __builtinx_object_size()
  returns ($r: i32);
procedure  __builtinx_object_size.ref.i32(p.0: ref, p.1: i32)
  returns ($r: i32);
const __might_fault: ref;
axiom (__might_fault == $sub.ref(0, 465506));
procedure  __might_fault($p0: ref, $i1: i32);
const _copy_to_user: ref;
axiom (_copy_to_user == $sub.ref(0, 466538));
procedure  _copy_to_user($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64);
const __copy_to_user_overflow: ref;
axiom (__copy_to_user_overflow == $sub.ref(0, 467570));
procedure  __copy_to_user_overflow();
const read_mode_page: ref;
axiom (read_mode_page == $sub.ref(0, 468602));
procedure  read_mode_page($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i1;
  var $p7: ref;
  var $i8: i8;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $i20: i32;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $i27: i32;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $i32: i32;
  var $i28: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !15622, metadata !5777), !dbg !15623, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !15624, metadata !5777), !dbg !15625, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8239, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8239, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p4, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8240, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8240, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p5, 26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8241, 24} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8241, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8242, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8242, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p7, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8243, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8246, 12} true;
  assume {:verifier.code 0} true;
  $i8 := $trunc.i32.i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8246, 3} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8246, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p9, $i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8247, 3} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8247, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p10, $sub.i8(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8248, 51} true;
  assume {:verifier.code 0} true;
  $p11 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8248, 83} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8248, 83} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8248, 77} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8249, 38} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8249, 38} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8249, 47} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8249, 47} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8249, 63} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p18, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8249, 63} true;
  assume {:verifier.code 0} true;
  $i20 := $load.i32($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8248, 11} true;
  assume {:verifier.code 0} true;
  call $p21 := st_do_scsi($0.ref, $p0, $p11, $i14, 2, $i20, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8250, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8250, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8250, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8251, 19} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8251, 19} true;
  assume {:verifier.code 0} true;
  $p25 := $load.ref($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8251, 28} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p25, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8251, 28} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i32($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8251, 5} true;
  assume {:verifier.code 0} true;
  $i28 := $i27;
  goto $bb6;
$bb5:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8258, 1} true;
  assume {:verifier.code 0} true;
  $r := $i28;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8255, 3} true;
  assume {:verifier.code 0} true;
  call st_release_request($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8256, 17} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8256, 17} true;
  assume {:verifier.code 0} true;
  $p30 := $load.ref($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8256, 26} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p30, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8256, 26} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i32($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8256, 3} true;
  assume {:verifier.code 0} true;
  $i28 := $i32;
  goto $bb6;
}
const write_mode_page: ref;
axiom (write_mode_page == $sub.ref(0, 469634));
procedure  write_mode_page($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $i12: i8;
  var $i13: i32;
  var $i14: i32;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $i19: i64;
  var $i20: i64;
  var $p21: ref;
  var $i22: i8;
  var $i23: i32;
  var $i24: i8;
  var $i25: i32;
  var $i26: i32;
  var $i27: i32;
  var $i28: i8;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $i44: i8;
  var $i45: i32;
  var $i46: i32;
  var $i47: i8;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i64;
  var $p58: ref;
  var $i59: i8;
  var $i60: i32;
  var $i61: i32;
  var $i62: i8;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i64;
  var $p68: ref;
  var $i69: i1;
  var $p70: ref;
  var $i71: i32;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $i78: i32;
  var $i72: i32;
  var $p79: ref;
  var $p80: ref;
  var $i81: i8;
  var $i82: i32;
  var $p83: ref;
  var $i84: i64;
  var $i85: i1;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $i89: i32;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $i94: i32;
  var $i90: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !15669, metadata !5777), !dbg !15670, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !15671, metadata !5777), !dbg !15672, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8267, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8267, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p4, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8268, 3} true;
  assume {:verifier.code 0} true;
  $p5 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8268, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p5, 21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8269, 3} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8269, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p6, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8270, 23} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8270, 23} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8270, 32} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8270, 32} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8270, 39} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p10, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8270, 15} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i8($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8270, 9} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i8.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8270, 46} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i32($i13, 4);
  // WARNING: %15 = add nsw i32 %14, 4, !dbg !5798, !verifier.code !5777
  call {:cexpr "pgo"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 42} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 42} true;
  assume {:verifier.code 0} true;
  $p16 := $load.ref($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 51} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p16, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 51} true;
  assume {:verifier.code 0} true;
  $p18 := $load.ref($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 61} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 81} true;
  assume {:verifier.code 0} true;
  $i20 := $add.i64($i19, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 58} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p18, $mul.ref($i20, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 34} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i8($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 28} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 98} true;
  assume {:verifier.code 0} true;
  $i24 := $trunc.i32.i8($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 91} true;
  assume {:verifier.code 0} true;
  $i25 := $zext.i8.i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 89} true;
  assume {:verifier.code 0} true;
  $i26 := $add.i32($i23, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 120} true;
  assume {:verifier.code 0} true;
  $i27 := $add.i32($i26, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 12} true;
  assume {:verifier.code 0} true;
  $i28 := $trunc.i32.i8($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 3} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8271, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p29, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8272, 11} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8272, 11} true;
  assume {:verifier.code 0} true;
  $p31 := $load.ref($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8272, 20} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p31, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8272, 20} true;
  assume {:verifier.code 0} true;
  $p33 := $load.ref($M.0, $p32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8272, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8273, 11} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8273, 11} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8273, 20} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p35, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8273, 20} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8273, 27} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p37, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8273, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 59} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 59} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 68} true;
  assume {:verifier.code 0} true;
  $p41 := $add.ref($p40, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 68} true;
  assume {:verifier.code 0} true;
  $p42 := $load.ref($M.0, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 75} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p42, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 51} true;
  assume {:verifier.code 0} true;
  $i44 := $load.i8($M.0, $p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 36} true;
  assume {:verifier.code 0} true;
  $i45 := $zext.i8.i32($i44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 82} true;
  assume {:verifier.code 0} true;
  $i46 := $and.i32($i45, 127);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 36} true;
  assume {:verifier.code 0} true;
  $i47 := $trunc.i32.i8($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 11} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 11} true;
  assume {:verifier.code 0} true;
  $p49 := $load.ref($M.0, $p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 20} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p49, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 20} true;
  assume {:verifier.code 0} true;
  $p51 := $load.ref($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 27} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p51, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8274, 34} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p52, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 75} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 75} true;
  assume {:verifier.code 0} true;
  $p54 := $load.ref($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 84} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p54, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 84} true;
  assume {:verifier.code 0} true;
  $p56 := $load.ref($M.0, $p55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 93} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 91} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p56, $mul.ref($i57, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 67} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 52} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 114} true;
  assume {:verifier.code 0} true;
  $i61 := $and.i32($i60, 63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 52} true;
  assume {:verifier.code 0} true;
  $i62 := $trunc.i32.i8($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 11} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 11} true;
  assume {:verifier.code 0} true;
  $p64 := $load.ref($M.0, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 20} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p64, 136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 20} true;
  assume {:verifier.code 0} true;
  $p66 := $load.ref($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 29} true;
  assume {:verifier.code 0} true;
  $i67 := $sext.i32.i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 27} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p66, $mul.ref($i67, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8275, 50} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p68, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 18} true;
  assume {:verifier.code 0} true;
  $i69 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 30} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 30} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i32($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 13} true;
  assume {:verifier.code 0} true;
  $i72 := $i71;
  goto $bb3;
$bb2:
  assume !(($i69 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 58} true;
  assume {:verifier.code 0} true;
  $p73 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 58} true;
  assume {:verifier.code 0} true;
  $p74 := $load.ref($M.0, $p73);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 67} true;
  assume {:verifier.code 0} true;
  $p75 := $add.ref($p74, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 67} true;
  assume {:verifier.code 0} true;
  $p76 := $load.ref($M.0, $p75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 83} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p76, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 83} true;
  assume {:verifier.code 0} true;
  $i78 := $load.i32($M.0, $p77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 13} true;
  assume {:verifier.code 0} true;
  $i72 := $i78;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8276, 13} true;
  assume {:verifier.code 0} true;
  // WARNING: %82 = phi i32 [ %73, %71 ], [ %80, %74 ], !dbg !5854, !verifier.code !5777
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8277, 51} true;
  assume {:verifier.code 0} true;
  $p79 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8277, 83} true;
  assume {:verifier.code 0} true;
  $p80 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8277, 83} true;
  assume {:verifier.code 0} true;
  $i81 := $load.i8($M.0, $p80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8277, 77} true;
  assume {:verifier.code 0} true;
  $i82 := $zext.i8.i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8277, 11} true;
  assume {:verifier.code 0} true;
  call $p83 := st_do_scsi($0.ref, $p0, $p79, $i82, 1, $i72, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8279, 7} true;
  assume {:verifier.code 0} true;
  $i84 := $p2i.ref.i64($p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8279, 29} true;
  assume {:verifier.code 0} true;
  $i85 := $eq.i64($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8279, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8280, 19} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8280, 19} true;
  assume {:verifier.code 0} true;
  $p87 := $load.ref($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8280, 28} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p87, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8280, 28} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i32($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8280, 5} true;
  assume {:verifier.code 0} true;
  $i90 := $i89;
  goto $bb6;
$bb5:
  assume !(($i85 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8287, 1} true;
  assume {:verifier.code 0} true;
  $r := $i90;
  $exn := false;
  return;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8284, 3} true;
  assume {:verifier.code 0} true;
  call st_release_request($p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8285, 17} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8285, 17} true;
  assume {:verifier.code 0} true;
  $p92 := $load.ref($M.0, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8285, 26} true;
  assume {:verifier.code 0} true;
  $p93 := $add.ref($p92, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8285, 26} true;
  assume {:verifier.code 0} true;
  $i94 := $load.i32($M.0, $p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 8285, 3} true;
  assume {:verifier.code 0} true;
  $i90 := $i94;
  goto $bb6;
}
const st_log_options: ref;
axiom (st_log_options == $sub.ref(0, 470666));
procedure  st_log_options($p0: ref, $p1: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i32;
  var $p9: ref;
  var $i10: i8;
  var $i11: i32;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $p15: ref;
  var $i16: i8;
  var $i17: i32;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $i22: i8;
  var $i23: i32;
  var $p24: ref;
  var $i25: i8;
  var $i26: i32;
  var $p27: ref;
  var $i28: i8;
  var $i29: i32;
  var $p30: ref;
  var $i31: i8;
  var $i32: i32;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $i37: i8;
  var $i38: i32;
  var $p39: ref;
  var $i40: i8;
  var $i41: i32;
  var $p42: ref;
  var $i43: i8;
  var $i44: i32;
  var $p45: ref;
  var $i46: i8;
  var $i47: i32;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $i52: i8;
  var $i53: i32;
  var $p54: ref;
  var $i55: i8;
  var $i56: i32;
  var $p57: ref;
  var $i58: i8;
  var $i59: i32;
  var $p60: ref;
  var $i61: i8;
  var $i62: i32;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7875, 7} true;
  assume {:verifier.code 0} true;
  $i2 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7875, 17} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7875, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7876, 11} true;
  assume {:verifier.code 0} true;
  call $p4 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7877, 67} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7877, 67} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7879, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7879, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7879, 54} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p1, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7879, 54} true;
  assume {:verifier.code 0} true;
  $i10 := $load.i8($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7879, 43} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i8.i32($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7879, 83} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p1, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7879, 83} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7879, 72} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7880, 35} true;
  assume {:verifier.code 0} true;
  $p15 := $add.ref($p1, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7880, 35} true;
  assume {:verifier.code 0} true;
  $i16 := $load.i8($M.0, $p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7880, 24} true;
  assume {:verifier.code 0} true;
  $i17 := $zext.i8.i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7877, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32.i32(.str.1, $p6, $p4, .str.191, $i8, $i11, $i14, $i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7881, 15} true;
  assume {:verifier.code 0} true;
  call $p18 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7882, 67} true;
  assume {:verifier.code 0} true;
  $p19 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7882, 67} true;
  assume {:verifier.code 0} true;
  $p20 := $load.ref($M.0, $p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7884, 35} true;
  assume {:verifier.code 0} true;
  $p21 := $add.ref($p0, 286);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7884, 35} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i8($M.0, $p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7884, 24} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i8.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7884, 55} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7884, 55} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i8($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7884, 44} true;
  assume {:verifier.code 0} true;
  $i26 := $zext.i8.i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7884, 74} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p0, 289);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7884, 74} true;
  assume {:verifier.code 0} true;
  $i28 := $load.i8($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7884, 63} true;
  assume {:verifier.code 0} true;
  $i29 := $zext.i8.i32($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7885, 35} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7885, 35} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7885, 24} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7882, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32.i32(.str.1, $p20, $p18, .str.192, $i23, $i26, $i29, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7886, 15} true;
  assume {:verifier.code 0} true;
  call $p33 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7887, 67} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7887, 67} true;
  assume {:verifier.code 0} true;
  $p35 := $load.ref($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7889, 35} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p1, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7889, 35} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i8($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7889, 24} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7889, 67} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7889, 67} true;
  assume {:verifier.code 0} true;
  $i40 := $load.i8($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7889, 56} true;
  assume {:verifier.code 0} true;
  $i41 := $zext.i8.i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7889, 92} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p0, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7889, 92} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i8($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7889, 81} true;
  assume {:verifier.code 0} true;
  $i44 := $zext.i8.i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7890, 35} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p0, 292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7890, 35} true;
  assume {:verifier.code 0} true;
  $i46 := $load.i8($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7890, 24} true;
  assume {:verifier.code 0} true;
  $i47 := $zext.i8.i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7887, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32.i32(.str.1, $p35, $p33, .str.193, $i38, $i41, $i44, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7891, 15} true;
  assume {:verifier.code 0} true;
  call $p48 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7892, 67} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7892, 67} true;
  assume {:verifier.code 0} true;
  $p50 := $load.ref($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7893, 93} true;
  assume {:verifier.code 0} true;
  $p51 := $add.ref($p1, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7893, 93} true;
  assume {:verifier.code 0} true;
  $i52 := $load.i8($M.0, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7893, 82} true;
  assume {:verifier.code 0} true;
  $i53 := $zext.i8.i32($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7894, 35} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7894, 35} true;
  assume {:verifier.code 0} true;
  $i55 := $load.i8($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7894, 24} true;
  assume {:verifier.code 0} true;
  $i56 := $zext.i8.i32($i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7894, 57} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7894, 57} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i8($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7894, 46} true;
  assume {:verifier.code 0} true;
  $i59 := $zext.i8.i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7894, 74} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7894, 74} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i8($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7894, 63} true;
  assume {:verifier.code 0} true;
  $i62 := $zext.i8.i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7892, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32.i32(.str.1, $p50, $p48, .str.194, $i53, $i56, $i59, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7895, 15} true;
  assume {:verifier.code 0} true;
  call $p63 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7896, 67} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7896, 67} true;
  assume {:verifier.code 0} true;
  $p65 := $load.ref($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7897, 47} true;
  assume {:verifier.code 0} true;
  $i66 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7896, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.1, $p65, $p63, .str.195, $i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7898, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7901, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const _copy_from_user: ref;
axiom (_copy_from_user == $sub.ref(0, 471698));
procedure  _copy_from_user($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i64);
const __copy_from_user_overflow: ref;
axiom (__copy_from_user_overflow == $sub.ref(0, 472730));
procedure  __copy_from_user_overflow();
const rw_checks: ref;
axiom (rw_checks == $sub.ref(0, 473762));
procedure  rw_checks($p0: ref, $p1: ref, $i2: i64)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $i5: i32;
  var $i6: i1;
  var $p8: ref;
  var $i9: i8;
  var $i10: i32;
  var $i11: i1;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $i16: i64;
  var $p17: ref;
  var $i18: i32;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $i23: i8;
  var $i24: i32;
  var $i25: i1;
  var $p26: ref;
  var $i27: i8;
  var $i28: i32;
  var $i29: i1;
  var $i30: i1;
  var $p31: ref;
  var $i32: i8;
  var $i33: i32;
  var $i34: i1;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $i39: i8;
  var $i40: i32;
  var $i41: i1;
  var $i42: i32;
  var $i43: i64;
  var $i44: i1;
  var $i45: i64;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $p49: ref;
  var $i50: i32;
  var $i51: i1;
  var $p52: ref;
  var $i53: i32;
  var $i54: i64;
  var $i55: i1;
  var $p56: ref;
  var $i57: i32;
  var $i58: i64;
  var $i59: i1;
  var $p60: ref;
  var $i61: i8;
  var $i62: i32;
  var $i63: i1;
  var $p64: ref;
  var $i65: i8;
  var $i66: i32;
  var $i67: i1;
  var $i68: i32;
  var $i69: i1;
  var $p70: ref;
  var $i7: i64;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.file* %1, i64 0, metadata !15844, metadata !5777), !dbg !15845, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !15846, metadata !5777), !dbg !15847, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6842, 48} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6842, 48} true;
  assume {:verifier.code 0} true;
  $p4 := $load.ref($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6842, 9} true;
  assume {:verifier.code 0} true;
  call $i5 := scsi_block_when_processing_errors($p4);
  // WARNING: %6 = call i32 @scsi_block_when_processing_errors(%struct.scsi_device* %5), !dbg !5789, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6843, 11} true;
  assume {:verifier.code 0} true;
  $i6 := $eq.i32($i5, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6843, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6845, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 6);
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6913, 3} true;
  assume {:verifier.code 0} true;
  $r := $i7;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6849, 27} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6849, 27} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i8($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6849, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i8.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6849, 33} true;
  assume {:verifier.code 0} true;
  $i11 := $ne.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6849, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i11} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i11 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6850, 29} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 625);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6850, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6850, 9} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6850, 35} true;
  assume {:verifier.code 0} true;
  $i15 := $eq.i32($i14, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6850, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i15} true;
  goto $bb7, $bb8;
$bb6:
  assume !(($i11 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb7:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6852, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $sub.i64(0, 123);
  goto $bb9;
$bb8:
  assume !(($i15 == 1));
  assume {:verifier.code 0} true;
  $i16 := $sub.i64(0, 5);
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6855, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $i16;
  goto $bb3;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6859, 38} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6859, 38} true;
  assume {:verifier.code 0} true;
  $i18 := $load.i32($M.0, $p17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6859, 22} true;
  assume {:verifier.code 0} true;
  $i19 := $sext.i32.i64($i18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6859, 27} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 320);
  $p21 := $add.ref($add.ref($p0, 320), $mul.ref($i19, 56));
  $p22 := $add.ref($add.ref($p0, 320), $mul.ref($i19, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6859, 52} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i8($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6859, 7} true;
  assume {:verifier.code 0} true;
  $i24 := $zext.i8.i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6859, 60} true;
  assume {:verifier.code 0} true;
  $i25 := $eq.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6859, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6861, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 6);
  goto $bb3;
$bb12:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6865, 27} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p0, 301);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6865, 27} true;
  assume {:verifier.code 0} true;
  $i27 := $load.i8($M.0, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6865, 7} true;
  assume {:verifier.code 0} true;
  $i28 := $zext.i8.i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6865, 39} true;
  assume {:verifier.code 0} true;
  $i29 := $ne.i32($i28, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6865, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i29} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i29 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6867, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 5);
  goto $bb3;
$bb15:
  assume !(($i29 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6871, 13} true;
  assume {:verifier.code 0} true;
  $i30 := $eq.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6871, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i30} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i30 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6872, 5} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
$bb18:
  assume !(($i30 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6876, 27} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 628);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6876, 27} true;
  assume {:verifier.code 0} true;
  $i32 := $load.i8($M.0, $p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6876, 7} true;
  assume {:verifier.code 0} true;
  $i33 := $zext.i8.i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6876, 34} true;
  assume {:verifier.code 0} true;
  $i34 := $eq.i32($i33, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6876, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb20, $bb21;
$bb20:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6877, 15} true;
  assume {:verifier.code 0} true;
  call $p35 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6878, 65} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6878, 65} true;
  assume {:verifier.code 0} true;
  $p37 := $load.ref($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6878, 5} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p37, $p35, .str.96);
  // WARNING: call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), %struct.scsi_device* %55, i8* %53, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.96, i32 0, i32 0)), !dbg !5843, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6881, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 5);
  goto $bb3;
$bb21:
  assume !(($i34 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6885, 27} true;
  assume {:verifier.code 0} true;
  $p38 := $add.ref($p0, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6885, 27} true;
  assume {:verifier.code 0} true;
  $i39 := $load.i8($M.0, $p38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6885, 7} true;
  assume {:verifier.code 0} true;
  $i40 := $zext.i8.i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6885, 42} true;
  assume {:verifier.code 0} true;
  $i41 := $ne.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6885, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb23, $bb24;
$bb23:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6886, 15} true;
  assume {:verifier.code 0} true;
  call $i42 := switch_partition($p0);
  // WARNING: %63 = call i32 @switch_partition(%struct.scsi_tape* %0), !dbg !5850, !verifier.code !5780
  call {:cexpr "tmp___1"} boogie_si_record_i32($i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6887, 14} true;
  assume {:verifier.code 0} true;
  $i43 := $sext.i32.i64($i42);
  // WARNING: %64 = sext i32 %63 to i64, !dbg !5854, !verifier.code !5780
  call {:cexpr "retval"} boogie_si_record_i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6888, 16} true;
  assume {:verifier.code 0} true;
  $i44 := $slt.i64($i43, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6888, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i44} true;
  goto $bb25, $bb26;
$bb24:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  $i45 := 0;
  goto $bb28;
$bb25:
  assume ($i44 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6889, 7} true;
  assume {:verifier.code 0} true;
  $i7 := $i43;
  goto $bb3;
$bb26:
  assume !(($i44 == 1));
  assume {:verifier.code 0} true;
  goto $bb27;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6893, 3} true;
  assume {:verifier.code 0} true;
  $i45 := $i43;
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 13} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 13} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i32($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 24} true;
  assume {:verifier.code 0} true;
  $i48 := $eq.i32($i47, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 29} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i48} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i48 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 37} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p0, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 37} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i32($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 47} true;
  assume {:verifier.code 0} true;
  $i51 := $sgt.i32($i50, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 52} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb32, $bb33;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 29} true;
  assume {:verifier.code 0} true;
  assume !(($i48 == 1));
  goto $bb31;
$bb31:
  assume {:verifier.code 0} true;
  goto $bb39;
$bb32:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 70} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p0, 644);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 70} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i32($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 56} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 80} true;
  assume {:verifier.code 0} true;
  $i55 := $ugt.i64($i54, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 88} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i55} true;
  goto $bb34, $bb36;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 52} true;
  assume {:verifier.code 0} true;
  assume !(($i51 == 1));
  goto $bb31;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 88} true;
  assume {:verifier.code 0} true;
  assume ($i55 == 1);
  goto $bb35;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6898, 5} true;
  assume {:verifier.code 0} true;
  $i7 := $sub.i64(0, 22);
  goto $bb3;
$bb36:
  assume !(($i55 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 105} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 648);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 105} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 91} true;
  assume {:verifier.code 0} true;
  $i58 := $sext.i32.i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 115} true;
  assume {:verifier.code 0} true;
  $i59 := $ult.i64($i58, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb37, $bb38;
$bb37:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 7} true;
  assume {:verifier.code 0} true;
  assume ($i59 == 1);
  goto $bb35;
$bb38:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6896, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i59 == 1));
  goto $bb31;
$bb39:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 27} true;
  assume {:verifier.code 0} true;
  $p60 := $add.ref($p0, 285);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 27} true;
  assume {:verifier.code 0} true;
  $i61 := $load.i8($M.0, $p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 7} true;
  assume {:verifier.code 0} true;
  $i62 := $zext.i8.i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 40} true;
  assume {:verifier.code 0} true;
  $i63 := $ne.i32($i62, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 46} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i63} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i63 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 69} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 634);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 69} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i8($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 49} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 81} true;
  assume {:verifier.code 0} true;
  $i67 := $eq.i32($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb43, $bb44;
$bb41:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 46} true;
  assume {:verifier.code 0} true;
  assume !(($i63 == 1));
  goto $bb42;
$bb42:
  assume {:verifier.code 0} true;
  goto $bb48;
$bb43:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6903, 15} true;
  assume {:verifier.code 0} true;
  call $i68 := do_door_lock($p0, 1);
  // WARNING: %101 = call i32 @do_door_lock(%struct.scsi_tape* %0, i32 1), !dbg !5891, !verifier.code !5780
  call {:cexpr "tmp___2"} boogie_si_record_i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6904, 17} true;
  assume {:verifier.code 0} true;
  $i69 := $eq.i32($i68, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6904, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i69} true;
  goto $bb45, $bb46;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i67 == 1));
  goto $bb42;
$bb45:
  assume ($i69 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6905, 12} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p0, 634);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6905, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p70, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6906, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume !(($i69 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6909, 3} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6902, 84} true;
  assume {:verifier.code 0} true;
  $i7 := $i45;
  goto $bb3;
}
const setup_buffering: ref;
axiom (setup_buffering == $sub.ref(0, 474794));
procedure  setup_buffering($p0: ref, $p1: ref, $i2: i64, $i3: i32)
  returns ($r: i32)
{
  var $p4: ref;
  var $p5: ref;
  var $i6: i1;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i1;
  var $i12: i32;
  var $i13: i1;
  var $i11: i1;
  var $i14: i32;
  var $p16: ref;
  var $i17: i8;
  var $i18: i32;
  var $i19: i1;
  var $i21: i32;
  var $i22: i1;
  var $i20: i1;
  var $i23: i32;
  var $i15: i32;
  var $i24: i1;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $i29: i32;
  var $i30: i64;
  var $i31: i64;
  var $i32: i64;
  var $i33: i1;
  var $p34: ref;
  var $i35: i16;
  var $i36: i32;
  var $i37: i64;
  var $i38: i1;
  var $i39: i32;
  var $i40: i32;
  var $i41: i1;
  var $i42: i16;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $i47: i16;
  var $p48: ref;
  var $p49: ref;
  var $i50: i16;
  var $i51: i32;
  var $i52: i1;
  var $p53: ref;
  var $i54: i32;
  var $i55: i32;
  var $p56: ref;
  var $p57: ref;
  var $i58: i32;
  var $p59: ref;
  var $i60: i16;
  var $i61: i32;
  var $i62: i32;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $i67: i32;
  var $i68: i32;
  var $p69: ref;
  var $p70: ref;
  var $i71: i16;
  var $i72: i32;
  var $i73: i1;
  var $p74: ref;
  var $i75: i32;
  var $i76: i1;
  var $i77: i32;
  var $p78: ref;
  var $i79: i32;
  var $i80: i1;
  var $i81: i32;
  var $p83: ref;
  var $i84: i32;
  var $i82: i32;
  var $i86: i32;
  var $i87: i1;
  var $p88: ref;
  var $i89: i8;
  var $i90: i32;
  var $i91: i1;
  var $p92: ref;
  var $i93: i8;
  var $i94: i32;
  var $i95: i1;
  var $i85: i32;
  var $p96: ref;
  var $i97: i32;
  var $i98: i1;
  var $p99: ref;
  var $i100: i8;
  var $i101: i32;
  var $i102: i32;
  var $i103: i1;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p108: ref;
  var $i109: i32;
  var $i110: i1;
  var $p111: ref;
  var $i112: i32;
  var $i113: i32;
  var $p114: ref;
  var $i107: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !15974, metadata !5777), !dbg !15975, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !15976, metadata !5777), !dbg !15977, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !15978, metadata !5777), !dbg !15979, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6929, 15} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6929, 15} true;
  assume {:verifier.code 0} true;
  $p5 := $load.ref($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6930, 15} true;
  assume {:verifier.code 0} true;
  $i6 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6930, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6931, 29} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p0, 299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6931, 29} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6931, 9} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6931, 41} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6931, 47} true;
  assume {:verifier.code 0} true;
  $i11 := 0;
  assume {:branchcond $i10} true;
  goto $bb3, $bb4;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6933, 29} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6933, 29} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i8($M.0, $p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6933, 9} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i8.i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6933, 41} true;
  assume {:verifier.code 0} true;
  $i19 := $ne.i32($i18, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6933, 47} true;
  assume {:verifier.code 0} true;
  $i20 := 0;
  assume {:branchcond $i19} true;
  goto $bb7, $bb8;
$bb3:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6931, 50} true;
  assume {:verifier.code 0} true;
  $i12 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6931, 59} true;
  assume {:verifier.code 0} true;
  $i13 := $ne.i32($i12, 0);
  assume {:verifier.code 0} true;
  $i11 := $i13;
  goto $bb5;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6931, 47} true;
  assume {:verifier.code 0} true;
  assume !(($i10 == 1));
  goto $bb5;
$bb5:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6931, 47} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i1.i32($i11);
  // WARNING: %18 = zext i1 %17 to i32, !dbg !5804, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6932, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i14;
  goto $bb6;
$bb6:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6935, 9} true;
  assume {:verifier.code 0} true;
  $i24 := $ne.i32($i15, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6935, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb10, $bb11;
$bb7:
  assume ($i19 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6933, 50} true;
  assume {:verifier.code 0} true;
  $i21 := $M.13;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6933, 59} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:verifier.code 0} true;
  $i20 := $i22;
  goto $bb9;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6933, 47} true;
  assume {:verifier.code 0} true;
  assume !(($i19 == 1));
  goto $bb9;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6933, 47} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i1.i32($i20);
  // WARNING: %29 = zext i1 %28 to i32, !dbg !5817, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i23);
  assume {:verifier.code 0} true;
  $i15 := $i23;
  goto $bb6;
$bb10:
  assume ($i24 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6936, 37} true;
  assume {:verifier.code 0} true;
  $p25 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6936, 37} true;
  assume {:verifier.code 0} true;
  $p26 := $load.ref($M.0, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6936, 46} true;
  assume {:verifier.code 0} true;
  $p27 := $add.ref($p26, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6936, 46} true;
  assume {:verifier.code 0} true;
  $p28 := $load.ref($M.0, $p27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6936, 11} true;
  assume {:verifier.code 0} true;
  call $i29 := queue_dma_alignment($p28);
  // WARNING: %37 = call i32 @queue_dma_alignment(%struct.request_queue* %36), !dbg !5825, !verifier.code !5780
  call {:cexpr "tmp"} boogie_si_record_i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6937, 10} true;
  assume {:verifier.code 0} true;
  $i30 := $sext.i32.i64($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6937, 32} true;
  assume {:verifier.code 0} true;
  $i31 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6937, 30} true;
  assume {:verifier.code 0} true;
  $i32 := $and.i64($i30, $i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6937, 53} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i64($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6937, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb12, $bb13;
$bb11:
  assume !(($i24 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6957, 11} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6957, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p65, 0);
  assume {:verifier.code 0} true;
  goto $bb21;
$bb12:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6938, 65} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p5, 144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6938, 65} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i16($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6938, 36} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i16.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6938, 73} true;
  assume {:verifier.code 0} true;
  $i37 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6939, 45} true;
  assume {:verifier.code 0} true;
  $i38 := $eq.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6939, 45} true;
  assume {:verifier.code 0} true;
  $i39 := $zext.i1.i32($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6938, 11} true;
  assume {:verifier.code 0} true;
  call $i40 := sgl_map_user_pages($p5, $i36, $i37, $i2, $i39);
  // WARNING: %49 = call i32 @sgl_map_user_pages(%struct.st_buffer* %6, i32 %45, i64 %46, i64 %2, i32 %48), !dbg !5839, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6940, 13} true;
  assume {:verifier.code 0} true;
  $i41 := $sgt.i32($i40, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6940, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb14, $bb15;
$bb13:
  assume !(($i33 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6954, 13} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6954, 20} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p64, 0);
  assume {:verifier.code 0} true;
  goto $bb20;
$bb14:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6941, 24} true;
  assume {:verifier.code 0} true;
  $i42 := $trunc.i32.i16($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6941, 15} true;
  assume {:verifier.code 0} true;
  $p43 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6941, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p43, $i42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6942, 15} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p5, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6942, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p44, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6943, 7} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i41 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6944, 15} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6944, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p45, 0);
  assume {:verifier.code 0} true;
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6946, 29} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6946, 29} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i16($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6946, 13} true;
  assume {:verifier.code 0} true;
  $p48 := $add.ref($p5, 146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6946, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p48, $i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6947, 32} true;
  assume {:verifier.code 0} true;
  $p49 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6947, 32} true;
  assume {:verifier.code 0} true;
  $i50 := $load.i16($M.0, $p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6947, 11} true;
  assume {:verifier.code 0} true;
  $i51 := $zext.i16.i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6947, 39} true;
  assume {:verifier.code 0} true;
  $i52 := $ne.i32($i51, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6947, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i52} true;
  goto $bb17, $bb18;
$bb17:
  assume ($i52 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6948, 29} true;
  assume {:verifier.code 0} true;
  $p53 := $add.ref($p0, 676);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6948, 29} true;
  assume {:verifier.code 0} true;
  $i54 := $load.i32($M.0, $p53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6948, 37} true;
  assume {:verifier.code 0} true;
  $i55 := $add.i32($i54, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6948, 14} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p0, 676);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6948, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p56, $i55);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6949, 31} true;
  assume {:verifier.code 0} true;
  $p57 := $add.ref($p0, 680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6949, 31} true;
  assume {:verifier.code 0} true;
  $i58 := $load.i32($M.0, $p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6949, 55} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6949, 55} true;
  assume {:verifier.code 0} true;
  $i60 := $load.i16($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6949, 43} true;
  assume {:verifier.code 0} true;
  $i61 := $zext.i16.i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6949, 41} true;
  assume {:verifier.code 0} true;
  $i62 := $add.i32($i58, $i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6949, 14} true;
  assume {:verifier.code 0} true;
  $p63 := $add.ref($p0, 680);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6949, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p63, $i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6950, 7} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb18:
  assume !(($i52 == 1));
  assume {:verifier.code 0} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6953, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6956, 3} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6959, 28} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p0, 672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6959, 28} true;
  assume {:verifier.code 0} true;
  $i67 := $load.i32($M.0, $p66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6959, 41} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i67, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6959, 8} true;
  assume {:verifier.code 0} true;
  $p69 := $add.ref($p0, 672);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6959, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p69, $i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6960, 28} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p5, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6960, 28} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i16($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6960, 7} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i16.i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6960, 35} true;
  assume {:verifier.code 0} true;
  $i73 := $eq.i32($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6960, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i73} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i73 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6961, 14} true;
  assume {:verifier.code 0} true;
  $p74 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6961, 14} true;
  assume {:verifier.code 0} true;
  $i75 := $load.i32($M.0, $p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6961, 25} true;
  assume {:verifier.code 0} true;
  $i76 := $ne.i32($i75, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6961, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i76} true;
  goto $bb24, $bb25;
$bb23:
  assume !(($i73 == 1));
  assume {:verifier.code 0} true;
  goto $bb48;
$bb24:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 17} true;
  assume {:verifier.code 0} true;
  $i77 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 45} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 45} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i32($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 38} true;
  assume {:verifier.code 0} true;
  $i80 := $sgt.i32($i77, $i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i80} true;
  goto $bb26, $bb27;
$bb25:
  assume !(($i76 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6964, 17} true;
  assume {:verifier.code 0} true;
  $i86 := $trunc.i64.i32($i2);
  // WARNING: %110 = trunc i64 %2 to i32, !dbg !5910, !verifier.code !5780
  call {:cexpr "bufsize"} boogie_si_record_i32($i86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 20} true;
  assume {:verifier.code 0} true;
  $i87 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 25} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i87} true;
  goto $bb30, $bb31;
$bb26:
  assume ($i80 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 58} true;
  assume {:verifier.code 0} true;
  $i81 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 17} true;
  assume {:verifier.code 0} true;
  $i82 := $i81;
  goto $bb28;
$bb27:
  assume !(($i80 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 86} true;
  assume {:verifier.code 0} true;
  $p83 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 86} true;
  assume {:verifier.code 0} true;
  $i84 := $load.i32($M.0, $p83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 17} true;
  assume {:verifier.code 0} true;
  $i82 := $i84;
  goto $bb28;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6962, 17} true;
  assume {:verifier.code 0} true;
  // WARNING: %108 = phi i32 [ %103, %102 ], [ %106, %104 ], !dbg !5905, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6963, 5} true;
  assume {:verifier.code 0} true;
  $i85 := $i82;
  goto $bb29;
$bb29:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6971, 15} true;
  assume {:verifier.code 0} true;
  $p96 := $add.ref($p5, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6971, 15} true;
  assume {:verifier.code 0} true;
  $i97 := $load.i32($M.0, $p96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6971, 27} true;
  assume {:verifier.code 0} true;
  $i98 := $slt.i32($i97, $i85);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6971, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i98} true;
  goto $bb38, $bb39;
$bb30:
  assume ($i87 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 48} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p0, 302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 48} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i8($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 28} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 53} true;
  assume {:verifier.code 0} true;
  $i91 := $ne.i32($i90, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 60} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i91} true;
  goto $bb33, $bb34;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 25} true;
  assume {:verifier.code 0} true;
  assume !(($i87 == 1));
  goto $bb32;
$bb32:
  assume {:verifier.code 0} true;
  goto $bb37;
$bb33:
  assume ($i91 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 84} true;
  assume {:verifier.code 0} true;
  $p92 := $add.ref($p5, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 84} true;
  assume {:verifier.code 0} true;
  $i93 := $load.i8($M.0, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 63} true;
  assume {:verifier.code 0} true;
  $i94 := $zext.i8.i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 92} true;
  assume {:verifier.code 0} true;
  $i95 := $eq.i32($i94, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i95} true;
  goto $bb35, $bb36;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 60} true;
  assume {:verifier.code 0} true;
  assume !(($i91 == 1));
  goto $bb32;
$bb35:
  assume ($i95 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6966, 9} true;
  assume {:verifier.code 0} true;
  call clear_buffer($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6967, 7} true;
  assume {:verifier.code 0} true;
  goto $bb37;
$bb36:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6965, 11} true;
  assume {:verifier.code 0} true;
  assume !(($i95 == 1));
  goto $bb32;
$bb37:
  assume {:verifier.code 0} true;
  $i85 := $i86;
  goto $bb29;
$bb38:
  assume ($i98 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6972, 58} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p0, 291);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6972, 58} true;
  assume {:verifier.code 0} true;
  $i100 := $load.i8($M.0, $p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6972, 47} true;
  assume {:verifier.code 0} true;
  $i101 := $zext.i8.i32($i100);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6972, 17} true;
  assume {:verifier.code 0} true;
  call $i102 := enlarge_buffer($p5, $i85, $i101);
  // WARNING: %133 = call i32 @enlarge_buffer(%struct.st_buffer* %6, i32 %.01, i32 %132), !dbg !5935, !verifier.code !5780
  call {:cexpr "tmp___1"} boogie_si_record_i32($i102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6973, 19} true;
  assume {:verifier.code 0} true;
  $i103 := $eq.i32($i102, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6973, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i103} true;
  goto $bb40, $bb41;
$bb39:
  assume !(($i98 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb40:
  assume ($i103 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6974, 19} true;
  assume {:verifier.code 0} true;
  call $p104 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6975, 69} true;
  assume {:verifier.code 0} true;
  $p105 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6975, 69} true;
  assume {:verifier.code 0} true;
  $p106 := $load.ref($M.0, $p105);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6975, 9} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.89, $p106, $p104, .str.141, $i85);
  // WARNING: call void (i8*, %struct.scsi_device*, i8*, i8*, ...) @sdev_prefix_printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.89, i32 0, i32 0), %struct.scsi_device* %138, i8* %136, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.141, i32 0, i32 0), i32 %.01), !dbg !5946, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6978, 9} true;
  assume {:verifier.code 0} true;
  $i107 := $sub.i32(0, 75);
  goto $bb42;
$bb41:
  assume !(($i103 == 1));
  assume {:verifier.code 0} true;
  goto $bb43;
$bb42:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6994, 3} true;
  assume {:verifier.code 0} true;
  $r := $i107;
  $exn := false;
  return;
$bb43:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6982, 5} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6985, 14} true;
  assume {:verifier.code 0} true;
  $p108 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6985, 14} true;
  assume {:verifier.code 0} true;
  $i109 := $load.i32($M.0, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6985, 25} true;
  assume {:verifier.code 0} true;
  $i110 := $ne.i32($i109, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6985, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i110 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6986, 44} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6986, 44} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i32($M.0, $p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6986, 37} true;
  assume {:verifier.code 0} true;
  $i113 := $sdiv.i32($i85, $i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6986, 13} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p5, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6986, 27} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p114, $i113);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6987, 5} true;
  assume {:verifier.code 0} true;
  goto $bb47;
$bb46:
  assume !(($i110 == 1));
  assume {:verifier.code 0} true;
  goto $bb47;
$bb47:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6990, 3} true;
  assume {:verifier.code 0} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 6960, 38} true;
  assume {:verifier.code 0} true;
  $i107 := 0;
  goto $bb42;
}
const append_to_buffer: ref;
axiom (append_to_buffer == $sub.ref(0, 475826));
procedure  append_to_buffer($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $i6: i64;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $i11: i16;
  var $i12: i32;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i20: i32;
  var $i21: i32;
  var $i22: i16;
  var $i23: i32;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i18: i32;
  var $i19: i32;
  var $i27: i32;
  var $i28: i32;
  var $i16: i32;
  var $i17: i32;
  var $p29: ref;
  var $i30: i16;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $p35: ref;
  var $i36: i16;
  var $i37: i32;
  var $i38: i1;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $i50: i1;
  var $i52: i32;
  var $i51: i32;
  var $p53: ref;
  var $i54: i64;
  var $p55: ref;
  var $i56: i64;
  var $i57: i64;
  var $i58: i32;
  var $i59: i1;
  var $i60: i32;
  var $p61: ref;
  var $i62: i32;
  var $i63: i32;
  var $p64: ref;
  var $i65: i64;
  var $p66: ref;
  var $i67: i32;
  var $i68: i16;
  var $i69: i32;
  var $i70: i1;
  var $p40: ref;
  var $i41: i32;
  var $i42: i32;
  var $i43: i32;
  var $i72: i1;
  var $i73: i32;
  var $i71: i32;
  var $i39: i32;
  var $i74: i1;
  var $i34: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_buffer* %1, i64 0, metadata !16161, metadata !5777), !dbg !16162, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10172, 36} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p1, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10172, 36} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10172, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10172, 26} true;
  assume {:verifier.code 0} true;
  $i6 := $shl.i64(4096, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10172, 12} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i64.i32($i6);
  // WARNING: %8 = trunc i64 %7 to i32, !dbg !5788, !verifier.code !5780
  call {:cexpr "length"} boogie_si_record_i32($i7);
  // WARNING: call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !16169, metadata !5777), !dbg !16170, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10174, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10174, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  // WARNING: %10 = load i32, i32* %9, align 4, !dbg !5793, !verifier.code !5780
  call {:cexpr "offset"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 20} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p1, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i16($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i16.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $sgt.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 43} true;
  assume {:verifier.code 0} true;
  $i14 := $sge.i32($i9, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 33} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i1($i13, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 33} true;
  assume {:verifier.code 0} true;
  $i16, $i17 := 0, $i9;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 33} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $i9, 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 33} true;
  assume {:verifier.code 0} true;
  assume !(($i15 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10181, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10177, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $sub.i32($i18, $i7);
  // WARNING: %17 = sub nsw i32 %.0215, %8, !dbg !5803, !verifier.code !5780
  call {:cexpr "offset"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10178, 9} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i19, 1);
  // WARNING: %18 = add nsw i32 %.0414, 1, !dbg !5804, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 20} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i16($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i16.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 29} true;
  assume {:verifier.code 0} true;
  $i24 := $sgt.i32($i23, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 43} true;
  assume {:verifier.code 0} true;
  $i25 := $sge.i32($i20, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 33} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i1($i24, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 33} true;
  assume {:verifier.code 0} true;
  $i18, $i19, $i27, $i28 := $i20, $i21, $i21, $i20;
  assume {:branchcond $i26} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 33} true;
  assume {:verifier.code 0} true;
  assume ($i26 == 1);
  goto $bb4;
$bb7:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10180, 33} true;
  assume {:verifier.code 0} true;
  $i16, $i17 := $i27, $i28;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10186, 20} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p1, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10186, 20} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i16($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10186, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i16.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10186, 29} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i31, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10186, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10187, 5} true;
  assume {:verifier.code 0} true;
  call $i33 := printk.ref(.str.142);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10188, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32(0, 5);
  goto $bb11;
$bb10:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10223, 1} true;
  assume {:verifier.code 0} true;
  $r := $i34;
  $exn := false;
  return;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 20} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p1, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 20} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i16($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i16.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 29} true;
  assume {:verifier.code 0} true;
  $i38 := $sgt.i32($i37, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 33} true;
  assume {:verifier.code 0} true;
  $i39 := $i2;
  assume {:branchcond $i38} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 33} true;
  assume {:verifier.code 0} true;
  $p40, $i41, $i42, $i43 := $p0, $i17, $i2, $i16;
  goto $bb16;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 33} true;
  assume {:verifier.code 0} true;
  assume !(($i38 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb16:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 45} true;
  assume {:verifier.code 0} true;
  $i72 := $sgt.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 7} true;
  assume {:verifier.code 0} true;
  $i73 := $i42;
  assume {:branchcond $i72} true;
  goto $bb26, $bb27;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10194, 19} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p1, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10194, 19} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10194, 36} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10194, 34} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p45, $mul.ref($i46, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10194, 10} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10195, 27} true;
  assume {:verifier.code 0} true;
  $i49 := $sub.i32($i7, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10195, 18} true;
  assume {:verifier.code 0} true;
  $i50 := $slt.i32($i42, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10195, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10195, 9} true;
  assume {:verifier.code 0} true;
  $i51 := $i42;
  goto $bb20;
$bb19:
  assume !(($i50 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10195, 56} true;
  assume {:verifier.code 0} true;
  $i52 := $sub.i32($i7, $i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10195, 9} true;
  assume {:verifier.code 0} true;
  $i51 := $i52;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10195, 9} true;
  assume {:verifier.code 0} true;
  // WARNING: %50 = phi i32 [ %.038, %46 ], [ %48, %47 ], !dbg !5834, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10196, 9} true;
  assume {:verifier.code 0} true;
  call $p53 := lowmem_page_address($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10197, 34} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10197, 32} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p53, $mul.ref($i54, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10197, 79} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10197, 13} true;
  assume {:verifier.code 0} true;
  call $i57 := copy_from_user($p55, $p40, $i56);
  // WARNING: %55 = call i64 @copy_from_user(i8* %53, i8* %.0110, i64 %54), !dbg !5844, !verifier.code !5780
  call {:cexpr "tmp___0"} boogie_si_record_i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10198, 9} true;
  assume {:verifier.code 0} true;
  $i58 := $trunc.i64.i32($i57);
  // WARNING: %56 = trunc i64 %55 to i32, !dbg !5847, !verifier.code !5780
  call {:cexpr "res"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10199, 11} true;
  assume {:verifier.code 0} true;
  $i59 := $ne.i32($i58, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10199, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10200, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32(0, 14);
  goto $bb11;
$bb22:
  assume !(($i59 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10204, 23} true;
  assume {:verifier.code 0} true;
  $i60 := $sub.i32($i42, $i51);
  // WARNING: %61 = sub nsw i32 %.038, %50, !dbg !5855, !verifier.code !5780
  call {:cexpr "do_count"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10205, 32} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10205, 32} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10205, 45} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i32($i62, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10205, 10} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p1, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10205, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p64, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10206, 15} true;
  assume {:verifier.code 0} true;
  $i65 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10206, 13} true;
  assume {:verifier.code 0} true;
  $p66 := $add.ref($p40, $mul.ref($i65, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %67, i64 0, metadata !16159, metadata !5777), !dbg !16160, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10208, 9} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i32($i43, 1);
  // WARNING: %68 = add nsw i32 %.157, 1, !dbg !5862, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 20} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i16($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 7} true;
  assume {:verifier.code 0} true;
  $i69 := $zext.i16.i32($i68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 29} true;
  assume {:verifier.code 0} true;
  $i70 := $sgt.i32($i69, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 33} true;
  assume {:verifier.code 0} true;
  $p40, $i41, $i42, $i43, $i71 := $p66, 0, $i60, $i67, $i60;
  assume {:branchcond $i70} true;
  goto $bb24, $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 33} true;
  assume {:verifier.code 0} true;
  assume ($i70 == 1);
  goto $bb16;
$bb25:
  assume !(($i70 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 33} true;
  assume {:verifier.code 0} true;
  $i39 := $i71;
  goto $bb15;
$bb26:
  assume ($i72 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10211, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb27:
  assume !(($i72 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10210, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $i73;
  goto $bb15;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10216, 16} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10216, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i74} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i74 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10217, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32(0, 5);
  goto $bb11;
$bb30:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10221, 3} true;
  assume {:verifier.code 0} true;
  $i34 := 0;
  goto $bb11;
}
const move_buffer_data: ref;
axiom (move_buffer_data == $sub.ref(0, 476858));
procedure  move_buffer_data($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i64;
  var $i5: i64;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $i9: i32;
  var $i10: i32;
  var $p11: ref;
  var $i12: i16;
  var $i13: i32;
  var $i14: i1;
  var $i19: i1;
  var $i20: i32;
  var $i21: i32;
  var $i24: i32;
  var $i25: i32;
  var $i26: i16;
  var $i27: i32;
  var $i28: i1;
  var $i17: i32;
  var $i18: i32;
  var $i29: i32;
  var $i30: i32;
  var $i15: i32;
  var $i16: i32;
  var $i22: i32;
  var $i23: i32;
  var $p31: ref;
  var $p32: ref;
  var $i33: i1;
  var $p39: ref;
  var $p40: ref;
  var $i41: i64;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $i50: i32;
  var $i51: i1;
  var $i52: i32;
  var $p53: ref;
  var $p54: ref;
  var $i55: i64;
  var $p56: ref;
  var $i57: i64;
  var $p58: ref;
  var $i59: i64;
  var $p60: ref;
  var $i61: i32;
  var $i62: i1;
  var $i63: i32;
  var $i64: i32;
  var $i65: i32;
  var $i66: i32;
  var $i67: i1;
  var $i68: i32;
  var $i69: i32;
  var $i70: i32;
  var $i71: i32;
  var $i72: i1;
  var $i34: i32;
  var $i35: i32;
  var $i36: i32;
  var $i37: i32;
  var $i38: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_buffer* %0, i64 0, metadata !16258, metadata !5777), !dbg !16259, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !16260, metadata !5777), !dbg !16261, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10309, 36} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10309, 36} true;
  assume {:verifier.code 0} true;
  $i3 := $load.i32($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10309, 26} true;
  assume {:verifier.code 0} true;
  $i4 := $zext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10309, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $shl.i64(4096, $i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10309, 12} true;
  assume {:verifier.code 0} true;
  $i6 := $trunc.i64.i32($i5);
  // WARNING: %7 = trunc i64 %6 to i32, !dbg !5788, !verifier.code !5780
  call {:cexpr "length"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10310, 14} true;
  assume {:verifier.code 0} true;
  $i7 := $eq.i32($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10310, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10311, 5} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10374, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10315, 18} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10315, 18} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10315, 31} true;
  assume {:verifier.code 0} true;
  $i10 := $sub.i32($i9, $i1);
  // WARNING: %14 = sub nsw i32 %13, %1, !dbg !5797, !verifier.code !5780
  call {:cexpr "total"} boogie_si_record_i32($i10);
  // WARNING: call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !16277, metadata !5777), !dbg !16278, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 20} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 20} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i16($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 7} true;
  assume {:verifier.code 0} true;
  $i13 := $zext.i16.i32($i12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $sgt.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 7} true;
  assume {:verifier.code 0} true;
  $i15, $i16 := 0, 0;
  assume {:branchcond $i14} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 7} true;
  assume {:verifier.code 0} true;
  $i17, $i18 := $i1, 0;
  goto $bb8;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i14 == 1));
  goto $bb7;
$bb7:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb8:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10329, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10320, 18} true;
  assume {:verifier.code 0} true;
  $i19 := $slt.i32($i17, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10320, 7} true;
  assume {:verifier.code 0} true;
  $i20, $i21 := $i18, $i17;
  assume {:branchcond $i19} true;
  goto $bb10, $bb11;
$bb10:
  assume ($i19 == 1);
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10321, 5} true;
  assume {:verifier.code 0} true;
  $i22, $i23 := $i20, $i21;
  goto $bb12;
$bb11:
  assume !(($i19 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  // WARNING: %.16 = phi i32 [ %.01.lcssa10, %21 ], [ %.05.lcssa, %31 ], !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10335, 10} true;
  assume {:verifier.code 0} true;
  $p31 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10335, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p31, $i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10336, 10} true;
  assume {:verifier.code 0} true;
  $p32 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10336, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p32, $i10);
  // WARNING: store i32 %14, i32* %34, align 4, !dbg !5823, !verifier.code !5780
  // WARNING: call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !16303, metadata !5777), !dbg !16304, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10366, 13} true;
  assume {:verifier.code 0} true;
  $i33 := $sgt.i32($i10, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10366, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb17, $bb18;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10325, 19} true;
  assume {:verifier.code 0} true;
  $i24 := $sub.i32($i17, $i6);
  // WARNING: %24 = sub nsw i32 %.0120, %7, !dbg !5812, !verifier.code !5780
  call {:cexpr "offset"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10326, 21} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i32($i18, 1);
  // WARNING: %25 = add nsw i32 %.0219, 1, !dbg !5813, !verifier.code !5780
  call {:cexpr "src_seg"} boogie_si_record_i32($i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 20} true;
  assume {:verifier.code 0} true;
  $i26 := $load.i16($M.0, $p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 7} true;
  assume {:verifier.code 0} true;
  $i27 := $zext.i16.i32($i26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 29} true;
  assume {:verifier.code 0} true;
  $i28 := $sgt.i32($i27, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 7} true;
  assume {:verifier.code 0} true;
  $i17, $i18, $i29, $i30 := $i24, $i25, $i17, $i25;
  assume {:branchcond $i28} true;
  goto $bb14, $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 7} true;
  assume {:verifier.code 0} true;
  assume ($i28 == 1);
  goto $bb8;
$bb15:
  assume !(($i28 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 7} true;
  assume {:verifier.code 0} true;
  $i15, $i16 := $i29, $i30;
  goto $bb7;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10328, 31} true;
  assume {:verifier.code 0} true;
  $i22, $i23 := $i16, $i15;
  goto $bb12;
$bb17:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10366, 7} true;
  assume {:verifier.code 0} true;
  $i34, $i35, $i36, $i37, $i38 := $i10, $i22, 0, $i23, 0;
  goto $bb20;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10366, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i33 == 1));
  goto $bb19;
$bb19:
  assume {:verifier.code 0} true;
  goto $bb33;
$bb20:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10367, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10341, 20} true;
  assume {:verifier.code 0} true;
  $p39 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10341, 20} true;
  assume {:verifier.code 0} true;
  $p40 := $load.ref($M.0, $p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10341, 37} true;
  assume {:verifier.code 0} true;
  $i41 := $sext.i32.i64($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10341, 35} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p40, $mul.ref($i41, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10341, 11} true;
  assume {:verifier.code 0} true;
  $p43 := $load.ref($M.0, $p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10342, 20} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10342, 20} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10342, 37} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10342, 35} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p45, $mul.ref($i46, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10342, 11} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10343, 18} true;
  assume {:verifier.code 0} true;
  $i49 := $sub.i32($i6, $i38);
  // WARNING: %47 = sub nsw i32 %7, %.1914, !dbg !5843, !verifier.code !5780
  call {:cexpr "_min1"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10344, 18} true;
  assume {:verifier.code 0} true;
  $i50 := $sub.i32($i6, $i37);
  // WARNING: %48 = sub nsw i32 %7, %.315, !dbg !5846, !verifier.code !5780
  call {:cexpr "_min2"} boogie_si_record_i32($i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10345, 17} true;
  assume {:verifier.code 0} true;
  $i51 := $slt.i32($i49, $i50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10345, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i51} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i51 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10345, 11} true;
  assume {:verifier.code 0} true;
  $i52 := $i49;
  goto $bb24;
$bb23:
  assume !(($i51 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10345, 11} true;
  assume {:verifier.code 0} true;
  $i52 := $i50;
  goto $bb24;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10345, 11} true;
  assume {:verifier.code 0} true;
  // WARNING: %53 = phi i32 [ %47, %50 ], [ %48, %51 ], !dbg !5855, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10346, 13} true;
  assume {:verifier.code 0} true;
  call $p53 := lowmem_page_address($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10347, 13} true;
  assume {:verifier.code 0} true;
  call $p54 := lowmem_page_address($p43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10348, 23} true;
  assume {:verifier.code 0} true;
  $i55 := $sext.i32.i64($i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10348, 21} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p54, $mul.ref($i55, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10348, 77} true;
  assume {:verifier.code 0} true;
  $i57 := $sext.i32.i64($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10348, 75} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p53, $mul.ref($i57, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10349, 13} true;
  assume {:verifier.code 0} true;
  $i59 := $sext.i32.i64($i52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10348, 3} true;
  assume {:verifier.code 0} true;
  call $p60 := __memmove($p56, $p58, $i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10350, 27} true;
  assume {:verifier.code 0} true;
  $i61 := $add.i32($i37, $i52);
  // WARNING: %62 = add nsw i32 %.315, %53, !dbg !5871, !verifier.code !5780
  call {:cexpr "src_offset"} boogie_si_record_i32($i61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10351, 18} true;
  assume {:verifier.code 0} true;
  $i62 := $sge.i32($i61, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10351, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i62} true;
  goto $bb25, $bb26;
$bb25:
  assume ($i62 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10352, 23} true;
  assume {:verifier.code 0} true;
  $i63 := $add.i32($i35, 1);
  // WARNING: %65 = add nsw i32 %.217, 1, !dbg !5875, !verifier.code !5780
  call {:cexpr "src_seg"} boogie_si_record_i32($i63);
  // WARNING: call void @llvm.dbg.value(metadata i32 %65, i64 0, metadata !16279, metadata !5777), !dbg !16280, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10354, 3} true;
  assume {:verifier.code 0} true;
  $i64, $i65 := 0, $i63;
  goto $bb27;
$bb26:
  assume !(($i62 == 1));
  assume {:verifier.code 0} true;
  $i64, $i65 := $i61, $i35;
  goto $bb27;
$bb27:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10357, 27} true;
  assume {:verifier.code 0} true;
  $i66 := $add.i32($i38, $i52);
  // WARNING: %68 = add nsw i32 %.1914, %53, !dbg !5878, !verifier.code !5780
  call {:cexpr "dst_offset"} boogie_si_record_i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10358, 18} true;
  assume {:verifier.code 0} true;
  $i67 := $sge.i32($i66, $i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10358, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i67} true;
  goto $bb28, $bb29;
$bb28:
  assume ($i67 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10359, 23} true;
  assume {:verifier.code 0} true;
  $i68 := $add.i32($i36, 1);
  // WARNING: %71 = add nsw i32 %.1416, 1, !dbg !5882, !verifier.code !5780
  call {:cexpr "dst_seg"} boogie_si_record_i32($i68);
  // WARNING: call void @llvm.dbg.value(metadata i32 %71, i64 0, metadata !16305, metadata !5777), !dbg !16306, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10361, 3} true;
  assume {:verifier.code 0} true;
  $i69, $i70 := 0, $i68;
  goto $bb30;
$bb29:
  assume !(($i67 == 1));
  assume {:verifier.code 0} true;
  $i69, $i70 := $i66, $i36;
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10364, 17} true;
  assume {:verifier.code 0} true;
  $i71 := $sub.i32($i34, $i52);
  // WARNING: %74 = sub nsw i32 %.018, %53, !dbg !5885, !verifier.code !5780
  call {:cexpr "total"} boogie_si_record_i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10366, 13} true;
  assume {:verifier.code 0} true;
  $i72 := $sgt.i32($i71, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10366, 7} true;
  assume {:verifier.code 0} true;
  $i34, $i35, $i36, $i37, $i38 := $i71, $i65, $i70, $i64, $i69;
  assume {:branchcond $i72} true;
  goto $bb31, $bb32;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10366, 7} true;
  assume {:verifier.code 0} true;
  assume ($i72 == 1);
  goto $bb20;
$bb32:
  assume !(($i72 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10366, 7} true;
  assume {:verifier.code 0} true;
  goto $bb19;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10372, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
}
const release_buffering: ref;
axiom (release_buffering == $sub.ref(0, 477890));
procedure  release_buffering($p0: ref, $i1: i32)
{
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $i5: i16;
  var $i6: i32;
  var $i7: i1;
  var $p8: ref;
  var $i9: i16;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $p13: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !16372, metadata !5777), !dbg !16373, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7002, 15} true;
  assume {:verifier.code 0} true;
  $p2 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7002, 15} true;
  assume {:verifier.code 0} true;
  $p3 := $load.ref($M.0, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7003, 28} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7003, 28} true;
  assume {:verifier.code 0} true;
  $i5 := $load.i16($M.0, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7003, 7} true;
  assume {:verifier.code 0} true;
  $i6 := $zext.i16.i32($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7003, 35} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7003, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7004, 61} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7004, 61} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i16($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7004, 32} true;
  assume {:verifier.code 0} true;
  $i10 := $zext.i16.i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7004, 5} true;
  assume {:verifier.code 0} true;
  call $i11 := sgl_unmap_user_pages($p3, $i10, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7005, 11} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7005, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7006, 11} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p3, 146);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7006, 19} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i16($M.0, $p13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7007, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7010, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const sgl_unmap_user_pages: ref;
axiom (sgl_unmap_user_pages == $sub.ref(0, 478922));
procedure  sgl_unmap_user_pages($p0: ref, $i1: i32, $i2: i32)
  returns ($r: i32)
{
  var $i3: i1;
  var $p5: ref;
  var $p6: ref;
  var $i7: i64;
  var $p8: ref;
  var $p9: ref;
  var $i10: i1;
  var $i11: i32;
  var $i12: i1;
  var $i4: i32;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_buffer* %0, i64 0, metadata !16398, metadata !5777), !dbg !16399, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !16400, metadata !5777), !dbg !16401, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !16402, metadata !5777), !dbg !16403, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11406, 24} true;
  assume {:verifier.code 0} true;
  $i3 := $ult.i32(0, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11406, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11406, 7} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11406, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i3 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb11;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11407, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11397, 18} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11397, 18} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11397, 33} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11397, 31} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p6, $mul.ref($i7, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11397, 10} true;
  assume {:verifier.code 0} true;
  $p9 := $load.ref($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11398, 15} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11398, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb6, $bb7;
$bb6:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11399, 5} true;
  assume {:verifier.code 0} true;
  call SetPageDirty($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11400, 3} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11403, 3} true;
  assume {:verifier.code 0} true;
  call put_page($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11404, 9} true;
  assume {:verifier.code 0} true;
  $i11 := $add.i32($i4, 1);
  // WARNING: %15 = add nsw i32 %.01, 1, !dbg !5804, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11406, 24} true;
  assume {:verifier.code 0} true;
  $i12 := $ult.i32($i11, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11406, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $i11;
  assume {:branchcond $i12} true;
  goto $bb9, $bb10;
$bb9:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11406, 7} true;
  assume {:verifier.code 0} true;
  assume ($i12 == 1);
  goto $bb4;
$bb10:
  assume !(($i12 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11406, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11411, 31} true;
  assume {:verifier.code 0} true;
  $p13 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11411, 31} true;
  assume {:verifier.code 0} true;
  $p14 := $load.ref($M.0, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11411, 9} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11411, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11412, 9} true;
  assume {:verifier.code 0} true;
  $p16 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11412, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p16, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11413, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
}
const SetPageDirty: ref;
axiom (SetPageDirty == $sub.ref(0, 479954));
procedure  SetPageDirty($p0: ref)
{
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5011, 52} true;
  assume {:verifier.code 0} true;
  $p1 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5011, 3} true;
  assume {:verifier.code 0} true;
  call set_bit(4, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 5012, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const put_page: ref;
axiom (put_page == $sub.ref(0, 480986));
procedure  put_page($p0: ref);
const set_bit: ref;
axiom (set_bit == $sub.ref(0, 482018));
procedure  set_bit($i0: i64, $p1: ref)
{
$bb0:
  call devirtbounce.8(0, $p1, $i0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4426, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __memmove: ref;
axiom (__memmove == $sub.ref(0, 483050));
procedure  __memmove($p0: ref, $p1: ref, $i2: i64)
  returns ($r: ref);
const sgl_map_user_pages: ref;
axiom (sgl_map_user_pages == $sub.ref(0, 484082));
procedure  sgl_map_user_pages($p0: ref, $i1: i32, $i2: i64, $i3: i64, $i4: i32)
  returns ($r: i32)
{
  var $i5: i64;
  var $i6: i64;
  var $i7: i64;
  var $i8: i64;
  var $i9: i32;
  var $i10: i32;
  var $i11: i32;
  var $p12: ref;
  var $i13: i64;
  var $i14: i1;
  var $i16: i1;
  var $i17: i1;
  var $i18: i64;
  var $i19: i64;
  var $p20: ref;
  var $p21: ref;
  var $i22: i64;
  var $i23: i1;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $i28: i64;
  var $i29: i1;
  var $i30: i32;
  var $i31: i64;
  var $i32: i32;
  var $i33: i1;
  var $i34: i1;
  var $i36: i32;
  var $i37: i1;
  var $i35: i32;
  var $i38: i64;
  var $p39: ref;
  var $p40: ref;
  var $i41: i1;
  var $i42: i1;
  var $i44: i64;
  var $p45: ref;
  var $p46: ref;
  var $i47: i32;
  var $i48: i1;
  var $i43: i32;
  var $i49: i32;
  var $p50: ref;
  var $i15: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_buffer* %0, i64 0, metadata !16451, metadata !5777), !dbg !16452, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !16453, metadata !5777), !dbg !16454, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !16455, metadata !5777), !dbg !16456, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !16457, metadata !5777), !dbg !16458, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11317, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i64($i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11317, 26} true;
  assume {:verifier.code 0} true;
  $i6 := $add.i64($i5, 4095);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11317, 36} true;
  assume {:verifier.code 0} true;
  $i7 := $lshr.i64($i6, 12);
  // WARNING: %8 = lshr i64 %7, 12, !dbg !5792, !verifier.code !5780
  call {:cexpr "end"} boogie_si_record_i64($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11318, 17} true;
  assume {:verifier.code 0} true;
  $i8 := $lshr.i64($i2, 12);
  // WARNING: %9 = lshr i64 %2, 12, !dbg !5795, !verifier.code !5780
  call {:cexpr "start"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11319, 29} true;
  assume {:verifier.code 0} true;
  $i9 := $trunc.i64.i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11319, 50} true;
  assume {:verifier.code 0} true;
  $i10 := $trunc.i64.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11319, 48} true;
  assume {:verifier.code 0} true;
  $i11 := $sub.i32($i9, $i10);
  // WARNING: %12 = sub i32 %10, %11, !dbg !5800, !verifier.code !5780
  call {:cexpr "nr_pages"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11320, 19} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11321, 13} true;
  assume {:verifier.code 0} true;
  $i13 := $add.i64($i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11321, 21} true;
  assume {:verifier.code 0} true;
  $i14 := $ult.i64($i13, $i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11321, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11322, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0, 22);
  goto $bb3;
$bb2:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11386, 1} true;
  assume {:verifier.code 0} true;
  $r := $i15;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11326, 31} true;
  assume {:verifier.code 0} true;
  $i16 := $ugt.i32($i11, $i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11326, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i16 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11327, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0, 12);
  goto $bb3;
$bb6:
  assume !(($i16 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11331, 13} true;
  assume {:verifier.code 0} true;
  $i17 := $eq.i64($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11331, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i17} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i17 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11332, 5} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  goto $bb3;
$bb9:
  assume !(($i17 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11336, 17} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i32.i64($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11336, 43} true;
  assume {:verifier.code 0} true;
  $i19 := $mul.i64($i18, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11336, 9} true;
  assume {:verifier.code 0} true;
  call $p20 := kmalloc($i19, 208);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11337, 11} true;
  assume {:verifier.code 0} true;
  $p21 := $bitcast.ref.ref($p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11338, 7} true;
  assume {:verifier.code 0} true;
  $i22 := $p2i.ref.i64($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11338, 29} true;
  assume {:verifier.code 0} true;
  $i23 := $eq.i64($i22, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11338, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i23} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i23 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11339, 5} true;
  assume {:verifier.code 0} true;
  $i15 := $sub.i32(0, 12);
  goto $bb3;
$bb12:
  assume !(($i23 == 1));
  assume {:verifier.code 0} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11343, 13} true;
  assume {:verifier.code 0} true;
  call $p24 := get_current();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11344, 13} true;
  assume {:verifier.code 0} true;
  call $p25 := get_current();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11345, 55} true;
  assume {:verifier.code 0} true;
  $p26 := $add.ref($p24, 1976);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11345, 55} true;
  assume {:verifier.code 0} true;
  $p27 := $load.ref($M.15, $p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11345, 66} true;
  assume {:verifier.code 0} true;
  $i28 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11346, 40} true;
  assume {:verifier.code 0} true;
  $i29 := $eq.i32($i4, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11346, 40} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i1.i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11345, 13} true;
  assume {:verifier.code 0} true;
  call $i31 := get_user_pages_unlocked($p25, $p27, $i2, $i28, $i30, 0, $p21);
  // WARNING: %43 = call i64 @get_user_pages_unlocked(%struct.task_struct* %37, %struct.mm_struct* %39, i64 %2, i64 %40, i32 %42, i32 0, %struct.page** %30), !dbg !5846, !verifier.code !5780
  call {:cexpr "tmp___2"} boogie_si_record_i64($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11347, 9} true;
  assume {:verifier.code 0} true;
  $i32 := $trunc.i64.i32($i31);
  // WARNING: %44 = trunc i64 %43 to i32, !dbg !5849, !verifier.code !5780
  call {:cexpr "res"} boogie_si_record_i32($i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11348, 11} true;
  assume {:verifier.code 0} true;
  $i33 := $slt.i32($i32, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11348, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb14, $bb15;
$bb14:
  assume ($i33 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11349, 5} true;
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume !(($i33 == 1));
  assume {:verifier.code 0} true;
  goto $bb17;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11367, 11} true;
  assume {:verifier.code 0} true;
  $i41 := $sgt.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11367, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i41} true;
  goto $bb26, $bb27;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11358, 9} true;
  assume {:verifier.code 0} true;
  $i34 := $slt.i32(0, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i34} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i34 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  $i35 := 0;
  goto $bb21;
$bb19:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i34 == 1));
  goto $bb20;
$bb20:
  assume {:verifier.code 0} true;
  goto $bb25;
$bb21:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11359, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11356, 9} true;
  assume {:verifier.code 0} true;
  $i36 := $add.i32($i35, 1);
  // WARNING: %51 = add nsw i32 %.025, 1, !dbg !5862, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11358, 9} true;
  assume {:verifier.code 0} true;
  $i37 := $slt.i32($i36, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  $i35 := $i36;
  assume {:branchcond $i37} true;
  goto $bb23, $bb24;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  assume ($i37 == 1);
  goto $bb21;
$bb24:
  assume !(($i37 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11358, 7} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb25:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11363, 25} true;
  assume {:verifier.code 0} true;
  $i38 := $and.i64($i2, 4095);
  $p39 := $add.ref($add.ref($p0, 104), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11363, 17} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i64($M.0, $p39, $i38);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11364, 9} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11364, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.ref($M.0, $p40, $p20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11365, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i11;
  goto $bb3;
$bb26:
  assume ($i41 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11374, 11} true;
  assume {:verifier.code 0} true;
  $i42 := $slt.i32(0, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11374, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i42} true;
  goto $bb28, $bb29;
$bb27:
  assume !(($i41 == 1));
  assume {:verifier.code 0} true;
  $i49 := $i32;
  goto $bb36;
$bb28:
  assume ($i42 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11374, 9} true;
  assume {:verifier.code 0} true;
  $i43 := 0;
  goto $bb31;
$bb29:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11374, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i42 == 1));
  goto $bb30;
$bb30:
  assume {:verifier.code 0} true;
  goto $bb35;
$bb31:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11375, 7} true;
  assume {:verifier.code 0} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11371, 24} true;
  assume {:verifier.code 0} true;
  $i44 := $sext.i32.i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11371, 22} true;
  assume {:verifier.code 0} true;
  $p45 := $add.ref($p21, $mul.ref($i44, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11371, 14} true;
  assume {:verifier.code 0} true;
  $p46 := $load.ref($M.0, $p45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11371, 5} true;
  assume {:verifier.code 0} true;
  call put_page($p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11372, 11} true;
  assume {:verifier.code 0} true;
  $i47 := $add.i32($i43, 1);
  // WARNING: %67 = add nsw i32 %.014, 1, !dbg !5883, !verifier.code !5780
  call {:cexpr "j"} boogie_si_record_i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11374, 11} true;
  assume {:verifier.code 0} true;
  $i48 := $slt.i32($i47, $i32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11374, 9} true;
  assume {:verifier.code 0} true;
  $i43 := $i47;
  assume {:branchcond $i48} true;
  goto $bb33, $bb34;
$bb33:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11374, 9} true;
  assume {:verifier.code 0} true;
  assume ($i48 == 1);
  goto $bb31;
$bb34:
  assume !(($i48 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11374, 9} true;
  assume {:verifier.code 0} true;
  goto $bb30;
$bb35:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11380, 3} true;
  assume {:verifier.code 0} true;
  $i49 := 0;
  goto $bb36;
$bb36:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11383, 9} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11383, 3} true;
  assume {:verifier.code 0} true;
  call kfree($p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11384, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i49;
  goto $bb3;
}
const clear_buffer: ref;
axiom (clear_buffer == $sub.ref(0, 485114));
procedure  clear_buffer($p0: ref)
{
  var $p1: ref;
  var $i2: i16;
  var $i3: i32;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $i8: i64;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $i13: i32;
  var $i14: i64;
  var $i15: i64;
  var $i16: i32;
  var $i17: i16;
  var $i18: i32;
  var $i19: i1;
  var $i5: i32;
  var $p20: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_buffer* %0, i64 0, metadata !16563, metadata !5777), !dbg !16564, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 20} true;
  assume {:verifier.code 0} true;
  $i2 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $zext.i16.i32($i2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 29} true;
  assume {:verifier.code 0} true;
  $i4 := $sgt.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 7} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i4 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10126, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10121, 61} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10121, 61} true;
  assume {:verifier.code 0} true;
  $p7 := $load.ref($M.0, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10121, 78} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10121, 76} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p7, $mul.ref($i8, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10121, 52} true;
  assume {:verifier.code 0} true;
  $p10 := $load.ref($M.0, $p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10121, 9} true;
  assume {:verifier.code 0} true;
  call $p11 := lowmem_page_address($p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10122, 35} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10122, 35} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i32($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10122, 25} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i32.i64($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10122, 25} true;
  assume {:verifier.code 0} true;
  $i15 := $shl.i64(4096, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10122, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p11, 0, $i15, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10123, 9} true;
  assume {:verifier.code 0} true;
  $i16 := $add.i32($i5, 1);
  // WARNING: %17 = add nsw i32 %.01, 1, !dbg !5799, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 20} true;
  assume {:verifier.code 0} true;
  $i17 := $load.i16($M.0, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 7} true;
  assume {:verifier.code 0} true;
  $i18 := $zext.i16.i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 29} true;
  assume {:verifier.code 0} true;
  $i19 := $sgt.i32($i18, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 7} true;
  assume {:verifier.code 0} true;
  $i5 := $i16;
  assume {:branchcond $i19} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 7} true;
  assume {:verifier.code 0} true;
  assume ($i19 == 1);
  goto $bb4;
$bb7:
  assume !(($i19 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10125, 7} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10130, 10} true;
  assume {:verifier.code 0} true;
  $p20 := $add.ref($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10130, 18} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p20, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10131, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const get_user_pages_unlocked: ref;
axiom (get_user_pages_unlocked == $sub.ref(0, 486146));
procedure  get_user_pages_unlocked($p0: ref, $p1: ref, $i2: i64, $i3: i64, $i4: i32, $i5: i32, $p6: ref)
  returns ($r: i64);
const read_tape: ref;
axiom (read_tape == $sub.ref(0, 487178));
procedure  read_tape($p0: ref, $i1: i64, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $i4: i1;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $i9: i32;
  var $i10: i64;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $i15: i32;
  var $i16: i64;
  var $p17: ref;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i1;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $i25: i32;
  var $i26: i1;
  var $i27: i32;
  var $p30: ref;
  var $i31: i8;
  var $i32: i32;
  var $i33: i1;
  var $i34: i32;
  var $i35: i1;
  var $p36: ref;
  var $i37: i8;
  var $i38: i32;
  var $i39: i1;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $i43: i32;
  var $p44: ref;
  var $i45: i32;
  var $i46: i32;
  var $i49: i32;
  var $p50: ref;
  var $i51: i16;
  var $i52: i32;
  var $i53: i1;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $i57: i32;
  var $i58: i1;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $i62: i32;
  var $i63: i32;
  var $p64: ref;
  var $i65: i32;
  var $i66: i32;
  var $p67: ref;
  var $i68: i32;
  var $i69: i32;
  var $i47: i32;
  var $i48: i32;
  var $i28: i32;
  var $i29: i32;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $i73: i32;
  var $i74: i1;
  var $i75: i32;
  var $i76: i8;
  var $p77: ref;
  var $p78: ref;
  var $i79: i8;
  var $i80: i32;
  var $i81: i1;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $i85: i1;
  var $p86: ref;
  var $i87: i8;
  var $i88: i32;
  var $i89: i32;
  var $i90: i8;
  var $p91: ref;
  var $i92: i32;
  var $i93: i8;
  var $p94: ref;
  var $i95: i32;
  var $i96: i8;
  var $p97: ref;
  var $i98: i8;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $i107: i32;
  var $p108: ref;
  var $i109: i64;
  var $i110: i1;
  var $p111: ref;
  var $i112: i32;
  var $i113: i64;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $i117: i32;
  var $i118: i1;
  var $p119: ref;
  var $p120: ref;
  var $p121: ref;
  var $i122: i32;
  var $i123: i1;
  var $p124: ref;
  var $p125: ref;
  var $p126: ref;
  var $p127: ref;
  var $p128: ref;
  var $i129: i8;
  var $i130: i32;
  var $p131: ref;
  var $p132: ref;
  var $i133: i8;
  var $i134: i32;
  var $p135: ref;
  var $p136: ref;
  var $i137: i8;
  var $i138: i32;
  var $p139: ref;
  var $p140: ref;
  var $i141: i8;
  var $i142: i32;
  var $p143: ref;
  var $p144: ref;
  var $i145: i8;
  var $i146: i32;
  var $p147: ref;
  var $p148: ref;
  var $i149: i8;
  var $i150: i32;
  var $p151: ref;
  var $p152: ref;
  var $i153: i8;
  var $i154: i32;
  var $p155: ref;
  var $p156: ref;
  var $i157: i8;
  var $i158: i32;
  var $p159: ref;
  var $i160: i32;
  var $i161: i1;
  var $p162: ref;
  var $p163: ref;
  var $i164: i8;
  var $i165: i32;
  var $i166: i1;
  var $p167: ref;
  var $i168: i8;
  var $i169: i32;
  var $i170: i32;
  var $i171: i8;
  var $p172: ref;
  var $p173: ref;
  var $i174: i8;
  var $i175: i32;
  var $i176: i1;
  var $p177: ref;
  var $i178: i8;
  var $i179: i32;
  var $i180: i1;
  var $p181: ref;
  var $i182: i64;
  var $i183: i32;
  var $i184: i32;
  var $p185: ref;
  var $i186: i32;
  var $i187: i1;
  var $p188: ref;
  var $p189: ref;
  var $i190: i8;
  var $i191: i32;
  var $i192: i1;
  var $i193: i32;
  var $p194: ref;
  var $i195: i8;
  var $i196: i32;
  var $i197: i32;
  var $i198: i1;
  var $p199: ref;
  var $i200: i32;
  var $i201: i1;
  var $i202: i1;
  var $p203: ref;
  var $p204: ref;
  var $p205: ref;
  var $i206: i32;
  var $p207: ref;
  var $i208: i32;
  var $i209: i1;
  var $p210: ref;
  var $i211: i32;
  var $i212: i32;
  var $p213: ref;
  var $p214: ref;
  var $p215: ref;
  var $i216: i32;
  var $i217: i1;
  var $i218: i32;
  var $p219: ref;
  var $i220: i1;
  var $p221: ref;
  var $p222: ref;
  var $p223: ref;
  var $p224: ref;
  var $i225: i32;
  var $i226: i1;
  var $p227: ref;
  var $i228: i32;
  var $i229: i32;
  var $i230: i32;
  var $i231: i32;
  var $p232: ref;
  var $i233: i32;
  var $i234: i32;
  var $p235: ref;
  var $i236: i32;
  var $i237: i32;
  var $p238: ref;
  var $i239: i32;
  var $i240: i1;
  var $p241: ref;
  var $p242: ref;
  var $p243: ref;
  var $p244: ref;
  var $i245: i32;
  var $p246: ref;
  var $i247: i32;
  var $i248: i1;
  var $p249: ref;
  var $i250: i32;
  var $i251: i32;
  var $p252: ref;
  var $i253: i32;
  var $i254: i1;
  var $p255: ref;
  var $i256: i8;
  var $i257: i32;
  var $i258: i1;
  var $p259: ref;
  var $i260: i8;
  var $i261: i32;
  var $i262: i1;
  var $p263: ref;
  var $p264: ref;
  var $p265: ref;
  var $i266: i32;
  var $i267: i1;
  var $p268: ref;
  var $p269: ref;
  var $i270: i32;
  var $i271: i32;
  var $i272: i32;
  var $p273: ref;
  var $i274: i32;
  var $i275: i1;
  var $p276: ref;
  var $p277: ref;
  var $p278: ref;
  var $p279: ref;
  var $i280: i32;
  var $p281: ref;
  var $i282: i8;
  var $i283: i32;
  var $i284: i32;
  var $i285: i1;
  var $p286: ref;
  var $i287: i8;
  var $i288: i32;
  var $i289: i1;
  var $p290: ref;
  var $p291: ref;
  var $p292: ref;
  var $i293: i32;
  var $i294: i1;
  var $i295: i32;
  var $p296: ref;
  var $p297: ref;
  var $i298: i32;
  var $i299: i32;
  var $i300: i32;
  var $p301: ref;
  var $i302: i32;
  var $i303: i1;
  var $p304: ref;
  var $p305: ref;
  var $p306: ref;
  var $p307: ref;
  var $i308: i32;
  var $i310: i32;
  var $i311: i1;
  var $p312: ref;
  var $p313: ref;
  var $p314: ref;
  var $p315: ref;
  var $p316: ref;
  var $i317: i8;
  var $i318: i32;
  var $i319: i1;
  var $p320: ref;
  var $p321: ref;
  var $i322: i8;
  var $i323: i32;
  var $i324: i1;
  var $i325: i32;
  var $i326: i1;
  var $p327: ref;
  var $p328: ref;
  var $p329: ref;
  var $p330: ref;
  var $i331: i32;
  var $i309: i32;
  var $p332: ref;
  var $i333: i32;
  var $i334: i1;
  var $p335: ref;
  var $p337: ref;
  var $i338: i32;
  var $i336: i32;
  var $p340: ref;
  var $p341: ref;
  var $i342: i8;
  var $i343: i32;
  var $i344: i1;
  var $p345: ref;
  var $i346: i32;
  var $p347: ref;
  var $p348: ref;
  var $p349: ref;
  var $p350: ref;
  var $i351: i32;
  var $i352: i32;
  var $p353: ref;
  var $i339: i32;
  var $p354: ref;
  var $i355: i32;
  var $i356: i1;
  var $p357: ref;
  var $i358: i32;
  var $i359: i1;
  var $p360: ref;
  var $i361: i32;
  var $i362: i32;
  var $p363: ref;
  var $p364: ref;
  var $i365: i32;
  var $p366: ref;
  var $i367: i32;
  var $p368: ref;
  var $i369: i32;
  var $i370: i32;
  var $i371: i32;
  var $p372: ref;
  var $i373: i64;
  var $i5: i64;
$bb0:
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(16, $zext.i32.i64(1)));
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %0, i64 0, metadata !16593, metadata !5777), !dbg !16594, !verifier.code !5775
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !16599, metadata !5777), !dbg !16600, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7405, 13} true;
  assume {:verifier.code 0} true;
  $i4 := $eq.i64($i1, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7405, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7406, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 0;
  goto $bb3;
$bb2:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7634, 1} true;
  assume {:verifier.code 0} true;
  $r := $i5;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7410, 38} true;
  assume {:verifier.code 0} true;
  $p6 := $add.ref($p0, 320);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7410, 9} true;
  assume {:verifier.code 0} true;
  $p7 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7410, 68} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 544);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7410, 68} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7410, 47} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7410, 45} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p7, $mul.ref($i10, 56));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7411, 40} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p0, 560);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7411, 10} true;
  assume {:verifier.code 0} true;
  $p13 := $bitcast.ref.ref($p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7411, 67} true;
  assume {:verifier.code 0} true;
  $p14 := $add.ref($p0, 548);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7411, 67} true;
  assume {:verifier.code 0} true;
  $i15 := $load.i32($M.0, $p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7411, 46} true;
  assume {:verifier.code 0} true;
  $i16 := $sext.i32.i64($i15);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7411, 44} true;
  assume {:verifier.code 0} true;
  $p17 := $add.ref($p13, $mul.ref($i16, 16));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7412, 28} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7412, 28} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7412, 7} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7412, 32} true;
  assume {:verifier.code 0} true;
  $i21 := $eq.i32($i20, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7412, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i21} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i21 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7413, 5} true;
  assume {:verifier.code 0} true;
  $i5 := 1;
  goto $bb3;
$bb6:
  assume !(($i21 == 1));
  assume {:verifier.code 0} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7417, 15} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7417, 15} true;
  assume {:verifier.code 0} true;
  $p23 := $load.ref($M.0, $p22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7418, 12} true;
  assume {:verifier.code 0} true;
  $p24 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7418, 12} true;
  assume {:verifier.code 0} true;
  $i25 := $load.i32($M.0, $p24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7418, 23} true;
  assume {:verifier.code 0} true;
  $i26 := $eq.i32($i25, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7418, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i26} true;
  goto $bb8, $bb9;
$bb8:
  assume ($i26 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7419, 13} true;
  assume {:verifier.code 0} true;
  $i27 := $trunc.i64.i32($i1);
  // WARNING: %34 = trunc i64 %1 to i32, !dbg !5824, !verifier.code !5778
  call {:cexpr "bytes"} boogie_si_record_i32($i27);
  // WARNING: call void @llvm.dbg.value(metadata i32 %34, i64 0, metadata !16639, metadata !5777), !dbg !16640, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7421, 3} true;
  assume {:verifier.code 0} true;
  $i28, $i29 := $i27, $i27;
  goto $bb10;
$bb9:
  assume !(($i26 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 28} true;
  assume {:verifier.code 0} true;
  $p30 := $add.ref($p0, 299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 28} true;
  assume {:verifier.code 0} true;
  $i31 := $load.i8($M.0, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 8} true;
  assume {:verifier.code 0} true;
  $i32 := $zext.i8.i32($i31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 40} true;
  assume {:verifier.code 0} true;
  $i33 := $eq.i32($i32, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 46} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i33} true;
  goto $bb11, $bb13;
$bb10:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7435, 3} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7435, 3} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p70, 0, 16, $zext.i32.i64(16), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7436, 3} true;
  assume {:verifier.code 0} true;
  $p71 := $p3;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7436, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p71, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7437, 17} true;
  assume {:verifier.code 0} true;
  $p72 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7437, 17} true;
  assume {:verifier.code 0} true;
  $i73 := $load.i32($M.0, $p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7437, 28} true;
  assume {:verifier.code 0} true;
  $i74 := $ne.i32($i73, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7437, 28} true;
  assume {:verifier.code 0} true;
  $i75 := $zext.i1.i32($i74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7437, 12} true;
  assume {:verifier.code 0} true;
  $i76 := $trunc.i32.i8($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7437, 3} true;
  assume {:verifier.code 0} true;
  $p77 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7437, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p77, $i76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 22} true;
  assume {:verifier.code 0} true;
  $p78 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 22} true;
  assume {:verifier.code 0} true;
  $i79 := $load.i8($M.0, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 7} true;
  assume {:verifier.code 0} true;
  $i80 := $zext.i8.i32($i79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 29} true;
  assume {:verifier.code 0} true;
  $i81 := $eq.i32($i80, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i81} true;
  goto $bb26, $bb27;
$bb11:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 46} true;
  assume {:verifier.code 0} true;
  assume ($i33 == 1);
  goto $bb12;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 87} true;
  assume {:verifier.code 0} true;
  $p36 := $add.ref($add.ref($p7, $mul.ref($i10, 56)), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 87} true;
  assume {:verifier.code 0} true;
  $i37 := $load.i8($M.0, $p36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 67} true;
  assume {:verifier.code 0} true;
  $i38 := $zext.i8.i32($i37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 101} true;
  assume {:verifier.code 0} true;
  $i39 := $ne.i32($i38, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i39} true;
  goto $bb17, $bb18;
$bb13:
  assume !(($i33 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 49} true;
  assume {:verifier.code 0} true;
  $i34 := $M.18;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 58} true;
  assume {:verifier.code 0} true;
  $i35 := $eq.i32($i34, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 64} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i35} true;
  goto $bb14, $bb15;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 64} true;
  assume {:verifier.code 0} true;
  assume ($i35 == 1);
  goto $bb12;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 64} true;
  assume {:verifier.code 0} true;
  assume !(($i35 == 1));
  goto $bb16;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7426, 13} true;
  assume {:verifier.code 0} true;
  $i49 := $trunc.i64.i32($i1);
  // WARNING: %57 = trunc i64 %1 to i32, !dbg !5851, !verifier.code !5778
  call {:cexpr "bytes"} boogie_si_record_i32($i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 30} true;
  assume {:verifier.code 0} true;
  $p50 := $add.ref($p23, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 30} true;
  assume {:verifier.code 0} true;
  $i51 := $load.i16($M.0, $p50);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 9} true;
  assume {:verifier.code 0} true;
  $i52 := $zext.i16.i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 37} true;
  assume {:verifier.code 0} true;
  $i53 := $eq.i32($i52, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 43} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i53} true;
  goto $bb20, $bb21;
$bb17:
  assume ($i39 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7423, 18} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7423, 18} true;
  assume {:verifier.code 0} true;
  $p41 := $load.ref($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7423, 27} true;
  assume {:verifier.code 0} true;
  $p42 := $add.ref($p41, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7423, 27} true;
  assume {:verifier.code 0} true;
  $i43 := $load.i32($M.0, $p42);
  // WARNING: %52 = load i32, i32* %51, align 8, !dbg !5847, !verifier.code !5778
  call {:cexpr "blks"} boogie_si_record_i32($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7424, 18} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7424, 18} true;
  assume {:verifier.code 0} true;
  $i45 := $load.i32($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7424, 29} true;
  assume {:verifier.code 0} true;
  $i46 := $mul.i32($i45, $i43);
  // WARNING: %55 = mul nsw i32 %54, %52, !dbg !5849, !verifier.code !5778
  call {:cexpr "bytes"} boogie_si_record_i32($i46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7425, 3} true;
  assume {:verifier.code 0} true;
  $i47, $i48 := $i43, $i46;
  goto $bb19;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7422, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i39 == 1));
  goto $bb16;
$bb19:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i28, $i29 := $i47, $i48;
  goto $bb10;
$bb20:
  assume ($i53 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 52} true;
  assume {:verifier.code 0} true;
  $p54 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 52} true;
  assume {:verifier.code 0} true;
  $p55 := $load.ref($M.0, $p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 61} true;
  assume {:verifier.code 0} true;
  $p56 := $add.ref($p55, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 61} true;
  assume {:verifier.code 0} true;
  $i57 := $load.i32($M.0, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 73} true;
  assume {:verifier.code 0} true;
  $i58 := $slt.i32($i57, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i58} true;
  goto $bb23, $bb24;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 43} true;
  assume {:verifier.code 0} true;
  assume !(($i53 == 1));
  goto $bb22;
$bb22:
  assume {:verifier.code 0} true;
  $i63 := $i49;
  goto $bb25;
$bb23:
  assume ($i58 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7428, 21} true;
  assume {:verifier.code 0} true;
  $p59 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7428, 21} true;
  assume {:verifier.code 0} true;
  $p60 := $load.ref($M.0, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7428, 30} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p60, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7428, 30} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  // WARNING: %72 = load i32, i32* %71, align 4, !dbg !5865, !verifier.code !5778
  call {:cexpr "bytes"} boogie_si_record_i32($i62);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7429, 5} true;
  assume {:verifier.code 0} true;
  $i63 := $i62;
  goto $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7427, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i58 == 1));
  goto $bb22;
$bb25:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7432, 25} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7432, 25} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i32($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7432, 18} true;
  assume {:verifier.code 0} true;
  $i66 := $sdiv.i32($i63, $i65);
  // WARNING: %77 = sdiv i32 %.02, %76, !dbg !5868, !verifier.code !5778
  call {:cexpr "blks"} boogie_si_record_i32($i66);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7433, 18} true;
  assume {:verifier.code 0} true;
  $p67 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7433, 18} true;
  assume {:verifier.code 0} true;
  $i68 := $load.i32($M.0, $p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7433, 29} true;
  assume {:verifier.code 0} true;
  $i69 := $mul.i32($i68, $i66);
  // WARNING: %80 = mul nsw i32 %79, %77, !dbg !5870, !verifier.code !5778
  call {:cexpr "bytes"} boogie_si_record_i32($i69);
  assume {:verifier.code 0} true;
  $i47, $i48 := $i66, $i69;
  goto $bb19;
$bb26:
  assume ($i81 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 58} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p0, 302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 58} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 38} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 63} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i85} true;
  goto $bb29, $bb30;
$bb27:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i81 == 1));
  goto $bb28;
$bb28:
  assume {:verifier.code 0} true;
  goto $bb31;
$bb29:
  assume ($i85 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7439, 29} true;
  assume {:verifier.code 0} true;
  $p86 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7439, 29} true;
  assume {:verifier.code 0} true;
  $i87 := $load.i8($M.0, $p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7439, 14} true;
  assume {:verifier.code 0} true;
  $i88 := $zext.i8.i32($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7439, 36} true;
  assume {:verifier.code 0} true;
  $i89 := $or.i32($i88, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7439, 14} true;
  assume {:verifier.code 0} true;
  $i90 := $trunc.i32.i8($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7439, 5} true;
  assume {:verifier.code 0} true;
  $p91 := $add.ref($p3, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7439, 12} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p91, $i90);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7440, 3} true;
  assume {:verifier.code 0} true;
  goto $bb31;
$bb30:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7438, 7} true;
  assume {:verifier.code 0} true;
  assume !(($i85 == 1));
  goto $bb28;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7443, 34} true;
  assume {:verifier.code 0} true;
  $i92 := $ashr.i32($i28, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7443, 12} true;
  assume {:verifier.code 0} true;
  $i93 := $trunc.i32.i8($i92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7443, 3} true;
  assume {:verifier.code 0} true;
  $p94 := $add.ref($p3, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7443, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p94, $i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7444, 34} true;
  assume {:verifier.code 0} true;
  $i95 := $ashr.i32($i28, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7444, 12} true;
  assume {:verifier.code 0} true;
  $i96 := $trunc.i32.i8($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7444, 3} true;
  assume {:verifier.code 0} true;
  $p97 := $add.ref($p3, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7444, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p97, $i96);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7445, 12} true;
  assume {:verifier.code 0} true;
  $i98 := $trunc.i32.i8($i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7445, 3} true;
  assume {:verifier.code 0} true;
  $p99 := $add.ref($p3, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7445, 10} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p99, $i98);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7446, 11} true;
  assume {:verifier.code 0} true;
  $p100 := $load.ref($M.10, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7447, 34} true;
  assume {:verifier.code 0} true;
  $p101 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7447, 83} true;
  assume {:verifier.code 0} true;
  $p102 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7447, 83} true;
  assume {:verifier.code 0} true;
  $p103 := $load.ref($M.0, $p102);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7447, 92} true;
  assume {:verifier.code 0} true;
  $p104 := $add.ref($p103, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7447, 92} true;
  assume {:verifier.code 0} true;
  $p105 := $load.ref($M.0, $p104);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7447, 108} true;
  assume {:verifier.code 0} true;
  $p106 := $add.ref($p105, 3288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7447, 108} true;
  assume {:verifier.code 0} true;
  $i107 := $load.i32($M.0, $p106);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7447, 11} true;
  assume {:verifier.code 0} true;
  call $p108 := st_do_scsi($p100, $p0, $p101, $i29, 2, $i107, 0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7449, 3} true;
  assume {:verifier.code 0} true;
  call release_buffering($p0, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7450, 11} true;
  assume {:verifier.code 0} true;
  $M.10 := $store.ref($M.10, $p2, $p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7451, 7} true;
  assume {:verifier.code 0} true;
  $i109 := $p2i.ref.i64($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7451, 29} true;
  assume {:verifier.code 0} true;
  $i110 := $eq.i64($i109, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7451, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i110} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i110 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7452, 26} true;
  assume {:verifier.code 0} true;
  $p111 := $add.ref($p23, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7452, 26} true;
  assume {:verifier.code 0} true;
  $i112 := $load.i32($M.0, $p111);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7452, 13} true;
  assume {:verifier.code 0} true;
  $i113 := $sext.i32.i64($i112);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7452, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $i113;
  goto $bb3;
$bb33:
  assume !(($i110 == 1));
  assume {:verifier.code 0} true;
  goto $bb34;
$bb34:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7456, 9} true;
  assume {:verifier.code 0} true;
  $p114 := $add.ref($p23, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7456, 22} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p114, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7457, 9} true;
  assume {:verifier.code 0} true;
  $p115 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7457, 15} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p115, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7458, 13} true;
  assume {:verifier.code 0} true;
  $p116 := $add.ref($p23, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7458, 13} true;
  assume {:verifier.code 0} true;
  $i117 := $load.i32($M.0, $p116);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7458, 28} true;
  assume {:verifier.code 0} true;
  $i118 := $ne.i32($i117, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7458, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i118} true;
  goto $bb35, $bb36;
$bb35:
  assume ($i118 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7459, 24} true;
  assume {:verifier.code 0} true;
  $p119 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7459, 24} true;
  assume {:verifier.code 0} true;
  $p120 := $load.ref($M.0, $p119);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7459, 33} true;
  assume {:verifier.code 0} true;
  $p121 := $add.ref($p120, 40);
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_cmdstatus* %142, i64 0, metadata !16749, metadata !5777), !dbg !16750, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7461, 9} true;
  assume {:verifier.code 0} true;
  $i122 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7461, 19} true;
  assume {:verifier.code 0} true;
  $i123 := $ne.i32($i122, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7461, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb37, $bb38;
$bb36:
  assume !(($i118 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7616, 11} true;
  assume {:verifier.code 0} true;
  $p340 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7616, 24} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p340, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7617, 29} true;
  assume {:verifier.code 0} true;
  $p341 := $add.ref($p0, 302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7617, 29} true;
  assume {:verifier.code 0} true;
  $i342 := $load.i8($M.0, $p341);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7617, 9} true;
  assume {:verifier.code 0} true;
  $i343 := $zext.i8.i32($i342);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7617, 34} true;
  assume {:verifier.code 0} true;
  $i344 := $ne.i32($i343, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7617, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i344} true;
  goto $bb128, $bb129;
$bb37:
  assume ($i123 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7462, 13} true;
  assume {:verifier.code 0} true;
  call $p124 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7463, 67} true;
  assume {:verifier.code 0} true;
  $p125 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7463, 67} true;
  assume {:verifier.code 0} true;
  $p126 := $load.ref($M.0, $p125);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7464, 83} true;
  assume {:verifier.code 0} true;
  $p127 := $add.ref($p108, 16);
  $p128 := $add.ref($p108, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7464, 76} true;
  assume {:verifier.code 0} true;
  $i129 := $load.i8($M.0, $p128);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7464, 70} true;
  assume {:verifier.code 0} true;
  $i130 := $zext.i8.i32($i129);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7465, 39} true;
  assume {:verifier.code 0} true;
  $p131 := $add.ref($p108, 16);
  $p132 := $add.ref($add.ref($p108, 16), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7465, 32} true;
  assume {:verifier.code 0} true;
  $i133 := $load.i8($M.0, $p132);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7465, 26} true;
  assume {:verifier.code 0} true;
  $i134 := $zext.i8.i32($i133);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7465, 62} true;
  assume {:verifier.code 0} true;
  $p135 := $add.ref($p108, 16);
  $p136 := $add.ref($add.ref($p108, 16), 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7465, 55} true;
  assume {:verifier.code 0} true;
  $i137 := $load.i8($M.0, $p136);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7465, 49} true;
  assume {:verifier.code 0} true;
  $i138 := $zext.i8.i32($i137);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7465, 85} true;
  assume {:verifier.code 0} true;
  $p139 := $add.ref($p108, 16);
  $p140 := $add.ref($add.ref($p108, 16), 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7465, 78} true;
  assume {:verifier.code 0} true;
  $i141 := $load.i8($M.0, $p140);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7465, 72} true;
  assume {:verifier.code 0} true;
  $i142 := $zext.i8.i32($i141);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7466, 39} true;
  assume {:verifier.code 0} true;
  $p143 := $add.ref($p108, 16);
  $p144 := $add.ref($add.ref($p108, 16), 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7466, 32} true;
  assume {:verifier.code 0} true;
  $i145 := $load.i8($M.0, $p144);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7466, 26} true;
  assume {:verifier.code 0} true;
  $i146 := $zext.i8.i32($i145);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7466, 62} true;
  assume {:verifier.code 0} true;
  $p147 := $add.ref($p108, 16);
  $p148 := $add.ref($add.ref($p108, 16), 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7466, 55} true;
  assume {:verifier.code 0} true;
  $i149 := $load.i8($M.0, $p148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7466, 49} true;
  assume {:verifier.code 0} true;
  $i150 := $zext.i8.i32($i149);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7466, 85} true;
  assume {:verifier.code 0} true;
  $p151 := $add.ref($p108, 16);
  $p152 := $add.ref($add.ref($p108, 16), 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7466, 78} true;
  assume {:verifier.code 0} true;
  $i153 := $load.i8($M.0, $p152);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7466, 72} true;
  assume {:verifier.code 0} true;
  $i154 := $zext.i8.i32($i153);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7467, 39} true;
  assume {:verifier.code 0} true;
  $p155 := $add.ref($p108, 16);
  $p156 := $add.ref($add.ref($p108, 16), 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7467, 32} true;
  assume {:verifier.code 0} true;
  $i157 := $load.i8($M.0, $p156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7467, 26} true;
  assume {:verifier.code 0} true;
  $i158 := $zext.i8.i32($i157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7463, 7} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32.i32.i32.i32.i32.i32.i32(.str.12, $p126, $p124, .str.148, $i130, $i134, $i138, $i142, $i146, $i150, $i154, $i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7468, 5} true;
  assume {:verifier.code 0} true;
  goto $bb39;
$bb38:
  assume !(($i123 == 1));
  assume {:verifier.code 0} true;
  goto $bb39;
$bb39:
  $p159 := $add.ref($add.ref($p120, 40), 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7471, 19} true;
  assume {:verifier.code 0} true;
  $i160 := $load.i32($M.0, $p159);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7471, 30} true;
  assume {:verifier.code 0} true;
  $i161 := $ne.i32($i160, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7471, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i161} true;
  goto $bb40, $bb41;
$bb40:
  assume ($i161 == 1);
  $p162 := $add.ref($add.ref($p120, 40), 4);
  $p163 := $add.ref($add.ref($add.ref($p120, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7472, 46} true;
  assume {:verifier.code 0} true;
  $i164 := $load.i8($M.0, $p163);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7472, 11} true;
  assume {:verifier.code 0} true;
  $i165 := $zext.i8.i32($i164);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7472, 56} true;
  assume {:verifier.code 0} true;
  $i166 := $eq.i32($i165, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7472, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i166} true;
  goto $bb42, $bb43;
$bb41:
  assume !(($i161 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7613, 22} true;
  assume {:verifier.code 0} true;
  $p337 := $add.ref($p23, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7613, 22} true;
  assume {:verifier.code 0} true;
  $i338 := $load.i32($M.0, $p337);
  // WARNING: %437 = load i32, i32* %436, align 8, !dbg !6266, !verifier.code !5778
  call {:cexpr "retval"} boogie_si_record_i32($i338);
  assume {:verifier.code 0} true;
  $i336 := $i338;
  goto $bb126;
$bb42:
  assume ($i166 == 1);
  $p167 := $add.ref($add.ref($p120, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7473, 52} true;
  assume {:verifier.code 0} true;
  $i168 := $load.i8($M.0, $p167);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7473, 27} true;
  assume {:verifier.code 0} true;
  $i169 := $zext.i8.i32($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7473, 58} true;
  assume {:verifier.code 0} true;
  $i170 := $and.i32($i169, 207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7473, 27} true;
  assume {:verifier.code 0} true;
  $i171 := $trunc.i32.i8($i170);
  $p172 := $add.ref($add.ref($p120, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7473, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p172, $i171);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7474, 7} true;
  assume {:verifier.code 0} true;
  goto $bb44;
$bb43:
  assume !(($i166 == 1));
  assume {:verifier.code 0} true;
  goto $bb44;
$bb44:
  $p173 := $add.ref($add.ref($p120, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7477, 36} true;
  assume {:verifier.code 0} true;
  $i174 := $load.i8($M.0, $p173);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7477, 11} true;
  assume {:verifier.code 0} true;
  $i175 := $zext.i8.i32($i174);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7477, 42} true;
  assume {:verifier.code 0} true;
  $i176 := $ne.i32($i175, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7477, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i176} true;
  goto $bb45, $bb46;
$bb45:
  assume ($i176 == 1);
  $p177 := $add.ref($add.ref($p120, 40), 33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7478, 38} true;
  assume {:verifier.code 0} true;
  $i178 := $load.i8($M.0, $p177);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7478, 13} true;
  assume {:verifier.code 0} true;
  $i179 := $zext.i8.i32($i178);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7478, 54} true;
  assume {:verifier.code 0} true;
  $i180 := $ne.i32($i179, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7478, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i180} true;
  goto $bb47, $bb48;
$bb46:
  assume !(($i176 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7586, 13} true;
  assume {:verifier.code 0} true;
  $i310 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7586, 23} true;
  assume {:verifier.code 0} true;
  $i311 := $ne.i32($i310, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7586, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i311} true;
  goto $bb111, $bb112;
$bb47:
  assume ($i180 == 1);
  $p181 := $add.ref($add.ref($p120, 40), 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7479, 38} true;
  assume {:verifier.code 0} true;
  $i182 := $load.i64($M.0, $p181);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7479, 22} true;
  assume {:verifier.code 0} true;
  $i183 := $trunc.i64.i32($i182);
  // WARNING: %213 = trunc i64 %212 to i32, !dbg !6003, !verifier.code !5778
  call {:cexpr "transfer"} boogie_si_record_i32($i183);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7480, 9} true;
  assume {:verifier.code 0} true;
  $i184 := $i183;
  goto $bb49;
$bb48:
  assume !(($i180 == 1));
  assume {:verifier.code 0} true;
  $i184 := 0;
  goto $bb49;
$bb49:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7483, 18} true;
  assume {:verifier.code 0} true;
  $p185 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7483, 18} true;
  assume {:verifier.code 0} true;
  $i186 := $load.i32($M.0, $p185);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7483, 29} true;
  assume {:verifier.code 0} true;
  $i187 := $eq.i32($i186, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7483, 34} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i187} true;
  goto $bb50, $bb51;
$bb50:
  assume ($i187 == 1);
  $p188 := $add.ref($add.ref($p120, 40), 4);
  $p189 := $add.ref($add.ref($add.ref($p120, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7483, 72} true;
  assume {:verifier.code 0} true;
  $i190 := $load.i8($M.0, $p189);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7483, 37} true;
  assume {:verifier.code 0} true;
  $i191 := $zext.i8.i32($i190);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7483, 82} true;
  assume {:verifier.code 0} true;
  $i192 := $eq.i32($i191, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7483, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i192} true;
  goto $bb53, $bb54;
$bb51:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7483, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i187 == 1));
  goto $bb52;
$bb52:
  assume {:verifier.code 0} true;
  $i193 := $i184;
  goto $bb55;
$bb53:
  assume ($i192 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7485, 9} true;
  assume {:verifier.code 0} true;
  $i193 := $i29;
  goto $bb55;
$bb54:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7483, 13} true;
  assume {:verifier.code 0} true;
  assume !(($i192 == 1));
  goto $bb52;
$bb55:
  assume {:verifier.code 0} true;
  $p194 := $add.ref($add.ref($p120, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7488, 30} true;
  assume {:verifier.code 0} true;
  $i195 := $load.i8($M.0, $p194);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7488, 14} true;
  assume {:verifier.code 0} true;
  $i196 := $zext.i8.i32($i195);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7488, 36} true;
  assume {:verifier.code 0} true;
  $i197 := $and.i32($i196, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7488, 42} true;
  assume {:verifier.code 0} true;
  $i198 := $ne.i32($i197, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7488, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i198} true;
  goto $bb56, $bb57;
$bb56:
  assume ($i198 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7489, 20} true;
  assume {:verifier.code 0} true;
  $p199 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7489, 20} true;
  assume {:verifier.code 0} true;
  $i200 := $load.i32($M.0, $p199);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7489, 31} true;
  assume {:verifier.code 0} true;
  $i201 := $eq.i32($i200, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7489, 36} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i201} true;
  goto $bb58, $bb59;
$bb57:
  assume !(($i198 == 1));
  $p255 := $add.ref($add.ref($p120, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7545, 44} true;
  assume {:verifier.code 0} true;
  $i256 := $load.i8($M.0, $p255);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7545, 13} true;
  assume {:verifier.code 0} true;
  $i257 := $sext.i8.i32($i256);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7545, 51} true;
  assume {:verifier.code 0} true;
  $i258 := $slt.i32($i257, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7545, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i258} true;
  goto $bb86, $bb87;
$bb58:
  assume ($i201 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7489, 48} true;
  assume {:verifier.code 0} true;
  $i202 := $slt.i32($i193, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7489, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i202} true;
  goto $bb61, $bb62;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7489, 36} true;
  assume {:verifier.code 0} true;
  assume !(($i201 == 1));
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7502, 20} true;
  assume {:verifier.code 0} true;
  $p215 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7502, 20} true;
  assume {:verifier.code 0} true;
  $i216 := $load.i32($M.0, $p215);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7502, 31} true;
  assume {:verifier.code 0} true;
  $i217 := $eq.i32($i216, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7502, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i217} true;
  goto $bb66, $bb67;
$bb61:
  assume ($i202 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7490, 23} true;
  assume {:verifier.code 0} true;
  call $p203 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7491, 73} true;
  assume {:verifier.code 0} true;
  $p204 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7491, 73} true;
  assume {:verifier.code 0} true;
  $p205 := $load.ref($M.0, $p204);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7493, 38} true;
  assume {:verifier.code 0} true;
  $i206 := $sub.i32($i29, $i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7491, 13} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32.i32(.str.12, $p205, $p203, .str.149, $i206, $i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7494, 23} true;
  assume {:verifier.code 0} true;
  $p207 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7494, 23} true;
  assume {:verifier.code 0} true;
  $i208 := $load.i32($M.0, $p207);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7494, 33} true;
  assume {:verifier.code 0} true;
  $i209 := $sge.i32($i208, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7494, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i209} true;
  goto $bb63, $bb64;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7489, 15} true;
  assume {:verifier.code 0} true;
  assume !(($i202 == 1));
  goto $bb60;
$bb63:
  assume ($i209 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7495, 39} true;
  assume {:verifier.code 0} true;
  $p210 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7495, 39} true;
  assume {:verifier.code 0} true;
  $i211 := $load.i32($M.0, $p210);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7495, 49} true;
  assume {:verifier.code 0} true;
  $i212 := $add.i32($i211, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7495, 21} true;
  assume {:verifier.code 0} true;
  $p213 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7495, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p213, $i212);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7496, 13} true;
  assume {:verifier.code 0} true;
  goto $bb65;
$bb64:
  assume !(($i209 == 1));
  assume {:verifier.code 0} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7499, 19} true;
  assume {:verifier.code 0} true;
  $p214 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7499, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p214, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7500, 13} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, 12);
  goto $bb3;
$bb66:
  assume ($i217 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7503, 40} true;
  assume {:verifier.code 0} true;
  $i218 := $sub.i32($i29, $i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7503, 19} true;
  assume {:verifier.code 0} true;
  $p219 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7503, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p219, $i218);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7504, 11} true;
  assume {:verifier.code 0} true;
  goto $bb68;
$bb67:
  assume !(($i217 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7505, 13} true;
  assume {:verifier.code 0} true;
  call st_release_request($p108);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7507, 21} true;
  assume {:verifier.code 0} true;
  $M.10 := $store.ref($M.10, $p2, $0.ref);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7509, 26} true;
  assume {:verifier.code 0} true;
  $i220 := $eq.i32($i193, $i28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7509, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i220} true;
  goto $bb69, $bb70;
$bb68:
  assume {:verifier.code 0} true;
  goto $bb84;
$bb69:
  assume ($i220 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7510, 25} true;
  assume {:verifier.code 0} true;
  call $p221 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7511, 75} true;
  assume {:verifier.code 0} true;
  $p222 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7511, 75} true;
  assume {:verifier.code 0} true;
  $p223 := $load.ref($M.0, $p222);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7511, 15} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p223, $p221, .str.150);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7513, 25} true;
  assume {:verifier.code 0} true;
  $p224 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7513, 25} true;
  assume {:verifier.code 0} true;
  $i225 := $load.i32($M.0, $p224);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7513, 35} true;
  assume {:verifier.code 0} true;
  $i226 := $sge.i32($i225, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7513, 19} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i226} true;
  goto $bb71, $bb72;
$bb70:
  assume !(($i220 == 1));
  assume {:verifier.code 0} true;
  goto $bb74;
$bb71:
  assume ($i226 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7514, 41} true;
  assume {:verifier.code 0} true;
  $p227 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7514, 41} true;
  assume {:verifier.code 0} true;
  $i228 := $load.i32($M.0, $p227);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7514, 60} true;
  assume {:verifier.code 0} true;
  $i229 := $sub.i32($i28, $i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7514, 72} true;
  assume {:verifier.code 0} true;
  $i230 := $add.i32($i229, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7514, 51} true;
  assume {:verifier.code 0} true;
  $i231 := $add.i32($i228, $i230);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7514, 23} true;
  assume {:verifier.code 0} true;
  $p232 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7514, 33} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p232, $i231);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7515, 15} true;
  assume {:verifier.code 0} true;
  goto $bb73;
$bb72:
  assume !(($i226 == 1));
  assume {:verifier.code 0} true;
  goto $bb73;
$bb73:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7518, 15} true;
  assume {:verifier.code 0} true;
  call $i233 := st_int_ioctl($p0, 4, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7519, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, 5);
  goto $bb3;
$bb74:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7523, 40} true;
  assume {:verifier.code 0} true;
  $i234 := $sub.i32($i28, $i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7523, 59} true;
  assume {:verifier.code 0} true;
  $p235 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7523, 59} true;
  assume {:verifier.code 0} true;
  $i236 := $load.i32($M.0, $p235);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7523, 52} true;
  assume {:verifier.code 0} true;
  $i237 := $mul.i32($i234, $i236);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7523, 19} true;
  assume {:verifier.code 0} true;
  $p238 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7523, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p238, $i237);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7524, 17} true;
  assume {:verifier.code 0} true;
  $i239 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7524, 27} true;
  assume {:verifier.code 0} true;
  $i240 := $ne.i32($i239, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7524, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i240} true;
  goto $bb75, $bb76;
$bb75:
  assume ($i240 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7525, 25} true;
  assume {:verifier.code 0} true;
  call $p241 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7526, 75} true;
  assume {:verifier.code 0} true;
  $p242 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7526, 75} true;
  assume {:verifier.code 0} true;
  $p243 := $load.ref($M.0, $p242);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7528, 47} true;
  assume {:verifier.code 0} true;
  $p244 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7528, 47} true;
  assume {:verifier.code 0} true;
  $i245 := $load.i32($M.0, $p244);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7526, 15} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i64.i32(.str.12, $p243, $p241, .str.151, $i1, $i245);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7529, 13} true;
  assume {:verifier.code 0} true;
  goto $bb77;
$bb76:
  assume !(($i240 == 1));
  assume {:verifier.code 0} true;
  goto $bb77;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7532, 23} true;
  assume {:verifier.code 0} true;
  $p246 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7532, 23} true;
  assume {:verifier.code 0} true;
  $i247 := $load.i32($M.0, $p246);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7532, 33} true;
  assume {:verifier.code 0} true;
  $i248 := $sge.i32($i247, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7532, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i248} true;
  goto $bb78, $bb79;
$bb78:
  assume ($i248 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7533, 39} true;
  assume {:verifier.code 0} true;
  $p249 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7533, 39} true;
  assume {:verifier.code 0} true;
  $i250 := $load.i32($M.0, $p249);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7533, 49} true;
  assume {:verifier.code 0} true;
  $i251 := $add.i32($i250, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7533, 21} true;
  assume {:verifier.code 0} true;
  $p252 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7533, 31} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p252, $i251);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7534, 13} true;
  assume {:verifier.code 0} true;
  goto $bb80;
$bb79:
  assume !(($i248 == 1));
  assume {:verifier.code 0} true;
  goto $bb80;
$bb80:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7537, 23} true;
  assume {:verifier.code 0} true;
  call $i253 := st_int_ioctl($p0, 4, 1);
  // WARNING: %308 = call i32 @st_int_ioctl(%struct.scsi_tape* %0, i32 4, i64 1), !dbg !6116, !verifier.code !5778
  call {:cexpr "tmp___4"} boogie_si_record_i32($i253);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7538, 25} true;
  assume {:verifier.code 0} true;
  $i254 := $ne.i32($i253, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7538, 17} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i254} true;
  goto $bb81, $bb82;
$bb81:
  assume ($i254 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7539, 15} true;
  assume {:verifier.code 0} true;
  $i5 := $sub.i64(0, 5);
  goto $bb3;
$bb82:
  assume !(($i254 == 1));
  assume {:verifier.code 0} true;
  goto $bb83;
$bb83:
  assume {:verifier.code 0} true;
  goto $bb68;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7544, 9} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7585, 7} true;
  assume {:verifier.code 0} true;
  $i309 := 1;
  goto $bb110;
$bb86:
  assume ($i258 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7546, 36} true;
  assume {:verifier.code 0} true;
  $p259 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7546, 36} true;
  assume {:verifier.code 0} true;
  $i260 := $load.i8($M.0, $p259);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7546, 15} true;
  assume {:verifier.code 0} true;
  $i261 := $zext.i8.i32($i260);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7546, 40} true;
  assume {:verifier.code 0} true;
  $i262 := $ne.i32($i261, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7546, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i262} true;
  goto $bb88, $bb89;
$bb87:
  assume !(($i258 == 1));
  $p281 := $add.ref($add.ref($p120, 40), 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7564, 30} true;
  assume {:verifier.code 0} true;
  $i282 := $load.i8($M.0, $p281);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7564, 14} true;
  assume {:verifier.code 0} true;
  $i283 := $zext.i8.i32($i282);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7564, 36} true;
  assume {:verifier.code 0} true;
  $i284 := $and.i32($i283, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7564, 42} true;
  assume {:verifier.code 0} true;
  $i285 := $ne.i32($i284, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7564, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i285} true;
  goto $bb98, $bb99;
$bb88:
  assume ($i262 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7547, 19} true;
  assume {:verifier.code 0} true;
  $p263 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7547, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p263, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7548, 11} true;
  assume {:verifier.code 0} true;
  goto $bb90;
$bb89:
  assume !(($i262 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7549, 19} true;
  assume {:verifier.code 0} true;
  $p264 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7549, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p264, 6);
  assume {:verifier.code 0} true;
  goto $bb90;
$bb90:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7551, 20} true;
  assume {:verifier.code 0} true;
  $p265 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7551, 20} true;
  assume {:verifier.code 0} true;
  $i266 := $load.i32($M.0, $p265);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7551, 31} true;
  assume {:verifier.code 0} true;
  $i267 := $eq.i32($i266, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7551, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i267} true;
  goto $bb91, $bb92;
$bb91:
  assume ($i267 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7552, 19} true;
  assume {:verifier.code 0} true;
  $p268 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7552, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p268, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7553, 11} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb92:
  assume !(($i267 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7554, 47} true;
  assume {:verifier.code 0} true;
  $p269 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7554, 47} true;
  assume {:verifier.code 0} true;
  $i270 := $load.i32($M.0, $p269);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7554, 58} true;
  assume {:verifier.code 0} true;
  $i271 := $mul.i32($i270, $i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7554, 40} true;
  assume {:verifier.code 0} true;
  $i272 := $sub.i32($i29, $i271);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7554, 19} true;
  assume {:verifier.code 0} true;
  $p273 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7554, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p273, $i272);
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7556, 15} true;
  assume {:verifier.code 0} true;
  $i274 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7556, 25} true;
  assume {:verifier.code 0} true;
  $i275 := $ne.i32($i274, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7556, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i275} true;
  goto $bb94, $bb95;
$bb94:
  assume ($i275 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7557, 23} true;
  assume {:verifier.code 0} true;
  call $p276 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7558, 73} true;
  assume {:verifier.code 0} true;
  $p277 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7558, 73} true;
  assume {:verifier.code 0} true;
  $p278 := $load.ref($M.0, $p277);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7559, 73} true;
  assume {:verifier.code 0} true;
  $p279 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7559, 73} true;
  assume {:verifier.code 0} true;
  $i280 := $load.i32($M.0, $p279);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7558, 13} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p278, $p276, .str.152, $i280);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7560, 11} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb95:
  assume !(($i275 == 1));
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7563, 9} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb97:
  assume {:verifier.code 0} true;
  goto $bb85;
$bb98:
  assume ($i285 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7565, 36} true;
  assume {:verifier.code 0} true;
  $p286 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7565, 36} true;
  assume {:verifier.code 0} true;
  $i287 := $load.i8($M.0, $p286);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7565, 15} true;
  assume {:verifier.code 0} true;
  $i288 := $zext.i8.i32($i287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7565, 40} true;
  assume {:verifier.code 0} true;
  $i289 := $eq.i32($i288, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7565, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i289} true;
  goto $bb100, $bb101;
$bb99:
  assume !(($i285 == 1));
  assume {:verifier.code 0} true;
  goto $bb109;
$bb100:
  assume ($i289 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7566, 19} true;
  assume {:verifier.code 0} true;
  $p290 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7566, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p290, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7567, 11} true;
  assume {:verifier.code 0} true;
  goto $bb102;
$bb101:
  assume !(($i289 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7568, 19} true;
  assume {:verifier.code 0} true;
  $p291 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7568, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p291, 3);
  assume {:verifier.code 0} true;
  goto $bb102;
$bb102:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7570, 20} true;
  assume {:verifier.code 0} true;
  $p292 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7570, 20} true;
  assume {:verifier.code 0} true;
  $i293 := $load.i32($M.0, $p292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7570, 31} true;
  assume {:verifier.code 0} true;
  $i294 := $eq.i32($i293, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7570, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i294} true;
  goto $bb103, $bb104;
$bb103:
  assume ($i294 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7571, 40} true;
  assume {:verifier.code 0} true;
  $i295 := $sub.i32($i29, $i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7571, 19} true;
  assume {:verifier.code 0} true;
  $p296 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7571, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p296, $i295);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7572, 11} true;
  assume {:verifier.code 0} true;
  goto $bb105;
$bb104:
  assume !(($i294 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7573, 47} true;
  assume {:verifier.code 0} true;
  $p297 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7573, 47} true;
  assume {:verifier.code 0} true;
  $i298 := $load.i32($M.0, $p297);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7573, 58} true;
  assume {:verifier.code 0} true;
  $i299 := $mul.i32($i298, $i193);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7573, 40} true;
  assume {:verifier.code 0} true;
  $i300 := $sub.i32($i29, $i299);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7573, 19} true;
  assume {:verifier.code 0} true;
  $p301 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7573, 32} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p301, $i300);
  assume {:verifier.code 0} true;
  goto $bb105;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7575, 15} true;
  assume {:verifier.code 0} true;
  $i302 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7575, 25} true;
  assume {:verifier.code 0} true;
  $i303 := $ne.i32($i302, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7575, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i303} true;
  goto $bb106, $bb107;
$bb106:
  assume ($i303 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7576, 23} true;
  assume {:verifier.code 0} true;
  call $p304 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7577, 73} true;
  assume {:verifier.code 0} true;
  $p305 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7577, 73} true;
  assume {:verifier.code 0} true;
  $p306 := $load.ref($M.0, $p305);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7578, 73} true;
  assume {:verifier.code 0} true;
  $p307 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7578, 73} true;
  assume {:verifier.code 0} true;
  $i308 := $load.i32($M.0, $p307);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7577, 13} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref.i32(.str.12, $p306, $p304, .str.153, $i308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7579, 11} true;
  assume {:verifier.code 0} true;
  goto $bb108;
$bb107:
  assume !(($i303 == 1));
  assume {:verifier.code 0} true;
  goto $bb108;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7582, 9} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb109:
  assume {:verifier.code 0} true;
  goto $bb97;
$bb110:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7607, 17} true;
  assume {:verifier.code 0} true;
  $p332 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7607, 17} true;
  assume {:verifier.code 0} true;
  $i333 := $load.i32($M.0, $p332);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7607, 30} true;
  assume {:verifier.code 0} true;
  $i334 := $slt.i32($i333, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7607, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i334} true;
  goto $bb123, $bb124;
$bb111:
  assume ($i311 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7587, 21} true;
  assume {:verifier.code 0} true;
  call $p312 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7588, 71} true;
  assume {:verifier.code 0} true;
  $p313 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7588, 71} true;
  assume {:verifier.code 0} true;
  $p314 := $load.ref($M.0, $p313);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7588, 11} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p314, $p312, .str.154);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7590, 9} true;
  assume {:verifier.code 0} true;
  goto $bb113;
$bb112:
  assume !(($i311 == 1));
  assume {:verifier.code 0} true;
  goto $bb113;
$bb113:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7593, 15} true;
  assume {:verifier.code 0} true;
  $p315 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7593, 25} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p315, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 34} true;
  assume {:verifier.code 0} true;
  $p316 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 34} true;
  assume {:verifier.code 0} true;
  $i317 := $load.i8($M.0, $p316);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 13} true;
  assume {:verifier.code 0} true;
  $i318 := $zext.i8.i32($i317);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 38} true;
  assume {:verifier.code 0} true;
  $i319 := $eq.i32($i318, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 44} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i319} true;
  goto $bb114, $bb115;
$bb114:
  assume ($i319 == 1);
  $p320 := $add.ref($add.ref($p120, 40), 4);
  $p321 := $add.ref($add.ref($add.ref($p120, 40), 4), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 82} true;
  assume {:verifier.code 0} true;
  $i322 := $load.i8($M.0, $p321);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 47} true;
  assume {:verifier.code 0} true;
  $i323 := $zext.i8.i32($i322);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 92} true;
  assume {:verifier.code 0} true;
  $i324 := $eq.i32($i323, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 13} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i324} true;
  goto $bb117, $bb118;
$bb115:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 44} true;
  assume {:verifier.code 0} true;
  assume !(($i319 == 1));
  goto $bb116;
$bb116:
  assume {:verifier.code 0} true;
  $i331 := $sub.i32(0, 5);
  goto $bb122;
$bb117:
  assume ($i324 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7595, 15} true;
  assume {:verifier.code 0} true;
  $i325 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7595, 25} true;
  assume {:verifier.code 0} true;
  $i326 := $ne.i32($i325, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7595, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i326} true;
  goto $bb119, $bb120;
$bb118:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7594, 13} true;
  assume {:verifier.code 0} true;
  assume !(($i324 == 1));
  goto $bb116;
$bb119:
  assume ($i326 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7596, 23} true;
  assume {:verifier.code 0} true;
  call $p327 := tape_name($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7597, 73} true;
  assume {:verifier.code 0} true;
  $p328 := $add.ref($p0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7597, 73} true;
  assume {:verifier.code 0} true;
  $p329 := $load.ref($M.0, $p328);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7597, 13} true;
  assume {:verifier.code 0} true;
  call sdev_prefix_printk.ref.ref.ref.ref(.str.12, $p329, $p327, .str.155);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7599, 11} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb120:
  assume !(($i326 == 1));
  assume {:verifier.code 0} true;
  goto $bb121;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7602, 17} true;
  assume {:verifier.code 0} true;
  $p330 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7602, 21} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i8($M.0, $p330, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7603, 9} true;
  assume {:verifier.code 0} true;
  $i331 := 1;
  goto $bb122;
$bb122:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  $i309 := $i331;
  goto $bb110;
$bb123:
  assume ($i334 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7608, 15} true;
  assume {:verifier.code 0} true;
  $p335 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7608, 28} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p335, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7609, 7} true;
  assume {:verifier.code 0} true;
  goto $bb125;
$bb124:
  assume !(($i334 == 1));
  assume {:verifier.code 0} true;
  goto $bb125;
$bb125:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7612, 5} true;
  assume {:verifier.code 0} true;
  $i336 := $i309;
  goto $bb126;
$bb126:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7615, 3} true;
  assume {:verifier.code 0} true;
  $i339 := $i336;
  goto $bb127;
$bb127:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7623, 13} true;
  assume {:verifier.code 0} true;
  $p354 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7623, 13} true;
  assume {:verifier.code 0} true;
  $i355 := $load.i32($M.0, $p354);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7623, 23} true;
  assume {:verifier.code 0} true;
  $i356 := $sge.i32($i355, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7623, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i356} true;
  goto $bb131, $bb132;
$bb128:
  assume ($i344 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7618, 34} true;
  assume {:verifier.code 0} true;
  $p345 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7618, 34} true;
  assume {:verifier.code 0} true;
  $i346 := $load.i32($M.0, $p345);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7618, 55} true;
  assume {:verifier.code 0} true;
  $p347 := $add.ref($p0, 272);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7618, 55} true;
  assume {:verifier.code 0} true;
  $p348 := $load.ref($M.0, $p347);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7618, 64} true;
  assume {:verifier.code 0} true;
  $p349 := $add.ref($p348, 40);
  $p350 := $add.ref($add.ref($p348, 40), 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7618, 72} true;
  assume {:verifier.code 0} true;
  $i351 := $load.i32($M.0, $p350);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7618, 47} true;
  assume {:verifier.code 0} true;
  $i352 := $sub.i32($i346, $i351);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7618, 13} true;
  assume {:verifier.code 0} true;
  $p353 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7618, 26} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p353, $i352);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7619, 5} true;
  assume {:verifier.code 0} true;
  goto $bb130;
$bb129:
  assume !(($i344 == 1));
  assume {:verifier.code 0} true;
  goto $bb130;
$bb130:
  assume {:verifier.code 0} true;
  $i339 := 0;
  goto $bb127;
$bb131:
  assume ($i356 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7624, 14} true;
  assume {:verifier.code 0} true;
  $p357 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7624, 14} true;
  assume {:verifier.code 0} true;
  $i358 := $load.i32($M.0, $p357);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7624, 25} true;
  assume {:verifier.code 0} true;
  $i359 := $eq.i32($i358, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7624, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i359} true;
  goto $bb133, $bb134;
$bb132:
  assume !(($i356 == 1));
  assume {:verifier.code 0} true;
  goto $bb136;
$bb133:
  assume ($i359 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7625, 31} true;
  assume {:verifier.code 0} true;
  $p360 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7625, 31} true;
  assume {:verifier.code 0} true;
  $i361 := $load.i32($M.0, $p360);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7625, 41} true;
  assume {:verifier.code 0} true;
  $i362 := $add.i32($i361, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7625, 13} true;
  assume {:verifier.code 0} true;
  $p363 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7625, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p363, $i362);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7626, 5} true;
  assume {:verifier.code 0} true;
  goto $bb135;
$bb134:
  assume !(($i359 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7627, 31} true;
  assume {:verifier.code 0} true;
  $p364 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7627, 31} true;
  assume {:verifier.code 0} true;
  $i365 := $load.i32($M.0, $p364);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7627, 49} true;
  assume {:verifier.code 0} true;
  $p366 := $add.ref($p23, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7627, 49} true;
  assume {:verifier.code 0} true;
  $i367 := $load.i32($M.0, $p366);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7627, 69} true;
  assume {:verifier.code 0} true;
  $p368 := $add.ref($p0, 640);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7627, 69} true;
  assume {:verifier.code 0} true;
  $i369 := $load.i32($M.0, $p368);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7627, 62} true;
  assume {:verifier.code 0} true;
  $i370 := $sdiv.i32($i367, $i369);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7627, 41} true;
  assume {:verifier.code 0} true;
  $i371 := $add.i32($i365, $i370);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7627, 13} true;
  assume {:verifier.code 0} true;
  $p372 := $add.ref($add.ref($p13, $mul.ref($i16, 16)), 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7627, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p372, $i371);
  assume {:verifier.code 0} true;
  goto $bb135;
$bb135:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7629, 3} true;
  assume {:verifier.code 0} true;
  goto $bb136;
$bb136:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7632, 11} true;
  assume {:verifier.code 0} true;
  $i373 := $sext.i32.i64($i339);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 7632, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i373;
  goto $bb3;
}
const from_buffer: ref;
axiom (from_buffer == $sub.ref(0, 488210));
procedure  from_buffer($p0: ref, $p1: ref, $i2: i32)
  returns ($r: i32)
{
  var $p3: ref;
  var $i4: i32;
  var $i5: i64;
  var $i6: i64;
  var $i7: i32;
  var $p8: ref;
  var $i9: i32;
  var $p10: ref;
  var $i11: i16;
  var $i12: i32;
  var $i13: i1;
  var $i14: i1;
  var $i15: i1;
  var $i20: i32;
  var $i21: i32;
  var $i22: i16;
  var $i23: i32;
  var $i24: i1;
  var $i25: i1;
  var $i26: i1;
  var $i18: i32;
  var $i19: i32;
  var $i27: i32;
  var $i28: i32;
  var $i16: i32;
  var $i17: i32;
  var $p29: ref;
  var $i30: i16;
  var $i31: i32;
  var $i32: i1;
  var $i33: i32;
  var $p35: ref;
  var $i36: i16;
  var $i37: i32;
  var $i38: i1;
  var $p44: ref;
  var $p45: ref;
  var $i46: i64;
  var $p47: ref;
  var $p48: ref;
  var $i49: i32;
  var $i50: i1;
  var $i52: i32;
  var $i51: i32;
  var $p53: ref;
  var $i54: i64;
  var $p55: ref;
  var $i56: i64;
  var $i57: i64;
  var $i58: i32;
  var $i59: i1;
  var $i60: i32;
  var $p61: ref;
  var $i62: i32;
  var $i63: i32;
  var $p64: ref;
  var $p65: ref;
  var $i66: i32;
  var $i67: i32;
  var $p68: ref;
  var $i69: i64;
  var $p70: ref;
  var $i71: i32;
  var $i72: i16;
  var $i73: i32;
  var $i74: i1;
  var $i40: i32;
  var $p41: ref;
  var $i42: i32;
  var $i43: i32;
  var $i76: i1;
  var $i77: i32;
  var $i75: i32;
  var $i39: i32;
  var $i78: i1;
  var $i34: i32;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !17130, metadata !5777), !dbg !17131, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10236, 36} true;
  assume {:verifier.code 0} true;
  $p3 := $add.ref($p0, 88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10236, 36} true;
  assume {:verifier.code 0} true;
  $i4 := $load.i32($M.0, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10236, 26} true;
  assume {:verifier.code 0} true;
  $i5 := $zext.i32.i64($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10236, 26} true;
  assume {:verifier.code 0} true;
  $i6 := $shl.i64(4096, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10236, 12} true;
  assume {:verifier.code 0} true;
  $i7 := $trunc.i64.i32($i6);
  // WARNING: %8 = trunc i64 %7 to i32, !dbg !5788, !verifier.code !5780
  call {:cexpr "length"} boogie_si_record_i32($i7);
  // WARNING: call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !17138, metadata !5777), !dbg !17139, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10238, 19} true;
  assume {:verifier.code 0} true;
  $p8 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10238, 19} true;
  assume {:verifier.code 0} true;
  $i9 := $load.i32($M.0, $p8);
  // WARNING: %10 = load i32, i32* %9, align 8, !dbg !5793, !verifier.code !5780
  call {:cexpr "offset"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 20} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 20} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i16($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 7} true;
  assume {:verifier.code 0} true;
  $i12 := $zext.i16.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 29} true;
  assume {:verifier.code 0} true;
  $i13 := $sgt.i32($i12, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 43} true;
  assume {:verifier.code 0} true;
  $i14 := $sge.i32($i9, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 33} true;
  assume {:verifier.code 0} true;
  $i15 := $and.i1($i13, $i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 33} true;
  assume {:verifier.code 0} true;
  $i16, $i17 := 0, $i9;
  assume {:branchcond $i15} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i15 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 33} true;
  assume {:verifier.code 0} true;
  $i18, $i19 := $i9, 0;
  goto $bb4;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 33} true;
  assume {:verifier.code 0} true;
  assume !(($i15 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb4:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10245, 5} true;
  assume {:verifier.code 0} true;
  goto $bb5;
$bb5:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10241, 19} true;
  assume {:verifier.code 0} true;
  $i20 := $sub.i32($i18, $i7);
  // WARNING: %17 = sub nsw i32 %.0115, %8, !dbg !5803, !verifier.code !5780
  call {:cexpr "offset"} boogie_si_record_i32($i20);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10242, 9} true;
  assume {:verifier.code 0} true;
  $i21 := $add.i32($i19, 1);
  // WARNING: %18 = add nsw i32 %.0414, 1, !dbg !5804, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 20} true;
  assume {:verifier.code 0} true;
  $i22 := $load.i16($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 7} true;
  assume {:verifier.code 0} true;
  $i23 := $zext.i16.i32($i22);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 29} true;
  assume {:verifier.code 0} true;
  $i24 := $sgt.i32($i23, $i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 43} true;
  assume {:verifier.code 0} true;
  $i25 := $sge.i32($i20, $i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 33} true;
  assume {:verifier.code 0} true;
  $i26 := $and.i1($i24, $i25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 33} true;
  assume {:verifier.code 0} true;
  $i18, $i19, $i27, $i28 := $i20, $i21, $i21, $i20;
  assume {:branchcond $i26} true;
  goto $bb6, $bb7;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 33} true;
  assume {:verifier.code 0} true;
  assume ($i26 == 1);
  goto $bb4;
$bb7:
  assume !(($i26 == 1));
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10244, 33} true;
  assume {:verifier.code 0} true;
  $i16, $i17 := $i27, $i28;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10250, 20} true;
  assume {:verifier.code 0} true;
  $p29 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10250, 20} true;
  assume {:verifier.code 0} true;
  $i30 := $load.i16($M.0, $p29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10250, 7} true;
  assume {:verifier.code 0} true;
  $i31 := $zext.i16.i32($i30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10250, 29} true;
  assume {:verifier.code 0} true;
  $i32 := $eq.i32($i31, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10250, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i32} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i32 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10251, 5} true;
  assume {:verifier.code 0} true;
  call $i33 := printk.ref(.str.156);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10252, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32(0, 5);
  goto $bb11;
$bb10:
  assume !(($i32 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10289, 1} true;
  assume {:verifier.code 0} true;
  $r := $i34;
  $exn := false;
  return;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 20} true;
  assume {:verifier.code 0} true;
  $p35 := $add.ref($p0, 148);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 20} true;
  assume {:verifier.code 0} true;
  $i36 := $load.i16($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 7} true;
  assume {:verifier.code 0} true;
  $i37 := $zext.i16.i32($i36);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 29} true;
  assume {:verifier.code 0} true;
  $i38 := $sgt.i32($i37, $i16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 33} true;
  assume {:verifier.code 0} true;
  $i39 := $i2;
  assume {:branchcond $i38} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i38 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 33} true;
  assume {:verifier.code 0} true;
  $i40, $p41, $i42, $i43 := $i17, $p1, $i2, $i16;
  goto $bb16;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 33} true;
  assume {:verifier.code 0} true;
  assume !(($i38 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb16:
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 45} true;
  assume {:verifier.code 0} true;
  $i76 := $sgt.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 7} true;
  assume {:verifier.code 0} true;
  $i77 := $i42;
  assume {:branchcond $i76} true;
  goto $bb26, $bb27;
$bb17:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10258, 19} true;
  assume {:verifier.code 0} true;
  $p44 := $add.ref($p0, 80);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10258, 19} true;
  assume {:verifier.code 0} true;
  $p45 := $load.ref($M.0, $p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10258, 36} true;
  assume {:verifier.code 0} true;
  $i46 := $sext.i32.i64($i43);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10258, 34} true;
  assume {:verifier.code 0} true;
  $p47 := $add.ref($p45, $mul.ref($i46, 8));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10258, 10} true;
  assume {:verifier.code 0} true;
  $p48 := $load.ref($M.0, $p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10259, 27} true;
  assume {:verifier.code 0} true;
  $i49 := $sub.i32($i7, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10259, 18} true;
  assume {:verifier.code 0} true;
  $i50 := $slt.i32($i42, $i49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10259, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i50} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i50 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10259, 9} true;
  assume {:verifier.code 0} true;
  $i51 := $i42;
  goto $bb20;
$bb19:
  assume !(($i50 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10259, 56} true;
  assume {:verifier.code 0} true;
  $i52 := $sub.i32($i7, $i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10259, 9} true;
  assume {:verifier.code 0} true;
  $i51 := $i52;
  goto $bb20;
$bb20:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10259, 9} true;
  assume {:verifier.code 0} true;
  // WARNING: %50 = phi i32 [ %.038, %46 ], [ %48, %47 ], !dbg !5834, !verifier.code !5780
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10260, 9} true;
  assume {:verifier.code 0} true;
  call $p53 := lowmem_page_address($p48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10261, 61} true;
  assume {:verifier.code 0} true;
  $i54 := $sext.i32.i64($i40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10261, 59} true;
  assume {:verifier.code 0} true;
  $p55 := $add.ref($p53, $mul.ref($i54, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10262, 26} true;
  assume {:verifier.code 0} true;
  $i56 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10261, 13} true;
  assume {:verifier.code 0} true;
  call $i57 := copy_to_user($p41, $p55, $i56);
  // WARNING: %55 = call i64 @copy_to_user(i8* %.029, i8* %53, i64 %54), !dbg !5844, !verifier.code !5780
  call {:cexpr "tmp___0"} boogie_si_record_i64($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10263, 9} true;
  assume {:verifier.code 0} true;
  $i58 := $trunc.i64.i32($i57);
  // WARNING: %56 = trunc i64 %55 to i32, !dbg !5847, !verifier.code !5780
  call {:cexpr "res"} boogie_si_record_i32($i58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10264, 11} true;
  assume {:verifier.code 0} true;
  $i59 := $ne.i32($i58, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10264, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i59} true;
  goto $bb21, $bb22;
$bb21:
  assume ($i59 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10265, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32(0, 14);
  goto $bb11;
$bb22:
  assume !(($i59 == 1));
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10269, 23} true;
  assume {:verifier.code 0} true;
  $i60 := $sub.i32($i42, $i51);
  // WARNING: %61 = sub nsw i32 %.038, %50, !dbg !5855, !verifier.code !5780
  call {:cexpr "do_count"} boogie_si_record_i32($i60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10270, 32} true;
  assume {:verifier.code 0} true;
  $p61 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10270, 32} true;
  assume {:verifier.code 0} true;
  $i62 := $load.i32($M.0, $p61);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10270, 45} true;
  assume {:verifier.code 0} true;
  $i63 := $sub.i32($i62, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10270, 10} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p0, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10270, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p64, $i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10271, 32} true;
  assume {:verifier.code 0} true;
  $p65 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10271, 32} true;
  assume {:verifier.code 0} true;
  $i66 := $load.i32($M.0, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10271, 45} true;
  assume {:verifier.code 0} true;
  $i67 := $add.i32($i66, $i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10271, 10} true;
  assume {:verifier.code 0} true;
  $p68 := $add.ref($p0, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10271, 23} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p68, $i67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10272, 15} true;
  assume {:verifier.code 0} true;
  $i69 := $sext.i32.i64($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10272, 13} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p41, $mul.ref($i69, 1));
  // WARNING: call void @llvm.dbg.value(metadata i8* %71, i64 0, metadata !17130, metadata !5777), !dbg !17131, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10274, 9} true;
  assume {:verifier.code 0} true;
  $i71 := $add.i32($i43, 1);
  // WARNING: %72 = add nsw i32 %.157, 1, !dbg !5866, !verifier.code !5780
  call {:cexpr "i"} boogie_si_record_i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 20} true;
  assume {:verifier.code 0} true;
  $i72 := $load.i16($M.0, $p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 7} true;
  assume {:verifier.code 0} true;
  $i73 := $zext.i16.i32($i72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 29} true;
  assume {:verifier.code 0} true;
  $i74 := $sgt.i32($i73, $i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 33} true;
  assume {:verifier.code 0} true;
  $i40, $p41, $i42, $i43, $i75 := 0, $p70, $i60, $i71, $i60;
  assume {:branchcond $i74} true;
  goto $bb24, $bb25;
$bb24:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 33} true;
  assume {:verifier.code 0} true;
  assume ($i74 == 1);
  goto $bb16;
$bb25:
  assume !(($i74 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 33} true;
  assume {:verifier.code 0} true;
  $i39 := $i75;
  goto $bb15;
$bb26:
  assume ($i76 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10277, 5} true;
  assume {:verifier.code 0} true;
  goto $bb17;
$bb27:
  assume !(($i76 == 1));
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10276, 7} true;
  assume {:verifier.code 0} true;
  $i39 := $i77;
  goto $bb15;
$bb28:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10282, 16} true;
  assume {:verifier.code 0} true;
  $i78 := $ne.i32($i39, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10282, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i78} true;
  goto $bb29, $bb30;
$bb29:
  assume ($i78 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10283, 5} true;
  assume {:verifier.code 0} true;
  $i34 := $sub.i32(0, 5);
  goto $bb11;
$bb30:
  assume !(($i78 == 1));
  assume {:verifier.code 0} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10287, 3} true;
  assume {:verifier.code 0} true;
  $i34 := 0;
  goto $bb11;
}
const defined_show: ref;
axiom (defined_show == $sub.ref(0, 489242));
procedure  defined_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i32;
  var $i9: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10992, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10993, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_modedef* %5, i64 0, metadata !17240, metadata !5777), !dbg !17241, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10995, 54} true;
  assume {:verifier.code 0} true;
  $p5 := $p4;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10995, 54} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10995, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10995, 13} true;
  assume {:verifier.code 0} true;
  call $i8 := snprintf.ref.i64.ref.i32($p2, 4096, .str.76, $i7);
  // WARNING: %9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i32 %8), !dbg !5794, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10996, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $sext.i32.i64($i8);
  // WARNING: %10 = sext i32 %9 to i64, !dbg !5797, !verifier.code !5778
  call {:cexpr "l"} boogie_si_record_i64($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10997, 3} true;
  assume {:verifier.code 0} true;
  $r := $i9;
  $exn := false;
  return;
}
const default_blksize_show: ref;
axiom (default_blksize_show == $sub.ref(0, 490274));
procedure  default_blksize_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i32;
  var $i7: i32;
  var $i8: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11012, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11013, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_modedef* %5, i64 0, metadata !17263, metadata !5777), !dbg !17264, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11015, 48} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11015, 48} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i32($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11015, 13} true;
  assume {:verifier.code 0} true;
  call $i7 := snprintf.ref.i64.ref.i32($p2, 4096, .str.76, $i6);
  // WARNING: %8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i32 %7), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11016, 7} true;
  assume {:verifier.code 0} true;
  $i8 := $sext.i32.i64($i7);
  // WARNING: %9 = sext i32 %8 to i64, !dbg !5796, !verifier.code !5778
  call {:cexpr "l"} boogie_si_record_i64($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11017, 3} true;
  assume {:verifier.code 0} true;
  $r := $i8;
  $exn := false;
  return;
}
const default_density_show: ref;
axiom (default_density_show == $sub.ref(0, 491306));
procedure  default_density_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i16;
  var $i7: i32;
  var $i8: i1;
  var $p9: ref;
  var $p10: ref;
  var $i11: i16;
  var $i12: i32;
  var $i13: i32;
  var $i14: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11033, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11034, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_modedef* %5, i64 0, metadata !17285, metadata !5777), !dbg !17286, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11036, 20} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11036, 20} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i16($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11036, 9} true;
  assume {:verifier.code 0} true;
  $i7 := $sext.i16.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11036, 36} true;
  assume {:verifier.code 0} true;
  $i8 := $sge.i32($i7, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11036, 9} true;
  assume {:verifier.code 0} true;
  havoc $p9;
  assume ((($i8 == 1) ==> ($p9 == .str.88)) && (($i8 != 1) ==> ($p9 == .str.76)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11037, 67} true;
  assume {:verifier.code 0} true;
  $p10 := $add.ref($p4, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11037, 67} true;
  assume {:verifier.code 0} true;
  $i11 := $load.i16($M.0, $p10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11037, 56} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i16.i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11037, 13} true;
  assume {:verifier.code 0} true;
  call $i13 := snprintf.ref.i64.ref.i32($p2, 4096, $p9, $i12);
  // WARNING: %14 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* %10, i32 %13), !dbg !5799, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11038, 7} true;
  assume {:verifier.code 0} true;
  $i14 := $sext.i32.i64($i13);
  // WARNING: %15 = sext i32 %14 to i64, !dbg !5802, !verifier.code !5778
  call {:cexpr "l"} boogie_si_record_i64($i14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11039, 3} true;
  assume {:verifier.code 0} true;
  $r := $i14;
  $exn := false;
  return;
}
const default_compression_show: ref;
axiom (default_compression_show == $sub.ref(0, 492338));
procedure  default_compression_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $i6: i8;
  var $i7: i32;
  var $i8: i32;
  var $i9: i32;
  var $i10: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11054, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11055, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  // WARNING: call void @llvm.dbg.value(metadata %struct.st_modedef* %5, i64 0, metadata !17313, metadata !5777), !dbg !17314, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11057, 54} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11057, 54} true;
  assume {:verifier.code 0} true;
  $i6 := $load.i8($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11057, 43} true;
  assume {:verifier.code 0} true;
  $i7 := $zext.i8.i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11057, 74} true;
  assume {:verifier.code 0} true;
  $i8 := $add.i32($i7, $sub.i32(0, 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11057, 13} true;
  assume {:verifier.code 0} true;
  call $i9 := snprintf.ref.i64.ref.i32($p2, 4096, .str.76, $i8);
  // WARNING: %10 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i32 %9), !dbg !5795, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11058, 7} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i9);
  // WARNING: %11 = sext i32 %10 to i64, !dbg !5798, !verifier.code !5778
  call {:cexpr "l"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11059, 3} true;
  assume {:verifier.code 0} true;
  $r := $i10;
  $exn := false;
  return;
}
const options_show: ref;
axiom (options_show == $sub.ref(0, 493370));
procedure  options_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $i8: i8;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $p12: ref;
  var $i13: i8;
  var $i14: i32;
  var $i15: i1;
  var $i16: i32;
  var $i17: i32;
  var $p18: ref;
  var $i19: i8;
  var $i20: i32;
  var $i21: i1;
  var $i22: i32;
  var $i23: i32;
  var $i24: i32;
  var $i25: i1;
  var $i26: i32;
  var $i27: i32;
  var $p28: ref;
  var $i29: i8;
  var $i30: i32;
  var $i31: i1;
  var $i32: i32;
  var $i33: i32;
  var $p34: ref;
  var $i35: i8;
  var $i36: i32;
  var $i37: i1;
  var $i38: i32;
  var $i39: i32;
  var $p40: ref;
  var $i41: i8;
  var $i42: i32;
  var $i43: i1;
  var $i44: i32;
  var $i45: i32;
  var $p46: ref;
  var $i47: i8;
  var $i48: i32;
  var $i49: i1;
  var $i50: i32;
  var $i51: i32;
  var $p52: ref;
  var $i53: i8;
  var $i54: i32;
  var $i55: i1;
  var $i56: i32;
  var $i57: i32;
  var $p58: ref;
  var $i59: i8;
  var $i60: i32;
  var $i61: i1;
  var $i62: i32;
  var $i63: i32;
  var $p64: ref;
  var $i65: i8;
  var $i66: i32;
  var $i67: i1;
  var $i68: i32;
  var $i69: i32;
  var $p70: ref;
  var $i71: i8;
  var $i72: i32;
  var $i73: i1;
  var $i74: i32;
  var $i75: i32;
  var $p76: ref;
  var $i77: i8;
  var $i78: i32;
  var $i79: i1;
  var $i80: i32;
  var $i81: i32;
  var $p82: ref;
  var $i83: i8;
  var $i84: i32;
  var $i85: i1;
  var $i86: i32;
  var $i87: i32;
  var $p88: ref;
  var $i89: i8;
  var $i90: i32;
  var $i91: i1;
  var $i92: i32;
  var $i93: i32;
  var $i94: i32;
  var $i95: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11076, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11077, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11078, 14} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11078, 14} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  // WARNING: call void @llvm.dbg.value(metadata %struct.scsi_tape* %7, i64 0, metadata !17340, metadata !5777), !dbg !17341, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11080, 33} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p4, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11080, 33} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i8($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11080, 13} true;
  assume {:verifier.code 0} true;
  $i9 := $zext.i8.i32($i8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11080, 50} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11080, 50} true;
  assume {:verifier.code 0} true;
  $i11 := $zext.i1.i32($i10);
  // WARNING: %12 = zext i1 %11 to i32, !dbg !5797, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11081, 34} true;
  assume {:verifier.code 0} true;
  $p12 := $add.ref($p4, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11081, 34} true;
  assume {:verifier.code 0} true;
  $i13 := $load.i8($M.0, $p12);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11081, 14} true;
  assume {:verifier.code 0} true;
  $i14 := $zext.i8.i32($i13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11081, 50} true;
  assume {:verifier.code 0} true;
  $i15 := $ne.i32($i14, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11081, 14} true;
  assume {:verifier.code 0} true;
  havoc $i16;
  assume ((($i15 == 1) ==> ($i16 == 2)) && (($i15 != 1) ==> ($i16 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11081, 65} true;
  assume {:verifier.code 0} true;
  $i17 := $or.i32($i16, $i11);
  // WARNING: %18 = or i32 %17, %12, !dbg !5803, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11082, 34} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p4, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11082, 34} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i8($M.0, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11082, 14} true;
  assume {:verifier.code 0} true;
  $i20 := $zext.i8.i32($i19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11082, 48} true;
  assume {:verifier.code 0} true;
  $i21 := $ne.i32($i20, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11082, 14} true;
  assume {:verifier.code 0} true;
  havoc $i22;
  assume ((($i21 == 1) ==> ($i22 == 4)) && (($i21 != 1) ==> ($i22 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11082, 63} true;
  assume {:verifier.code 0} true;
  $i23 := $or.i32($i22, $i17);
  // WARNING: %24 = or i32 %23, %18, !dbg !5807, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11083, 14} true;
  assume {:verifier.code 0} true;
  $i24 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11083, 24} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11083, 14} true;
  assume {:verifier.code 0} true;
  havoc $i26;
  assume ((($i25 == 1) ==> ($i26 == 8)) && (($i25 != 1) ==> ($i26 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11083, 38} true;
  assume {:verifier.code 0} true;
  $i27 := $or.i32($i26, $i23);
  // WARNING: %28 = or i32 %27, %24, !dbg !5810, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i27);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11084, 34} true;
  assume {:verifier.code 0} true;
  $p28 := $add.ref($p6, 288);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11084, 34} true;
  assume {:verifier.code 0} true;
  $i29 := $load.i8($M.0, $p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11084, 14} true;
  assume {:verifier.code 0} true;
  $i30 := $zext.i8.i32($i29);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11084, 41} true;
  assume {:verifier.code 0} true;
  $i31 := $ne.i32($i30, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11084, 14} true;
  assume {:verifier.code 0} true;
  havoc $i32;
  assume ((($i31 == 1) ==> ($i32 == 16)) && (($i31 != 1) ==> ($i32 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11084, 57} true;
  assume {:verifier.code 0} true;
  $i33 := $or.i32($i32, $i27);
  // WARNING: %34 = or i32 %33, %28, !dbg !5814, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11085, 34} true;
  assume {:verifier.code 0} true;
  $p34 := $add.ref($p6, 289);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11085, 34} true;
  assume {:verifier.code 0} true;
  $i35 := $load.i8($M.0, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11085, 14} true;
  assume {:verifier.code 0} true;
  $i36 := $zext.i8.i32($i35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11085, 45} true;
  assume {:verifier.code 0} true;
  $i37 := $ne.i32($i36, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11085, 14} true;
  assume {:verifier.code 0} true;
  havoc $i38;
  assume ((($i37 == 1) ==> ($i38 == 32)) && (($i37 != 1) ==> ($i38 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11085, 61} true;
  assume {:verifier.code 0} true;
  $i39 := $or.i32($i38, $i33);
  // WARNING: %40 = or i32 %39, %34, !dbg !5818, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11086, 34} true;
  assume {:verifier.code 0} true;
  $p40 := $add.ref($p4, 5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11086, 34} true;
  assume {:verifier.code 0} true;
  $i41 := $load.i8($M.0, $p40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11086, 14} true;
  assume {:verifier.code 0} true;
  $i42 := $zext.i8.i32($i41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11086, 54} true;
  assume {:verifier.code 0} true;
  $i43 := $ne.i32($i42, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11086, 14} true;
  assume {:verifier.code 0} true;
  havoc $i44;
  assume ((($i43 == 1) ==> ($i44 == 128)) && (($i43 != 1) ==> ($i44 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11086, 71} true;
  assume {:verifier.code 0} true;
  $i45 := $or.i32($i44, $i39);
  // WARNING: %46 = or i32 %45, %40, !dbg !5822, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i45);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11087, 34} true;
  assume {:verifier.code 0} true;
  $p46 := $add.ref($p6, 286);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11087, 34} true;
  assume {:verifier.code 0} true;
  $i47 := $load.i8($M.0, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11087, 14} true;
  assume {:verifier.code 0} true;
  $i48 := $zext.i8.i32($i47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11087, 42} true;
  assume {:verifier.code 0} true;
  $i49 := $ne.i32($i48, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11087, 14} true;
  assume {:verifier.code 0} true;
  havoc $i50;
  assume ((($i49 == 1) ==> ($i50 == 256)) && (($i49 != 1) ==> ($i50 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11087, 59} true;
  assume {:verifier.code 0} true;
  $i51 := $or.i32($i50, $i45);
  // WARNING: %52 = or i32 %51, %46, !dbg !5826, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11088, 34} true;
  assume {:verifier.code 0} true;
  $p52 := $add.ref($p6, 284);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11088, 34} true;
  assume {:verifier.code 0} true;
  $i53 := $load.i8($M.0, $p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11088, 14} true;
  assume {:verifier.code 0} true;
  $i54 := $zext.i8.i32($i53);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11088, 47} true;
  assume {:verifier.code 0} true;
  $i55 := $ne.i32($i54, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11088, 14} true;
  assume {:verifier.code 0} true;
  havoc $i56;
  assume ((($i55 == 1) ==> ($i56 == 512)) && (($i55 != 1) ==> ($i56 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11088, 64} true;
  assume {:verifier.code 0} true;
  $i57 := $or.i32($i56, $i51);
  // WARNING: %58 = or i32 %57, %52, !dbg !5830, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11089, 34} true;
  assume {:verifier.code 0} true;
  $p58 := $add.ref($p6, 287);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11089, 34} true;
  assume {:verifier.code 0} true;
  $i59 := $load.i8($M.0, $p58);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11089, 14} true;
  assume {:verifier.code 0} true;
  $i60 := $zext.i8.i32($i59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11089, 49} true;
  assume {:verifier.code 0} true;
  $i61 := $ne.i32($i60, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11089, 14} true;
  assume {:verifier.code 0} true;
  havoc $i62;
  assume ((($i61 == 1) ==> ($i62 == 1024)) && (($i61 != 1) ==> ($i62 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11089, 67} true;
  assume {:verifier.code 0} true;
  $i63 := $or.i32($i62, $i57);
  // WARNING: %64 = or i32 %63, %58, !dbg !5834, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11090, 34} true;
  assume {:verifier.code 0} true;
  $p64 := $add.ref($p6, 292);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11090, 34} true;
  assume {:verifier.code 0} true;
  $i65 := $load.i8($M.0, $p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11090, 14} true;
  assume {:verifier.code 0} true;
  $i66 := $zext.i8.i32($i65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11090, 48} true;
  assume {:verifier.code 0} true;
  $i67 := $ne.i32($i66, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11090, 14} true;
  assume {:verifier.code 0} true;
  havoc $i68;
  assume ((($i67 == 1) ==> ($i68 == 2048)) && (($i67 != 1) ==> ($i68 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11090, 66} true;
  assume {:verifier.code 0} true;
  $i69 := $or.i32($i68, $i63);
  // WARNING: %70 = or i32 %69, %64, !dbg !5838, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11091, 34} true;
  assume {:verifier.code 0} true;
  $p70 := $add.ref($p4, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11091, 34} true;
  assume {:verifier.code 0} true;
  $i71 := $load.i8($M.0, $p70);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11091, 14} true;
  assume {:verifier.code 0} true;
  $i72 := $zext.i8.i32($i71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11091, 39} true;
  assume {:verifier.code 0} true;
  $i73 := $ne.i32($i72, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11091, 14} true;
  assume {:verifier.code 0} true;
  havoc $i74;
  assume ((($i73 == 1) ==> ($i74 == 4096)) && (($i73 != 1) ==> ($i74 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11091, 57} true;
  assume {:verifier.code 0} true;
  $i75 := $or.i32($i74, $i69);
  // WARNING: %76 = or i32 %75, %70, !dbg !5842, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i75);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11092, 34} true;
  assume {:verifier.code 0} true;
  $p76 := $add.ref($p6, 290);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11092, 34} true;
  assume {:verifier.code 0} true;
  $i77 := $load.i8($M.0, $p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11092, 14} true;
  assume {:verifier.code 0} true;
  $i78 := $zext.i8.i32($i77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11092, 44} true;
  assume {:verifier.code 0} true;
  $i79 := $ne.i32($i78, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11092, 14} true;
  assume {:verifier.code 0} true;
  havoc $i80;
  assume ((($i79 == 1) ==> ($i80 == 8192)) && (($i79 != 1) ==> ($i80 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11092, 62} true;
  assume {:verifier.code 0} true;
  $i81 := $or.i32($i80, $i75);
  // WARNING: %82 = or i32 %81, %76, !dbg !5846, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11093, 34} true;
  assume {:verifier.code 0} true;
  $p82 := $add.ref($p6, 303);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11093, 34} true;
  assume {:verifier.code 0} true;
  $i83 := $load.i8($M.0, $p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11093, 14} true;
  assume {:verifier.code 0} true;
  $i84 := $zext.i8.i32($i83);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11093, 53} true;
  assume {:verifier.code 0} true;
  $i85 := $ne.i32($i84, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11093, 14} true;
  assume {:verifier.code 0} true;
  havoc $i86;
  assume ((($i85 == 1) ==> ($i86 == 32768)) && (($i85 != 1) ==> ($i86 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11093, 72} true;
  assume {:verifier.code 0} true;
  $i87 := $or.i32($i86, $i81);
  // WARNING: %88 = or i32 %87, %82, !dbg !5850, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i87);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11094, 34} true;
  assume {:verifier.code 0} true;
  $p88 := $add.ref($p6, 302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11094, 34} true;
  assume {:verifier.code 0} true;
  $i89 := $load.i8($M.0, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11094, 14} true;
  assume {:verifier.code 0} true;
  $i90 := $zext.i8.i32($i89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11094, 39} true;
  assume {:verifier.code 0} true;
  $i91 := $ne.i32($i90, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11094, 14} true;
  assume {:verifier.code 0} true;
  havoc $i92;
  assume ((($i91 == 1) ==> ($i92 == 16384)) && (($i91 != 1) ==> ($i92 == 0)));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11094, 58} true;
  assume {:verifier.code 0} true;
  $i93 := $or.i32($i92, $i87);
  // WARNING: %94 = or i32 %93, %88, !dbg !5854, !verifier.code !5778
  call {:cexpr "options"} boogie_si_record_i32($i93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11095, 13} true;
  assume {:verifier.code 0} true;
  call $i94 := snprintf.ref.i64.ref.i32($p2, 4096, .str, $i93);
  // WARNING: %95 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 %94), !dbg !5855, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i32($i94);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11096, 7} true;
  assume {:verifier.code 0} true;
  $i95 := $sext.i32.i64($i94);
  // WARNING: %96 = sext i32 %95 to i64, !dbg !5858, !verifier.code !5778
  call {:cexpr "l"} boogie_si_record_i64($i95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11097, 3} true;
  assume {:verifier.code 0} true;
  $r := $i95;
  $exn := false;
  return;
}
const read_cnt_show: ref;
axiom (read_cnt_show == $sub.ref(0, 494402));
procedure  read_cnt_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11112, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11113, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11114, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11114, 59} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11114, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11114, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11114, 74} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11114, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := atomic64_read($p9);
  // WARNING: %11 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %10), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11115, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := sprintf.ref.ref.i64($p2, .str.75, $i10);
  // WARNING: %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 %11), !dbg !5796, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11116, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11116, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const read_byte_cnt_show: ref;
axiom (read_byte_cnt_show == $sub.ref(0, 495434));
procedure  read_byte_cnt_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11131, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11132, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11133, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11133, 59} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11133, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11133, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11133, 74} true;
  assume {:verifier.code 0} true;
  $p9 := $p8;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11133, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := atomic64_read($p9);
  // WARNING: %11 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %10), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11134, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := sprintf.ref.ref.i64($p2, .str.75, $i10);
  // WARNING: %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 %11), !dbg !5796, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11135, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11135, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const read_ns_show: ref;
axiom (read_ns_show == $sub.ref(0, 496466));
procedure  read_ns_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11149, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11150, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11151, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11151, 59} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11151, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11151, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11151, 74} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11151, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := atomic64_read($p9);
  // WARNING: %11 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %10), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11152, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := sprintf.ref.ref.i64($p2, .str.75, $i10);
  // WARNING: %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 %11), !dbg !5796, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11153, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11153, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const write_cnt_show: ref;
axiom (write_cnt_show == $sub.ref(0, 497498));
procedure  write_cnt_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11168, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11169, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11170, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11170, 59} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11170, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11170, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11170, 74} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 32);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11170, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := atomic64_read($p9);
  // WARNING: %11 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %10), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11171, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := sprintf.ref.ref.i64($p2, .str.75, $i10);
  // WARNING: %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 %11), !dbg !5796, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11172, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11172, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const write_byte_cnt_show: ref;
axiom (write_byte_cnt_show == $sub.ref(0, 498530));
procedure  write_byte_cnt_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11187, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11188, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11189, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11189, 59} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11189, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11189, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11189, 74} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11189, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := atomic64_read($p9);
  // WARNING: %11 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %10), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11190, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := sprintf.ref.ref.i64($p2, .str.75, $i10);
  // WARNING: %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 %11), !dbg !5796, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11191, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11191, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const write_ns_show: ref;
axiom (write_ns_show == $sub.ref(0, 499562));
procedure  write_ns_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11206, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11207, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11208, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11208, 59} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11208, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11208, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11208, 74} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11208, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := atomic64_read($p9);
  // WARNING: %11 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %10), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11209, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := sprintf.ref.ref.i64($p2, .str.75, $i10);
  // WARNING: %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 %11), !dbg !5796, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11210, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11210, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const in_flight_show: ref;
axiom (in_flight_show == $sub.ref(0, 500594));
procedure  in_flight_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11225, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11226, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11227, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11227, 59} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11227, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11227, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11227, 74} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11227, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := atomic64_read($p9);
  // WARNING: %11 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %10), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11228, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := sprintf.ref.ref.i64($p2, .str.75, $i10);
  // WARNING: %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 %11), !dbg !5796, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11229, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11229, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const io_ns_show: ref;
axiom (io_ns_show == $sub.ref(0, 501626));
procedure  io_ns_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11243, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11244, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11245, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11245, 59} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11245, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11245, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11245, 74} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11245, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := atomic64_read($p9);
  // WARNING: %11 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %10), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11246, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := sprintf.ref.ref.i64($p2, .str.75, $i10);
  // WARNING: %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 %11), !dbg !5796, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11247, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11247, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const other_cnt_show: ref;
axiom (other_cnt_show == $sub.ref(0, 502658));
procedure  other_cnt_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11262, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11263, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11264, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11264, 59} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11264, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11264, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11264, 74} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 40);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11264, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := atomic64_read($p9);
  // WARNING: %11 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %10), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11265, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := sprintf.ref.ref.i64($p2, .str.75, $i10);
  // WARNING: %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 %11), !dbg !5796, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11266, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11266, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const resid_cnt_show: ref;
axiom (resid_cnt_show == $sub.ref(0, 503690));
procedure  resid_cnt_show($p0: ref, $p1: ref, $p2: ref)
  returns ($r: i64)
{
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $i10: i64;
  var $i11: i32;
  var $i12: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11281, 9} true;
  assume {:verifier.code 0} true;
  call $p3 := dev_get_drvdata($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11282, 9} true;
  assume {:verifier.code 0} true;
  $p4 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11283, 59} true;
  assume {:verifier.code 0} true;
  $p5 := $add.ref($p4, 16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11283, 59} true;
  assume {:verifier.code 0} true;
  $p6 := $load.ref($M.0, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11283, 66} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p6, 728);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11283, 66} true;
  assume {:verifier.code 0} true;
  $p8 := $load.ref($M.0, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11283, 74} true;
  assume {:verifier.code 0} true;
  $p9 := $add.ref($p8, 48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11283, 13} true;
  assume {:verifier.code 0} true;
  call $i10 := atomic64_read($p9);
  // WARNING: %11 = call i64 @atomic64_read(%union.__anonunion____missing_field_name_221* %10), !dbg !5793, !verifier.code !5778
  call {:cexpr "tmp___0"} boogie_si_record_i64($i10);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11284, 13} true;
  assume {:verifier.code 0} true;
  call $i11 := sprintf.ref.ref.i64($p2, .str.75, $i10);
  // WARNING: %12 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 %11), !dbg !5796, !verifier.code !5778
  call {:cexpr "tmp___1"} boogie_si_record_i32($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11285, 11} true;
  assume {:verifier.code 0} true;
  $i12 := $sext.i32.i64($i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11285, 3} true;
  assume {:verifier.code 0} true;
  $r := $i12;
  $exn := false;
  return;
}
const st_version_show: ref;
axiom (st_version_show == $sub.ref(0, 504722));
procedure  st_version_show($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $p2: ref;
  var $i3: i32;
  var $i4: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10923, 41} true;
  assume {:verifier.code 0} true;
  $p2 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10923, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := snprintf.ref.i64.ref.ref($p1, 4096, .str.87, $p2);
  // WARNING: %4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.87, i32 0, i32 0), i8* %3), !dbg !5783, !verifier.code !5778
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10924, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10924, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const st_max_sg_segs_show: ref;
axiom (st_max_sg_segs_show == $sub.ref(0, 505754));
procedure  st_max_sg_segs_show($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10910, 39} true;
  assume {:verifier.code 0} true;
  $i2 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10910, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := snprintf.ref.i64.ref.i32($p1, 4096, .str.76, $i2);
  // WARNING: %4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i32 %3), !dbg !5783, !verifier.code !5778
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10911, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10911, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const st_fixed_buffer_size_show: ref;
axiom (st_fixed_buffer_size_show == $sub.ref(0, 506786));
procedure  st_fixed_buffer_size_show($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10897, 39} true;
  assume {:verifier.code 0} true;
  $i2 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10897, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := snprintf.ref.i64.ref.i32($p1, 4096, .str.76, $i2);
  // WARNING: %4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i32 %3), !dbg !5783, !verifier.code !5778
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10898, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10898, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const st_try_direct_io_show: ref;
axiom (st_try_direct_io_show == $sub.ref(0, 507818));
procedure  st_try_direct_io_show($p0: ref, $p1: ref)
  returns ($r: i64)
{
  var $i2: i32;
  var $i3: i32;
  var $i4: i64;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10884, 39} true;
  assume {:verifier.code 0} true;
  $i2 := $M.2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10884, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := snprintf.ref.i64.ref.i32($p1, 4096, .str.76, $i2);
  // WARNING: %4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i32 %3), !dbg !5783, !verifier.code !5778
  call {:cexpr "tmp"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10885, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $sext.i32.i64($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10885, 3} true;
  assume {:verifier.code 0} true;
  $r := $i4;
  $exn := false;
  return;
}
const ldv_init_zalloc: ref;
axiom (ldv_init_zalloc == $sub.ref(0, 508850));
procedure  ldv_init_zalloc($i0: i64)
  returns ($r: ref)
{
  var $p1: ref;
  var $i2: i64;
  var $i3: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4496, 9} true;
  assume {:verifier.code 0} true;
  call $p1 := calloc(1, $i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4498, 21} true;
  assume {:verifier.code 1} true;
  $i2 := $p2i.ref.i64($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4498, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $ne.i64($i2, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4498, 39} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4498, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4499, 3} true;
  assume {:verifier.code 0} true;
  $r := $p1;
  $exn := false;
  return;
}
const ldv_memset: ref;
axiom (ldv_memset == $sub.ref(0, 509882));
procedure  ldv_memset($p0: ref, $i1: i32, $i2: i64)
  returns ($r: ref)
{
  var $i3: i8;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !17725, metadata !5777), !dbg !17726, !verifier.code !5775
  // WARNING: call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !17727, metadata !5777), !dbg !17728, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4507, 9} true;
  assume {:verifier.code 0} true;
  $i3 := $trunc.i32.i8($i1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4507, 9} true;
  assume {:verifier.code 0} true;
  call $M.21 := $memset.i8($M.21, $p0, $i3, $i2, $zext.i32.i64(1), (0 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4508, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const ldv_file_operations_20: ref;
axiom (ldv_file_operations_20 == $sub.ref(0, 510914));
procedure  ldv_file_operations_20()
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11427, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_init_zalloc(1000);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11428, 20} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11428, 18} true;
  assume {:verifier.code 0} true;
  $M.22 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11429, 13} true;
  assume {:verifier.code 0} true;
  call $p2 := ldv_init_zalloc(504);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11430, 20} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11430, 18} true;
  assume {:verifier.code 0} true;
  $M.23 := $p2;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11431, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const ldv_initialize_scsi_driver_21: ref;
axiom (ldv_initialize_scsi_driver_21 == $sub.ref(0, 511946));
procedure  ldv_initialize_scsi_driver_21()
{
  var $p0: ref;
  var $p1: ref;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11439, 9} true;
  assume {:verifier.code 0} true;
  call $p0 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11440, 24} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11440, 22} true;
  assume {:verifier.code 0} true;
  $M.24 := $p0;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11441, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const main: ref;
axiom (main == $sub.ref(0, 512978));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $p4: ref;
  var $p5: ref;
  var $p6: ref;
  var $p7: ref;
  var $p8: ref;
  var $p9: ref;
  var $p10: ref;
  var $p11: ref;
  var $p12: ref;
  var $p13: ref;
  var $p14: ref;
  var $p15: ref;
  var $p16: ref;
  var $p17: ref;
  var $p18: ref;
  var $p19: ref;
  var $p20: ref;
  var $p21: ref;
  var $p22: ref;
  var $p23: ref;
  var $p24: ref;
  var $p25: ref;
  var $p26: ref;
  var $p27: ref;
  var $p28: ref;
  var $p29: ref;
  var $p30: ref;
  var $p31: ref;
  var $p32: ref;
  var $p33: ref;
  var $p34: ref;
  var $p35: ref;
  var $p36: ref;
  var $p37: ref;
  var $p38: ref;
  var $p39: ref;
  var $p40: ref;
  var $p41: ref;
  var $p42: ref;
  var $p43: ref;
  var $p44: ref;
  var $p45: ref;
  var $p46: ref;
  var $p47: ref;
  var $p48: ref;
  var $p49: ref;
  var $p50: ref;
  var $p51: ref;
  var $p52: ref;
  var $p53: ref;
  var $p54: ref;
  var $p55: ref;
  var $p56: ref;
  var $p57: ref;
  var $p58: ref;
  var $p59: ref;
  var $p60: ref;
  var $p61: ref;
  var $p62: ref;
  var $p63: ref;
  var $p64: ref;
  var $p65: ref;
  var $p66: ref;
  var $p67: ref;
  var $p68: ref;
  var $p69: ref;
  var $p70: ref;
  var $p71: ref;
  var $p72: ref;
  var $p73: ref;
  var $p74: ref;
  var $p75: ref;
  var $p76: ref;
  var $p77: ref;
  var $p78: ref;
  var $p79: ref;
  var $p80: ref;
  var $p81: ref;
  var $p82: ref;
  var $p83: ref;
  var $p84: ref;
  var $p85: ref;
  var $p86: ref;
  var $p87: ref;
  var $p88: ref;
  var $p89: ref;
  var $p90: ref;
  var $p91: ref;
  var $p92: ref;
  var $p93: ref;
  var $p94: ref;
  var $p95: ref;
  var $p96: ref;
  var $p97: ref;
  var $p98: ref;
  var $p99: ref;
  var $p100: ref;
  var $p101: ref;
  var $p102: ref;
  var $p103: ref;
  var $p104: ref;
  var $p105: ref;
  var $p106: ref;
  var $p107: ref;
  var $p108: ref;
  var $p109: ref;
  var $p110: ref;
  var $p111: ref;
  var $p112: ref;
  var $p113: ref;
  var $p114: ref;
  var $p115: ref;
  var $p116: ref;
  var $p117: ref;
  var $i118: i32;
  var $i119: i1;
  var $i120: i1;
  var $i121: i1;
  var $i122: i1;
  var $i123: i1;
  var $i124: i1;
  var $i125: i1;
  var $i126: i1;
  var $i127: i1;
  var $i128: i1;
  var $i129: i1;
  var $i130: i1;
  var $i131: i1;
  var $i132: i1;
  var $i133: i1;
  var $i134: i1;
  var $i135: i1;
  var $i136: i1;
  var $i137: i1;
  var $i138: i1;
  var $i139: i1;
  var $i140: i1;
  var $i141: i1;
  var $i142: i32;
  var $i143: i1;
  var $i144: i32;
  var $i145: i1;
  var $i146: i32;
  var $i147: i1;
  var $i148: i64;
  var $i149: i32;
  var $i150: i1;
  var $i151: i32;
  var $i152: i1;
  var $i153: i1;
  var $i154: i1;
  var $i155: i32;
  var $i156: i1;
  var $p157: ref;
  var $i158: i32;
  var $i159: i32;
  var $i160: i1;
  var $i161: i32;
  var $i162: i32;
  var $i163: i32;
  var $i164: i1;
  var $p165: ref;
  var $i166: i32;
  var $i167: i32;
  var $i168: i32;
  var $i169: i32;
  var $i170: i1;
  var $i171: i32;
  var $i172: i1;
  var $i173: i32;
  var $i174: i1;
  var $i175: i64;
  var $i176: i32;
  var $i177: i1;
  var $i178: i32;
  var $i179: i1;
  var $i180: i32;
  var $i181: i1;
  var $i182: i64;
  var $i183: i32;
  var $i184: i1;
  var $i185: i32;
  var $i186: i1;
  var $i187: i32;
  var $i188: i1;
  var $i189: i64;
  var $i190: i32;
  var $i191: i1;
  var $i192: i32;
  var $i193: i1;
  var $i194: i32;
  var $i195: i1;
  var $i196: i64;
  var $i197: i32;
  var $i198: i1;
  var $i199: i32;
  var $i200: i1;
  var $i201: i32;
  var $i202: i1;
  var $i203: i64;
  var $i204: i32;
  var $i205: i1;
  var $i206: i32;
  var $i207: i1;
  var $i208: i1;
  var $i209: i1;
  var $i210: i32;
  var $i211: i1;
  var $i212: i32;
  var $i213: i1;
  var $i214: i32;
  var $i215: i1;
  var $i216: i32;
  var $i217: i32;
  var $i218: i1;
  var $i219: i32;
  var $i220: i1;
  var $i221: i32;
  var $i222: i1;
  var $i223: i32;
  var $i224: i1;
  var $i225: i32;
  var $i226: i1;
  var $i227: i64;
  var $i228: i32;
  var $i229: i1;
  var $i230: i32;
  var $i231: i1;
  var $i232: i32;
  var $i233: i1;
  var $i234: i64;
  var $i235: i32;
  var $i236: i1;
  var $i237: i32;
  var $i238: i1;
  var $i239: i32;
  var $i240: i1;
  var $i241: i64;
  var $i242: i32;
  var $i243: i1;
  var $i244: i32;
  var $i245: i1;
  var $i246: i32;
  var $i247: i1;
  var $i248: i64;
  var $i249: i32;
  var $i250: i1;
  var $i251: i32;
  var $i252: i1;
  var $i253: i32;
  var $i254: i1;
  var $i255: i64;
  var $i256: i32;
  var $i257: i1;
  var $i258: i32;
  var $i259: i1;
  var $i260: i32;
  var $i261: i1;
  var $i262: i64;
  var $i263: i32;
  var $i264: i1;
  var $i265: i32;
  var $i266: i1;
  var $i267: i1;
  var $i268: i1;
  var $i269: i1;
  var $i270: i1;
  var $i271: i1;
  var $i272: i1;
  var $i273: i1;
  var $i274: i1;
  var $i275: i32;
  var $i276: i1;
  var $p277: ref;
  var $i278: i64;
  var $i279: i64;
  var $i280: i32;
  var $i281: i1;
  var $p282: ref;
  var $i283: i64;
  var $i284: i64;
  var $i285: i32;
  var $i286: i1;
  var $p287: ref;
  var $i288: i64;
  var $i289: i64;
  var $i290: i32;
  var $i291: i1;
  var $p292: ref;
  var $i293: i32;
  var $i294: i32;
  var $i295: i1;
  var $p296: ref;
  var $i297: i32;
  var $i298: i32;
  var $i299: i1;
  var $p300: ref;
  var $i301: i32;
  var $i302: i64;
  var $i303: i64;
  var $i304: i32;
  var $i305: i1;
  var $p306: ref;
  var $p307: ref;
  var $i308: i32;
  var $i309: i32;
  var $i310: i1;
  var $i311: i32;
  var $i312: i32;
  var $i313: i32;
  var $i314: i1;
  var $p315: ref;
  var $p316: ref;
  var $i317: i32;
  var $i318: i32;
  var $i319: i32;
  var $i320: i32;
  var $i321: i1;
  var $p322: ref;
  var $i323: i64;
  var $i324: i32;
  var $i325: i64;
  var $i326: i32;
  var $i327: i1;
  var $p328: ref;
  var $i329: i32;
  var $i330: i64;
  var $i331: i64;
  var $i332: i32;
  var $i333: i1;
  var $i334: i32;
  var $i335: i1;
  var $i336: i32;
  var $i337: i1;
  var $i338: i64;
  var $i339: i32;
  var $i340: i1;
  var $i341: i32;
  var $i342: i1;
  var $i343: i32;
  var $i344: i1;
  var $i345: i64;
  var $i346: i32;
  var $i347: i1;
  var $i348: i32;
  var $i349: i1;
  var $i350: i32;
  var $i351: i1;
  var $i352: i64;
  var $i353: i32;
  var $i354: i1;
  var $i355: i32;
  var $i356: i1;
  var $i357: i32;
  var $i358: i1;
  var $i359: i64;
  var $i360: i32;
  var $i361: i1;
  var $i362: i32;
  var $i363: i1;
  var $i364: i32;
  var $i365: i1;
  var $i366: i64;
  var $i367: i32;
  var $i368: i1;
  var $i369: i32;
  var $i370: i1;
  var $i371: i32;
  var $i372: i1;
  var $i373: i64;
  var $i374: i32;
  var $i375: i1;
  var $i376: i32;
  var $i377: i1;
  var $i378: i32;
  var $i379: i1;
  var $i380: i64;
$bb0:
  call $initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11595, 9} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p1 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p2 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p3 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p4 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p5 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p6 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  assume {:verifier.code 0} true;
  call $p7 := $alloc($mul.ref(4, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11595, 9} true;
  assume {:verifier.code 0} true;
  call $p8 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11597, 13} true;
  assume {:verifier.code 0} true;
  call $p9 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11598, 13} true;
  assume {:verifier.code 0} true;
  $p10 := $bitcast.ref.ref($p9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11599, 13} true;
  assume {:verifier.code 0} true;
  call $p11 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11600, 13} true;
  assume {:verifier.code 0} true;
  $p12 := $bitcast.ref.ref($p11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11601, 13} true;
  assume {:verifier.code 0} true;
  call $p13 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11603, 13} true;
  assume {:verifier.code 0} true;
  call $p14 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11604, 13} true;
  assume {:verifier.code 0} true;
  $p15 := $bitcast.ref.ref($p14);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11605, 13} true;
  assume {:verifier.code 0} true;
  call $p16 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11606, 13} true;
  assume {:verifier.code 0} true;
  $p17 := $bitcast.ref.ref($p16);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11607, 13} true;
  assume {:verifier.code 0} true;
  call $p18 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11609, 13} true;
  assume {:verifier.code 0} true;
  call $p19 := ldv_init_zalloc(120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11610, 13} true;
  assume {:verifier.code 0} true;
  $p20 := $bitcast.ref.ref($p19);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11611, 13} true;
  assume {:verifier.code 0} true;
  call $p21 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11612, 13} true;
  assume {:verifier.code 0} true;
  $p22 := $bitcast.ref.ref($p21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11613, 13} true;
  assume {:verifier.code 0} true;
  call $p23 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11614, 14} true;
  assume {:verifier.code 0} true;
  $p24 := $bitcast.ref.ref($p23);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11615, 13} true;
  assume {:verifier.code 0} true;
  call $p25 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11617, 14} true;
  assume {:verifier.code 0} true;
  call $p26 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11618, 14} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p26);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11619, 14} true;
  assume {:verifier.code 0} true;
  call $p28 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11620, 14} true;
  assume {:verifier.code 0} true;
  $p29 := $bitcast.ref.ref($p28);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11621, 14} true;
  assume {:verifier.code 0} true;
  call $p30 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11623, 14} true;
  assume {:verifier.code 0} true;
  call $p31 := ldv_init_zalloc(120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11624, 14} true;
  assume {:verifier.code 0} true;
  $p32 := $bitcast.ref.ref($p31);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11625, 14} true;
  assume {:verifier.code 0} true;
  call $p33 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11627, 14} true;
  assume {:verifier.code 0} true;
  call $p34 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11629, 14} true;
  assume {:verifier.code 0} true;
  call $p35 := ldv_init_zalloc(120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11630, 14} true;
  assume {:verifier.code 0} true;
  $p36 := $bitcast.ref.ref($p35);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11631, 14} true;
  assume {:verifier.code 0} true;
  call $p37 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11632, 14} true;
  assume {:verifier.code 0} true;
  $p38 := $bitcast.ref.ref($p37);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11633, 14} true;
  assume {:verifier.code 0} true;
  call $p39 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11634, 14} true;
  assume {:verifier.code 0} true;
  $p40 := $bitcast.ref.ref($p39);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11635, 14} true;
  assume {:verifier.code 0} true;
  call $p41 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11637, 14} true;
  assume {:verifier.code 0} true;
  call $p42 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11638, 14} true;
  assume {:verifier.code 0} true;
  $p43 := $bitcast.ref.ref($p42);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11639, 14} true;
  assume {:verifier.code 0} true;
  call $p44 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11640, 14} true;
  assume {:verifier.code 0} true;
  $p45 := $bitcast.ref.ref($p44);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11641, 14} true;
  assume {:verifier.code 0} true;
  call $p46 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11643, 14} true;
  assume {:verifier.code 0} true;
  call $p47 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11644, 14} true;
  assume {:verifier.code 0} true;
  $p48 := $bitcast.ref.ref($p47);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11645, 14} true;
  assume {:verifier.code 0} true;
  call $p49 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11646, 14} true;
  assume {:verifier.code 0} true;
  $p50 := $bitcast.ref.ref($p49);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11647, 14} true;
  assume {:verifier.code 0} true;
  call $p51 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11649, 14} true;
  assume {:verifier.code 0} true;
  call $p52 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11650, 14} true;
  assume {:verifier.code 0} true;
  $p53 := $bitcast.ref.ref($p52);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11651, 14} true;
  assume {:verifier.code 0} true;
  call $p54 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11652, 14} true;
  assume {:verifier.code 0} true;
  $p55 := $bitcast.ref.ref($p54);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11653, 14} true;
  assume {:verifier.code 0} true;
  call $p56 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11655, 14} true;
  assume {:verifier.code 0} true;
  call $p57 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11656, 14} true;
  assume {:verifier.code 0} true;
  $p58 := $bitcast.ref.ref($p57);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11657, 14} true;
  assume {:verifier.code 0} true;
  call $p59 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11659, 14} true;
  assume {:verifier.code 0} true;
  call $p60 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11660, 14} true;
  assume {:verifier.code 0} true;
  $p61 := $bitcast.ref.ref($p60);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11661, 14} true;
  assume {:verifier.code 0} true;
  call $p62 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11663, 14} true;
  assume {:verifier.code 0} true;
  call $p63 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11665, 14} true;
  assume {:verifier.code 0} true;
  call $p64 := ldv_init_zalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11666, 14} true;
  assume {:verifier.code 0} true;
  $p65 := $bitcast.ref.ref($p64);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11667, 14} true;
  assume {:verifier.code 0} true;
  call $p66 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11669, 14} true;
  assume {:verifier.code 0} true;
  call $p67 := ldv_init_zalloc(8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11670, 14} true;
  assume {:verifier.code 0} true;
  $p68 := $bitcast.ref.ref($p67);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11671, 14} true;
  assume {:verifier.code 0} true;
  call $p69 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11672, 14} true;
  assume {:verifier.code 0} true;
  $p70 := $bitcast.ref.ref($p69);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11673, 14} true;
  assume {:verifier.code 0} true;
  call $p71 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11675, 14} true;
  assume {:verifier.code 0} true;
  call $p72 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11676, 14} true;
  assume {:verifier.code 0} true;
  $p73 := $bitcast.ref.ref($p72);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11677, 14} true;
  assume {:verifier.code 0} true;
  call $p74 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11678, 14} true;
  assume {:verifier.code 0} true;
  $p75 := $bitcast.ref.ref($p74);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11679, 14} true;
  assume {:verifier.code 0} true;
  call $p76 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11680, 14} true;
  assume {:verifier.code 0} true;
  $p77 := $bitcast.ref.ref($p76);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11681, 14} true;
  assume {:verifier.code 0} true;
  call $p78 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11683, 14} true;
  assume {:verifier.code 0} true;
  call $p79 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11684, 14} true;
  assume {:verifier.code 0} true;
  $p80 := $bitcast.ref.ref($p79);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11685, 14} true;
  assume {:verifier.code 0} true;
  call $p81 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11687, 14} true;
  assume {:verifier.code 0} true;
  call $p82 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11688, 14} true;
  assume {:verifier.code 0} true;
  $p83 := $bitcast.ref.ref($p82);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11689, 14} true;
  assume {:verifier.code 0} true;
  call $p84 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11690, 14} true;
  assume {:verifier.code 0} true;
  $p85 := $bitcast.ref.ref($p84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11691, 14} true;
  assume {:verifier.code 0} true;
  call $p86 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11692, 14} true;
  assume {:verifier.code 0} true;
  $p87 := $bitcast.ref.ref($p86);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11693, 14} true;
  assume {:verifier.code 0} true;
  call $p88 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11695, 14} true;
  assume {:verifier.code 0} true;
  call $p89 := ldv_init_zalloc(120);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11696, 14} true;
  assume {:verifier.code 0} true;
  $p90 := $bitcast.ref.ref($p89);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11697, 14} true;
  assume {:verifier.code 0} true;
  call $p91 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11699, 14} true;
  assume {:verifier.code 0} true;
  call $p92 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11701, 14} true;
  assume {:verifier.code 0} true;
  call $p93 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11702, 14} true;
  assume {:verifier.code 0} true;
  $p94 := $bitcast.ref.ref($p93);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11703, 14} true;
  assume {:verifier.code 0} true;
  call $p95 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11704, 14} true;
  assume {:verifier.code 0} true;
  $p96 := $bitcast.ref.ref($p95);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11705, 14} true;
  assume {:verifier.code 0} true;
  call $p97 := ldv_init_zalloc(48);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11706, 14} true;
  assume {:verifier.code 0} true;
  $p98 := $bitcast.ref.ref($p97);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11707, 14} true;
  assume {:verifier.code 0} true;
  call $p99 := ldv_init_zalloc(1416);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11708, 14} true;
  assume {:verifier.code 0} true;
  $p100 := $bitcast.ref.ref($p99);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11709, 14} true;
  assume {:verifier.code 0} true;
  call $p101 := ldv_init_zalloc(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11711, 3} true;
  assume {:verifier.code 0} true;
  call ldv_initialize();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11712, 14} true;
  assume {:verifier.code 0} true;
  $p102 := $bitcast.ref.ref($p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11712, 3} true;
  assume {:verifier.code 0} true;
  call $p103 := ldv_memset($p102, 0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11713, 14} true;
  assume {:verifier.code 0} true;
  $p104 := $bitcast.ref.ref($p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11713, 3} true;
  assume {:verifier.code 0} true;
  call $p105 := ldv_memset($p104, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11714, 14} true;
  assume {:verifier.code 0} true;
  $p106 := $bitcast.ref.ref($p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11714, 3} true;
  assume {:verifier.code 0} true;
  call $p107 := ldv_memset($p106, 0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11715, 14} true;
  assume {:verifier.code 0} true;
  $p108 := $bitcast.ref.ref($p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11715, 3} true;
  assume {:verifier.code 0} true;
  call $p109 := ldv_memset($p108, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11716, 14} true;
  assume {:verifier.code 0} true;
  $p110 := $bitcast.ref.ref($p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11716, 3} true;
  assume {:verifier.code 0} true;
  call $p111 := ldv_memset($p110, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11717, 14} true;
  assume {:verifier.code 0} true;
  $p112 := $bitcast.ref.ref($p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11717, 3} true;
  assume {:verifier.code 0} true;
  call $p113 := ldv_memset($p112, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11718, 14} true;
  assume {:verifier.code 0} true;
  $p114 := $bitcast.ref.ref($p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11718, 3} true;
  assume {:verifier.code 0} true;
  call $p115 := ldv_memset($p114, 0, 8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11719, 14} true;
  assume {:verifier.code 0} true;
  $p116 := $bitcast.ref.ref($p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11719, 3} true;
  assume {:verifier.code 0} true;
  call $p117 := ldv_memset($p116, 0, 4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11720, 25} true;
  assume {:verifier.code 0} true;
  $M.25 := 0;
  call {:cexpr "ldv_state_variable_11"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11721, 25} true;
  assume {:verifier.code 0} true;
  $M.26 := 0;
  call {:cexpr "ldv_state_variable_21"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11722, 24} true;
  assume {:verifier.code 0} true;
  $M.27 := 0;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11723, 25} true;
  assume {:verifier.code 0} true;
  $M.28 := 0;
  call {:cexpr "ldv_state_variable_17"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11724, 24} true;
  assume {:verifier.code 0} true;
  $M.29 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11725, 24} true;
  assume {:verifier.code 0} true;
  $M.30 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11726, 25} true;
  assume {:verifier.code 0} true;
  $M.31 := 0;
  call {:cexpr "ldv_state_variable_18"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11727, 11} true;
  assume {:verifier.code 0} true;
  $M.32 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11728, 24} true;
  assume {:verifier.code 0} true;
  $M.33 := 1;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11729, 25} true;
  assume {:verifier.code 0} true;
  $M.34 := 0;
  call {:cexpr "ldv_state_variable_16"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11730, 25} true;
  assume {:verifier.code 0} true;
  $M.35 := 0;
  call {:cexpr "ldv_state_variable_13"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11731, 24} true;
  assume {:verifier.code 0} true;
  $M.36 := 0;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11732, 24} true;
  assume {:verifier.code 0} true;
  $M.37 := 0;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11733, 24} true;
  assume {:verifier.code 0} true;
  $M.38 := 0;
  call {:cexpr "ldv_state_variable_9"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11734, 25} true;
  assume {:verifier.code 0} true;
  $M.39 := 0;
  call {:cexpr "ldv_state_variable_12"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11735, 25} true;
  assume {:verifier.code 0} true;
  $M.40 := 0;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11736, 25} true;
  assume {:verifier.code 0} true;
  $M.41 := 0;
  call {:cexpr "ldv_state_variable_14"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11737, 25} true;
  assume {:verifier.code 0} true;
  $M.42 := 0;
  call {:cexpr "ldv_state_variable_15"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11738, 24} true;
  assume {:verifier.code 0} true;
  $M.43 := 0;
  call {:cexpr "ldv_state_variable_8"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11739, 24} true;
  assume {:verifier.code 0} true;
  $M.44 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11740, 25} true;
  assume {:verifier.code 0} true;
  $M.45 := 0;
  call {:cexpr "ldv_state_variable_19"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11741, 25} true;
  assume {:verifier.code 0} true;
  $M.46 := 0;
  call {:cexpr "ldv_state_variable_10"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11742, 24} true;
  assume {:verifier.code 0} true;
  $M.47 := 0;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11742, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11744, 14} true;
  assume {:verifier.code 1} true;
  call $i118 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i118);
  // WARNING: %120 = call i32 @__VERIFIER_nondet_int(), !dbg !6161, !verifier.code !6162
  call {:cexpr "tmp___57"} boogie_si_record_i32($i118);
  assume {:verifier.code 0} true;
  goto $bb2;
$bb2:
  assume {:verifier.code 0} true;
  $i119 := $slt.i32($i118, 11);
  assume {:verifier.code 0} true;
  assume {:branchcond $i119} true;
  goto $bb3, $bb4;
$bb3:
  assume ($i119 == 1);
  assume {:verifier.code 0} true;
  $i131 := $slt.i32($i118, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i131} true;
  goto $bb28, $bb29;
$bb4:
  assume !(($i119 == 1));
  assume {:verifier.code 0} true;
  $i120 := $slt.i32($i118, 16);
  assume {:verifier.code 0} true;
  assume {:branchcond $i120} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i120 == 1);
  assume {:verifier.code 0} true;
  $i127 := $slt.i32($i118, 13);
  assume {:verifier.code 0} true;
  assume {:branchcond $i127} true;
  goto $bb20, $bb21;
$bb6:
  assume !(($i120 == 1));
  assume {:verifier.code 0} true;
  $i121 := $slt.i32($i118, 19);
  assume {:verifier.code 0} true;
  assume {:branchcond $i121} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i121 == 1);
  assume {:verifier.code 0} true;
  $i125 := $slt.i32($i118, 17);
  assume {:verifier.code 0} true;
  assume {:branchcond $i125} true;
  goto $bb16, $bb17;
$bb8:
  assume !(($i121 == 1));
  assume {:verifier.code 0} true;
  $i122 := $slt.i32($i118, 20);
  assume {:verifier.code 0} true;
  assume {:branchcond $i122} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i122 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12257, 7} true;
  assume {:verifier.code 0} true;
  $i360 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12257, 29} true;
  assume {:verifier.code 0} true;
  $i361 := $ne.i32($i360, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12257, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i361} true;
  goto $bb355, $bb356;
$bb10:
  assume !(($i122 == 1));
  assume {:verifier.code 0} true;
  $i123 := $slt.i32($i118, 21);
  assume {:verifier.code 0} true;
  assume {:branchcond $i123} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i123 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12277, 7} true;
  assume {:verifier.code 0} true;
  $i367 := $M.46;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12277, 29} true;
  assume {:verifier.code 0} true;
  $i368 := $ne.i32($i367, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12277, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i368} true;
  goto $bb367, $bb368;
$bb12:
  assume !(($i123 == 1));
  assume {:verifier.code 0} true;
  $i124 := $eq.i32($i118, 21);
  assume {:verifier.code 0} true;
  assume {:branchcond $i124} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i124 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12297, 7} true;
  assume {:verifier.code 0} true;
  $i374 := $M.47;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12297, 28} true;
  assume {:verifier.code 0} true;
  $i375 := $ne.i32($i374, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12297, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i375} true;
  goto $bb379, $bb380;
$bb14:
  assume {:verifier.code 0} true;
  assume !(($i124 == 1));
  goto $bb15;
$bb15:
  assume {:verifier.code 0} true;
  goto $bb391;
$bb16:
  assume ($i125 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12197, 7} true;
  assume {:verifier.code 0} true;
  $i339 := $M.42;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12197, 29} true;
  assume {:verifier.code 0} true;
  $i340 := $ne.i32($i339, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12197, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i340} true;
  goto $bb319, $bb320;
$bb17:
  assume !(($i125 == 1));
  assume {:verifier.code 0} true;
  $i126 := $slt.i32($i118, 18);
  assume {:verifier.code 0} true;
  assume {:branchcond $i126} true;
  goto $bb18, $bb19;
$bb18:
  assume ($i126 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12217, 7} true;
  assume {:verifier.code 0} true;
  $i346 := $M.43;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12217, 28} true;
  assume {:verifier.code 0} true;
  $i347 := $ne.i32($i346, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12217, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i347} true;
  goto $bb331, $bb332;
$bb19:
  assume !(($i126 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12237, 7} true;
  assume {:verifier.code 0} true;
  $i353 := $M.44;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12237, 28} true;
  assume {:verifier.code 0} true;
  $i354 := $ne.i32($i353, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12237, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i354} true;
  goto $bb343, $bb344;
$bb20:
  assume ($i127 == 1);
  assume {:verifier.code 0} true;
  $i130 := $slt.i32($i118, 12);
  assume {:verifier.code 0} true;
  assume {:branchcond $i130} true;
  goto $bb26, $bb27;
$bb21:
  assume !(($i127 == 1));
  assume {:verifier.code 0} true;
  $i128 := $slt.i32($i118, 14);
  assume {:verifier.code 0} true;
  assume {:branchcond $i128} true;
  goto $bb22, $bb23;
$bb22:
  assume ($i128 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12063, 7} true;
  assume {:verifier.code 0} true;
  $i256 := $M.39;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12063, 29} true;
  assume {:verifier.code 0} true;
  $i257 := $ne.i32($i256, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12063, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i257} true;
  goto $bb236, $bb237;
$bb23:
  assume !(($i128 == 1));
  assume {:verifier.code 0} true;
  $i129 := $slt.i32($i118, 15);
  assume {:verifier.code 0} true;
  assume {:branchcond $i129} true;
  goto $bb24, $bb25;
$bb24:
  assume ($i129 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12083, 7} true;
  assume {:verifier.code 0} true;
  $i263 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12083, 29} true;
  assume {:verifier.code 0} true;
  $i264 := $ne.i32($i263, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12083, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i264} true;
  goto $bb248, $bb249;
$bb25:
  assume !(($i129 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12177, 7} true;
  assume {:verifier.code 0} true;
  $i332 := $M.41;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12177, 29} true;
  assume {:verifier.code 0} true;
  $i333 := $ne.i32($i332, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12177, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i333} true;
  goto $bb307, $bb308;
$bb26:
  assume ($i130 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12023, 7} true;
  assume {:verifier.code 0} true;
  $i242 := $M.37;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12023, 28} true;
  assume {:verifier.code 0} true;
  $i243 := $ne.i32($i242, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12023, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i243} true;
  goto $bb212, $bb213;
$bb27:
  assume !(($i130 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12043, 7} true;
  assume {:verifier.code 0} true;
  $i249 := $M.38;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12043, 28} true;
  assume {:verifier.code 0} true;
  $i250 := $ne.i32($i249, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12043, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i250} true;
  goto $bb224, $bb225;
$bb28:
  assume ($i131 == 1);
  assume {:verifier.code 0} true;
  $i137 := $slt.i32($i118, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i137} true;
  goto $bb40, $bb41;
$bb29:
  assume !(($i131 == 1));
  assume {:verifier.code 0} true;
  $i132 := $slt.i32($i118, 8);
  assume {:verifier.code 0} true;
  assume {:branchcond $i132} true;
  goto $bb30, $bb31;
$bb30:
  assume ($i132 == 1);
  assume {:verifier.code 0} true;
  $i135 := $slt.i32($i118, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i135} true;
  goto $bb36, $bb37;
$bb31:
  assume !(($i132 == 1));
  assume {:verifier.code 0} true;
  $i133 := $slt.i32($i118, 9);
  assume {:verifier.code 0} true;
  assume {:branchcond $i133} true;
  goto $bb32, $bb33;
$bb32:
  assume ($i133 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11963, 7} true;
  assume {:verifier.code 0} true;
  $i221 := $M.34;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11963, 29} true;
  assume {:verifier.code 0} true;
  $i222 := $ne.i32($i221, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11963, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i222} true;
  goto $bb176, $bb177;
$bb33:
  assume !(($i133 == 1));
  assume {:verifier.code 0} true;
  $i134 := $slt.i32($i118, 10);
  assume {:verifier.code 0} true;
  assume {:branchcond $i134} true;
  goto $bb34, $bb35;
$bb34:
  assume ($i134 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11983, 7} true;
  assume {:verifier.code 0} true;
  $i228 := $M.35;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11983, 29} true;
  assume {:verifier.code 0} true;
  $i229 := $ne.i32($i228, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11983, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i229} true;
  goto $bb188, $bb189;
$bb35:
  assume !(($i134 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12003, 7} true;
  assume {:verifier.code 0} true;
  $i235 := $M.36;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12003, 28} true;
  assume {:verifier.code 0} true;
  $i236 := $ne.i32($i235, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12003, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i236} true;
  goto $bb200, $bb201;
$bb36:
  assume ($i135 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11861, 7} true;
  assume {:verifier.code 0} true;
  $i190 := $M.30;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11861, 28} true;
  assume {:verifier.code 0} true;
  $i191 := $ne.i32($i190, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11861, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i191} true;
  goto $bb122, $bb123;
$bb37:
  assume !(($i135 == 1));
  assume {:verifier.code 0} true;
  $i136 := $slt.i32($i118, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i136} true;
  goto $bb38, $bb39;
$bb38:
  assume ($i136 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11881, 7} true;
  assume {:verifier.code 0} true;
  $i197 := $M.31;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11881, 29} true;
  assume {:verifier.code 0} true;
  $i198 := $ne.i32($i197, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11881, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i198} true;
  goto $bb134, $bb135;
$bb39:
  assume !(($i136 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11901, 7} true;
  assume {:verifier.code 0} true;
  $i204 := $M.33;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11901, 28} true;
  assume {:verifier.code 0} true;
  $i205 := $ne.i32($i204, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11901, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i205} true;
  goto $bb146, $bb147;
$bb40:
  assume ($i137 == 1);
  assume {:verifier.code 0} true;
  $i140 := $slt.i32($i118, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i140} true;
  goto $bb46, $bb47;
$bb41:
  assume !(($i137 == 1));
  assume {:verifier.code 0} true;
  $i138 := $slt.i32($i118, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i138} true;
  goto $bb42, $bb43;
$bb42:
  assume ($i138 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11801, 7} true;
  assume {:verifier.code 0} true;
  $i169 := $M.27;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11801, 28} true;
  assume {:verifier.code 0} true;
  $i170 := $ne.i32($i169, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11801, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i170} true;
  goto $bb86, $bb87;
$bb43:
  assume !(($i138 == 1));
  assume {:verifier.code 0} true;
  $i139 := $slt.i32($i118, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i139} true;
  goto $bb44, $bb45;
$bb44:
  assume ($i139 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11821, 7} true;
  assume {:verifier.code 0} true;
  $i176 := $M.28;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11821, 29} true;
  assume {:verifier.code 0} true;
  $i177 := $ne.i32($i176, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11821, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i177} true;
  goto $bb98, $bb99;
$bb45:
  assume !(($i139 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11841, 7} true;
  assume {:verifier.code 0} true;
  $i183 := $M.29;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11841, 28} true;
  assume {:verifier.code 0} true;
  $i184 := $ne.i32($i183, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11841, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i184} true;
  goto $bb110, $bb111;
$bb46:
  assume ($i140 == 1);
  assume {:verifier.code 0} true;
  $i141 := $eq.i32($i118, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i141} true;
  goto $bb48, $bb49;
$bb47:
  assume !(($i140 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11767, 7} true;
  assume {:verifier.code 0} true;
  $i149 := $M.26;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11767, 29} true;
  assume {:verifier.code 0} true;
  $i150 := $ne.i32($i149, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11767, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i150} true;
  goto $bb63, $bb64;
$bb48:
  assume ($i141 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11747, 7} true;
  assume {:verifier.code 0} true;
  $i142 := $M.25;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11747, 29} true;
  assume {:verifier.code 0} true;
  $i143 := $ne.i32($i142, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11747, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i143} true;
  goto $bb50, $bb51;
$bb49:
  assume {:verifier.code 0} true;
  assume !(($i141 == 1));
  goto $bb15;
$bb50:
  assume ($i143 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11748, 16} true;
  assume {:verifier.code 1} true;
  call $i144 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i144);
  // WARNING: %125 = call i32 @__VERIFIER_nondet_int(), !dbg !6170, !verifier.code !6162
  call {:cexpr "tmp___58"} boogie_si_record_i32($i144);
  assume {:verifier.code 0} true;
  goto $bb52;
$bb51:
  assume !(($i143 == 1));
  assume {:verifier.code 0} true;
  goto $bb61;
$bb52:
  assume {:verifier.code 0} true;
  $i145 := $eq.i32($i144, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i145} true;
  goto $bb53, $bb54;
$bb53:
  assume ($i145 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11751, 9} true;
  assume {:verifier.code 0} true;
  $i146 := $M.25;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11751, 31} true;
  assume {:verifier.code 0} true;
  $i147 := $eq.i32($i146, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11751, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i147} true;
  goto $bb55, $bb56;
$bb54:
  assume !(($i145 == 1));
  assume {:verifier.code 0} true;
  goto $bb59;
$bb55:
  assume ($i147 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11752, 7} true;
  assume {:verifier.code 0} true;
  call $i148 := options_show($p10, $p12, $p8);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11753, 29} true;
  assume {:verifier.code 0} true;
  $M.25 := 1;
  call {:cexpr "ldv_state_variable_11"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11754, 5} true;
  assume {:verifier.code 0} true;
  goto $bb57;
$bb56:
  assume !(($i147 == 1));
  assume {:verifier.code 0} true;
  goto $bb57;
$bb57:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11757, 5} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb58:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11762, 3} true;
  assume {:verifier.code 0} true;
  goto $bb61;
$bb59:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11759, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11760, 5} true;
  assume {:verifier.code 0} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11760, 5} true;
  assume {:verifier.code 0} true;
  goto $bb58;
$bb61:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11765, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12320, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb63:
  assume ($i150 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11768, 16} true;
  assume {:verifier.code 1} true;
  call $i151 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i151);
  // WARNING: %142 = call i32 @__VERIFIER_nondet_int(), !dbg !6194, !verifier.code !6162
  call {:cexpr "tmp___59"} boogie_si_record_i32($i151);
  assume {:verifier.code 0} true;
  goto $bb65;
$bb64:
  assume !(($i150 == 1));
  assume {:verifier.code 0} true;
  goto $bb85;
$bb65:
  assume {:verifier.code 0} true;
  $i152 := $slt.i32($i151, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i152} true;
  goto $bb66, $bb67;
$bb66:
  assume ($i152 == 1);
  assume {:verifier.code 0} true;
  $i154 := $eq.i32($i151, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i154} true;
  goto $bb71, $bb72;
$bb67:
  assume !(($i152 == 1));
  assume {:verifier.code 0} true;
  $i153 := $eq.i32($i151, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i153} true;
  goto $bb68, $bb69;
$bb68:
  assume ($i153 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11784, 9} true;
  assume {:verifier.code 0} true;
  $i163 := $M.26;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11784, 31} true;
  assume {:verifier.code 0} true;
  $i164 := $eq.i32($i163, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11784, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i164} true;
  goto $bb80, $bb81;
$bb69:
  assume {:verifier.code 0} true;
  assume !(($i153 == 1));
  goto $bb70;
$bb70:
  assume {:verifier.code 0} true;
  goto $bb83;
$bb71:
  assume ($i154 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11771, 9} true;
  assume {:verifier.code 0} true;
  $i155 := $M.26;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11771, 31} true;
  assume {:verifier.code 0} true;
  $i156 := $eq.i32($i155, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11771, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i156} true;
  goto $bb73, $bb74;
$bb72:
  assume {:verifier.code 0} true;
  assume !(($i154 == 1));
  goto $bb70;
$bb73:
  assume ($i156 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11772, 31} true;
  assume {:verifier.code 0} true;
  $p157 := $M.24;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11772, 22} true;
  assume {:verifier.code 0} true;
  call $i158 := st_probe($p157);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11772, 20} true;
  assume {:verifier.code 0} true;
  $M.48 := $i158;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32($i158);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11773, 11} true;
  assume {:verifier.code 0} true;
  $i159 := $M.48;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11773, 24} true;
  assume {:verifier.code 0} true;
  $i160 := $eq.i32($i159, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11773, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i160} true;
  goto $bb75, $bb76;
$bb74:
  assume !(($i156 == 1));
  assume {:verifier.code 0} true;
  goto $bb78;
$bb75:
  assume ($i160 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11774, 31} true;
  assume {:verifier.code 0} true;
  $M.26 := 2;
  call {:cexpr "ldv_state_variable_21"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11775, 19} true;
  assume {:verifier.code 0} true;
  $i161 := $M.32;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11775, 27} true;
  assume {:verifier.code 0} true;
  $i162 := $add.i32($i161, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11775, 17} true;
  assume {:verifier.code 0} true;
  $M.32 := $i162;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i162);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11776, 7} true;
  assume {:verifier.code 0} true;
  goto $bb77;
$bb76:
  assume !(($i160 == 1));
  assume {:verifier.code 0} true;
  goto $bb77;
$bb77:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11779, 5} true;
  assume {:verifier.code 0} true;
  goto $bb78;
$bb78:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11782, 5} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb79:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11796, 3} true;
  assume {:verifier.code 0} true;
  goto $bb85;
$bb80:
  assume ($i164 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11785, 17} true;
  assume {:verifier.code 0} true;
  $p165 := $M.24;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11785, 7} true;
  assume {:verifier.code 0} true;
  call $i166 := st_remove($p165);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11786, 29} true;
  assume {:verifier.code 0} true;
  $M.26 := 1;
  call {:cexpr "ldv_state_variable_21"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11787, 17} true;
  assume {:verifier.code 0} true;
  $i167 := $M.32;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11787, 25} true;
  assume {:verifier.code 0} true;
  $i168 := $sub.i32($i167, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11787, 15} true;
  assume {:verifier.code 0} true;
  $M.32 := $i168;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i168);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11788, 5} true;
  assume {:verifier.code 0} true;
  goto $bb82;
$bb81:
  assume !(($i164 == 1));
  assume {:verifier.code 0} true;
  goto $bb82;
$bb82:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11791, 5} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb83:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11793, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11794, 5} true;
  assume {:verifier.code 0} true;
  goto $bb84;
$bb84:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11794, 5} true;
  assume {:verifier.code 0} true;
  goto $bb79;
$bb85:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11799, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb86:
  assume ($i170 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11802, 16} true;
  assume {:verifier.code 1} true;
  call $i171 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i171);
  // WARNING: %177 = call i32 @__VERIFIER_nondet_int(), !dbg !6242, !verifier.code !6162
  call {:cexpr "tmp___60"} boogie_si_record_i32($i171);
  assume {:verifier.code 0} true;
  goto $bb88;
$bb87:
  assume !(($i170 == 1));
  assume {:verifier.code 0} true;
  goto $bb97;
$bb88:
  assume {:verifier.code 0} true;
  $i172 := $eq.i32($i171, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i172} true;
  goto $bb89, $bb90;
$bb89:
  assume ($i172 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11805, 9} true;
  assume {:verifier.code 0} true;
  $i173 := $M.27;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11805, 30} true;
  assume {:verifier.code 0} true;
  $i174 := $eq.i32($i173, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11805, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i174} true;
  goto $bb91, $bb92;
$bb90:
  assume !(($i172 == 1));
  assume {:verifier.code 0} true;
  goto $bb95;
$bb91:
  assume ($i174 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11806, 7} true;
  assume {:verifier.code 0} true;
  call $i175 := write_cnt_show($p15, $p17, $p13);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11807, 28} true;
  assume {:verifier.code 0} true;
  $M.27 := 1;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11808, 5} true;
  assume {:verifier.code 0} true;
  goto $bb93;
$bb92:
  assume !(($i174 == 1));
  assume {:verifier.code 0} true;
  goto $bb93;
$bb93:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11811, 5} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11816, 3} true;
  assume {:verifier.code 0} true;
  goto $bb97;
$bb95:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11813, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11814, 5} true;
  assume {:verifier.code 0} true;
  goto $bb96;
$bb96:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11814, 5} true;
  assume {:verifier.code 0} true;
  goto $bb94;
$bb97:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11819, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb98:
  assume ($i177 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11822, 16} true;
  assume {:verifier.code 1} true;
  call $i178 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i178);
  // WARNING: %194 = call i32 @__VERIFIER_nondet_int(), !dbg !6266, !verifier.code !6162
  call {:cexpr "tmp___61"} boogie_si_record_i32($i178);
  assume {:verifier.code 0} true;
  goto $bb100;
$bb99:
  assume !(($i177 == 1));
  assume {:verifier.code 0} true;
  goto $bb109;
$bb100:
  assume {:verifier.code 0} true;
  $i179 := $eq.i32($i178, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i179} true;
  goto $bb101, $bb102;
$bb101:
  assume ($i179 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11825, 9} true;
  assume {:verifier.code 0} true;
  $i180 := $M.28;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11825, 31} true;
  assume {:verifier.code 0} true;
  $i181 := $eq.i32($i180, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11825, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i181} true;
  goto $bb103, $bb104;
$bb102:
  assume !(($i179 == 1));
  assume {:verifier.code 0} true;
  goto $bb107;
$bb103:
  assume ($i181 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11826, 7} true;
  assume {:verifier.code 0} true;
  call $i182 := st_max_sg_segs_show($p20, $p18);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11827, 29} true;
  assume {:verifier.code 0} true;
  $M.28 := 1;
  call {:cexpr "ldv_state_variable_17"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11828, 5} true;
  assume {:verifier.code 0} true;
  goto $bb105;
$bb104:
  assume !(($i181 == 1));
  assume {:verifier.code 0} true;
  goto $bb105;
$bb105:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11831, 5} true;
  assume {:verifier.code 0} true;
  goto $bb106;
$bb106:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11836, 3} true;
  assume {:verifier.code 0} true;
  goto $bb109;
$bb107:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11833, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11834, 5} true;
  assume {:verifier.code 0} true;
  goto $bb108;
$bb108:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11834, 5} true;
  assume {:verifier.code 0} true;
  goto $bb106;
$bb109:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11839, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb110:
  assume ($i184 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11842, 16} true;
  assume {:verifier.code 1} true;
  call $i185 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i185);
  // WARNING: %211 = call i32 @__VERIFIER_nondet_int(), !dbg !6290, !verifier.code !6162
  call {:cexpr "tmp___62"} boogie_si_record_i32($i185);
  assume {:verifier.code 0} true;
  goto $bb112;
$bb111:
  assume !(($i184 == 1));
  assume {:verifier.code 0} true;
  goto $bb121;
$bb112:
  assume {:verifier.code 0} true;
  $i186 := $eq.i32($i185, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i186} true;
  goto $bb113, $bb114;
$bb113:
  assume ($i186 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11845, 9} true;
  assume {:verifier.code 0} true;
  $i187 := $M.29;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11845, 30} true;
  assume {:verifier.code 0} true;
  $i188 := $eq.i32($i187, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11845, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i188} true;
  goto $bb115, $bb116;
$bb114:
  assume !(($i186 == 1));
  assume {:verifier.code 0} true;
  goto $bb119;
$bb115:
  assume ($i188 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11846, 7} true;
  assume {:verifier.code 0} true;
  call $i189 := other_cnt_show($p22, $p24, $p25);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11847, 28} true;
  assume {:verifier.code 0} true;
  $M.29 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11848, 5} true;
  assume {:verifier.code 0} true;
  goto $bb117;
$bb116:
  assume !(($i188 == 1));
  assume {:verifier.code 0} true;
  goto $bb117;
$bb117:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11851, 5} true;
  assume {:verifier.code 0} true;
  goto $bb118;
$bb118:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11856, 3} true;
  assume {:verifier.code 0} true;
  goto $bb121;
$bb119:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11853, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11854, 5} true;
  assume {:verifier.code 0} true;
  goto $bb120;
$bb120:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11854, 5} true;
  assume {:verifier.code 0} true;
  goto $bb118;
$bb121:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11859, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb122:
  assume ($i191 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11862, 16} true;
  assume {:verifier.code 1} true;
  call $i192 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i192);
  // WARNING: %228 = call i32 @__VERIFIER_nondet_int(), !dbg !6314, !verifier.code !6162
  call {:cexpr "tmp___63"} boogie_si_record_i32($i192);
  assume {:verifier.code 0} true;
  goto $bb124;
$bb123:
  assume !(($i191 == 1));
  assume {:verifier.code 0} true;
  goto $bb133;
$bb124:
  assume {:verifier.code 0} true;
  $i193 := $eq.i32($i192, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i193} true;
  goto $bb125, $bb126;
$bb125:
  assume ($i193 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11865, 9} true;
  assume {:verifier.code 0} true;
  $i194 := $M.30;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11865, 30} true;
  assume {:verifier.code 0} true;
  $i195 := $eq.i32($i194, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11865, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i195} true;
  goto $bb127, $bb128;
$bb126:
  assume !(($i193 == 1));
  assume {:verifier.code 0} true;
  goto $bb131;
$bb127:
  assume ($i195 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11866, 7} true;
  assume {:verifier.code 0} true;
  call $i196 := resid_cnt_show($p27, $p29, $p30);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11867, 28} true;
  assume {:verifier.code 0} true;
  $M.30 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11868, 5} true;
  assume {:verifier.code 0} true;
  goto $bb129;
$bb128:
  assume !(($i195 == 1));
  assume {:verifier.code 0} true;
  goto $bb129;
$bb129:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11871, 5} true;
  assume {:verifier.code 0} true;
  goto $bb130;
$bb130:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11876, 3} true;
  assume {:verifier.code 0} true;
  goto $bb133;
$bb131:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11873, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11874, 5} true;
  assume {:verifier.code 0} true;
  goto $bb132;
$bb132:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11874, 5} true;
  assume {:verifier.code 0} true;
  goto $bb130;
$bb133:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11879, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb134:
  assume ($i198 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11882, 16} true;
  assume {:verifier.code 1} true;
  call $i199 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i199);
  // WARNING: %245 = call i32 @__VERIFIER_nondet_int(), !dbg !6338, !verifier.code !6162
  call {:cexpr "tmp___64"} boogie_si_record_i32($i199);
  assume {:verifier.code 0} true;
  goto $bb136;
$bb135:
  assume !(($i198 == 1));
  assume {:verifier.code 0} true;
  goto $bb145;
$bb136:
  assume {:verifier.code 0} true;
  $i200 := $eq.i32($i199, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i200} true;
  goto $bb137, $bb138;
$bb137:
  assume ($i200 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11885, 9} true;
  assume {:verifier.code 0} true;
  $i201 := $M.31;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11885, 31} true;
  assume {:verifier.code 0} true;
  $i202 := $eq.i32($i201, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11885, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i202} true;
  goto $bb139, $bb140;
$bb138:
  assume !(($i200 == 1));
  assume {:verifier.code 0} true;
  goto $bb143;
$bb139:
  assume ($i202 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11886, 7} true;
  assume {:verifier.code 0} true;
  call $i203 := st_fixed_buffer_size_show($p32, $p33);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11887, 29} true;
  assume {:verifier.code 0} true;
  $M.31 := 1;
  call {:cexpr "ldv_state_variable_18"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11888, 5} true;
  assume {:verifier.code 0} true;
  goto $bb141;
$bb140:
  assume !(($i202 == 1));
  assume {:verifier.code 0} true;
  goto $bb141;
$bb141:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11891, 5} true;
  assume {:verifier.code 0} true;
  goto $bb142;
$bb142:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11896, 3} true;
  assume {:verifier.code 0} true;
  goto $bb145;
$bb143:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11893, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11894, 5} true;
  assume {:verifier.code 0} true;
  goto $bb144;
$bb144:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11894, 5} true;
  assume {:verifier.code 0} true;
  goto $bb142;
$bb145:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11899, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb146:
  assume ($i205 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11902, 16} true;
  assume {:verifier.code 1} true;
  call $i206 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i206);
  // WARNING: %262 = call i32 @__VERIFIER_nondet_int(), !dbg !6362, !verifier.code !6162
  call {:cexpr "tmp___65"} boogie_si_record_i32($i206);
  assume {:verifier.code 0} true;
  goto $bb148;
$bb147:
  assume !(($i205 == 1));
  assume {:verifier.code 0} true;
  goto $bb175;
$bb148:
  assume {:verifier.code 0} true;
  $i207 := $slt.i32($i206, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i207} true;
  goto $bb149, $bb150;
$bb149:
  assume ($i207 == 1);
  assume {:verifier.code 0} true;
  $i209 := $eq.i32($i206, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i209} true;
  goto $bb154, $bb155;
$bb150:
  assume !(($i207 == 1));
  assume {:verifier.code 0} true;
  $i208 := $eq.i32($i206, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i208} true;
  goto $bb151, $bb152;
$bb151:
  assume ($i208 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11914, 9} true;
  assume {:verifier.code 0} true;
  $i214 := $M.33;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11914, 30} true;
  assume {:verifier.code 0} true;
  $i215 := $eq.i32($i214, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11914, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i215} true;
  goto $bb164, $bb165;
$bb152:
  assume {:verifier.code 0} true;
  assume !(($i208 == 1));
  goto $bb153;
$bb153:
  assume {:verifier.code 0} true;
  goto $bb173;
$bb154:
  assume ($i209 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11905, 9} true;
  assume {:verifier.code 0} true;
  $i210 := $M.33;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11905, 30} true;
  assume {:verifier.code 0} true;
  $i211 := $eq.i32($i210, 3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11905, 35} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i211} true;
  goto $bb156, $bb157;
$bb155:
  assume {:verifier.code 0} true;
  assume !(($i209 == 1));
  goto $bb153;
$bb156:
  assume ($i211 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11905, 38} true;
  assume {:verifier.code 0} true;
  $i212 := $M.32;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11905, 46} true;
  assume {:verifier.code 0} true;
  $i213 := $eq.i32($i212, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11905, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i213} true;
  goto $bb159, $bb160;
$bb157:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11905, 35} true;
  assume {:verifier.code 0} true;
  assume !(($i211 == 1));
  goto $bb158;
$bb158:
  assume {:verifier.code 0} true;
  goto $bb162;
$bb159:
  assume ($i213 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11906, 7} true;
  assume {:verifier.code 0} true;
  call exit_st();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11907, 28} true;
  assume {:verifier.code 0} true;
  $M.33 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11908, 7} true;
  assume {:verifier.code 0} true;
  goto $bb161;
$bb160:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11905, 9} true;
  assume {:verifier.code 0} true;
  assume !(($i213 == 1));
  goto $bb158;
$bb161:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12322, 3} true;
  assume {:verifier.code 0} true;
  call ldv_check_final_state();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12323, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb162:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11912, 5} true;
  assume {:verifier.code 0} true;
  goto $bb163;
$bb163:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11958, 3} true;
  assume {:verifier.code 0} true;
  goto $bb175;
$bb164:
  assume ($i215 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11915, 22} true;
  assume {:verifier.code 0} true;
  call $i216 := init_st();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11915, 20} true;
  assume {:verifier.code 0} true;
  $M.49 := $i216;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32($i216);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11916, 11} true;
  assume {:verifier.code 0} true;
  $i217 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11916, 24} true;
  assume {:verifier.code 0} true;
  $i218 := $eq.i32($i217, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11916, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i218} true;
  goto $bb166, $bb167;
$bb165:
  assume !(($i215 == 1));
  assume {:verifier.code 0} true;
  goto $bb172;
$bb166:
  assume ($i218 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11917, 30} true;
  assume {:verifier.code 0} true;
  $M.33 := 3;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11918, 30} true;
  assume {:verifier.code 0} true;
  $M.47 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11919, 31} true;
  assume {:verifier.code 0} true;
  $M.46 := 1;
  call {:cexpr "ldv_state_variable_10"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11920, 31} true;
  assume {:verifier.code 0} true;
  $M.45 := 1;
  call {:cexpr "ldv_state_variable_19"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11921, 30} true;
  assume {:verifier.code 0} true;
  $M.44 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11922, 30} true;
  assume {:verifier.code 0} true;
  $M.43 := 1;
  call {:cexpr "ldv_state_variable_8"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11923, 31} true;
  assume {:verifier.code 0} true;
  $M.42 := 1;
  call {:cexpr "ldv_state_variable_15"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11924, 31} true;
  assume {:verifier.code 0} true;
  $M.41 := 1;
  call {:cexpr "ldv_state_variable_14"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11925, 31} true;
  assume {:verifier.code 0} true;
  $M.40 := 1;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11926, 9} true;
  assume {:verifier.code 0} true;
  call ldv_file_operations_20();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11927, 31} true;
  assume {:verifier.code 0} true;
  $M.39 := 1;
  call {:cexpr "ldv_state_variable_12"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11928, 30} true;
  assume {:verifier.code 0} true;
  $M.38 := 1;
  call {:cexpr "ldv_state_variable_9"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11929, 30} true;
  assume {:verifier.code 0} true;
  $M.37 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11930, 30} true;
  assume {:verifier.code 0} true;
  $M.36 := 1;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11931, 31} true;
  assume {:verifier.code 0} true;
  $M.35 := 1;
  call {:cexpr "ldv_state_variable_13"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11932, 31} true;
  assume {:verifier.code 0} true;
  $M.34 := 1;
  call {:cexpr "ldv_state_variable_16"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11933, 31} true;
  assume {:verifier.code 0} true;
  $M.31 := 1;
  call {:cexpr "ldv_state_variable_18"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11934, 30} true;
  assume {:verifier.code 0} true;
  $M.30 := 1;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11935, 30} true;
  assume {:verifier.code 0} true;
  $M.29 := 1;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11936, 31} true;
  assume {:verifier.code 0} true;
  $M.28 := 1;
  call {:cexpr "ldv_state_variable_17"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11937, 30} true;
  assume {:verifier.code 0} true;
  $M.27 := 1;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11938, 31} true;
  assume {:verifier.code 0} true;
  $M.26 := 1;
  call {:cexpr "ldv_state_variable_21"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11939, 9} true;
  assume {:verifier.code 0} true;
  call ldv_initialize_scsi_driver_21();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11940, 31} true;
  assume {:verifier.code 0} true;
  $M.25 := 1;
  call {:cexpr "ldv_state_variable_11"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11941, 7} true;
  assume {:verifier.code 0} true;
  goto $bb168;
$bb167:
  assume !(($i218 == 1));
  assume {:verifier.code 0} true;
  goto $bb168;
$bb168:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11944, 11} true;
  assume {:verifier.code 0} true;
  $i219 := $M.49;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11944, 24} true;
  assume {:verifier.code 0} true;
  $i220 := $ne.i32($i219, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11944, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i220} true;
  goto $bb169, $bb170;
$bb169:
  assume ($i220 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11945, 30} true;
  assume {:verifier.code 0} true;
  $M.33 := 2;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11946, 9} true;
  assume {:verifier.code 0} true;
  goto $bb161;
$bb170:
  assume !(($i220 == 1));
  assume {:verifier.code 0} true;
  goto $bb171;
$bb171:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11950, 5} true;
  assume {:verifier.code 0} true;
  goto $bb172;
$bb172:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11953, 5} true;
  assume {:verifier.code 0} true;
  goto $bb163;
$bb173:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11955, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11956, 5} true;
  assume {:verifier.code 0} true;
  goto $bb174;
$bb174:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11956, 5} true;
  assume {:verifier.code 0} true;
  goto $bb163;
$bb175:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11961, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb176:
  assume ($i222 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11964, 16} true;
  assume {:verifier.code 1} true;
  call $i223 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i223);
  // WARNING: %298 = call i32 @__VERIFIER_nondet_int(), !dbg !6436, !verifier.code !6162
  call {:cexpr "tmp___66"} boogie_si_record_i32($i223);
  assume {:verifier.code 0} true;
  goto $bb178;
$bb177:
  assume !(($i222 == 1));
  assume {:verifier.code 0} true;
  goto $bb187;
$bb178:
  assume {:verifier.code 0} true;
  $i224 := $eq.i32($i223, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i224} true;
  goto $bb179, $bb180;
$bb179:
  assume ($i224 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11967, 9} true;
  assume {:verifier.code 0} true;
  $i225 := $M.34;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11967, 31} true;
  assume {:verifier.code 0} true;
  $i226 := $eq.i32($i225, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11967, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i226} true;
  goto $bb181, $bb182;
$bb180:
  assume !(($i224 == 1));
  assume {:verifier.code 0} true;
  goto $bb185;
$bb181:
  assume ($i226 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11968, 7} true;
  assume {:verifier.code 0} true;
  call $i227 := st_version_show($p36, $p34);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11969, 29} true;
  assume {:verifier.code 0} true;
  $M.34 := 1;
  call {:cexpr "ldv_state_variable_16"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11970, 5} true;
  assume {:verifier.code 0} true;
  goto $bb183;
$bb182:
  assume !(($i226 == 1));
  assume {:verifier.code 0} true;
  goto $bb183;
$bb183:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11973, 5} true;
  assume {:verifier.code 0} true;
  goto $bb184;
$bb184:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11978, 3} true;
  assume {:verifier.code 0} true;
  goto $bb187;
$bb185:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11975, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11976, 5} true;
  assume {:verifier.code 0} true;
  goto $bb186;
$bb186:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11976, 5} true;
  assume {:verifier.code 0} true;
  goto $bb184;
$bb187:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11981, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb188:
  assume ($i229 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11984, 16} true;
  assume {:verifier.code 1} true;
  call $i230 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i230);
  // WARNING: %315 = call i32 @__VERIFIER_nondet_int(), !dbg !6460, !verifier.code !6162
  call {:cexpr "tmp___67"} boogie_si_record_i32($i230);
  assume {:verifier.code 0} true;
  goto $bb190;
$bb189:
  assume !(($i229 == 1));
  assume {:verifier.code 0} true;
  goto $bb199;
$bb190:
  assume {:verifier.code 0} true;
  $i231 := $eq.i32($i230, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i231} true;
  goto $bb191, $bb192;
$bb191:
  assume ($i231 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11987, 9} true;
  assume {:verifier.code 0} true;
  $i232 := $M.35;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11987, 31} true;
  assume {:verifier.code 0} true;
  $i233 := $eq.i32($i232, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11987, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i233} true;
  goto $bb193, $bb194;
$bb192:
  assume !(($i231 == 1));
  assume {:verifier.code 0} true;
  goto $bb197;
$bb193:
  assume ($i233 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11988, 7} true;
  assume {:verifier.code 0} true;
  call $i234 := default_density_show($p38, $p40, $p41);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11989, 29} true;
  assume {:verifier.code 0} true;
  $M.35 := 1;
  call {:cexpr "ldv_state_variable_13"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11990, 5} true;
  assume {:verifier.code 0} true;
  goto $bb195;
$bb194:
  assume !(($i233 == 1));
  assume {:verifier.code 0} true;
  goto $bb195;
$bb195:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11993, 5} true;
  assume {:verifier.code 0} true;
  goto $bb196;
$bb196:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11998, 3} true;
  assume {:verifier.code 0} true;
  goto $bb199;
$bb197:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11995, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11996, 5} true;
  assume {:verifier.code 0} true;
  goto $bb198;
$bb198:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 11996, 5} true;
  assume {:verifier.code 0} true;
  goto $bb196;
$bb199:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12001, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb200:
  assume ($i236 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12004, 16} true;
  assume {:verifier.code 1} true;
  call $i237 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i237);
  // WARNING: %332 = call i32 @__VERIFIER_nondet_int(), !dbg !6484, !verifier.code !6162
  call {:cexpr "tmp___68"} boogie_si_record_i32($i237);
  assume {:verifier.code 0} true;
  goto $bb202;
$bb201:
  assume !(($i236 == 1));
  assume {:verifier.code 0} true;
  goto $bb211;
$bb202:
  assume {:verifier.code 0} true;
  $i238 := $eq.i32($i237, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i238} true;
  goto $bb203, $bb204;
$bb203:
  assume ($i238 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12007, 9} true;
  assume {:verifier.code 0} true;
  $i239 := $M.36;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12007, 30} true;
  assume {:verifier.code 0} true;
  $i240 := $eq.i32($i239, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12007, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i240} true;
  goto $bb205, $bb206;
$bb204:
  assume !(($i238 == 1));
  assume {:verifier.code 0} true;
  goto $bb209;
$bb205:
  assume ($i240 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12008, 7} true;
  assume {:verifier.code 0} true;
  call $i241 := write_byte_cnt_show($p43, $p45, $p46);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12009, 28} true;
  assume {:verifier.code 0} true;
  $M.36 := 1;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12010, 5} true;
  assume {:verifier.code 0} true;
  goto $bb207;
$bb206:
  assume !(($i240 == 1));
  assume {:verifier.code 0} true;
  goto $bb207;
$bb207:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12013, 5} true;
  assume {:verifier.code 0} true;
  goto $bb208;
$bb208:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12018, 3} true;
  assume {:verifier.code 0} true;
  goto $bb211;
$bb209:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12015, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12016, 5} true;
  assume {:verifier.code 0} true;
  goto $bb210;
$bb210:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12016, 5} true;
  assume {:verifier.code 0} true;
  goto $bb208;
$bb211:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12021, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb212:
  assume ($i243 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12024, 16} true;
  assume {:verifier.code 1} true;
  call $i244 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i244);
  // WARNING: %349 = call i32 @__VERIFIER_nondet_int(), !dbg !6508, !verifier.code !6162
  call {:cexpr "tmp___69"} boogie_si_record_i32($i244);
  assume {:verifier.code 0} true;
  goto $bb214;
$bb213:
  assume !(($i243 == 1));
  assume {:verifier.code 0} true;
  goto $bb223;
$bb214:
  assume {:verifier.code 0} true;
  $i245 := $eq.i32($i244, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i245} true;
  goto $bb215, $bb216;
$bb215:
  assume ($i245 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12027, 9} true;
  assume {:verifier.code 0} true;
  $i246 := $M.37;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12027, 30} true;
  assume {:verifier.code 0} true;
  $i247 := $eq.i32($i246, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12027, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i247} true;
  goto $bb217, $bb218;
$bb216:
  assume !(($i245 == 1));
  assume {:verifier.code 0} true;
  goto $bb221;
$bb217:
  assume ($i247 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12028, 7} true;
  assume {:verifier.code 0} true;
  call $i248 := io_ns_show($p48, $p50, $p51);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12029, 28} true;
  assume {:verifier.code 0} true;
  $M.37 := 1;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12030, 5} true;
  assume {:verifier.code 0} true;
  goto $bb219;
$bb218:
  assume !(($i247 == 1));
  assume {:verifier.code 0} true;
  goto $bb219;
$bb219:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12033, 5} true;
  assume {:verifier.code 0} true;
  goto $bb220;
$bb220:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12038, 3} true;
  assume {:verifier.code 0} true;
  goto $bb223;
$bb221:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12035, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb222;
$bb222:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12036, 5} true;
  assume {:verifier.code 0} true;
  goto $bb220;
$bb223:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12041, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb224:
  assume ($i250 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12044, 16} true;
  assume {:verifier.code 1} true;
  call $i251 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i251);
  // WARNING: %366 = call i32 @__VERIFIER_nondet_int(), !dbg !6532, !verifier.code !6162
  call {:cexpr "tmp___70"} boogie_si_record_i32($i251);
  assume {:verifier.code 0} true;
  goto $bb226;
$bb225:
  assume !(($i250 == 1));
  assume {:verifier.code 0} true;
  goto $bb235;
$bb226:
  assume {:verifier.code 0} true;
  $i252 := $eq.i32($i251, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i252} true;
  goto $bb227, $bb228;
$bb227:
  assume ($i252 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12047, 9} true;
  assume {:verifier.code 0} true;
  $i253 := $M.38;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12047, 30} true;
  assume {:verifier.code 0} true;
  $i254 := $eq.i32($i253, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12047, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i254} true;
  goto $bb229, $bb230;
$bb228:
  assume !(($i252 == 1));
  assume {:verifier.code 0} true;
  goto $bb233;
$bb229:
  assume ($i254 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12048, 7} true;
  assume {:verifier.code 0} true;
  call $i255 := read_byte_cnt_show($p53, $p55, $p56);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12049, 28} true;
  assume {:verifier.code 0} true;
  $M.38 := 1;
  call {:cexpr "ldv_state_variable_9"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12050, 5} true;
  assume {:verifier.code 0} true;
  goto $bb231;
$bb230:
  assume !(($i254 == 1));
  assume {:verifier.code 0} true;
  goto $bb231;
$bb231:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12053, 5} true;
  assume {:verifier.code 0} true;
  goto $bb232;
$bb232:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12058, 3} true;
  assume {:verifier.code 0} true;
  goto $bb235;
$bb233:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12055, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12056, 5} true;
  assume {:verifier.code 0} true;
  goto $bb234;
$bb234:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12056, 5} true;
  assume {:verifier.code 0} true;
  goto $bb232;
$bb235:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12061, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb236:
  assume ($i257 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12064, 16} true;
  assume {:verifier.code 1} true;
  call $i258 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i258);
  // WARNING: %383 = call i32 @__VERIFIER_nondet_int(), !dbg !6556, !verifier.code !6162
  call {:cexpr "tmp___71"} boogie_si_record_i32($i258);
  assume {:verifier.code 0} true;
  goto $bb238;
$bb237:
  assume !(($i257 == 1));
  assume {:verifier.code 0} true;
  goto $bb247;
$bb238:
  assume {:verifier.code 0} true;
  $i259 := $eq.i32($i258, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i259} true;
  goto $bb239, $bb240;
$bb239:
  assume ($i259 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12067, 9} true;
  assume {:verifier.code 0} true;
  $i260 := $M.39;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12067, 31} true;
  assume {:verifier.code 0} true;
  $i261 := $eq.i32($i260, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12067, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i261} true;
  goto $bb241, $bb242;
$bb240:
  assume !(($i259 == 1));
  assume {:verifier.code 0} true;
  goto $bb245;
$bb241:
  assume ($i261 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12068, 7} true;
  assume {:verifier.code 0} true;
  call $i262 := default_compression_show($p61, $p58, $p59);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12069, 29} true;
  assume {:verifier.code 0} true;
  $M.39 := 1;
  call {:cexpr "ldv_state_variable_12"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12070, 5} true;
  assume {:verifier.code 0} true;
  goto $bb243;
$bb242:
  assume !(($i261 == 1));
  assume {:verifier.code 0} true;
  goto $bb243;
$bb243:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12073, 5} true;
  assume {:verifier.code 0} true;
  goto $bb244;
$bb244:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12078, 3} true;
  assume {:verifier.code 0} true;
  goto $bb247;
$bb245:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12075, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12076, 5} true;
  assume {:verifier.code 0} true;
  goto $bb246;
$bb246:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12076, 5} true;
  assume {:verifier.code 0} true;
  goto $bb244;
$bb247:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12081, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb248:
  assume ($i264 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12084, 16} true;
  assume {:verifier.code 1} true;
  call $i265 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i265);
  // WARNING: %400 = call i32 @__VERIFIER_nondet_int(), !dbg !6580, !verifier.code !6162
  call {:cexpr "tmp___72"} boogie_si_record_i32($i265);
  assume {:verifier.code 0} true;
  goto $bb250;
$bb249:
  assume !(($i264 == 1));
  assume {:verifier.code 0} true;
  goto $bb306;
$bb250:
  assume {:verifier.code 0} true;
  $i266 := $slt.i32($i265, 4);
  assume {:verifier.code 0} true;
  assume {:branchcond $i266} true;
  goto $bb251, $bb252;
$bb251:
  assume ($i266 == 1);
  assume {:verifier.code 0} true;
  $i271 := $slt.i32($i265, 2);
  assume {:verifier.code 0} true;
  assume {:branchcond $i271} true;
  goto $bb262, $bb263;
$bb252:
  assume !(($i266 == 1));
  assume {:verifier.code 0} true;
  $i267 := $slt.i32($i265, 6);
  assume {:verifier.code 0} true;
  assume {:branchcond $i267} true;
  goto $bb253, $bb254;
$bb253:
  assume ($i267 == 1);
  assume {:verifier.code 0} true;
  $i270 := $slt.i32($i265, 5);
  assume {:verifier.code 0} true;
  assume {:branchcond $i270} true;
  goto $bb260, $bb261;
$bb254:
  assume !(($i267 == 1));
  assume {:verifier.code 0} true;
  $i268 := $slt.i32($i265, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i268} true;
  goto $bb255, $bb256;
$bb255:
  assume ($i268 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12153, 9} true;
  assume {:verifier.code 0} true;
  $i320 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12153, 31} true;
  assume {:verifier.code 0} true;
  $i321 := $eq.i32($i320, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12153, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i321} true;
  goto $bb298, $bb299;
$bb256:
  assume !(($i268 == 1));
  assume {:verifier.code 0} true;
  $i269 := $eq.i32($i265, 7);
  assume {:verifier.code 0} true;
  assume {:branchcond $i269} true;
  goto $bb257, $bb258;
$bb257:
  assume ($i269 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12161, 9} true;
  assume {:verifier.code 0} true;
  $i326 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12161, 31} true;
  assume {:verifier.code 0} true;
  $i327 := $eq.i32($i326, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12161, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i327} true;
  goto $bb301, $bb302;
$bb258:
  assume {:verifier.code 0} true;
  assume !(($i269 == 1));
  goto $bb259;
$bb259:
  assume {:verifier.code 0} true;
  goto $bb304;
$bb260:
  assume ($i270 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12131, 9} true;
  assume {:verifier.code 0} true;
  $i304 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12131, 31} true;
  assume {:verifier.code 0} true;
  $i305 := $eq.i32($i304, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12131, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i305} true;
  goto $bb289, $bb290;
$bb261:
  assume !(($i270 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12144, 9} true;
  assume {:verifier.code 0} true;
  $i313 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12144, 31} true;
  assume {:verifier.code 0} true;
  $i314 := $eq.i32($i313, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12144, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i314} true;
  goto $bb295, $bb296;
$bb262:
  assume ($i271 == 1);
  assume {:verifier.code 0} true;
  $i273 := $slt.i32($i265, 1);
  assume {:verifier.code 0} true;
  assume {:branchcond $i273} true;
  goto $bb266, $bb267;
$bb263:
  assume !(($i271 == 1));
  assume {:verifier.code 0} true;
  $i272 := $slt.i32($i265, 3);
  assume {:verifier.code 0} true;
  assume {:branchcond $i272} true;
  goto $bb264, $bb265;
$bb264:
  assume ($i272 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12109, 9} true;
  assume {:verifier.code 0} true;
  $i290 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12109, 31} true;
  assume {:verifier.code 0} true;
  $i291 := $eq.i32($i290, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12109, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i291} true;
  goto $bb280, $bb281;
$bb265:
  assume !(($i272 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12123, 9} true;
  assume {:verifier.code 0} true;
  $i298 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12123, 31} true;
  assume {:verifier.code 0} true;
  $i299 := $eq.i32($i298, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12123, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i299} true;
  goto $bb286, $bb287;
$bb266:
  assume ($i273 == 1);
  assume {:verifier.code 0} true;
  $i274 := $eq.i32($i265, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i274} true;
  goto $bb268, $bb269;
$bb267:
  assume !(($i273 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12101, 9} true;
  assume {:verifier.code 0} true;
  $i285 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12101, 31} true;
  assume {:verifier.code 0} true;
  $i286 := $eq.i32($i285, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12101, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i286} true;
  goto $bb277, $bb278;
$bb268:
  assume ($i274 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12087, 9} true;
  assume {:verifier.code 0} true;
  $i275 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12087, 31} true;
  assume {:verifier.code 0} true;
  $i276 := $eq.i32($i275, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12087, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i276} true;
  goto $bb270, $bb271;
$bb269:
  assume {:verifier.code 0} true;
  assume !(($i274 == 1));
  goto $bb259;
$bb270:
  assume ($i276 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12088, 16} true;
  assume {:verifier.code 0} true;
  $p277 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12088, 58} true;
  assume {:verifier.code 0} true;
  $i278 := $load.i64($M.21, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12088, 7} true;
  assume {:verifier.code 0} true;
  call $i279 := st_write($p277, $p62, $i278, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12089, 29} true;
  assume {:verifier.code 0} true;
  $M.40 := 1;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12090, 5} true;
  assume {:verifier.code 0} true;
  goto $bb272;
$bb271:
  assume !(($i276 == 1));
  assume {:verifier.code 0} true;
  goto $bb272;
$bb272:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12093, 9} true;
  assume {:verifier.code 0} true;
  $i280 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12093, 31} true;
  assume {:verifier.code 0} true;
  $i281 := $eq.i32($i280, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12093, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i281} true;
  goto $bb273, $bb274;
$bb273:
  assume ($i281 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12094, 16} true;
  assume {:verifier.code 0} true;
  $p282 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12094, 58} true;
  assume {:verifier.code 0} true;
  $i283 := $load.i64($M.21, $p6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12094, 7} true;
  assume {:verifier.code 0} true;
  call $i284 := st_write($p282, $p62, $i283, $p65);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12095, 29} true;
  assume {:verifier.code 0} true;
  $M.40 := 2;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12096, 5} true;
  assume {:verifier.code 0} true;
  goto $bb275;
$bb274:
  assume !(($i281 == 1));
  assume {:verifier.code 0} true;
  goto $bb275;
$bb275:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12099, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb276:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12172, 3} true;
  assume {:verifier.code 0} true;
  goto $bb306;
$bb277:
  assume ($i286 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12102, 15} true;
  assume {:verifier.code 0} true;
  $p287 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12102, 41} true;
  assume {:verifier.code 0} true;
  $i288 := $load.i64($M.21, $p1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12102, 7} true;
  assume {:verifier.code 0} true;
  call $i289 := st_read($p287, $p66, $i288, $p68);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12103, 29} true;
  assume {:verifier.code 0} true;
  $M.40 := 2;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12104, 5} true;
  assume {:verifier.code 0} true;
  goto $bb279;
$bb278:
  assume !(($i286 == 1));
  assume {:verifier.code 0} true;
  goto $bb279;
$bb279:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12107, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb280:
  assume ($i291 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12110, 16} true;
  assume {:verifier.code 0} true;
  $p292 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12110, 7} true;
  assume {:verifier.code 0} true;
  call $i293 := st_flush($p292, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12111, 29} true;
  assume {:verifier.code 0} true;
  $M.40 := 1;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12112, 5} true;
  assume {:verifier.code 0} true;
  goto $bb282;
$bb281:
  assume !(($i291 == 1));
  assume {:verifier.code 0} true;
  goto $bb282;
$bb282:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12115, 9} true;
  assume {:verifier.code 0} true;
  $i294 := $M.40;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12115, 31} true;
  assume {:verifier.code 0} true;
  $i295 := $eq.i32($i294, 2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12115, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i295} true;
  goto $bb283, $bb284;
$bb283:
  assume ($i295 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12116, 16} true;
  assume {:verifier.code 0} true;
  $p296 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12116, 7} true;
  assume {:verifier.code 0} true;
  call $i297 := st_flush($p296, $p63);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12117, 29} true;
  assume {:verifier.code 0} true;
  $M.40 := 2;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12118, 5} true;
  assume {:verifier.code 0} true;
  goto $bb285;
$bb284:
  assume !(($i295 == 1));
  assume {:verifier.code 0} true;
  goto $bb285;
$bb285:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12121, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb286:
  assume ($i299 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12124, 23} true;
  assume {:verifier.code 0} true;
  $p300 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12124, 39} true;
  assume {:verifier.code 0} true;
  $i301 := $load.i32($M.21, $p2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12124, 49} true;
  assume {:verifier.code 0} true;
  $i302 := $load.i64($M.21, $p4);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12124, 7} true;
  assume {:verifier.code 0} true;
  call $i303 := st_compat_ioctl($p300, $i301, $i302);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12125, 29} true;
  assume {:verifier.code 0} true;
  $M.40 := 2;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12126, 5} true;
  assume {:verifier.code 0} true;
  goto $bb288;
$bb287:
  assume !(($i299 == 1));
  assume {:verifier.code 0} true;
  goto $bb288;
$bb288:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12129, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb289:
  assume ($i305 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12132, 30} true;
  assume {:verifier.code 0} true;
  $p306 := $M.22;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12132, 46} true;
  assume {:verifier.code 0} true;
  $p307 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12132, 22} true;
  assume {:verifier.code 0} true;
  call $i308 := st_open($p306, $p307);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12132, 20} true;
  assume {:verifier.code 0} true;
  $M.50 := $i308;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32($i308);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12133, 11} true;
  assume {:verifier.code 0} true;
  $i309 := $M.50;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12133, 24} true;
  assume {:verifier.code 0} true;
  $i310 := $eq.i32($i309, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12133, 11} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i310} true;
  goto $bb291, $bb292;
$bb290:
  assume !(($i305 == 1));
  assume {:verifier.code 0} true;
  goto $bb294;
$bb291:
  assume ($i310 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12134, 31} true;
  assume {:verifier.code 0} true;
  $M.40 := 2;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12135, 19} true;
  assume {:verifier.code 0} true;
  $i311 := $M.32;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12135, 27} true;
  assume {:verifier.code 0} true;
  $i312 := $add.i32($i311, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12135, 17} true;
  assume {:verifier.code 0} true;
  $M.32 := $i312;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i312);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12136, 7} true;
  assume {:verifier.code 0} true;
  goto $bb293;
$bb292:
  assume !(($i310 == 1));
  assume {:verifier.code 0} true;
  goto $bb293;
$bb293:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12139, 5} true;
  assume {:verifier.code 0} true;
  goto $bb294;
$bb294:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12142, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb295:
  assume ($i314 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12145, 18} true;
  assume {:verifier.code 0} true;
  $p315 := $M.22;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12145, 34} true;
  assume {:verifier.code 0} true;
  $p316 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12145, 7} true;
  assume {:verifier.code 0} true;
  call $i317 := st_release($p315, $p316);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12146, 29} true;
  assume {:verifier.code 0} true;
  $M.40 := 1;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12147, 17} true;
  assume {:verifier.code 0} true;
  $i318 := $M.32;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12147, 25} true;
  assume {:verifier.code 0} true;
  $i319 := $sub.i32($i318, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12147, 15} true;
  assume {:verifier.code 0} true;
  $M.32 := $i319;
  call {:cexpr "ref_cnt"} boogie_si_record_i32($i319);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12148, 5} true;
  assume {:verifier.code 0} true;
  goto $bb297;
$bb296:
  assume !(($i314 == 1));
  assume {:verifier.code 0} true;
  goto $bb297;
$bb297:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12151, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb298:
  assume ($i321 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12154, 19} true;
  assume {:verifier.code 0} true;
  $p322 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12154, 35} true;
  assume {:verifier.code 0} true;
  $i323 := $load.i64($M.21, $p5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12154, 45} true;
  assume {:verifier.code 0} true;
  $i324 := $load.i32($M.21, $p0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12154, 7} true;
  assume {:verifier.code 0} true;
  call $i325 := noop_llseek($p322, $i323, $i324);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12155, 29} true;
  assume {:verifier.code 0} true;
  $M.40 := 2;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12156, 5} true;
  assume {:verifier.code 0} true;
  goto $bb300;
$bb299:
  assume !(($i321 == 1));
  assume {:verifier.code 0} true;
  goto $bb300;
$bb300:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12159, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb301:
  assume ($i327 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12162, 16} true;
  assume {:verifier.code 0} true;
  $p328 := $M.23;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12162, 32} true;
  assume {:verifier.code 0} true;
  $i329 := $load.i32($M.21, $p7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12162, 42} true;
  assume {:verifier.code 0} true;
  $i330 := $load.i64($M.21, $p3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12162, 7} true;
  assume {:verifier.code 0} true;
  call $i331 := st_ioctl($p328, $i329, $i330);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12163, 29} true;
  assume {:verifier.code 0} true;
  $M.40 := 2;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(2);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12164, 5} true;
  assume {:verifier.code 0} true;
  goto $bb303;
$bb302:
  assume !(($i327 == 1));
  assume {:verifier.code 0} true;
  goto $bb303;
$bb303:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12167, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb304:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12169, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12170, 5} true;
  assume {:verifier.code 0} true;
  goto $bb305;
$bb305:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12170, 5} true;
  assume {:verifier.code 0} true;
  goto $bb276;
$bb306:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12175, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb307:
  assume ($i333 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12178, 16} true;
  assume {:verifier.code 1} true;
  call $i334 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i334);
  // WARNING: %508 = call i32 @__VERIFIER_nondet_int(), !dbg !6717, !verifier.code !6162
  call {:cexpr "tmp___73"} boogie_si_record_i32($i334);
  assume {:verifier.code 0} true;
  goto $bb309;
$bb308:
  assume !(($i333 == 1));
  assume {:verifier.code 0} true;
  goto $bb318;
$bb309:
  assume {:verifier.code 0} true;
  $i335 := $eq.i32($i334, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i335} true;
  goto $bb310, $bb311;
$bb310:
  assume ($i335 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12181, 9} true;
  assume {:verifier.code 0} true;
  $i336 := $M.41;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12181, 31} true;
  assume {:verifier.code 0} true;
  $i337 := $eq.i32($i336, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12181, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i337} true;
  goto $bb312, $bb313;
$bb311:
  assume !(($i335 == 1));
  assume {:verifier.code 0} true;
  goto $bb316;
$bb312:
  assume ($i337 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12182, 7} true;
  assume {:verifier.code 0} true;
  call $i338 := default_blksize_show($p73, $p70, $p71);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12183, 29} true;
  assume {:verifier.code 0} true;
  $M.41 := 1;
  call {:cexpr "ldv_state_variable_14"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12184, 5} true;
  assume {:verifier.code 0} true;
  goto $bb314;
$bb313:
  assume !(($i337 == 1));
  assume {:verifier.code 0} true;
  goto $bb314;
$bb314:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12187, 5} true;
  assume {:verifier.code 0} true;
  goto $bb315;
$bb315:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12192, 3} true;
  assume {:verifier.code 0} true;
  goto $bb318;
$bb316:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12189, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  goto $bb317;
$bb317:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12190, 5} true;
  assume {:verifier.code 0} true;
  goto $bb315;
$bb318:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12195, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb319:
  assume ($i340 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12198, 16} true;
  assume {:verifier.code 1} true;
  call $i341 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i341);
  // WARNING: %525 = call i32 @__VERIFIER_nondet_int(), !dbg !6741, !verifier.code !6162
  call {:cexpr "tmp___74"} boogie_si_record_i32($i341);
  assume {:verifier.code 0} true;
  goto $bb321;
$bb320:
  assume !(($i340 == 1));
  assume {:verifier.code 0} true;
  goto $bb330;
$bb321:
  assume {:verifier.code 0} true;
  $i342 := $eq.i32($i341, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i342} true;
  goto $bb322, $bb323;
$bb322:
  assume ($i342 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12201, 9} true;
  assume {:verifier.code 0} true;
  $i343 := $M.42;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12201, 31} true;
  assume {:verifier.code 0} true;
  $i344 := $eq.i32($i343, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12201, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i344} true;
  goto $bb324, $bb325;
$bb323:
  assume !(($i342 == 1));
  assume {:verifier.code 0} true;
  goto $bb328;
$bb324:
  assume ($i344 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12202, 7} true;
  assume {:verifier.code 0} true;
  call $i345 := defined_show($p77, $p75, $p78);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12203, 29} true;
  assume {:verifier.code 0} true;
  $M.42 := 1;
  call {:cexpr "ldv_state_variable_15"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12204, 5} true;
  assume {:verifier.code 0} true;
  goto $bb326;
$bb325:
  assume !(($i344 == 1));
  assume {:verifier.code 0} true;
  goto $bb326;
$bb326:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12207, 5} true;
  assume {:verifier.code 0} true;
  goto $bb327;
$bb327:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12212, 3} true;
  assume {:verifier.code 0} true;
  goto $bb330;
$bb328:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12209, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12210, 5} true;
  assume {:verifier.code 0} true;
  goto $bb329;
$bb329:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12210, 5} true;
  assume {:verifier.code 0} true;
  goto $bb327;
$bb330:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12215, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb331:
  assume ($i347 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12218, 16} true;
  assume {:verifier.code 1} true;
  call $i348 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i348);
  // WARNING: %542 = call i32 @__VERIFIER_nondet_int(), !dbg !6765, !verifier.code !6162
  call {:cexpr "tmp___75"} boogie_si_record_i32($i348);
  assume {:verifier.code 0} true;
  goto $bb333;
$bb332:
  assume !(($i347 == 1));
  assume {:verifier.code 0} true;
  goto $bb342;
$bb333:
  assume {:verifier.code 0} true;
  $i349 := $eq.i32($i348, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i349} true;
  goto $bb334, $bb335;
$bb334:
  assume ($i349 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12221, 9} true;
  assume {:verifier.code 0} true;
  $i350 := $M.43;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12221, 30} true;
  assume {:verifier.code 0} true;
  $i351 := $eq.i32($i350, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12221, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i351} true;
  goto $bb336, $bb337;
$bb335:
  assume !(($i349 == 1));
  assume {:verifier.code 0} true;
  goto $bb340;
$bb336:
  assume ($i351 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12222, 7} true;
  assume {:verifier.code 0} true;
  call $i352 := read_ns_show($p83, $p80, $p81);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12223, 28} true;
  assume {:verifier.code 0} true;
  $M.43 := 1;
  call {:cexpr "ldv_state_variable_8"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12224, 5} true;
  assume {:verifier.code 0} true;
  goto $bb338;
$bb337:
  assume !(($i351 == 1));
  assume {:verifier.code 0} true;
  goto $bb338;
$bb338:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12227, 5} true;
  assume {:verifier.code 0} true;
  goto $bb339;
$bb339:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12232, 3} true;
  assume {:verifier.code 0} true;
  goto $bb342;
$bb340:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12229, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12230, 5} true;
  assume {:verifier.code 0} true;
  goto $bb341;
$bb341:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12230, 5} true;
  assume {:verifier.code 0} true;
  goto $bb339;
$bb342:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12235, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb343:
  assume ($i354 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12238, 16} true;
  assume {:verifier.code 1} true;
  call $i355 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i355);
  // WARNING: %559 = call i32 @__VERIFIER_nondet_int(), !dbg !6789, !verifier.code !6162
  call {:cexpr "tmp___76"} boogie_si_record_i32($i355);
  assume {:verifier.code 0} true;
  goto $bb345;
$bb344:
  assume !(($i354 == 1));
  assume {:verifier.code 0} true;
  goto $bb354;
$bb345:
  assume {:verifier.code 0} true;
  $i356 := $eq.i32($i355, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i356} true;
  goto $bb346, $bb347;
$bb346:
  assume ($i356 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12241, 9} true;
  assume {:verifier.code 0} true;
  $i357 := $M.44;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12241, 30} true;
  assume {:verifier.code 0} true;
  $i358 := $eq.i32($i357, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12241, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i358} true;
  goto $bb348, $bb349;
$bb347:
  assume !(($i356 == 1));
  assume {:verifier.code 0} true;
  goto $bb352;
$bb348:
  assume ($i358 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12242, 7} true;
  assume {:verifier.code 0} true;
  call $i359 := in_flight_show($p87, $p85, $p88);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12243, 28} true;
  assume {:verifier.code 0} true;
  $M.44 := 1;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12244, 5} true;
  assume {:verifier.code 0} true;
  goto $bb350;
$bb349:
  assume !(($i358 == 1));
  assume {:verifier.code 0} true;
  goto $bb350;
$bb350:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12247, 5} true;
  assume {:verifier.code 0} true;
  goto $bb351;
$bb351:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12252, 3} true;
  assume {:verifier.code 0} true;
  goto $bb354;
$bb352:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12249, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12250, 5} true;
  assume {:verifier.code 0} true;
  goto $bb353;
$bb353:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12250, 5} true;
  assume {:verifier.code 0} true;
  goto $bb351;
$bb354:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12255, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb355:
  assume ($i361 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12258, 16} true;
  assume {:verifier.code 1} true;
  call $i362 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i362);
  // WARNING: %576 = call i32 @__VERIFIER_nondet_int(), !dbg !6813, !verifier.code !6162
  call {:cexpr "tmp___77"} boogie_si_record_i32($i362);
  assume {:verifier.code 0} true;
  goto $bb357;
$bb356:
  assume !(($i361 == 1));
  assume {:verifier.code 0} true;
  goto $bb366;
$bb357:
  assume {:verifier.code 0} true;
  $i363 := $eq.i32($i362, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i363} true;
  goto $bb358, $bb359;
$bb358:
  assume ($i363 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12261, 9} true;
  assume {:verifier.code 0} true;
  $i364 := $M.45;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12261, 31} true;
  assume {:verifier.code 0} true;
  $i365 := $eq.i32($i364, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12261, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i365} true;
  goto $bb360, $bb361;
$bb359:
  assume !(($i363 == 1));
  assume {:verifier.code 0} true;
  goto $bb364;
$bb360:
  assume ($i365 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12262, 7} true;
  assume {:verifier.code 0} true;
  call $i366 := st_try_direct_io_show($p90, $p91);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12263, 29} true;
  assume {:verifier.code 0} true;
  $M.45 := 1;
  call {:cexpr "ldv_state_variable_19"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12264, 5} true;
  assume {:verifier.code 0} true;
  goto $bb362;
$bb361:
  assume !(($i365 == 1));
  assume {:verifier.code 0} true;
  goto $bb362;
$bb362:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12267, 5} true;
  assume {:verifier.code 0} true;
  goto $bb363;
$bb363:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12272, 3} true;
  assume {:verifier.code 0} true;
  goto $bb366;
$bb364:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12269, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12270, 5} true;
  assume {:verifier.code 0} true;
  goto $bb365;
$bb365:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12270, 5} true;
  assume {:verifier.code 0} true;
  goto $bb363;
$bb366:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12275, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb367:
  assume ($i368 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12278, 16} true;
  assume {:verifier.code 1} true;
  call $i369 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i369);
  // WARNING: %593 = call i32 @__VERIFIER_nondet_int(), !dbg !6837, !verifier.code !6162
  call {:cexpr "tmp___78"} boogie_si_record_i32($i369);
  assume {:verifier.code 0} true;
  goto $bb369;
$bb368:
  assume !(($i368 == 1));
  assume {:verifier.code 0} true;
  goto $bb378;
$bb369:
  assume {:verifier.code 0} true;
  $i370 := $eq.i32($i369, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i370} true;
  goto $bb370, $bb371;
$bb370:
  assume ($i370 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12281, 9} true;
  assume {:verifier.code 0} true;
  $i371 := $M.46;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12281, 31} true;
  assume {:verifier.code 0} true;
  $i372 := $eq.i32($i371, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12281, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i372} true;
  goto $bb372, $bb373;
$bb371:
  assume !(($i370 == 1));
  assume {:verifier.code 0} true;
  goto $bb376;
$bb372:
  assume ($i372 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12282, 7} true;
  assume {:verifier.code 0} true;
  call $i373 := read_cnt_show($p94, $p96, $p92);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12283, 29} true;
  assume {:verifier.code 0} true;
  $M.46 := 1;
  call {:cexpr "ldv_state_variable_10"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12284, 5} true;
  assume {:verifier.code 0} true;
  goto $bb374;
$bb373:
  assume !(($i372 == 1));
  assume {:verifier.code 0} true;
  goto $bb374;
$bb374:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12287, 5} true;
  assume {:verifier.code 0} true;
  goto $bb375;
$bb375:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12292, 3} true;
  assume {:verifier.code 0} true;
  goto $bb378;
$bb376:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12289, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12290, 5} true;
  assume {:verifier.code 0} true;
  goto $bb377;
$bb377:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12290, 5} true;
  assume {:verifier.code 0} true;
  goto $bb375;
$bb378:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12295, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb379:
  assume ($i375 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12298, 16} true;
  assume {:verifier.code 1} true;
  call $i376 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i376);
  // WARNING: %610 = call i32 @__VERIFIER_nondet_int(), !dbg !6861, !verifier.code !6162
  call {:cexpr "tmp___79"} boogie_si_record_i32($i376);
  assume {:verifier.code 0} true;
  goto $bb381;
$bb380:
  assume !(($i375 == 1));
  assume {:verifier.code 0} true;
  goto $bb390;
$bb381:
  assume {:verifier.code 0} true;
  $i377 := $eq.i32($i376, 0);
  assume {:verifier.code 0} true;
  assume {:branchcond $i377} true;
  goto $bb382, $bb383;
$bb382:
  assume ($i377 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12301, 9} true;
  assume {:verifier.code 0} true;
  $i378 := $M.47;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12301, 30} true;
  assume {:verifier.code 0} true;
  $i379 := $eq.i32($i378, 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12301, 9} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i379} true;
  goto $bb384, $bb385;
$bb383:
  assume !(($i377 == 1));
  assume {:verifier.code 0} true;
  goto $bb388;
$bb384:
  assume ($i379 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12302, 7} true;
  assume {:verifier.code 0} true;
  call $i380 := write_ns_show($p100, $p98, $p101);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12303, 28} true;
  assume {:verifier.code 0} true;
  $M.47 := 1;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12304, 5} true;
  assume {:verifier.code 0} true;
  goto $bb386;
$bb385:
  assume !(($i379 == 1));
  assume {:verifier.code 0} true;
  goto $bb386;
$bb386:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12307, 5} true;
  assume {:verifier.code 0} true;
  goto $bb387;
$bb387:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12312, 3} true;
  assume {:verifier.code 0} true;
  goto $bb390;
$bb388:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12309, 5} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12310, 5} true;
  assume {:verifier.code 0} true;
  goto $bb389;
$bb389:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12310, 5} true;
  assume {:verifier.code 0} true;
  goto $bb387;
$bb390:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12315, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
$bb391:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12317, 3} true;
  assume {:verifier.code 0} true;
  call ldv_stop();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12318, 3} true;
  assume {:verifier.code 0} true;
  goto $bb392;
$bb392:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 12318, 3} true;
  assume {:verifier.code 0} true;
  goto $bb62;
}
const ldv_initialize: ref;
axiom (ldv_initialize == $sub.ref(0, 514010));
procedure  ldv_initialize();
const ldv_stop: ref;
axiom (ldv_stop == $sub.ref(0, 515042));
procedure  ldv_stop()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4542, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4544, 3} true;
  assume {:verifier.code 0} true;
  goto $bb1;
$bb2:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 4546, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const exit_st: ref;
axiom (exit_st == $sub.ref(0, 516074));
procedure  exit_st()
{
  var $i0: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10871, 3} true;
  assume {:verifier.code 0} true;
  call do_remove_sysfs_files();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10872, 3} true;
  assume {:verifier.code 0} true;
  call driver_unregister(st_template);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10873, 3} true;
  assume {:verifier.code 0} true;
  call unregister_chrdev_region(9437184, 1048576);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10874, 3} true;
  assume {:verifier.code 0} true;
  call class_unregister(st_sysfs_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10875, 3} true;
  assume {:verifier.code 0} true;
  call $i0 := printk.ref(.str.77);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10876, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const init_st: ref;
axiom (init_st == $sub.ref(0, 517106));
procedure  init_st()
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i32;
  var $i6: i1;
  var $i8: i32;
  var $i7: i32;
  var $i9: i32;
  var $i10: i1;
  var $i11: i32;
  var $i12: i32;
  var $i13: i32;
  var $i14: i1;
  var $i15: i32;
  var $i17: i32;
  var $i18: i1;
  var $i19: i32;
  var $i21: i32;
  var $i22: i1;
  var $i24: i32;
  var $i25: i1;
  var $i23: i32;
  var $i20: i32;
  var $i16: i32;
$bb0:
  assume {:verifier.code 0} true;
  call $p0 := $alloc($mul.ref(8, $zext.i32.i64(1)));
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10820, 3} true;
  assume {:verifier.code 0} true;
  call validate_options();
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10821, 65} true;
  assume {:verifier.code 0} true;
  $p1 := $M.20;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10821, 73} true;
  assume {:verifier.code 0} true;
  $i2 := $M.19;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10822, 10} true;
  assume {:verifier.code 0} true;
  $i3 := $M.1;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10821, 3} true;
  assume {:verifier.code 0} true;
  call $i4 := printk.ref.ref.i32.i32(.str.82, $p1, $i2, $i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10823, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $M.51;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10823, 17} true;
  assume {:verifier.code 0} true;
  $i6 := $sgt.i32(0, $i5);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10823, 15} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i6} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i6 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10823, 15} true;
  assume {:verifier.code 0} true;
  $i7 := 0;
  goto $bb3;
$bb2:
  assume !(($i6 == 1));
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10823, 36} true;
  assume {:verifier.code 0} true;
  $i8 := $M.51;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10823, 15} true;
  assume {:verifier.code 0} true;
  $i7 := $i8;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10823, 15} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10823, 13} true;
  assume {:verifier.code 0} true;
  $M.11 := $i7;
  call {:cexpr "debugging"} boogie_si_record_i32($i7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10824, 7} true;
  assume {:verifier.code 0} true;
  $i9 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10824, 17} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10824, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10825, 59} true;
  assume {:verifier.code 0} true;
  $i11 := $M.11;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10825, 5} true;
  assume {:verifier.code 0} true;
  call $i12 := printk.ref.i32(.str.83, $i11);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10826, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10829, 9} true;
  assume {:verifier.code 0} true;
  call $i13 := __class_register(st_sysfs_class, $p0);
  // WARNING: %20 = call i32 @__class_register(%struct.class* @st_sysfs_class, %struct.lock_class_key* %1), !dbg !5804, !verifier.code !5775
  call {:cexpr "tmp"} boogie_si_record_i32($i13);
  // WARNING: call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !18910, metadata !5777), !dbg !18911, !verifier.code !5775
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10831, 11} true;
  assume {:verifier.code 0} true;
  $i14 := $ne.i32($i13, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10831, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i14} true;
  goto $bb7, $bb8;
$bb7:
  assume ($i14 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10832, 5} true;
  assume {:verifier.code 0} true;
  call $i15 := printk.ref(.str.84);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10833, 5} true;
  assume {:verifier.code 0} true;
  $i16 := $i13;
  goto $bb9;
$bb8:
  assume !(($i14 == 1));
  assume {:verifier.code 0} true;
  goto $bb10;
$bb9:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10865, 1} true;
  assume {:verifier.code 0} true;
  $r := $i16;
  $exn := false;
  return;
$bb10:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10837, 9} true;
  assume {:verifier.code 0} true;
  call $i17 := register_chrdev_region(9437184, 1048576, .str.27);
  // WARNING: %26 = call i32 @register_chrdev_region(i32 9437184, i32 1048576, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i32 0, i32 0)), !dbg !5815, !verifier.code !5775
  call {:cexpr "err"} boogie_si_record_i32($i17);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10838, 11} true;
  assume {:verifier.code 0} true;
  $i18 := $ne.i32($i17, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10838, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i18} true;
  goto $bb11, $bb12;
$bb11:
  assume ($i18 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10839, 5} true;
  assume {:verifier.code 0} true;
  call $i19 := printk.ref.i32(.str.85, 9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10840, 5} true;
  assume {:verifier.code 0} true;
  $i20 := $i17;
  goto $bb13;
$bb12:
  assume !(($i18 == 1));
  assume {:verifier.code 0} true;
  goto $bb14;
$bb13:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10862, 3} true;
  assume {:verifier.code 0} true;
  call class_unregister(st_sysfs_class);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10863, 3} true;
  assume {:verifier.code 0} true;
  $i16 := $i20;
  goto $bb9;
$bb14:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10844, 9} true;
  assume {:verifier.code 0} true;
  call $i21 := scsi_register_driver(st_template);
  // WARNING: %32 = call i32 @scsi_register_driver(%struct.device_driver* getelementptr inbounds (%struct.scsi_driver, %struct.scsi_driver* @st_template, i32 0, i32 0)), !dbg !5822, !verifier.code !5775
  call {:cexpr "err"} boogie_si_record_i32($i21);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10845, 11} true;
  assume {:verifier.code 0} true;
  $i22 := $ne.i32($i21, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10845, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i22} true;
  goto $bb15, $bb16;
$bb15:
  assume ($i22 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10846, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $i21;
  goto $bb17;
$bb16:
  assume !(($i22 == 1));
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10860, 3} true;
  assume {:verifier.code 0} true;
  call unregister_chrdev_region(9437184, 1048576);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10860, 3} true;
  assume {:verifier.code 0} true;
  $i20 := $i23;
  goto $bb13;
$bb18:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10850, 9} true;
  assume {:verifier.code 0} true;
  call $i24 := do_create_sysfs_files();
  // WARNING: %37 = call i32 @do_create_sysfs_files(), !dbg !5828, !verifier.code !5775
  call {:cexpr "err"} boogie_si_record_i32($i24);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10851, 11} true;
  assume {:verifier.code 0} true;
  $i25 := $ne.i32($i24, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10851, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i25} true;
  goto $bb19, $bb20;
$bb19:
  assume ($i25 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10852, 5} true;
  assume {:verifier.code 0} true;
  goto $bb21;
$bb20:
  assume !(($i25 == 1));
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10858, 3} true;
  assume {:verifier.code 0} true;
  call driver_unregister(st_template);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10858, 3} true;
  assume {:verifier.code 0} true;
  $i23 := $i24;
  goto $bb17;
$bb22:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10856, 3} true;
  assume {:verifier.code 0} true;
  $i16 := 0;
  goto $bb9;
}
const ldv_check_final_state: ref;
axiom (ldv_check_final_state == $sub.ref(0, 518138));
procedure  ldv_check_final_state();
const validate_options: ref;
axiom (validate_options == $sub.ref(0, 519170));
procedure  validate_options()
{
  var $i0: i32;
  var $i1: i1;
  var $i2: i32;
  var $i3: i32;
  var $i4: i32;
  var $i5: i1;
  var $i6: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10380, 7} true;
  assume {:verifier.code 0} true;
  $i0 := $M.52;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10380, 18} true;
  assume {:verifier.code 0} true;
  $i1 := $sgt.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10380, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10381, 28} true;
  assume {:verifier.code 0} true;
  $i2 := $M.52;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10381, 39} true;
  assume {:verifier.code 0} true;
  $i3 := $mul.i32($i2, 1024);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10381, 26} true;
  assume {:verifier.code 0} true;
  $M.19 := $i3;
  call {:cexpr "st_fixed_buffer_size"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10382, 3} true;
  assume {:verifier.code 0} true;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb3;
$bb3:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10385, 7} true;
  assume {:verifier.code 0} true;
  $i4 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10385, 19} true;
  assume {:verifier.code 0} true;
  $i5 := $sgt.i32($i4, 7);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10385, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb4, $bb5;
$bb4:
  assume ($i5 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10386, 22} true;
  assume {:verifier.code 0} true;
  $i6 := $M.53;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10386, 20} true;
  assume {:verifier.code 0} true;
  $M.1 := $i6;
  call {:cexpr "st_max_sg_segs"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10387, 3} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb5:
  assume !(($i5 == 1));
  assume {:verifier.code 0} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10390, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __class_register: ref;
axiom (__class_register == $sub.ref(0, 520202));
procedure  __class_register($p0: ref, $p1: ref)
  returns ($r: i32);
const register_chrdev_region: ref;
axiom (register_chrdev_region == $sub.ref(0, 521234));
procedure  register_chrdev_region($i0: i32, $i1: i32, $p2: ref)
  returns ($r: i32);
const scsi_register_driver: ref;
axiom (scsi_register_driver == $sub.ref(0, 522266));
procedure  scsi_register_driver($p0: ref)
  returns ($r: i32);
const do_create_sysfs_files: ref;
axiom (do_create_sysfs_files == $sub.ref(0, 523298));
procedure  do_create_sysfs_files()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i32;
  var $i4: i1;
  var $i6: i32;
  var $i7: i1;
  var $i9: i32;
  var $i10: i1;
  var $i8: i32;
  var $i5: i32;
  var $i2: i32;
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10937, 9} true;
  assume {:verifier.code 0} true;
  call $i0 := driver_create_file(st_template, driver_attr_try_direct_io);
  // WARNING: %1 = call i32 @driver_create_file(%struct.device_driver* getelementptr inbounds (%struct.scsi_driver, %struct.scsi_driver* @st_template, i32 0, i32 0), %struct.driver_attribute* @driver_attr_try_direct_io), !dbg !5779, !verifier.code !5778
  call {:cexpr "err"} boogie_si_record_i32($i0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10938, 11} true;
  assume {:verifier.code 0} true;
  $i1 := $ne.i32($i0, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10938, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10939, 5} true;
  assume {:verifier.code 0} true;
  $i2 := $i0;
  goto $bb3;
$bb2:
  assume !(($i1 == 1));
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10970, 1} true;
  assume {:verifier.code 0} true;
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10943, 9} true;
  assume {:verifier.code 0} true;
  call $i3 := driver_create_file(st_template, driver_attr_fixed_buffer_size);
  // WARNING: %6 = call i32 @driver_create_file(%struct.device_driver* getelementptr inbounds (%struct.scsi_driver, %struct.scsi_driver* @st_template, i32 0, i32 0), %struct.driver_attribute* @driver_attr_fixed_buffer_size), !dbg !5788, !verifier.code !5778
  call {:cexpr "err"} boogie_si_record_i32($i3);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10944, 11} true;
  assume {:verifier.code 0} true;
  $i4 := $ne.i32($i3, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10944, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i4} true;
  goto $bb5, $bb6;
$bb5:
  assume ($i4 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10945, 5} true;
  assume {:verifier.code 0} true;
  $i5 := $i3;
  goto $bb7;
$bb6:
  assume !(($i4 == 1));
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10967, 3} true;
  assume {:verifier.code 0} true;
  call driver_remove_file(st_template, driver_attr_try_direct_io);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10968, 3} true;
  assume {:verifier.code 0} true;
  $i2 := $i5;
  goto $bb3;
$bb8:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10949, 9} true;
  assume {:verifier.code 0} true;
  call $i6 := driver_create_file(st_template, driver_attr_max_sg_segs);
  // WARNING: %11 = call i32 @driver_create_file(%struct.device_driver* getelementptr inbounds (%struct.scsi_driver, %struct.scsi_driver* @st_template, i32 0, i32 0), %struct.driver_attribute* @driver_attr_max_sg_segs), !dbg !5794, !verifier.code !5778
  call {:cexpr "err"} boogie_si_record_i32($i6);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10950, 11} true;
  assume {:verifier.code 0} true;
  $i7 := $ne.i32($i6, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10950, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i7} true;
  goto $bb9, $bb10;
$bb9:
  assume ($i7 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10951, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $i6;
  goto $bb11;
$bb10:
  assume !(($i7 == 1));
  assume {:verifier.code 0} true;
  goto $bb12;
$bb11:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10965, 3} true;
  assume {:verifier.code 0} true;
  call driver_remove_file(st_template, driver_attr_fixed_buffer_size);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10965, 3} true;
  assume {:verifier.code 0} true;
  $i5 := $i8;
  goto $bb7;
$bb12:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10955, 9} true;
  assume {:verifier.code 0} true;
  call $i9 := driver_create_file(st_template, driver_attr_version);
  // WARNING: %16 = call i32 @driver_create_file(%struct.device_driver* getelementptr inbounds (%struct.scsi_driver, %struct.scsi_driver* @st_template, i32 0, i32 0), %struct.driver_attribute* @driver_attr_version), !dbg !5800, !verifier.code !5778
  call {:cexpr "err"} boogie_si_record_i32($i9);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10956, 11} true;
  assume {:verifier.code 0} true;
  $i10 := $ne.i32($i9, 0);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10956, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i10} true;
  goto $bb13, $bb14;
$bb13:
  assume ($i10 == 1);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10957, 5} true;
  assume {:verifier.code 0} true;
  goto $bb15;
$bb14:
  assume !(($i10 == 1));
  assume {:verifier.code 0} true;
  goto $bb16;
$bb15:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10963, 3} true;
  assume {:verifier.code 0} true;
  call driver_remove_file(st_template, driver_attr_max_sg_segs);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10963, 3} true;
  assume {:verifier.code 0} true;
  $i8 := $i9;
  goto $bb11;
$bb16:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10961, 3} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  goto $bb3;
}
const driver_unregister: ref;
axiom (driver_unregister == $sub.ref(0, 524330));
procedure  driver_unregister($p0: ref);
const unregister_chrdev_region: ref;
axiom (unregister_chrdev_region == $sub.ref(0, 525362));
procedure  unregister_chrdev_region($i0: i32, $i1: i32);
const class_unregister: ref;
axiom (class_unregister == $sub.ref(0, 526394));
procedure  class_unregister($p0: ref);
const driver_create_file: ref;
axiom (driver_create_file == $sub.ref(0, 527426));
procedure  driver_create_file($p0: ref, $p1: ref)
  returns ($r: i32);
const driver_remove_file: ref;
axiom (driver_remove_file == $sub.ref(0, 528458));
procedure  driver_remove_file($p0: ref, $p1: ref);
const do_remove_sysfs_files: ref;
axiom (do_remove_sysfs_files == $sub.ref(0, 529490));
procedure  do_remove_sysfs_files()
{
$bb0:
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10977, 3} true;
  assume {:verifier.code 0} true;
  call driver_remove_file(st_template, driver_attr_version);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10978, 3} true;
  assume {:verifier.code 0} true;
  call driver_remove_file(st_template, driver_attr_max_sg_segs);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10979, 3} true;
  assume {:verifier.code 0} true;
  call driver_remove_file(st_template, driver_attr_fixed_buffer_size);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10980, 3} true;
  assume {:verifier.code 0} true;
  call driver_remove_file(st_template, driver_attr_try_direct_io);
  assume {:sourceloc "/proj/SMACK/smac/linux-4.2-rc1.tar.xz-43_2a-drivers--scsi--st.ko-entry_point_true-unreach-call.cil.out-jZfM0w.c", 10981, 3} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 530522));
procedure  __VERIFIER_assume($i0: i32)
{
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !19011, metadata !5777), !dbg !19012, !verifier.code !5775
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 34, 21} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 35, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 531554));
procedure  __SMACK_code.ref($p0: ref);
procedure  __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 532586));
procedure  __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 260, 3} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 261, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_error: ref;
axiom (__VERIFIER_error == $sub.ref(0, 533618));
procedure  __VERIFIER_error()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 47, 3} true;
  assume {:verifier.code 1} true;
  assert false;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 51, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 534650));
procedure  __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 535682));
procedure  __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 536714));
procedure  __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 537746));
procedure  __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 538778));
procedure  __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 539810));
procedure  __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 540842));
procedure  __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 541874));
procedure  __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __VERIFIER_nondet_int: ref;
axiom (__VERIFIER_nondet_int == $sub.ref(0, 542906));
procedure  __VERIFIER_nondet_int()
  returns ($r: i32)
{
  var $i0: i32;
  var $i1: i1;
  var $i3: i1;
  var $i2: i1;
  var $i4: i32;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 120, 11} true;
  assume {:verifier.code 1} true;
  call $i0 := __SMACK_nondet_int();
  call {:cexpr "smack:ext:__SMACK_nondet_int"} boogie_si_record_i32($i0);
  // WARNING: %1 = call i32 @__SMACK_nondet_int(), !dbg !5775, !verifier.code !5776
  call {:cexpr "x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 23} true;
  assume {:verifier.code 0} true;
  $i1 := $sge.i32($i0, $sub.i32(0, 2147483648));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  $i2 := 0;
  assume {:branchcond $i1} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i1 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 39} true;
  assume {:verifier.code 1} true;
  $i3 := $sle.i32($i0, 2147483647);
  assume {:verifier.code 0} true;
  $i2 := $i3;
  goto $bb3;
$bb2:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 0} true;
  assume !(($i1 == 1));
  goto $bb3;
$bb3:
  assume {:verifier.code 1} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 34} true;
  assume {:verifier.code 1} true;
  $i4 := $zext.i1.i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 121, 3} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assume($i4);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 122, 3} true;
  assume {:verifier.code 0} true;
  $r := $i0;
  $exn := false;
  return;
}
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 543938));
procedure  __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 544970));
procedure  __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 546002));
procedure  __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 547034));
procedure  __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 548066));
procedure  __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 549098));
procedure  __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 550130));
procedure  __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 551162));
procedure  __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 552194));
procedure  __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 553226));
procedure  __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 554258));
procedure  __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 555290));
procedure  __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 556322));
procedure  __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 557354));
procedure  __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 558386));
procedure  __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 559418));
procedure  __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __VERIFIER_nondet_pointer: ref;
axiom (__VERIFIER_nondet_pointer == $sub.ref(0, 560450));
procedure  __VERIFIER_nondet_pointer()
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 243, 10} true;
  assume {:verifier.code 1} true;
  call $p0 := __VERIFIER_nondet();
  call {:cexpr "smack:ext:__VERIFIER_nondet"} boogie_si_record_ref($p0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 243, 3} true;
  assume {:verifier.code 0} true;
  $r := $p0;
  $exn := false;
  return;
}
const __VERIFIER_nondet: ref;
axiom (__VERIFIER_nondet == $sub.ref(0, 561482));
procedure  __VERIFIER_nondet()
  returns ($r: ref);
const calloc: ref;
axiom (calloc == $sub.ref(0, 562514));
procedure  calloc($i0: i64, $i1: i64)
  returns ($r: ref)
{
  var $i2: i32;
  var $i3: i1;
  var $i5: i64;
  var $p6: ref;
  var $i7: i64;
  var $p4: ref;
$bb0:
  // WARNING: call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !19047, metadata !5777), !dbg !19048, !verifier.code !5775
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 1} true;
  call $i2 := __VERIFIER_nondet_int();
  call {:cexpr "smack:ext:__VERIFIER_nondet_int"} boogie_si_record_i32($i2);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  $i3 := $ne.i32($i2, 0);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 248, 7} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i3} true;
  goto $bb1, $bb2;
$bb1:
  assume ($i3 == 1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 250, 3} true;
  assume {:verifier.code 0} true;
  $p4 := $0.ref;
  goto $bb3;
$bb2:
  assume !(($i3 == 1));
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 22} true;
  assume {:verifier.code 0} true;
  $i5 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 251, 11} true;
  assume {:verifier.code 0} true;
  call $p6 := malloc($i5);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 24} true;
  assume {:verifier.code 0} true;
  $i7 := $mul.i64($i0, $i1);
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 252, 5} true;
  assume {:verifier.code 0} true;
  call $M.0 := $memset.i8($M.0, $p6, 0, $i7, $zext.i32.i64(1), (0 == 1));
  assume {:verifier.code 0} true;
  $p4 := $p6;
  goto $bb3;
$bb3:
  assume {:verifier.code 0} true;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 254, 3} true;
  assume {:verifier.code 0} true;
  $r := $p4;
  $exn := false;
  return;
}
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 563546));
function {:inline} $bitcast.ref.ref(i: ref) returns (ref) {i}
function {:bvbuiltin "bvadd"} $add.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvadd"} $add.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvadd"} $add.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvadd"} $add.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvadd"} $add.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvadd"} $add.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvadd"} $add.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvadd"} $add.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvadd"} $add.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvadd"} $add.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvadd"} $add.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvadd"} $add.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsub"} $sub.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsub"} $sub.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsub"} $sub.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsub"} $sub.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsub"} $sub.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsub"} $sub.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsub"} $sub.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsub"} $sub.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsub"} $sub.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsub"} $sub.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsub"} $sub.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsub"} $sub.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvmul"} $mul.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvmul"} $mul.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvmul"} $mul.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvmul"} $mul.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvmul"} $mul.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvmul"} $mul.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvmul"} $mul.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvmul"} $mul.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvmul"} $mul.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvmul"} $mul.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvmul"} $mul.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvmul"} $mul.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvudiv"} $udiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvudiv"} $udiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvudiv"} $udiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvudiv"} $udiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvudiv"} $udiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvudiv"} $udiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvudiv"} $udiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvudiv"} $udiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvudiv"} $udiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvudiv"} $udiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvudiv"} $udiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvudiv"} $udiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsdiv"} $sdiv.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsdiv"} $sdiv.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsdiv"} $sdiv.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsdiv"} $sdiv.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsdiv"} $sdiv.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsdiv"} $sdiv.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsdiv"} $sdiv.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsdiv"} $sdiv.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsdiv"} $sdiv.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsdiv"} $sdiv.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsdiv"} $sdiv.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsdiv"} $sdiv.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsmod"} $smod.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsmod"} $smod.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsmod"} $smod.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsmod"} $smod.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsmod"} $smod.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsmod"} $smod.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsmod"} $smod.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsmod"} $smod.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsmod"} $smod.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsmod"} $smod.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsmod"} $smod.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsmod"} $smod.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvsrem"} $srem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvsrem"} $srem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvsrem"} $srem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvsrem"} $srem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvsrem"} $srem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvsrem"} $srem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvsrem"} $srem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvsrem"} $srem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvsrem"} $srem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvsrem"} $srem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvsrem"} $srem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvsrem"} $srem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvurem"} $urem.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvurem"} $urem.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvurem"} $urem.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvurem"} $urem.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvurem"} $urem.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvurem"} $urem.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvurem"} $urem.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvurem"} $urem.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvurem"} $urem.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvurem"} $urem.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvurem"} $urem.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvurem"} $urem.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $min.bv128(i1: bv128, i2: bv128) returns (bv128) {if $slt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv96(i1: bv96, i2: bv96) returns (bv96) {if $slt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv88(i1: bv88, i2: bv88) returns (bv88) {if $slt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv64(i1: bv64, i2: bv64) returns (bv64) {if $slt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv56(i1: bv56, i2: bv56) returns (bv56) {if $slt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv48(i1: bv48, i2: bv48) returns (bv48) {if $slt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv40(i1: bv40, i2: bv40) returns (bv40) {if $slt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv32(i1: bv32, i2: bv32) returns (bv32) {if $slt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv24(i1: bv24, i2: bv24) returns (bv24) {if $slt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv16(i1: bv16, i2: bv16) returns (bv16) {if $slt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv8(i1: bv8, i2: bv8) returns (bv8) {if $slt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $min.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv128(i1: bv128, i2: bv128) returns (bv128) {if $sgt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv96(i1: bv96, i2: bv96) returns (bv96) {if $sgt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv88(i1: bv88, i2: bv88) returns (bv88) {if $sgt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv64(i1: bv64, i2: bv64) returns (bv64) {if $sgt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv56(i1: bv56, i2: bv56) returns (bv56) {if $sgt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv48(i1: bv48, i2: bv48) returns (bv48) {if $sgt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv40(i1: bv40, i2: bv40) returns (bv40) {if $sgt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv32(i1: bv32, i2: bv32) returns (bv32) {if $sgt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv24(i1: bv24, i2: bv24) returns (bv24) {if $sgt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv16(i1: bv16, i2: bv16) returns (bv16) {if $sgt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv8(i1: bv8, i2: bv8) returns (bv8) {if $sgt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $max.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ult.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ult.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ult.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ult.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ult.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ult.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ult.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ult.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ult.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ult.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ult.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umin.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv128(i1: bv128, i2: bv128) returns (bv128) {if $ugt.bv128.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv96(i1: bv96, i2: bv96) returns (bv96) {if $ugt.bv96.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv88(i1: bv88, i2: bv88) returns (bv88) {if $ugt.bv88.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv64(i1: bv64, i2: bv64) returns (bv64) {if $ugt.bv64.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv56(i1: bv56, i2: bv56) returns (bv56) {if $ugt.bv56.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv48(i1: bv48, i2: bv48) returns (bv48) {if $ugt.bv48.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv40(i1: bv40, i2: bv40) returns (bv40) {if $ugt.bv40.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv32(i1: bv32, i2: bv32) returns (bv32) {if $ugt.bv32.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv24(i1: bv24, i2: bv24) returns (bv24) {if $ugt.bv24.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv16(i1: bv16, i2: bv16) returns (bv16) {if $ugt.bv16.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv8(i1: bv8, i2: bv8) returns (bv8) {if $ugt.bv8.bool(i1,i2) then i1 else i2}
function {:inline} $umax.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then i1 else i2}
function {:bvbuiltin "bvshl"} $shl.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvshl"} $shl.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvshl"} $shl.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvshl"} $shl.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvshl"} $shl.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvshl"} $shl.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvshl"} $shl.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvshl"} $shl.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvshl"} $shl.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvshl"} $shl.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvshl"} $shl.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvshl"} $shl.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvlshr"} $lshr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvlshr"} $lshr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvlshr"} $lshr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvlshr"} $lshr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvlshr"} $lshr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvlshr"} $lshr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvlshr"} $lshr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvlshr"} $lshr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvlshr"} $lshr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvlshr"} $lshr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvlshr"} $lshr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvlshr"} $lshr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvashr"} $ashr.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvashr"} $ashr.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvashr"} $ashr.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvashr"} $ashr.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvashr"} $ashr.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvashr"} $ashr.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvashr"} $ashr.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvashr"} $ashr.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvashr"} $ashr.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvashr"} $ashr.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvashr"} $ashr.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvashr"} $ashr.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnot"} $not.bv128(i: bv128) returns (bv128);
function {:bvbuiltin "bvnot"} $not.bv96(i: bv96) returns (bv96);
function {:bvbuiltin "bvnot"} $not.bv88(i: bv88) returns (bv88);
function {:bvbuiltin "bvnot"} $not.bv64(i: bv64) returns (bv64);
function {:bvbuiltin "bvnot"} $not.bv56(i: bv56) returns (bv56);
function {:bvbuiltin "bvnot"} $not.bv48(i: bv48) returns (bv48);
function {:bvbuiltin "bvnot"} $not.bv40(i: bv40) returns (bv40);
function {:bvbuiltin "bvnot"} $not.bv32(i: bv32) returns (bv32);
function {:bvbuiltin "bvnot"} $not.bv24(i: bv24) returns (bv24);
function {:bvbuiltin "bvnot"} $not.bv16(i: bv16) returns (bv16);
function {:bvbuiltin "bvnot"} $not.bv8(i: bv8) returns (bv8);
function {:bvbuiltin "bvnot"} $not.bv1(i: bv1) returns (bv1);
function {:bvbuiltin "bvand"} $and.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvand"} $and.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvand"} $and.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvand"} $and.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvand"} $and.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvand"} $and.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvand"} $and.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvand"} $and.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvand"} $and.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvand"} $and.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvand"} $and.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvand"} $and.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvor"} $or.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvor"} $or.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvor"} $or.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvor"} $or.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvor"} $or.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvor"} $or.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvor"} $or.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvor"} $or.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvor"} $or.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvor"} $or.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvor"} $or.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvor"} $or.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvxor"} $xor.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvxor"} $xor.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvxor"} $xor.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvxor"} $xor.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvxor"} $xor.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvxor"} $xor.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvxor"} $xor.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvxor"} $xor.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvxor"} $xor.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvxor"} $xor.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvxor"} $xor.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvxor"} $xor.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:bvbuiltin "bvnand"} $nand.bv128(i1: bv128, i2: bv128) returns (bv128);
function {:bvbuiltin "bvnand"} $nand.bv96(i1: bv96, i2: bv96) returns (bv96);
function {:bvbuiltin "bvnand"} $nand.bv88(i1: bv88, i2: bv88) returns (bv88);
function {:bvbuiltin "bvnand"} $nand.bv64(i1: bv64, i2: bv64) returns (bv64);
function {:bvbuiltin "bvnand"} $nand.bv56(i1: bv56, i2: bv56) returns (bv56);
function {:bvbuiltin "bvnand"} $nand.bv48(i1: bv48, i2: bv48) returns (bv48);
function {:bvbuiltin "bvnand"} $nand.bv40(i1: bv40, i2: bv40) returns (bv40);
function {:bvbuiltin "bvnand"} $nand.bv32(i1: bv32, i2: bv32) returns (bv32);
function {:bvbuiltin "bvnand"} $nand.bv24(i1: bv24, i2: bv24) returns (bv24);
function {:bvbuiltin "bvnand"} $nand.bv16(i1: bv16, i2: bv16) returns (bv16);
function {:bvbuiltin "bvnand"} $nand.bv8(i1: bv8, i2: bv8) returns (bv8);
function {:bvbuiltin "bvnand"} $nand.bv1(i1: bv1, i2: bv1) returns (bv1);
function {:inline} $eq.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 == i2} function {:inline} $eq.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 == i2} function {:inline} $eq.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 == i2} function {:inline} $eq.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 == i2} function {:inline} $eq.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 == i2} function {:inline} $eq.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 == i2} function {:inline} $eq.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 == i2} function {:inline} $eq.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 == i2} function {:inline} $eq.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 == i2} function {:inline} $eq.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 == i2} function {:inline} $eq.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 == i2} function {:inline} $eq.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $eq.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 == i2} function {:inline} $eq.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 == i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv128.bool(i1: bv128, i2: bv128) returns (bool) {i1 != i2} function {:inline} $ne.bv128(i1: bv128, i2: bv128) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv96.bool(i1: bv96, i2: bv96) returns (bool) {i1 != i2} function {:inline} $ne.bv96(i1: bv96, i2: bv96) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv88.bool(i1: bv88, i2: bv88) returns (bool) {i1 != i2} function {:inline} $ne.bv88(i1: bv88, i2: bv88) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv64.bool(i1: bv64, i2: bv64) returns (bool) {i1 != i2} function {:inline} $ne.bv64(i1: bv64, i2: bv64) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv56.bool(i1: bv56, i2: bv56) returns (bool) {i1 != i2} function {:inline} $ne.bv56(i1: bv56, i2: bv56) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv48.bool(i1: bv48, i2: bv48) returns (bool) {i1 != i2} function {:inline} $ne.bv48(i1: bv48, i2: bv48) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv40.bool(i1: bv40, i2: bv40) returns (bool) {i1 != i2} function {:inline} $ne.bv40(i1: bv40, i2: bv40) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv32.bool(i1: bv32, i2: bv32) returns (bool) {i1 != i2} function {:inline} $ne.bv32(i1: bv32, i2: bv32) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv24.bool(i1: bv24, i2: bv24) returns (bool) {i1 != i2} function {:inline} $ne.bv24(i1: bv24, i2: bv24) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv16.bool(i1: bv16, i2: bv16) returns (bool) {i1 != i2} function {:inline} $ne.bv16(i1: bv16, i2: bv16) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv8.bool(i1: bv8, i2: bv8) returns (bool) {i1 != i2} function {:inline} $ne.bv8(i1: bv8, i2: bv8) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:inline} $ne.bv1.bool(i1: bv1, i2: bv1) returns (bool) {i1 != i2} function {:inline} $ne.bv1(i1: bv1, i2: bv1) returns (bv1) {if i1 != i2 then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ule.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ule.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ule.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ule.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ule.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ule.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ule.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ule.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ule.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ule.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ule.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ule.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ule.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ule.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ule.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ule.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ule.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ule.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ule.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ule.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ule.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ule.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvule"} $ule.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ule.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ule.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ult.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ult.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ult.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ult.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ult.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ult.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ult.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ult.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ult.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ult.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ult.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ult.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ult.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ult.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ult.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ult.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ult.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ult.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ult.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ult.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ult.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ult.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvult"} $ult.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ult.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ult.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $uge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $uge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $uge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $uge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $uge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $uge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $uge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $uge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $uge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $uge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $uge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $uge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $uge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $uge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $uge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $uge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $uge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $uge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $uge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $uge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $uge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $uge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvuge"} $uge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $uge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $uge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $ugt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $ugt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $ugt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $ugt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $ugt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $ugt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $ugt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $ugt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $ugt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $ugt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $ugt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $ugt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $ugt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $ugt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $ugt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $ugt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $ugt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $ugt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $ugt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $ugt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $ugt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $ugt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvugt"} $ugt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $ugt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $ugt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sle.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sle.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sle.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sle.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sle.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sle.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sle.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sle.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sle.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sle.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sle.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sle.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sle.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sle.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sle.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sle.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sle.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sle.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sle.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sle.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sle.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sle.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsle"} $sle.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sle.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sle.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $slt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $slt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $slt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $slt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $slt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $slt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $slt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $slt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $slt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $slt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $slt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $slt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $slt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $slt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $slt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $slt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $slt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $slt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $slt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $slt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $slt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $slt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvslt"} $slt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $slt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $slt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sge.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sge.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sge.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sge.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sge.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sge.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sge.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sge.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sge.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sge.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sge.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sge.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sge.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sge.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sge.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sge.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sge.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sge.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sge.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sge.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sge.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sge.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsge"} $sge.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sge.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sge.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv128.bool(i1: bv128, i2: bv128) returns (bool); function {:inline} $sgt.bv128(i1: bv128, i2: bv128) returns (bv1) {if $sgt.bv128.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv96.bool(i1: bv96, i2: bv96) returns (bool); function {:inline} $sgt.bv96(i1: bv96, i2: bv96) returns (bv1) {if $sgt.bv96.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv88.bool(i1: bv88, i2: bv88) returns (bool); function {:inline} $sgt.bv88(i1: bv88, i2: bv88) returns (bv1) {if $sgt.bv88.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv64.bool(i1: bv64, i2: bv64) returns (bool); function {:inline} $sgt.bv64(i1: bv64, i2: bv64) returns (bv1) {if $sgt.bv64.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv56.bool(i1: bv56, i2: bv56) returns (bool); function {:inline} $sgt.bv56(i1: bv56, i2: bv56) returns (bv1) {if $sgt.bv56.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv48.bool(i1: bv48, i2: bv48) returns (bool); function {:inline} $sgt.bv48(i1: bv48, i2: bv48) returns (bv1) {if $sgt.bv48.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv40.bool(i1: bv40, i2: bv40) returns (bool); function {:inline} $sgt.bv40(i1: bv40, i2: bv40) returns (bv1) {if $sgt.bv40.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv32.bool(i1: bv32, i2: bv32) returns (bool); function {:inline} $sgt.bv32(i1: bv32, i2: bv32) returns (bv1) {if $sgt.bv32.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv24.bool(i1: bv24, i2: bv24) returns (bool); function {:inline} $sgt.bv24(i1: bv24, i2: bv24) returns (bv1) {if $sgt.bv24.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv16.bool(i1: bv16, i2: bv16) returns (bool); function {:inline} $sgt.bv16(i1: bv16, i2: bv16) returns (bv1) {if $sgt.bv16.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv8.bool(i1: bv8, i2: bv8) returns (bool); function {:inline} $sgt.bv8(i1: bv8, i2: bv8) returns (bv1) {if $sgt.bv8.bool(i1,i2) then 1bv1 else 0bv1}
function {:bvbuiltin "bvsgt"} $sgt.bv1.bool(i1: bv1, i2: bv1) returns (bool); function {:inline} $sgt.bv1(i1: bv1, i2: bv1) returns (bv1) {if $sgt.bv1.bool(i1,i2) then 1bv1 else 0bv1}
function {:inline} $trunc.bv128.bv96(i: bv128) returns (bv96) {i[96:0]}
function {:inline} $trunc.bv128.bv88(i: bv128) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv128.bv64(i: bv128) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv128.bv56(i: bv128) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv128.bv48(i: bv128) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv128.bv40(i: bv128) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv128.bv32(i: bv128) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv128.bv24(i: bv128) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv128.bv16(i: bv128) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv128.bv8(i: bv128) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv128.bv1(i: bv128) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv96.bv88(i: bv96) returns (bv88) {i[88:0]}
function {:inline} $trunc.bv96.bv64(i: bv96) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv96.bv56(i: bv96) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv96.bv48(i: bv96) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv96.bv40(i: bv96) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv96.bv32(i: bv96) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv96.bv24(i: bv96) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv96.bv16(i: bv96) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv96.bv8(i: bv96) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv96.bv1(i: bv96) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv88.bv64(i: bv88) returns (bv64) {i[64:0]}
function {:inline} $trunc.bv88.bv56(i: bv88) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv88.bv48(i: bv88) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv88.bv40(i: bv88) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv88.bv32(i: bv88) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv88.bv24(i: bv88) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv88.bv16(i: bv88) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv88.bv8(i: bv88) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv88.bv1(i: bv88) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv64.bv56(i: bv64) returns (bv56) {i[56:0]}
function {:inline} $trunc.bv64.bv48(i: bv64) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv64.bv40(i: bv64) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv64.bv32(i: bv64) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv64.bv24(i: bv64) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv64.bv16(i: bv64) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv64.bv8(i: bv64) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv64.bv1(i: bv64) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv56.bv48(i: bv56) returns (bv48) {i[48:0]}
function {:inline} $trunc.bv56.bv40(i: bv56) returns (bv40) {i[40:0]}
function {:inline} $trunc.bv56.bv32(i: bv56) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv56.bv24(i: bv56) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv56.bv16(i: bv56) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv56.bv8(i: bv56) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv56.bv1(i: bv56) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv48.bv32(i: bv48) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv48.bv24(i: bv48) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv48.bv16(i: bv48) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv48.bv8(i: bv48) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv48.bv1(i: bv48) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv40.bv32(i: bv40) returns (bv32) {i[32:0]}
function {:inline} $trunc.bv40.bv24(i: bv40) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv40.bv16(i: bv40) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv40.bv8(i: bv40) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv40.bv1(i: bv40) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv32.bv24(i: bv32) returns (bv24) {i[24:0]}
function {:inline} $trunc.bv32.bv16(i: bv32) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv32.bv8(i: bv32) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv32.bv1(i: bv32) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv24.bv16(i: bv24) returns (bv16) {i[16:0]}
function {:inline} $trunc.bv24.bv8(i: bv24) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv24.bv1(i: bv24) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv16.bv8(i: bv16) returns (bv8) {i[8:0]}
function {:inline} $trunc.bv16.bv1(i: bv16) returns (bv1) {i[1:0]}
function {:inline} $trunc.bv8.bv1(i: bv8) returns (bv1) {i[1:0]}
function {:inline} $zext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 1bv8}
function {:inline} $zext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 1bv16}
function {:inline} $zext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 1bv24}
function {:inline} $zext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 1bv32}
function {:inline} $zext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1bv40}
function {:inline} $zext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 1bv48}
function {:inline} $zext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 1bv56}
function {:inline} $zext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 1bv64}
function {:inline} $zext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 1bv88}
function {:inline} $zext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 1bv96}
function {:inline} $zext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 1bv128}
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ zero_extend 120)"} $zext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ zero_extend 112)"} $zext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ zero_extend 104)"} $zext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ zero_extend 96)"} $zext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ zero_extend 56)"} $zext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ zero_extend 88)"} $zext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ zero_extend 16)"} $zext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ zero_extend 48)"} $zext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ zero_extend 80)"} $zext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ zero_extend 72)"} $zext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ zero_extend 24)"} $zext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ zero_extend 64)"} $zext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ zero_extend 8)"} $zext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ zero_extend 40)"} $zext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ zero_extend 32)"} $zext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $sext.bv1.bv8(i: bv1) returns (bv8) {if i == 0bv1 then 0bv8 else 255bv8}
function {:inline} $sext.bv1.bv16(i: bv1) returns (bv16) {if i == 0bv1 then 0bv16 else 65535bv16}
function {:inline} $sext.bv1.bv24(i: bv1) returns (bv24) {if i == 0bv1 then 0bv24 else 16777215bv24}
function {:inline} $sext.bv1.bv32(i: bv1) returns (bv32) {if i == 0bv1 then 0bv32 else 4294967295bv32}
function {:inline} $sext.bv1.bv40(i: bv1) returns (bv40) {if i == 0bv1 then 0bv40 else 1099511627775bv40}
function {:inline} $sext.bv1.bv48(i: bv1) returns (bv48) {if i == 0bv1 then 0bv48 else 281474976710655bv48}
function {:inline} $sext.bv1.bv56(i: bv1) returns (bv56) {if i == 0bv1 then 0bv56 else 72057594037927935bv56}
function {:inline} $sext.bv1.bv64(i: bv1) returns (bv64) {if i == 0bv1 then 0bv64 else 18446744073709551615bv64}
function {:inline} $sext.bv1.bv88(i: bv1) returns (bv88) {if i == 0bv1 then 0bv88 else 309485009821345068724781055bv88}
function {:inline} $sext.bv1.bv96(i: bv1) returns (bv96) {if i == 0bv1 then 0bv96 else 79228162514264337593543950335bv96}
function {:inline} $sext.bv1.bv128(i: bv1) returns (bv128) {if i == 0bv1 then 0bv128 else 340282366920938463463374607431768211455bv128}
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv8.bv16(i: bv8) returns (bv16);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv8.bv24(i: bv8) returns (bv24);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv8.bv32(i: bv8) returns (bv32);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv8.bv40(i: bv8) returns (bv40);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv8.bv48(i: bv8) returns (bv48);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv8.bv56(i: bv8) returns (bv56);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv8.bv64(i: bv8) returns (bv64);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv8.bv88(i: bv8) returns (bv88);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv8.bv96(i: bv8) returns (bv96);
function {:bvbuiltin "(_ sign_extend 120)"} $sext.bv8.bv128(i: bv8) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv16.bv24(i: bv16) returns (bv24);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv16.bv32(i: bv16) returns (bv32);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv16.bv40(i: bv16) returns (bv40);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv16.bv48(i: bv16) returns (bv48);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv16.bv56(i: bv16) returns (bv56);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv16.bv64(i: bv16) returns (bv64);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv16.bv88(i: bv16) returns (bv88);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv16.bv96(i: bv16) returns (bv96);
function {:bvbuiltin "(_ sign_extend 112)"} $sext.bv16.bv128(i: bv16) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv24.bv32(i: bv24) returns (bv32);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv24.bv40(i: bv24) returns (bv40);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv24.bv48(i: bv24) returns (bv48);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv24.bv56(i: bv24) returns (bv56);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv24.bv64(i: bv24) returns (bv64);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv24.bv88(i: bv24) returns (bv88);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv24.bv96(i: bv24) returns (bv96);
function {:bvbuiltin "(_ sign_extend 104)"} $sext.bv24.bv128(i: bv24) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv32.bv40(i: bv32) returns (bv40);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv32.bv48(i: bv32) returns (bv48);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv32.bv56(i: bv32) returns (bv56);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv32.bv64(i: bv32) returns (bv64);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv32.bv88(i: bv32) returns (bv88);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv32.bv96(i: bv32) returns (bv96);
function {:bvbuiltin "(_ sign_extend 96)"} $sext.bv32.bv128(i: bv32) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv40.bv48(i: bv40) returns (bv48);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv40.bv56(i: bv40) returns (bv56);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv40.bv64(i: bv40) returns (bv64);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv40.bv88(i: bv40) returns (bv88);
function {:bvbuiltin "(_ sign_extend 56)"} $sext.bv40.bv96(i: bv40) returns (bv96);
function {:bvbuiltin "(_ sign_extend 88)"} $sext.bv40.bv128(i: bv40) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv48.bv56(i: bv48) returns (bv56);
function {:bvbuiltin "(_ sign_extend 16)"} $sext.bv48.bv64(i: bv48) returns (bv64);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv48.bv88(i: bv48) returns (bv88);
function {:bvbuiltin "(_ sign_extend 48)"} $sext.bv48.bv96(i: bv48) returns (bv96);
function {:bvbuiltin "(_ sign_extend 80)"} $sext.bv48.bv128(i: bv48) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv56.bv64(i: bv56) returns (bv64);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv56.bv88(i: bv56) returns (bv88);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv56.bv96(i: bv56) returns (bv96);
function {:bvbuiltin "(_ sign_extend 72)"} $sext.bv56.bv128(i: bv56) returns (bv128);
function {:bvbuiltin "(_ sign_extend 24)"} $sext.bv64.bv88(i: bv64) returns (bv88);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv64.bv96(i: bv64) returns (bv96);
function {:bvbuiltin "(_ sign_extend 64)"} $sext.bv64.bv128(i: bv64) returns (bv128);
function {:bvbuiltin "(_ sign_extend 8)"} $sext.bv88.bv96(i: bv88) returns (bv96);
function {:bvbuiltin "(_ sign_extend 40)"} $sext.bv88.bv128(i: bv88) returns (bv128);
function {:bvbuiltin "(_ sign_extend 32)"} $sext.bv96.bv128(i: bv96) returns (bv128);
function {:inline} $add.i128(i1: i128, i2: i128) returns (i128) {i1 + i2}
function {:inline} $add.i96(i1: i96, i2: i96) returns (i96) {i1 + i2}
function {:inline} $add.i88(i1: i88, i2: i88) returns (i88) {i1 + i2}
function {:inline} $add.i64(i1: i64, i2: i64) returns (i64) {i1 + i2}
function {:inline} $add.i56(i1: i56, i2: i56) returns (i56) {i1 + i2}
function {:inline} $add.i48(i1: i48, i2: i48) returns (i48) {i1 + i2}
function {:inline} $add.i40(i1: i40, i2: i40) returns (i40) {i1 + i2}
function {:inline} $add.i32(i1: i32, i2: i32) returns (i32) {i1 + i2}
function {:inline} $add.i24(i1: i24, i2: i24) returns (i24) {i1 + i2}
function {:inline} $add.i16(i1: i16, i2: i16) returns (i16) {i1 + i2}
function {:inline} $add.i8(i1: i8, i2: i8) returns (i8) {i1 + i2}
function {:inline} $add.i1(i1: i1, i2: i1) returns (i1) {i1 + i2}
function {:inline} $sub.i128(i1: i128, i2: i128) returns (i128) {i1 - i2}
function {:inline} $sub.i96(i1: i96, i2: i96) returns (i96) {i1 - i2}
function {:inline} $sub.i88(i1: i88, i2: i88) returns (i88) {i1 - i2}
function {:inline} $sub.i64(i1: i64, i2: i64) returns (i64) {i1 - i2}
function {:inline} $sub.i56(i1: i56, i2: i56) returns (i56) {i1 - i2}
function {:inline} $sub.i48(i1: i48, i2: i48) returns (i48) {i1 - i2}
function {:inline} $sub.i40(i1: i40, i2: i40) returns (i40) {i1 - i2}
function {:inline} $sub.i32(i1: i32, i2: i32) returns (i32) {i1 - i2}
function {:inline} $sub.i24(i1: i24, i2: i24) returns (i24) {i1 - i2}
function {:inline} $sub.i16(i1: i16, i2: i16) returns (i16) {i1 - i2}
function {:inline} $sub.i8(i1: i8, i2: i8) returns (i8) {i1 - i2}
function {:inline} $sub.i1(i1: i1, i2: i1) returns (i1) {i1 - i2}
function {:inline} $mul.i128(i1: i128, i2: i128) returns (i128) {i1 * i2}
function {:inline} $mul.i96(i1: i96, i2: i96) returns (i96) {i1 * i2}
function {:inline} $mul.i88(i1: i88, i2: i88) returns (i88) {i1 * i2}
function {:inline} $mul.i64(i1: i64, i2: i64) returns (i64) {i1 * i2}
function {:inline} $mul.i56(i1: i56, i2: i56) returns (i56) {i1 * i2}
function {:inline} $mul.i48(i1: i48, i2: i48) returns (i48) {i1 * i2}
function {:inline} $mul.i40(i1: i40, i2: i40) returns (i40) {i1 * i2}
function {:inline} $mul.i32(i1: i32, i2: i32) returns (i32) {i1 * i2}
function {:inline} $mul.i24(i1: i24, i2: i24) returns (i24) {i1 * i2}
function {:inline} $mul.i16(i1: i16, i2: i16) returns (i16) {i1 * i2}
function {:inline} $mul.i8(i1: i8, i2: i8) returns (i8) {i1 * i2}
function {:inline} $mul.i1(i1: i1, i2: i1) returns (i1) {i1 * i2}
function {:builtin "div"} $div(i1: int, i2: int) returns (int);
function {:builtin "mod"} $mod(i1: int, i2: int) returns (int);
function {:builtin "rem"} $rem(i1: int, i2: int) returns (int);
function {:inline} $min(i1: int, i2: int) returns (int) {if i1 < i2 then i1 else i2}
function {:inline} $max(i1: int, i2: int) returns (int) {if i1 > i2 then i1 else i2}
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $srem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $srem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $srem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $srem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $srem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $srem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $srem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $srem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $srem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $srem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $srem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $srem.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "rem"} $urem.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "rem"} $urem.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "rem"} $urem.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "rem"} $urem.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "rem"} $urem.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "rem"} $urem.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "rem"} $urem.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "rem"} $urem.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "rem"} $urem.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "rem"} $urem.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "rem"} $urem.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "rem"} $urem.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $smin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $smin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $smin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $smin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $smin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $smin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $smin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $smin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $smin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $smin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $smin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $smin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $smax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $smax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $smax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $smax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $smax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $smax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $smax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $smax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $smax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $smax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $smax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $smax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function {:inline} $umin.i128(i1: i128, i2: i128) returns (i128) {$min(i1,i2)}
function {:inline} $umin.i96(i1: i96, i2: i96) returns (i96) {$min(i1,i2)}
function {:inline} $umin.i88(i1: i88, i2: i88) returns (i88) {$min(i1,i2)}
function {:inline} $umin.i64(i1: i64, i2: i64) returns (i64) {$min(i1,i2)}
function {:inline} $umin.i56(i1: i56, i2: i56) returns (i56) {$min(i1,i2)}
function {:inline} $umin.i48(i1: i48, i2: i48) returns (i48) {$min(i1,i2)}
function {:inline} $umin.i40(i1: i40, i2: i40) returns (i40) {$min(i1,i2)}
function {:inline} $umin.i32(i1: i32, i2: i32) returns (i32) {$min(i1,i2)}
function {:inline} $umin.i24(i1: i24, i2: i24) returns (i24) {$min(i1,i2)}
function {:inline} $umin.i16(i1: i16, i2: i16) returns (i16) {$min(i1,i2)}
function {:inline} $umin.i8(i1: i8, i2: i8) returns (i8) {$min(i1,i2)}
function {:inline} $umin.i1(i1: i1, i2: i1) returns (i1) {$min(i1,i2)}
function {:inline} $umax.i128(i1: i128, i2: i128) returns (i128) {$max(i1,i2)}
function {:inline} $umax.i96(i1: i96, i2: i96) returns (i96) {$max(i1,i2)}
function {:inline} $umax.i88(i1: i88, i2: i88) returns (i88) {$max(i1,i2)}
function {:inline} $umax.i64(i1: i64, i2: i64) returns (i64) {$max(i1,i2)}
function {:inline} $umax.i56(i1: i56, i2: i56) returns (i56) {$max(i1,i2)}
function {:inline} $umax.i48(i1: i48, i2: i48) returns (i48) {$max(i1,i2)}
function {:inline} $umax.i40(i1: i40, i2: i40) returns (i40) {$max(i1,i2)}
function {:inline} $umax.i32(i1: i32, i2: i32) returns (i32) {$max(i1,i2)}
function {:inline} $umax.i24(i1: i24, i2: i24) returns (i24) {$max(i1,i2)}
function {:inline} $umax.i16(i1: i16, i2: i16) returns (i16) {$max(i1,i2)}
function {:inline} $umax.i8(i1: i8, i2: i8) returns (i8) {$max(i1,i2)}
function {:inline} $umax.i1(i1: i1, i2: i1) returns (i1) {$max(i1,i2)}
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $not.i128(i: i128) returns (i128);
function $not.i96(i: i96) returns (i96);
function $not.i88(i: i88) returns (i88);
function $not.i64(i: i64) returns (i64);
function $not.i56(i: i56) returns (i56);
function $not.i48(i: i48) returns (i48);
function $not.i40(i: i40) returns (i40);
function $not.i32(i: i32) returns (i32);
function $not.i24(i: i24) returns (i24);
function $not.i16(i: i16) returns (i16);
function $not.i8(i: i8) returns (i8);
function $not.i1(i: i1) returns (i1);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function {:inline} $eq.i128.bool(i1: i128, i2: i128) returns (bool) {i1 == i2} function {:inline} $eq.i128(i1: i128, i2: i128) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i96.bool(i1: i96, i2: i96) returns (bool) {i1 == i2} function {:inline} $eq.i96(i1: i96, i2: i96) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i88.bool(i1: i88, i2: i88) returns (bool) {i1 == i2} function {:inline} $eq.i88(i1: i88, i2: i88) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i64.bool(i1: i64, i2: i64) returns (bool) {i1 == i2} function {:inline} $eq.i64(i1: i64, i2: i64) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i56.bool(i1: i56, i2: i56) returns (bool) {i1 == i2} function {:inline} $eq.i56(i1: i56, i2: i56) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i48.bool(i1: i48, i2: i48) returns (bool) {i1 == i2} function {:inline} $eq.i48(i1: i48, i2: i48) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i40.bool(i1: i40, i2: i40) returns (bool) {i1 == i2} function {:inline} $eq.i40(i1: i40, i2: i40) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i32.bool(i1: i32, i2: i32) returns (bool) {i1 == i2} function {:inline} $eq.i32(i1: i32, i2: i32) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i24.bool(i1: i24, i2: i24) returns (bool) {i1 == i2} function {:inline} $eq.i24(i1: i24, i2: i24) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i16.bool(i1: i16, i2: i16) returns (bool) {i1 == i2} function {:inline} $eq.i16(i1: i16, i2: i16) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i8.bool(i1: i8, i2: i8) returns (bool) {i1 == i2} function {:inline} $eq.i8(i1: i8, i2: i8) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $eq.i1.bool(i1: i1, i2: i1) returns (bool) {i1 == i2} function {:inline} $eq.i1(i1: i1, i2: i1) returns (i1) {if i1 == i2 then 1 else 0}
function {:inline} $ne.i128.bool(i1: i128, i2: i128) returns (bool) {i1 != i2} function {:inline} $ne.i128(i1: i128, i2: i128) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i96.bool(i1: i96, i2: i96) returns (bool) {i1 != i2} function {:inline} $ne.i96(i1: i96, i2: i96) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i88.bool(i1: i88, i2: i88) returns (bool) {i1 != i2} function {:inline} $ne.i88(i1: i88, i2: i88) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i64.bool(i1: i64, i2: i64) returns (bool) {i1 != i2} function {:inline} $ne.i64(i1: i64, i2: i64) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i56.bool(i1: i56, i2: i56) returns (bool) {i1 != i2} function {:inline} $ne.i56(i1: i56, i2: i56) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i48.bool(i1: i48, i2: i48) returns (bool) {i1 != i2} function {:inline} $ne.i48(i1: i48, i2: i48) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i40.bool(i1: i40, i2: i40) returns (bool) {i1 != i2} function {:inline} $ne.i40(i1: i40, i2: i40) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i32.bool(i1: i32, i2: i32) returns (bool) {i1 != i2} function {:inline} $ne.i32(i1: i32, i2: i32) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i24.bool(i1: i24, i2: i24) returns (bool) {i1 != i2} function {:inline} $ne.i24(i1: i24, i2: i24) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i16.bool(i1: i16, i2: i16) returns (bool) {i1 != i2} function {:inline} $ne.i16(i1: i16, i2: i16) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i8.bool(i1: i8, i2: i8) returns (bool) {i1 != i2} function {:inline} $ne.i8(i1: i8, i2: i8) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ne.i1.bool(i1: i1, i2: i1) returns (bool) {i1 != i2} function {:inline} $ne.i1(i1: i1, i2: i1) returns (i1) {if i1 != i2 then 1 else 0}
function {:inline} $ule.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $ule.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $ule.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $ule.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $ule.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $ule.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $ule.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $ule.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $ule.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $ule.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $ule.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $ule.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ule.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $ule.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $ult.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $ult.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $ult.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $ult.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $ult.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $ult.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $ult.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $ult.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $ult.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $ult.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $ult.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $ult.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $ult.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $ult.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $uge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $uge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $uge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $uge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $uge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $uge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $uge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $uge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $uge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $uge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $uge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $uge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $uge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $uge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $ugt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $ugt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $ugt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $ugt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $ugt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $ugt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $ugt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $ugt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $ugt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $ugt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $ugt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $ugt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sle.i128.bool(i1: i128, i2: i128) returns (bool) {i1 <= i2} function {:inline} $sle.i128(i1: i128, i2: i128) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i96.bool(i1: i96, i2: i96) returns (bool) {i1 <= i2} function {:inline} $sle.i96(i1: i96, i2: i96) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i88.bool(i1: i88, i2: i88) returns (bool) {i1 <= i2} function {:inline} $sle.i88(i1: i88, i2: i88) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i64.bool(i1: i64, i2: i64) returns (bool) {i1 <= i2} function {:inline} $sle.i64(i1: i64, i2: i64) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i56.bool(i1: i56, i2: i56) returns (bool) {i1 <= i2} function {:inline} $sle.i56(i1: i56, i2: i56) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i48.bool(i1: i48, i2: i48) returns (bool) {i1 <= i2} function {:inline} $sle.i48(i1: i48, i2: i48) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i40.bool(i1: i40, i2: i40) returns (bool) {i1 <= i2} function {:inline} $sle.i40(i1: i40, i2: i40) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i32.bool(i1: i32, i2: i32) returns (bool) {i1 <= i2} function {:inline} $sle.i32(i1: i32, i2: i32) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i24.bool(i1: i24, i2: i24) returns (bool) {i1 <= i2} function {:inline} $sle.i24(i1: i24, i2: i24) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i16.bool(i1: i16, i2: i16) returns (bool) {i1 <= i2} function {:inline} $sle.i16(i1: i16, i2: i16) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i8.bool(i1: i8, i2: i8) returns (bool) {i1 <= i2} function {:inline} $sle.i8(i1: i8, i2: i8) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $sle.i1.bool(i1: i1, i2: i1) returns (bool) {i1 <= i2} function {:inline} $sle.i1(i1: i1, i2: i1) returns (i1) {if i1 <= i2 then 1 else 0}
function {:inline} $slt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 < i2} function {:inline} $slt.i128(i1: i128, i2: i128) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 < i2} function {:inline} $slt.i96(i1: i96, i2: i96) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 < i2} function {:inline} $slt.i88(i1: i88, i2: i88) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 < i2} function {:inline} $slt.i64(i1: i64, i2: i64) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 < i2} function {:inline} $slt.i56(i1: i56, i2: i56) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 < i2} function {:inline} $slt.i48(i1: i48, i2: i48) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 < i2} function {:inline} $slt.i40(i1: i40, i2: i40) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 < i2} function {:inline} $slt.i32(i1: i32, i2: i32) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 < i2} function {:inline} $slt.i24(i1: i24, i2: i24) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 < i2} function {:inline} $slt.i16(i1: i16, i2: i16) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 < i2} function {:inline} $slt.i8(i1: i8, i2: i8) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $slt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 < i2} function {:inline} $slt.i1(i1: i1, i2: i1) returns (i1) {if i1 < i2 then 1 else 0}
function {:inline} $sge.i128.bool(i1: i128, i2: i128) returns (bool) {i1 >= i2} function {:inline} $sge.i128(i1: i128, i2: i128) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i96.bool(i1: i96, i2: i96) returns (bool) {i1 >= i2} function {:inline} $sge.i96(i1: i96, i2: i96) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i88.bool(i1: i88, i2: i88) returns (bool) {i1 >= i2} function {:inline} $sge.i88(i1: i88, i2: i88) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i64.bool(i1: i64, i2: i64) returns (bool) {i1 >= i2} function {:inline} $sge.i64(i1: i64, i2: i64) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i56.bool(i1: i56, i2: i56) returns (bool) {i1 >= i2} function {:inline} $sge.i56(i1: i56, i2: i56) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i48.bool(i1: i48, i2: i48) returns (bool) {i1 >= i2} function {:inline} $sge.i48(i1: i48, i2: i48) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i40.bool(i1: i40, i2: i40) returns (bool) {i1 >= i2} function {:inline} $sge.i40(i1: i40, i2: i40) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i32.bool(i1: i32, i2: i32) returns (bool) {i1 >= i2} function {:inline} $sge.i32(i1: i32, i2: i32) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i24.bool(i1: i24, i2: i24) returns (bool) {i1 >= i2} function {:inline} $sge.i24(i1: i24, i2: i24) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i16.bool(i1: i16, i2: i16) returns (bool) {i1 >= i2} function {:inline} $sge.i16(i1: i16, i2: i16) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i8.bool(i1: i8, i2: i8) returns (bool) {i1 >= i2} function {:inline} $sge.i8(i1: i8, i2: i8) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sge.i1.bool(i1: i1, i2: i1) returns (bool) {i1 >= i2} function {:inline} $sge.i1(i1: i1, i2: i1) returns (i1) {if i1 >= i2 then 1 else 0}
function {:inline} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) {i1 > i2} function {:inline} $sgt.i128(i1: i128, i2: i128) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) {i1 > i2} function {:inline} $sgt.i96(i1: i96, i2: i96) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) {i1 > i2} function {:inline} $sgt.i88(i1: i88, i2: i88) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) {i1 > i2} function {:inline} $sgt.i64(i1: i64, i2: i64) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) {i1 > i2} function {:inline} $sgt.i56(i1: i56, i2: i56) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) {i1 > i2} function {:inline} $sgt.i48(i1: i48, i2: i48) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) {i1 > i2} function {:inline} $sgt.i40(i1: i40, i2: i40) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) {i1 > i2} function {:inline} $sgt.i32(i1: i32, i2: i32) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) {i1 > i2} function {:inline} $sgt.i24(i1: i24, i2: i24) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) {i1 > i2} function {:inline} $sgt.i16(i1: i16, i2: i16) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) {i1 > i2} function {:inline} $sgt.i8(i1: i8, i2: i8) returns (i1) {if i1 > i2 then 1 else 0}
function {:inline} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) {i1 > i2} function {:inline} $sgt.i1(i1: i1, i2: i1) returns (i1) {if i1 > i2 then 1 else 0}
axiom $and.i1(0,0) == 0;
axiom $and.i1(0,1) == 0;
axiom $and.i1(1,0) == 0;
axiom $and.i1(1,1) == 1;
axiom $or.i1(0,0) == 0;
axiom $or.i1(0,1) == 1;
axiom $or.i1(1,0) == 1;
axiom $or.i1(1,1) == 1;
axiom $xor.i1(0,0) == 0;
axiom $xor.i1(0,1) == 1;
axiom $xor.i1(1,0) == 1;
axiom $xor.i1(1,1) == 0;
axiom($and.i32(32, 16) == 0);
function {:inline} $trunc.i128.i96(i: i128) returns (i96) {i}
function {:inline} $trunc.i128.i88(i: i128) returns (i88) {i}
function {:inline} $trunc.i128.i64(i: i128) returns (i64) {i}
function {:inline} $trunc.i128.i56(i: i128) returns (i56) {i}
function {:inline} $trunc.i128.i48(i: i128) returns (i48) {i}
function {:inline} $trunc.i128.i40(i: i128) returns (i40) {i}
function {:inline} $trunc.i128.i32(i: i128) returns (i32) {i}
function {:inline} $trunc.i128.i24(i: i128) returns (i24) {i}
function {:inline} $trunc.i128.i16(i: i128) returns (i16) {i}
function {:inline} $trunc.i128.i8(i: i128) returns (i8) {i}
function {:inline} $trunc.i128.i1(i: i128) returns (i1) {i}
function {:inline} $trunc.i96.i64(i: i96) returns (i64) {i}
function {:inline} $trunc.i96.i88(i: i96) returns (i88) {i}
function {:inline} $trunc.i96.i56(i: i96) returns (i56) {i}
function {:inline} $trunc.i96.i48(i: i96) returns (i48) {i}
function {:inline} $trunc.i96.i40(i: i96) returns (i40) {i}
function {:inline} $trunc.i96.i32(i: i96) returns (i32) {i}
function {:inline} $trunc.i96.i24(i: i96) returns (i24) {i}
function {:inline} $trunc.i96.i16(i: i96) returns (i16) {i}
function {:inline} $trunc.i96.i8(i: i96) returns (i8) {i}
function {:inline} $trunc.i96.i1(i: i96) returns (i1) {i}
function {:inline} $trunc.i88.i64(i: i88) returns (i64) {i}
function {:inline} $trunc.i88.i88(i: i88) returns (i88) {i}
function {:inline} $trunc.i88.i56(i: i88) returns (i56) {i}
function {:inline} $trunc.i88.i48(i: i88) returns (i48) {i}
function {:inline} $trunc.i88.i40(i: i88) returns (i40) {i}
function {:inline} $trunc.i88.i32(i: i88) returns (i32) {i}
function {:inline} $trunc.i88.i24(i: i88) returns (i24) {i}
function {:inline} $trunc.i88.i16(i: i88) returns (i16) {i}
function {:inline} $trunc.i88.i8(i: i88) returns (i8) {i}
function {:inline} $trunc.i88.i1(i: i88) returns (i1) {i}
function {:inline} $trunc.i64.i56(i: i64) returns (i56) {i}
function {:inline} $trunc.i64.i48(i: i64) returns (i48) {i}
function {:inline} $trunc.i64.i40(i: i64) returns (i40) {i}
function {:inline} $trunc.i64.i32(i: i64) returns (i32) {i}
function {:inline} $trunc.i64.i24(i: i64) returns (i24) {i}
function {:inline} $trunc.i64.i16(i: i64) returns (i16) {i}
function {:inline} $trunc.i64.i8(i: i64) returns (i8) {i}
function {:inline} $trunc.i64.i1(i: i64) returns (i1) {i}
function {:inline} $trunc.i56.i48(i: i56) returns (i48) {i}
function {:inline} $trunc.i56.i40(i: i56) returns (i40) {i}
function {:inline} $trunc.i56.i32(i: i56) returns (i32) {i}
function {:inline} $trunc.i56.i24(i: i56) returns (i24) {i}
function {:inline} $trunc.i56.i16(i: i56) returns (i16) {i}
function {:inline} $trunc.i56.i8(i: i56) returns (i8) {i}
function {:inline} $trunc.i56.i1(i: i56) returns (i1) {i}
function {:inline} $trunc.i48.i40(i: i48) returns (i40) {i}
function {:inline} $trunc.i48.i32(i: i48) returns (i32) {i}
function {:inline} $trunc.i48.i24(i: i48) returns (i24) {i}
function {:inline} $trunc.i48.i16(i: i48) returns (i16) {i}
function {:inline} $trunc.i48.i8(i: i48) returns (i8) {i}
function {:inline} $trunc.i48.i1(i: i48) returns (i1) {i}
function {:inline} $trunc.i40.i32(i: i40) returns (i32) {i}
function {:inline} $trunc.i40.i24(i: i40) returns (i24) {i}
function {:inline} $trunc.i40.i16(i: i40) returns (i16) {i}
function {:inline} $trunc.i40.i8(i: i40) returns (i8) {i}
function {:inline} $trunc.i40.i1(i: i40) returns (i1) {i}
function {:inline} $trunc.i32.i24(i: i32) returns (i24) {i}
function {:inline} $trunc.i32.i16(i: i32) returns (i16) {i}
function {:inline} $trunc.i32.i8(i: i32) returns (i8) {i}
function {:inline} $trunc.i32.i1(i: i32) returns (i1) {i}
function {:inline} $trunc.i24.i16(i: i24) returns (i16) {i}
function {:inline} $trunc.i24.i8(i: i24) returns (i8) {i}
function {:inline} $trunc.i24.i1(i: i24) returns (i1) {i}
function {:inline} $trunc.i16.i8(i: i16) returns (i8) {i}
function {:inline} $trunc.i16.i1(i: i16) returns (i1) {i}
function {:inline} $trunc.i8.i1(i: i8) returns (i1) {i}
function {:inline} $zext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $zext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $zext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $zext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $zext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $zext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $zext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $zext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $zext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $zext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $zext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $zext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $zext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $zext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $zext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $zext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $zext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $zext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $zext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $zext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $zext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $zext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $zext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $zext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $zext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $zext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $zext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $zext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $zext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $zext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $zext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $zext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $zext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $zext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $zext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $zext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $zext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $zext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $zext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $zext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $zext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $zext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $zext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $zext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $zext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $zext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $zext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $zext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $zext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $zext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $zext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $zext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $zext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $zext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $zext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $zext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $zext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $zext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $zext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $zext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $zext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $zext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $zext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $zext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $zext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $zext.i96.i128(i: i96) returns (i128) {i}
function {:inline} $sext.i1.i8(i: i1) returns (i8) {i}
function {:inline} $sext.i1.i16(i: i1) returns (i16) {i}
function {:inline} $sext.i1.i24(i: i1) returns (i24) {i}
function {:inline} $sext.i1.i32(i: i1) returns (i32) {i}
function {:inline} $sext.i1.i40(i: i1) returns (i40) {i}
function {:inline} $sext.i1.i48(i: i1) returns (i48) {i}
function {:inline} $sext.i1.i56(i: i1) returns (i56) {i}
function {:inline} $sext.i1.i64(i: i1) returns (i64) {i}
function {:inline} $sext.i1.i88(i: i1) returns (i88) {i}
function {:inline} $sext.i1.i96(i: i1) returns (i96) {i}
function {:inline} $sext.i1.i128(i: i1) returns (i128) {i}
function {:inline} $sext.i8.i16(i: i8) returns (i16) {i}
function {:inline} $sext.i8.i24(i: i8) returns (i24) {i}
function {:inline} $sext.i8.i32(i: i8) returns (i32) {i}
function {:inline} $sext.i8.i40(i: i8) returns (i40) {i}
function {:inline} $sext.i8.i48(i: i8) returns (i48) {i}
function {:inline} $sext.i8.i56(i: i8) returns (i56) {i}
function {:inline} $sext.i8.i64(i: i8) returns (i64) {i}
function {:inline} $sext.i8.i88(i: i8) returns (i88) {i}
function {:inline} $sext.i8.i96(i: i8) returns (i96) {i}
function {:inline} $sext.i8.i128(i: i8) returns (i128) {i}
function {:inline} $sext.i16.i24(i: i16) returns (i24) {i}
function {:inline} $sext.i16.i32(i: i16) returns (i32) {i}
function {:inline} $sext.i16.i40(i: i16) returns (i40) {i}
function {:inline} $sext.i16.i48(i: i16) returns (i48) {i}
function {:inline} $sext.i16.i56(i: i16) returns (i56) {i}
function {:inline} $sext.i16.i64(i: i16) returns (i64) {i}
function {:inline} $sext.i16.i88(i: i16) returns (i88) {i}
function {:inline} $sext.i16.i96(i: i16) returns (i96) {i}
function {:inline} $sext.i16.i128(i: i16) returns (i128) {i}
function {:inline} $sext.i24.i32(i: i24) returns (i32) {i}
function {:inline} $sext.i24.i40(i: i24) returns (i40) {i}
function {:inline} $sext.i24.i48(i: i24) returns (i48) {i}
function {:inline} $sext.i24.i56(i: i24) returns (i56) {i}
function {:inline} $sext.i24.i64(i: i24) returns (i64) {i}
function {:inline} $sext.i24.i88(i: i24) returns (i88) {i}
function {:inline} $sext.i24.i96(i: i24) returns (i96) {i}
function {:inline} $sext.i24.i128(i: i24) returns (i128) {i}
function {:inline} $sext.i32.i40(i: i32) returns (i40) {i}
function {:inline} $sext.i32.i48(i: i32) returns (i48) {i}
function {:inline} $sext.i32.i56(i: i32) returns (i56) {i}
function {:inline} $sext.i32.i64(i: i32) returns (i64) {i}
function {:inline} $sext.i32.i88(i: i32) returns (i88) {i}
function {:inline} $sext.i32.i96(i: i32) returns (i96) {i}
function {:inline} $sext.i32.i128(i: i32) returns (i128) {i}
function {:inline} $sext.i40.i48(i: i40) returns (i48) {i}
function {:inline} $sext.i40.i56(i: i40) returns (i56) {i}
function {:inline} $sext.i40.i64(i: i40) returns (i64) {i}
function {:inline} $sext.i40.i88(i: i40) returns (i88) {i}
function {:inline} $sext.i40.i96(i: i40) returns (i96) {i}
function {:inline} $sext.i40.i128(i: i40) returns (i128) {i}
function {:inline} $sext.i48.i56(i: i48) returns (i56) {i}
function {:inline} $sext.i48.i64(i: i48) returns (i64) {i}
function {:inline} $sext.i48.i88(i: i48) returns (i88) {i}
function {:inline} $sext.i48.i96(i: i48) returns (i96) {i}
function {:inline} $sext.i48.i128(i: i48) returns (i128) {i}
function {:inline} $sext.i56.i64(i: i56) returns (i64) {i}
function {:inline} $sext.i56.i88(i: i56) returns (i88) {i}
function {:inline} $sext.i56.i96(i: i56) returns (i96) {i}
function {:inline} $sext.i56.i128(i: i56) returns (i128) {i}
function {:inline} $sext.i64.i88(i: i64) returns (i88) {i}
function {:inline} $sext.i64.i96(i: i64) returns (i96) {i}
function {:inline} $sext.i64.i128(i: i64) returns (i128) {i}
function {:inline} $sext.i88.i96(i: i88) returns (i96) {i}
function {:inline} $sext.i88.i128(i: i88) returns (i128) {i}
function {:inline} $sext.i96.i128(i: i96) returns (i128) {i}
function $fp(ipart:int, fpart:int, epart:int) returns (float);
function $fadd.float(f1:float, f2:float) returns (float);
function $fsub.float(f1:float, f2:float) returns (float);
function $fmul.float(f1:float, f2:float) returns (float);
function $fdiv.float(f1:float, f2:float) returns (float);
function $frem.float(f1:float, f2:float) returns (float);
function $ffalse.float(f1:float, f2:float) returns (i1);
function $ftrue.float(f1:float, f2:float) returns (i1);
function {:inline} $foeq.float(f1:float, f2:float) returns (i1) { if $foeq.bool(f1,f2) then 1 else 0 }
function $foeq.bool(f1:float, f2:float) returns (bool);
function $foge.float(f1:float, f2:float) returns (i1);
function $fogt.float(f1:float, f2:float) returns (i1);
function $fole.float(f1:float, f2:float) returns (i1);
function $folt.float(f1:float, f2:float) returns (i1);
function $fone.float(f1:float, f2:float) returns (i1);
function $ford.float(f1:float, f2:float) returns (i1);
function $fueq.float(f1:float, f2:float) returns (i1);
function $fuge.float(f1:float, f2:float) returns (i1);
function $fugt.float(f1:float, f2:float) returns (i1);
function $fule.float(f1:float, f2:float) returns (i1);
function $fult.float(f1:float, f2:float) returns (i1);
function $fune.float(f1:float, f2:float) returns (i1);
function $funo.float(f1:float, f2:float) returns (i1);
function $fp2si.float.i128(f:float) returns (i128);
function $fp2ui.float.i128(f:float) returns (i128);
function $si2fp.i128.float(i:i128) returns (float);
function $ui2fp.i128.float(i:i128) returns (float);
function $fp2si.float.i96(f:float) returns (i96);
function $fp2ui.float.i96(f:float) returns (i96);
function $si2fp.i96.float(i:i96) returns (float);
function $ui2fp.i96.float(i:i96) returns (float);
function $fp2si.float.i88(f:float) returns (i88);
function $fp2ui.float.i88(f:float) returns (i88);
function $si2fp.i88.float(i:i88) returns (float);
function $ui2fp.i88.float(i:i88) returns (float);
function $fp2si.float.i64(f:float) returns (i64);
function $fp2ui.float.i64(f:float) returns (i64);
function $si2fp.i64.float(i:i64) returns (float);
function $ui2fp.i64.float(i:i64) returns (float);
function $fp2si.float.i56(f:float) returns (i56);
function $fp2ui.float.i56(f:float) returns (i56);
function $si2fp.i56.float(i:i56) returns (float);
function $ui2fp.i56.float(i:i56) returns (float);
function $fp2si.float.i48(f:float) returns (i48);
function $fp2ui.float.i48(f:float) returns (i48);
function $si2fp.i48.float(i:i48) returns (float);
function $ui2fp.i48.float(i:i48) returns (float);
function $fp2si.float.i40(f:float) returns (i40);
function $fp2ui.float.i40(f:float) returns (i40);
function $si2fp.i40.float(i:i40) returns (float);
function $ui2fp.i40.float(i:i40) returns (float);
function $fp2si.float.i32(f:float) returns (i32);
function $fp2ui.float.i32(f:float) returns (i32);
function $si2fp.i32.float(i:i32) returns (float);
function $ui2fp.i32.float(i:i32) returns (float);
function $fp2si.float.i24(f:float) returns (i24);
function $fp2ui.float.i24(f:float) returns (i24);
function $si2fp.i24.float(i:i24) returns (float);
function $ui2fp.i24.float(i:i24) returns (float);
function $fp2si.float.i16(f:float) returns (i16);
function $fp2ui.float.i16(f:float) returns (i16);
function $si2fp.i16.float(i:i16) returns (float);
function $ui2fp.i16.float(i:i16) returns (float);
function $fp2si.float.i8(f:float) returns (i8);
function $fp2ui.float.i8(f:float) returns (i8);
function $si2fp.i8.float(i:i8) returns (float);
function $ui2fp.i8.float(i:i8) returns (float);
function $fptrunc.float.float(f:float) returns (float);
function $fpext.float.float(f:float) returns (float);
function $fp2si.float.bv128(f:float) returns (bv128);
function $fp2ui.float.bv128(f:float) returns (bv128);
function $si2fp.bv128.float(i:bv128) returns (float);
function $ui2fp.bv128.float(i:bv128) returns (float);
function $fp2si.float.bv96(f:float) returns (bv96);
function $fp2ui.float.bv96(f:float) returns (bv96);
function $si2fp.bv96.float(i:bv96) returns (float);
function $ui2fp.bv96.float(i:bv96) returns (float);
function $fp2si.float.bv88(f:float) returns (bv88);
function $fp2ui.float.bv88(f:float) returns (bv88);
function $si2fp.bv88.float(i:bv88) returns (float);
function $ui2fp.bv88.float(i:bv88) returns (float);
function $fp2si.float.bv64(f:float) returns (bv64);
function $fp2ui.float.bv64(f:float) returns (bv64);
function $si2fp.bv64.float(i:bv64) returns (float);
function $ui2fp.bv64.float(i:bv64) returns (float);
function $fp2si.float.bv56(f:float) returns (bv56);
function $fp2ui.float.bv56(f:float) returns (bv56);
function $si2fp.bv56.float(i:bv56) returns (float);
function $ui2fp.bv56.float(i:bv56) returns (float);
function $fp2si.float.bv48(f:float) returns (bv48);
function $fp2ui.float.bv48(f:float) returns (bv48);
function $si2fp.bv48.float(i:bv48) returns (float);
function $ui2fp.bv48.float(i:bv48) returns (float);
function $fp2si.float.bv40(f:float) returns (bv40);
function $fp2ui.float.bv40(f:float) returns (bv40);
function $si2fp.bv40.float(i:bv40) returns (float);
function $ui2fp.bv40.float(i:bv40) returns (float);
function $fp2si.float.bv32(f:float) returns (bv32);
function $fp2ui.float.bv32(f:float) returns (bv32);
function $si2fp.bv32.float(i:bv32) returns (float);
function $ui2fp.bv32.float(i:bv32) returns (float);
function $fp2si.float.bv24(f:float) returns (bv24);
function $fp2ui.float.bv24(f:float) returns (bv24);
function $si2fp.bv24.float(i:bv24) returns (float);
function $ui2fp.bv24.float(i:bv24) returns (float);
function $fp2si.float.bv16(f:float) returns (bv16);
function $fp2ui.float.bv16(f:float) returns (bv16);
function $si2fp.bv16.float(i:bv16) returns (float);
function $ui2fp.bv16.float(i:bv16) returns (float);
function $fp2si.float.bv8(f:float) returns (bv8);
function $fp2ui.float.bv8(f:float) returns (bv8);
function $si2fp.bv8.float(i:bv8) returns (float);
function $ui2fp.bv8.float(i:bv8) returns (float);
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;
function {:inline} $isExternal(p: ref) returns (bool) {$slt.ref.bool(p,$EXTERNS_BOTTOM)}
function {:inline} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:inline} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:inline} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:inline} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:inline} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:inline} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:inline} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:inline} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:inline} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:inline} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:inline} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:inline} $load.bv128(M: [ref] bv128, p: ref) returns (bv128) { M[p] }
function {:inline} $load.bv96(M: [ref] bv96, p: ref) returns (bv96) { M[p] }
function {:inline} $load.bv88(M: [ref] bv88, p: ref) returns (bv88) { M[p] }
function {:inline} $load.bv64(M: [ref] bv64, p: ref) returns (bv64) { M[p] }
function {:inline} $load.bv56(M: [ref] bv56, p: ref) returns (bv56) { M[p] }
function {:inline} $load.bv48(M: [ref] bv48, p: ref) returns (bv48) { M[p] }
function {:inline} $load.bv40(M: [ref] bv40, p: ref) returns (bv40) { M[p] }
function {:inline} $load.bv32(M: [ref] bv32, p: ref) returns (bv32) { M[p] }
function {:inline} $load.bv24(M: [ref] bv24, p: ref) returns (bv24) { M[p] }
function {:inline} $load.bv16(M: [ref] bv16, p: ref) returns (bv16) { M[p] }
function {:inline} $load.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $load.bytes.bv128(M: [ref] bv8, p: ref) returns (bv128){ $load.bytes.bv64(M, $add.ref(p, $8.ref)) ++ $load.bytes.bv64(M, p) }
function {:inline} $load.bytes.bv96(M: [ref] bv8, p: ref) returns (bv96){ $load.bytes.bv64(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv88(M: [ref] bv8, p: ref) returns (bv88){ $load.bytes.bv56(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv64(M: [ref] bv8, p: ref) returns (bv64){ $load.bytes.bv32(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv56(M: [ref] bv8, p: ref) returns (bv56){ $load.bytes.bv24(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv48(M: [ref] bv8, p: ref) returns (bv48){ $load.bytes.bv16(M, $add.ref(p, $4.ref)) ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv40(M: [ref] bv8, p: ref) returns (bv40){ M[$add.ref(p, $4.ref)] ++ $load.bytes.bv32(M, p) }
function {:inline} $load.bytes.bv32(M: [ref] bv8, p: ref) returns (bv32){ M[$add.ref(p, $3.ref)] ++ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv24(M: [ref] bv8, p: ref) returns (bv24){ M[$add.ref(p, $2.ref)] ++ M[$add.ref(p, $1.ref)]++M[p] }
function {:inline} $load.bytes.bv16(M: [ref] bv8, p: ref) returns (bv16){ M[$add.ref(p, $1.ref)] ++ M[p] }
function {:inline} $load.bytes.bv8(M: [ref] bv8, p: ref) returns (bv8) { M[p] }
function {:inline} $store.i128(M: [ref] i128, p: ref, v: i128) returns ([ref] i128) { M[p := v] }
function {:inline} $store.i96(M: [ref] i96, p: ref, v: i96) returns ([ref] i96) { M[p := v] }
function {:inline} $store.i88(M: [ref] i88, p: ref, v: i88) returns ([ref] i88) { M[p := v] }
function {:inline} $store.i64(M: [ref] i64, p: ref, v: i64) returns ([ref] i64) { M[p := v] }
function {:inline} $store.i56(M: [ref] i56, p: ref, v: i56) returns ([ref] i56) { M[p := v] }
function {:inline} $store.i48(M: [ref] i48, p: ref, v: i48) returns ([ref] i48) { M[p := v] }
function {:inline} $store.i40(M: [ref] i40, p: ref, v: i40) returns ([ref] i40) { M[p := v] }
function {:inline} $store.i32(M: [ref] i32, p: ref, v: i32) returns ([ref] i32) { M[p := v] }
function {:inline} $store.i24(M: [ref] i24, p: ref, v: i24) returns ([ref] i24) { M[p := v] }
function {:inline} $store.i16(M: [ref] i16, p: ref, v: i16) returns ([ref] i16) { M[p := v] }
function {:inline} $store.i8(M: [ref] i8, p: ref, v: i8) returns ([ref] i8) { M[p := v] }
function {:inline} $store.bv128(M: [ref] bv128, p: ref, v: bv128) returns ([ref] bv128) { M[p := v] }
function {:inline} $store.bv96(M: [ref] bv96, p: ref, v: bv96) returns ([ref] bv96) { M[p := v] }
function {:inline} $store.bv88(M: [ref] bv88, p: ref, v: bv88) returns ([ref] bv88) { M[p := v] }
function {:inline} $store.bv64(M: [ref] bv64, p: ref, v: bv64) returns ([ref] bv64) { M[p := v] }
function {:inline} $store.bv56(M: [ref] bv56, p: ref, v: bv56) returns ([ref] bv56) { M[p := v] }
function {:inline} $store.bv48(M: [ref] bv48, p: ref, v: bv48) returns ([ref] bv48) { M[p := v] }
function {:inline} $store.bv40(M: [ref] bv40, p: ref, v: bv40) returns ([ref] bv40) { M[p := v] }
function {:inline} $store.bv32(M: [ref] bv32, p: ref, v: bv32) returns ([ref] bv32) { M[p := v] }
function {:inline} $store.bv24(M: [ref] bv24, p: ref, v: bv24) returns ([ref] bv24) { M[p := v] }
function {:inline} $store.bv16(M: [ref] bv16, p: ref, v: bv16) returns ([ref] bv16) { M[p := v] }
function {:inline} $store.bv8(M: [ref] bv8, p: ref, v: bv8) returns ([ref] bv8) { M[p := v] }
function {:inline} $store.bytes.bv128(M:[ref]bv8, p:ref, v:bv128) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]][$add.ref(p, $11.ref) := v[104:96]][$add.ref(p, $12.ref) := v[112:104]][$add.ref(p, $13.ref) := v[120:112]][$add.ref(p, $14.ref) := v[128:120]]}
function {:inline} $store.bytes.bv96(M:[ref]bv8, p:ref, v:bv96) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]][$add.ref(p, $10.ref) := v[96:88]]}
function {:inline} $store.bytes.bv88(M:[ref]bv8, p:ref, v:bv88) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]][$add.ref(p, $7.ref) := v[72:64]][$add.ref(p, $8.ref) := v[80:72]][$add.ref(p, $9.ref) := v[88:80]]}
function {:inline} $store.bytes.bv64(M:[ref]bv8, p:ref, v:bv64) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]][$add.ref(p, $7.ref) := v[64:56]]}
function {:inline} $store.bytes.bv56(M:[ref]bv8, p:ref, v:bv56) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]][$add.ref(p, $6.ref) := v[56:48]]}
function {:inline} $store.bytes.bv48(M:[ref]bv8, p:ref, v:bv48) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]][$add.ref(p, $5.ref) := v[48:40]]}
function {:inline} $store.bytes.bv40(M:[ref]bv8, p:ref, v:bv40) returns ([ref]bv8){M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]][$add.ref(p, $4.ref) := v[40:32]]}
function {:inline} $store.bytes.bv32(M:[ref]bv8, p:ref, v:bv32) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]][$add.ref(p, $3.ref) := v[32:24]]}
function {:inline} $store.bytes.bv24(M:[ref]bv8, p:ref, v:bv24) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]][$add.ref(p, $2.ref) := v[24:16]]}
function {:inline} $store.bytes.bv16(M:[ref]bv8, p:ref, v:bv16) returns ([ref]bv8) {M[p := v[8:0]][$add.ref(p, $1.ref) := v[16:8]]}
function {:inline} $store.bytes.bv8(M:[ref]bv8, p:ref, v:bv8) returns ([ref]bv8) {M[p := v]}
function {:inline} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:inline} $store.ref(M: [ref] ref, p: ref, v: ref) returns ([ref] ref) { M[p := v] }
function {:inline} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:inline} $store.float(M: [ref] float, p: ref, v: float) returns ([ref] float) { M[p := v] }
type $mop;
procedure  boogie_si_record_mop(m: $mop);
const $MOP: $mop;
procedure  boogie_si_record_bool(i: bool);
procedure  boogie_si_record_i1(i: i1);
procedure  boogie_si_record_i8(i: i8);
procedure  boogie_si_record_i16(i: i16);
procedure  boogie_si_record_i24(i: i24);
procedure  boogie_si_record_i32(i: i32);
procedure  boogie_si_record_i40(i: i40);
procedure  boogie_si_record_i48(i: i48);
procedure  boogie_si_record_i56(i: i56);
procedure  boogie_si_record_i64(i: i64);
procedure  boogie_si_record_i88(i: i88);
procedure  boogie_si_record_i96(i: i96);
procedure  boogie_si_record_i128(i: i128);
procedure  boogie_si_record_bv1(i: bv1);
procedure  boogie_si_record_bv8(i: bv8);
procedure  boogie_si_record_bv16(i: bv16);
procedure  boogie_si_record_bv24(i: bv24);
procedure  boogie_si_record_bv32(i: bv32);
procedure  boogie_si_record_bv40(i: bv40);
procedure  boogie_si_record_bv48(i: bv48);
procedure  boogie_si_record_bv56(i: bv56);
procedure  boogie_si_record_bv64(i: bv64);
procedure  boogie_si_record_bv88(i: bv88);
procedure  boogie_si_record_bv96(i: bv96);
procedure  boogie_si_record_bv128(i: bv128);
procedure  boogie_si_record_ref(i: ref);
procedure  boogie_si_record_float(i: float);
var $exn: bool;
var $exnv: int;
function $extractvalue(p: int, i: int) returns (int);

procedure  $alloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

procedure  $malloc(n: ref) returns (p: ref)
{
  call p := $$alloc(n);
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure  $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 564578));
procedure  __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 565610));
procedure  __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1782, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/mnt/local/smack-project/smack/share/smack/lib/smack.c", 1787, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 566642));
procedure  llvm.dbg.value($p0: ref, $i1: i64, $p2: ref, $p3: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 567674));
procedure  __SMACK_static_init()
{
$bb0:
  $M.54 := 1;
  call {:cexpr "LDV_IN_INTERRUPT"} boogie_si_record_i32(1);
  $M.22 := $0.ref;
  $M.23 := $0.ref;
  $M.24 := $0.ref;
  $M.25 := 0;
  call {:cexpr "ldv_state_variable_11"} boogie_si_record_i32(0);
  $M.26 := 0;
  call {:cexpr "ldv_state_variable_21"} boogie_si_record_i32(0);
  $M.27 := 0;
  call {:cexpr "ldv_state_variable_7"} boogie_si_record_i32(0);
  $M.28 := 0;
  call {:cexpr "ldv_state_variable_17"} boogie_si_record_i32(0);
  $M.29 := 0;
  call {:cexpr "ldv_state_variable_2"} boogie_si_record_i32(0);
  $M.30 := 0;
  call {:cexpr "ldv_state_variable_1"} boogie_si_record_i32(0);
  $M.31 := 0;
  call {:cexpr "ldv_state_variable_18"} boogie_si_record_i32(0);
  $M.32 := 0;
  call {:cexpr "ref_cnt"} boogie_si_record_i32(0);
  $M.33 := 0;
  call {:cexpr "ldv_state_variable_0"} boogie_si_record_i32(0);
  $M.34 := 0;
  call {:cexpr "ldv_state_variable_16"} boogie_si_record_i32(0);
  $M.35 := 0;
  call {:cexpr "ldv_state_variable_13"} boogie_si_record_i32(0);
  $M.36 := 0;
  call {:cexpr "ldv_state_variable_6"} boogie_si_record_i32(0);
  $M.37 := 0;
  call {:cexpr "ldv_state_variable_3"} boogie_si_record_i32(0);
  $M.38 := 0;
  call {:cexpr "ldv_state_variable_9"} boogie_si_record_i32(0);
  $M.39 := 0;
  call {:cexpr "ldv_state_variable_12"} boogie_si_record_i32(0);
  $M.40 := 0;
  call {:cexpr "ldv_state_variable_20"} boogie_si_record_i32(0);
  $M.41 := 0;
  call {:cexpr "ldv_state_variable_14"} boogie_si_record_i32(0);
  $M.42 := 0;
  call {:cexpr "ldv_state_variable_15"} boogie_si_record_i32(0);
  $M.43 := 0;
  call {:cexpr "ldv_state_variable_8"} boogie_si_record_i32(0);
  $M.44 := 0;
  call {:cexpr "ldv_state_variable_4"} boogie_si_record_i32(0);
  $M.45 := 0;
  call {:cexpr "ldv_state_variable_19"} boogie_si_record_i32(0);
  $M.46 := 0;
  call {:cexpr "ldv_state_variable_10"} boogie_si_record_i32(0);
  $M.47 := 0;
  call {:cexpr "ldv_state_variable_5"} boogie_si_record_i32(0);
  $M.48 := 0;
  call {:cexpr "ldv_retval_0"} boogie_si_record_i32(0);
  $M.49 := 0;
  call {:cexpr "ldv_retval_1"} boogie_si_record_i32(0);
  $M.50 := 0;
  call {:cexpr "ldv_retval_2"} boogie_si_record_i32(0);
  $M.3 := 0;
  call {:cexpr "ldv_spin"} boogie_si_record_i32(0);
  $M.0 := $store.i32($M.0, st_use_lock, 0);
  $M.0 := $store.i32($M.0, $add.ref(st_use_lock, 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref(st_use_lock, 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref(st_use_lock, 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref(st_use_lock, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_use_lock, 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(st_use_lock, 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_use_lock, 24), 24), .str.165);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(st_use_lock, 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(st_use_lock, 24), 40), 0);
  $M.13 := 1;
  call {:cexpr "try_wdio"} boogie_si_record_i32(1);
  $M.18 := 1;
  call {:cexpr "try_rdio"} boogie_si_record_i32(1);
  $M.12 := 0;
  call {:cexpr "modes_defined"} boogie_si_record_i32(0);
  $M.51 := 0;
  call {:cexpr "debug_flag"} boogie_si_record_i32(0);
  $M.20 := .str.86;
  $M.53 := 0;
  call {:cexpr "max_sg_segs"} boogie_si_record_i32(0);
  $M.52 := 0;
  call {:cexpr "buffer_kbs"} boogie_si_record_i32(0);
  $M.0 := $store.ref($M.0, driver_attr_try_direct_io, .str.81);
  $M.0 := $store.i16($M.0, $add.ref(driver_attr_try_direct_io, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(driver_attr_try_direct_io, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_try_direct_io, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(driver_attr_try_direct_io, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_try_direct_io, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_try_direct_io, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_try_direct_io, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_try_direct_io, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_try_direct_io, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_try_direct_io, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_try_direct_io, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_try_direct_io, 32), st_try_direct_io_show);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_try_direct_io, 40), $0.ref);
  $M.0 := $store.ref($M.0, driver_attr_fixed_buffer_size, .str.80);
  $M.0 := $store.i16($M.0, $add.ref(driver_attr_fixed_buffer_size, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(driver_attr_fixed_buffer_size, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_fixed_buffer_size, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(driver_attr_fixed_buffer_size, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_fixed_buffer_size, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_fixed_buffer_size, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_fixed_buffer_size, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_fixed_buffer_size, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_fixed_buffer_size, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_fixed_buffer_size, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_fixed_buffer_size, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_fixed_buffer_size, 32), st_fixed_buffer_size_show);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_fixed_buffer_size, 40), $0.ref);
  $M.0 := $store.ref($M.0, driver_attr_max_sg_segs, .str.79);
  $M.0 := $store.i16($M.0, $add.ref(driver_attr_max_sg_segs, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(driver_attr_max_sg_segs, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_max_sg_segs, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(driver_attr_max_sg_segs, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_max_sg_segs, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_max_sg_segs, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_max_sg_segs, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_max_sg_segs, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_max_sg_segs, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_max_sg_segs, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_max_sg_segs, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_max_sg_segs, 32), st_max_sg_segs_show);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_max_sg_segs, 40), $0.ref);
  $M.0 := $store.ref($M.0, driver_attr_version, .str.78);
  $M.0 := $store.i16($M.0, $add.ref(driver_attr_version, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(driver_attr_version, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_version, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(driver_attr_version, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_version, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_version, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_version, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_version, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_version, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_version, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(driver_attr_version, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_version, 32), st_version_show);
  $M.0 := $store.ref($M.0, $add.ref(driver_attr_version, 40), $0.ref);
  $M.19 := 32768;
  call {:cexpr "st_fixed_buffer_size"} boogie_si_record_i32(32768);
  $M.0 := $store.i32($M.0, st_ref_mutex, 1);
  $M.0 := $store.i32($M.0, $add.ref(st_ref_mutex, 8), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(st_ref_mutex, 8), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(st_ref_mutex, 8), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_ref_mutex, 8), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_ref_mutex, 8), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(st_ref_mutex, 8), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(st_ref_mutex, 8), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(st_ref_mutex, 8), 24), 24), .str.72);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(st_ref_mutex, 8), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(st_ref_mutex, 8), 24), 40), 0);
  $M.0 := $store.ref($M.0, $add.ref(st_ref_mutex, 80), $add.ref(st_ref_mutex, 80));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_ref_mutex, 80), 8), $add.ref(st_ref_mutex, 80));
  $M.0 := $store.ref($M.0, $add.ref(st_ref_mutex, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_ref_mutex, 104), st_ref_mutex);
  $M.0 := $store.ref($M.0, $add.ref(st_ref_mutex, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_ref_mutex, 112), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(st_ref_mutex, 112), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_ref_mutex, 112), 24), .str.73);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(st_ref_mutex, 112), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(st_ref_mutex, 112), 40), 0);
  $M.0 := $store.ref($M.0, dev_attr_resid_cnt, .str.71);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_resid_cnt, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_resid_cnt, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_resid_cnt, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_resid_cnt, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_resid_cnt, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_resid_cnt, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_resid_cnt, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_resid_cnt, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_resid_cnt, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_resid_cnt, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_resid_cnt, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_resid_cnt, 32), resid_cnt_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_resid_cnt, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_other_cnt, .str.70);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_other_cnt, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_other_cnt, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_other_cnt, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_other_cnt, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_other_cnt, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_other_cnt, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_other_cnt, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_other_cnt, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_other_cnt, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_other_cnt, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_other_cnt, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_other_cnt, 32), other_cnt_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_other_cnt, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_io_ns, .str.69);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_io_ns, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_io_ns, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_io_ns, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_io_ns, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_io_ns, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_io_ns, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_io_ns, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_io_ns, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_io_ns, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_io_ns, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_io_ns, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_io_ns, 32), io_ns_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_io_ns, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_in_flight, .str.68);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_in_flight, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_in_flight, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_in_flight, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_in_flight, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_in_flight, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_in_flight, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_in_flight, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_in_flight, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_in_flight, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_in_flight, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_in_flight, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_in_flight, 32), in_flight_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_in_flight, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_write_ns, .str.67);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_write_ns, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_write_ns, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_write_ns, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_write_ns, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_ns, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_ns, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_ns, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_ns, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_ns, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_ns, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_ns, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_write_ns, 32), write_ns_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_write_ns, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_write_byte_cnt, .str.66);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_write_byte_cnt, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_write_byte_cnt, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_write_byte_cnt, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_write_byte_cnt, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_byte_cnt, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_byte_cnt, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_byte_cnt, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_byte_cnt, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_byte_cnt, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_byte_cnt, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_byte_cnt, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_write_byte_cnt, 32), write_byte_cnt_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_write_byte_cnt, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_write_cnt, .str.65);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_write_cnt, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_write_cnt, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_write_cnt, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_write_cnt, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_cnt, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_cnt, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_cnt, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_cnt, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_cnt, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_cnt, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_write_cnt, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_write_cnt, 32), write_cnt_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_write_cnt, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_read_ns, .str.64);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_read_ns, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_read_ns, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_read_ns, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_read_ns, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_ns, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_ns, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_ns, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_ns, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_ns, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_ns, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_ns, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_read_ns, 32), read_ns_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_read_ns, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_read_byte_cnt, .str.63);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_read_byte_cnt, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_read_byte_cnt, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_read_byte_cnt, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_read_byte_cnt, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_byte_cnt, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_byte_cnt, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_byte_cnt, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_byte_cnt, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_byte_cnt, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_byte_cnt, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_byte_cnt, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_read_byte_cnt, 32), read_byte_cnt_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_read_byte_cnt, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_read_cnt, .str.62);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_read_cnt, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_read_cnt, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_read_cnt, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_read_cnt, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_cnt, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_cnt, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_cnt, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_cnt, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_cnt, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_cnt, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_read_cnt, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_read_cnt, 32), read_cnt_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_read_cnt, 40), $0.ref);
  $M.0 := $store.ref($M.0, st_stats_attrs, dev_attr_read_cnt);
  $M.0 := $store.ref($M.0, $add.ref(st_stats_attrs, 8), dev_attr_read_byte_cnt);
  $M.0 := $store.ref($M.0, $add.ref(st_stats_attrs, 16), dev_attr_read_ns);
  $M.0 := $store.ref($M.0, $add.ref(st_stats_attrs, 24), dev_attr_write_cnt);
  $M.0 := $store.ref($M.0, $add.ref(st_stats_attrs, 32), dev_attr_write_byte_cnt);
  $M.0 := $store.ref($M.0, $add.ref(st_stats_attrs, 40), dev_attr_write_ns);
  $M.0 := $store.ref($M.0, $add.ref(st_stats_attrs, 48), dev_attr_in_flight);
  $M.0 := $store.ref($M.0, $add.ref(st_stats_attrs, 56), dev_attr_io_ns);
  $M.0 := $store.ref($M.0, $add.ref(st_stats_attrs, 64), dev_attr_other_cnt);
  $M.0 := $store.ref($M.0, $add.ref(st_stats_attrs, 72), dev_attr_resid_cnt);
  $M.0 := $store.ref($M.0, $add.ref(st_stats_attrs, 80), $0.ref);
  $M.0 := $store.ref($M.0, stats_group, .str.61);
  $M.0 := $store.ref($M.0, $add.ref(stats_group, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(stats_group, 16), st_stats_attrs);
  $M.0 := $store.ref($M.0, $add.ref(stats_group, 24), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_options, .str.60);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_options, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_options, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_options, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_options, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_options, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_options, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_options, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_options, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_options, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_options, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_options, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_options, 32), options_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_options, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_default_compression, .str.59);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_default_compression, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_default_compression, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_default_compression, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_default_compression, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_compression, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_compression, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_compression, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_compression, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_compression, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_compression, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_compression, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_default_compression, 32), default_compression_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_default_compression, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_default_density, .str.58);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_default_density, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_default_density, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_default_density, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_default_density, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_density, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_density, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_density, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_density, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_density, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_density, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_density, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_default_density, 32), default_density_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_default_density, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_default_blksize, .str.57);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_default_blksize, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_default_blksize, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_default_blksize, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_default_blksize, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_blksize, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_blksize, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_blksize, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_blksize, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_blksize, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_blksize, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_default_blksize, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_default_blksize, 32), default_blksize_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_default_blksize, 40), $0.ref);
  $M.0 := $store.ref($M.0, dev_attr_defined, .str.56);
  $M.0 := $store.i16($M.0, $add.ref(dev_attr_defined, 8), 292);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_defined, 10), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_defined, 16), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(dev_attr_defined, 24), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_defined, 24), 1), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_defined, 24), 2), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_defined, 24), 3), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_defined, 24), 4), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_defined, 24), 5), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_defined, 24), 6), 0);
  $M.0 := $store.i8($M.0, $add.ref($add.ref(dev_attr_defined, 24), 7), 0);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_defined, 32), defined_show);
  $M.0 := $store.ref($M.0, $add.ref(dev_attr_defined, 40), $0.ref);
  $M.0 := $store.ref($M.0, st_dev_attrs, dev_attr_defined);
  $M.0 := $store.ref($M.0, $add.ref(st_dev_attrs, 8), dev_attr_default_blksize);
  $M.0 := $store.ref($M.0, $add.ref(st_dev_attrs, 16), dev_attr_default_density);
  $M.0 := $store.ref($M.0, $add.ref(st_dev_attrs, 24), dev_attr_default_compression);
  $M.0 := $store.ref($M.0, $add.ref(st_dev_attrs, 32), dev_attr_options);
  $M.0 := $store.ref($M.0, $add.ref(st_dev_attrs, 40), $0.ref);
  $M.0 := $store.ref($M.0, st_group, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_group, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_group, 16), st_dev_attrs);
  $M.0 := $store.ref($M.0, $add.ref(st_group, 24), $0.ref);
  $M.0 := $store.ref($M.0, st_dev_groups, st_group);
  $M.0 := $store.ref($M.0, $add.ref(st_dev_groups, 8), stats_group);
  $M.0 := $store.ref($M.0, $add.ref(st_dev_groups, 16), $0.ref);
  $M.0 := $store.ref($M.0, st_sysfs_class, .str.55);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 16), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 24), st_dev_groups);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 64), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_sysfs_class, 112), $0.ref);
  $M.9 := $store.ref($M.9, st_formats, .str.20);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 8), .str.40);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 16), .str.41);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 24), .str.42);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 32), .str.43);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 40), .str.44);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 48), .str.45);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 56), .str.46);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 64), .str.47);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 72), .str.48);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 80), .str.49);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 88), .str.50);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 96), .str.51);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 104), .str.52);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 112), .str.53);
  $M.9 := $store.ref($M.9, $add.ref(st_formats, 120), .str.54);
  $M.0 := $store.ref($M.0, st_fops, __this_module);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 8), noop_llseek);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 16), st_read);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 24), st_write);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 32), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 56), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 64), st_ioctl);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 72), st_compat_ioctl);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 96), st_open);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 104), st_flush);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 112), st_release);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 152), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 160), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 168), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 176), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 184), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 192), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 200), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 208), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_fops, 216), $0.ref);
  $M.0 := $store.ref($M.0, st_index_idr, $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_index_idr, 8), $0.ref);
  $M.0 := $store.i32($M.0, $add.ref(st_index_idr, 16), 0);
  $M.0 := $store.i32($M.0, $add.ref(st_index_idr, 20), 0);
  $M.0 := $store.i32($M.0, $add.ref(st_index_idr, 24), 0);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(st_index_idr, 24), 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref($add.ref(st_index_idr, 24), 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_index_idr, 24), 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_index_idr, 24), 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(st_index_idr, 24), 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref($add.ref(st_index_idr, 24), 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(st_index_idr, 24), 24), 24), .str.29);
  $M.0 := $store.i32($M.0, $add.ref($add.ref($add.ref(st_index_idr, 24), 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref($add.ref(st_index_idr, 24), 24), 40), 0);
  $M.0 := $store.i32($M.0, $add.ref(st_index_idr, 96), 0);
  $M.0 := $store.ref($M.0, $add.ref(st_index_idr, 104), $0.ref);
  $M.0 := $store.i32($M.0, st_index_lock, 0);
  $M.0 := $store.i32($M.0, $add.ref(st_index_lock, 4), $sub.i32(0, 559067475));
  $M.0 := $store.i32($M.0, $add.ref(st_index_lock, 8), $sub.i32(0, 1));
  $M.0 := $store.ref($M.0, $add.ref(st_index_lock, 16), $i2p.i64.ref($sub.i64(0, 1)));
  $M.0 := $store.ref($M.0, $add.ref(st_index_lock, 24), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_index_lock, 24), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref($add.ref(st_index_lock, 24), 8), 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref($add.ref(st_index_lock, 24), 24), .str.28);
  $M.0 := $store.i32($M.0, $add.ref($add.ref(st_index_lock, 24), 32), 0);
  $M.0 := $store.i64($M.0, $add.ref($add.ref(st_index_lock, 24), 40), 0);
  $M.2 := 1;
  call {:cexpr "try_direct_io"} boogie_si_record_i32(1);
  $M.0 := $store.ref($M.0, st_template, .str.27);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 8), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 16), __this_module);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 24), $0.ref);
  $M.0 := $store.i8($M.0, $add.ref(st_template, 32), 0);
  $M.0 := $store.i32($M.0, $add.ref(st_template, 36), 0);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 40), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 48), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 56), st_probe);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 64), st_remove);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 72), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 80), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 88), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 96), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 104), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 112), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 120), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 128), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 136), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 144), $0.ref);
  $M.0 := $store.ref($M.0, $add.ref(st_template, 152), $0.ref);
  $M.1 := 256;
  call {:cexpr "st_max_sg_segs"} boogie_si_record_i32(256);
  $M.5 := $store.ref($M.5, reject_list, .str.18);
  $M.6 := $store.ref($M.6, $add.ref(reject_list, 8), .str.19);
  $M.7 := $store.ref($M.7, $add.ref(reject_list, 16), .str.20);
  $M.8 := $store.ref($M.8, $add.ref(reject_list, 24), .str.21);
  $M.5 := $store.ref($M.5, $add.ref(reject_list, 32), .str.18);
  $M.6 := $store.ref($M.6, $add.ref($add.ref(reject_list, 32), 8), .str.22);
  $M.7 := $store.ref($M.7, $add.ref($add.ref(reject_list, 32), 16), .str.20);
  $M.8 := $store.ref($M.8, $add.ref($add.ref(reject_list, 32), 24), .str.21);
  $M.5 := $store.ref($M.5, $add.ref(reject_list, 64), .str.18);
  $M.6 := $store.ref($M.6, $add.ref($add.ref(reject_list, 64), 8), .str.23);
  $M.7 := $store.ref($M.7, $add.ref($add.ref(reject_list, 64), 16), .str.20);
  $M.8 := $store.ref($M.8, $add.ref($add.ref(reject_list, 64), 24), .str.21);
  $M.5 := $store.ref($M.5, $add.ref(reject_list, 96), .str.18);
  $M.6 := $store.ref($M.6, $add.ref($add.ref(reject_list, 96), 8), .str.24);
  $M.7 := $store.ref($M.7, $add.ref($add.ref(reject_list, 96), 16), .str.20);
  $M.8 := $store.ref($M.8, $add.ref($add.ref(reject_list, 96), 24), .str.21);
  $M.5 := $store.ref($M.5, $add.ref(reject_list, 128), .str.18);
  $M.6 := $store.ref($M.6, $add.ref($add.ref(reject_list, 128), 8), .str.25);
  $M.7 := $store.ref($M.7, $add.ref($add.ref(reject_list, 128), 16), .str.20);
  $M.8 := $store.ref($M.8, $add.ref($add.ref(reject_list, 128), 24), .str.21);
  $M.5 := $store.ref($M.5, $add.ref(reject_list, 160), $0.ref);
  $M.6 := $store.ref($M.6, $add.ref($add.ref(reject_list, 160), 8), $0.ref);
  $M.7 := $store.ref($M.7, $add.ref($add.ref(reject_list, 160), 16), $0.ref);
  $M.8 := $store.ref($M.8, $add.ref($add.ref(reject_list, 160), 24), $0.ref);
  $M.11 := 1;
  call {:cexpr "debugging"} boogie_si_record_i32(1);
  $M.55 := $store.i8($M.55, .str.18, 79);
  $M.55 := $store.i8($M.55, $add.ref(.str.18, 1), 110);
  $M.55 := $store.i8($M.55, $add.ref(.str.18, 2), 83);
  $M.55 := $store.i8($M.55, $add.ref(.str.18, 3), 116);
  $M.55 := $store.i8($M.55, $add.ref(.str.18, 4), 114);
  $M.55 := $store.i8($M.55, $add.ref(.str.18, 5), 101);
  $M.55 := $store.i8($M.55, $add.ref(.str.18, 6), 97);
  $M.55 := $store.i8($M.55, $add.ref(.str.18, 7), 109);
  $M.55 := $store.i8($M.55, $add.ref(.str.18, 8), 0);
  $M.56 := $store.i8($M.56, .str.19, 83);
  $M.56 := $store.i8($M.56, $add.ref(.str.19, 1), 67);
  $M.56 := $store.i8($M.56, $add.ref(.str.19, 2), 45);
  $M.56 := $store.i8($M.56, $add.ref(.str.19, 3), 0);
  $M.0 := $store.i8($M.0, .str.20, 0);
  $M.56 := $store.i8($M.56, .str.22, 68);
  $M.56 := $store.i8($M.56, $add.ref(.str.22, 1), 73);
  $M.56 := $store.i8($M.56, $add.ref(.str.22, 2), 45);
  $M.56 := $store.i8($M.56, $add.ref(.str.22, 3), 0);
  $M.56 := $store.i8($M.56, .str.23, 68);
  $M.56 := $store.i8($M.56, $add.ref(.str.23, 1), 80);
  $M.56 := $store.i8($M.56, $add.ref(.str.23, 2), 45);
  $M.56 := $store.i8($M.56, $add.ref(.str.23, 3), 0);
  $M.56 := $store.i8($M.56, .str.24, 70);
  $M.56 := $store.i8($M.56, $add.ref(.str.24, 1), 87);
  $M.56 := $store.i8($M.56, $add.ref(.str.24, 2), 45);
  $M.56 := $store.i8($M.56, $add.ref(.str.24, 3), 0);
  $M.56 := $store.i8($M.56, .str.25, 85);
  $M.56 := $store.i8($M.56, $add.ref(.str.25, 1), 83);
  $M.56 := $store.i8($M.56, $add.ref(.str.25, 2), 66);
  $M.56 := $store.i8($M.56, $add.ref(.str.25, 3), 0);
  $M.0 := $store.i8($M.0, .str.27, 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.27, 1), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.27, 2), 0);
  $M.57 := $store.i8($M.57, .str.10, 115);
  $M.57 := $store.i8($M.57, $add.ref(.str.10, 1), 116);
  $M.57 := $store.i8($M.57, $add.ref(.str.10, 2), 37);
  $M.57 := $store.i8($M.57, $add.ref(.str.10, 3), 100);
  $M.57 := $store.i8($M.57, $add.ref(.str.10, 4), 0);
  $M.0 := $store.i8($M.0, .str.15, 121);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 1), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 2), 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.15, 3), 0);
  $M.0 := $store.i8($M.0, .str.16, 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.16, 1), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.16, 2), 0);
  $M.0 := $store.i8($M.0, .str.37, 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.37, 1), 0);
  $M.58 := $store.i8($M.58, .str.36, 37);
  $M.58 := $store.i8($M.58, $add.ref(.str.36, 1), 115);
  $M.58 := $store.i8($M.58, $add.ref(.str.36, 2), 37);
  $M.58 := $store.i8($M.58, $add.ref(.str.36, 3), 115);
  $M.58 := $store.i8($M.58, $add.ref(.str.36, 4), 37);
  $M.58 := $store.i8($M.58, $add.ref(.str.36, 5), 115);
  $M.58 := $store.i8($M.58, $add.ref(.str.36, 6), 0);
  $M.0 := $store.i8($M.0, .str.29, 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 1), 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 2), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 3), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 4), 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 5), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 6), 101);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 7), 120);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 8), 95);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 9), 105);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 10), 100);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 11), 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 12), 46);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 13), 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 14), 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 15), 99);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 16), 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.29, 17), 0);
  $M.0 := $store.i8($M.0, .str.205, 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.205, 1), 110);
  $M.0 := $store.i8($M.0, $add.ref(.str.205, 2), 0);
  $M.0 := $store.i8($M.0, .str.40, 114);
  $M.0 := $store.i8($M.0, $add.ref(.str.40, 1), 0);
  $M.0 := $store.i8($M.0, .str.41, 107);
  $M.0 := $store.i8($M.0, $add.ref(.str.41, 1), 0);
  $M.0 := $store.i8($M.0, .str.42, 115);
  $M.0 := $store.i8($M.0, $add.ref(.str.42, 1), 0);
  $M.0 := $store.i8($M.0, .str.43, 108);
  $M.0 := $store.i8($M.0, $add.ref(.str.43, 1), 0);
  $M.0 := $store.i8($M.0, .str.44, 116);
  $M.0 := $store.i8($M.0, $add.ref(.str.44, 1), 0);
  $M.0 := $store.i8($M.0, .str.45, 111);
  $M.0 := $store.i8($M.0, $add.ref(.str.45, 1), 0);
  $M.0 := $store.i8($M.0, .str.46, 117);
  $M.0 := $store.i8($M.0, $add.ref(.str.46, 1), 0);
  $M.0 := $store.i8($M.0, .str.47, 109);
  $M.0 := $store.i8($M.0, $add.ref(.str.47, 1), 0);
  $M.0 := $store.i8($M.0, .str.48, 118);
  $M.0 := $store.i8($M.0, $add.ref(.str.48, 1), 0);
  $M.0 := $store.i8($M.0, .str.49, 112);
  $M.0 := $store.i8($M.0, $add.ref(.str.49, 1), 0);
  $M.0 := $store.i8($M.0, .str.50, 120);
  $M.0 := $store.i8($M.0, $add.ref(.str.50, 1), 0);
  $M.0 := $store.i8($M.0, .str.51, 97);
  $M.0 := $store.i8($M.0, $add.ref(.str.51, 1), 0);
  $M.0 := $store.i8($M.0, .str.52, 121);
  $M.0 := $store.i8($M.0, $add.ref(.str.52, 1), 0);
  $M.0 := $store.i8($M.0, .str.53, 113);
  $M.0 := $store.i8($M.0, $add.ref(.str.53, 1), 0);
  $M.0 := $store.i8($M.0, .str.54, 122);
  $M.0 := $store.i8($M.0, $add.ref(.str.54, 1), 0);
  $M.59 := $store.i8($M.59, .str.76, 37);
  $M.59 := $store.i8($M.59, $add.ref(.str.76, 1), 100);
  $M.59 := $store.i8($M.59, $add.ref(.str.76, 2), 10);
  $M.59 := $store.i8($M.59, $add.ref(.str.76, 3), 0);
  $M.59 := $store.i8($M.59, .str.88, 48);
  $M.59 := $store.i8($M.59, $add.ref(.str.88, 1), 120);
  $M.59 := $store.i8($M.59, $add.ref(.str.88, 2), 37);
  $M.59 := $store.i8($M.59, $add.ref(.str.88, 3), 48);
  $M.59 := $store.i8($M.59, $add.ref(.str.88, 4), 50);
  $M.59 := $store.i8($M.59, $add.ref(.str.88, 5), 120);
  $M.59 := $store.i8($M.59, $add.ref(.str.88, 6), 10);
  $M.59 := $store.i8($M.59, $add.ref(.str.88, 7), 0);
  $M.60 := $store.i8($M.60, .str, 48);
  $M.60 := $store.i8($M.60, $add.ref(.str, 1), 120);
  $M.60 := $store.i8($M.60, $add.ref(.str, 2), 37);
  $M.60 := $store.i8($M.60, $add.ref(.str, 3), 48);
  $M.60 := $store.i8($M.60, $add.ref(.str, 4), 56);
  $M.60 := $store.i8($M.60, $add.ref(.str, 5), 120);
  $M.60 := $store.i8($M.60, $add.ref(.str, 6), 10);
  $M.60 := $store.i8($M.60, $add.ref(.str, 7), 0);
  $M.61 := $store.i8($M.61, .str.75, 37);
  $M.61 := $store.i8($M.61, $add.ref(.str.75, 1), 108);
  $M.61 := $store.i8($M.61, $add.ref(.str.75, 2), 108);
  $M.61 := $store.i8($M.61, $add.ref(.str.75, 3), 100);
  $M.61 := $store.i8($M.61, $add.ref(.str.75, 4), 0);
  $M.62 := $store.i8($M.62, .str.87, 91);
  $M.62 := $store.i8($M.62, $add.ref(.str.87, 1), 37);
  $M.62 := $store.i8($M.62, $add.ref(.str.87, 2), 115);
  $M.62 := $store.i8($M.62, $add.ref(.str.87, 3), 93);
  $M.62 := $store.i8($M.62, $add.ref(.str.87, 4), 10);
  $M.62 := $store.i8($M.62, $add.ref(.str.87, 5), 0);
  $M.0 := $store.i8($M.0, .str.86, 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.86, 1), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.86, 2), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.86, 3), 48);
  $M.0 := $store.i8($M.0, $add.ref(.str.86, 4), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.86, 5), 50);
  $M.0 := $store.i8($M.0, $add.ref(.str.86, 6), 49);
  $M.0 := $store.i8($M.0, $add.ref(.str.86, 7), 57);
  $M.0 := $store.i8($M.0, $add.ref(.str.86, 8), 0);
  $exn := false;
  return;
}
const devirtbounce: ref;
axiom (devirtbounce == $sub.ref(0, 568706));
procedure  devirtbounce(funcPtr: ref, arg: ref)
{
  var $p0: ref;
  var $i1: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i1 := $eq.ref(scsi_tape_release, $p0);
  assume {:branchcond $i1} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i1 == 1);
  call scsi_tape_release(arg);
  $exn := false;
  return;
$bb3:
  assume !(($i1 == 1));
  assume false;
}
const devirtbounce.1: ref;
axiom (devirtbounce.1 == $sub.ref(0, 569738));
procedure  devirtbounce.1(funcPtr: ref, arg: ref, arg1: ref, arg2: i32, arg3: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.2: ref;
axiom (devirtbounce.2 == $sub.ref(0, 570770));
procedure  devirtbounce.2(funcPtr: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.3: ref;
axiom (devirtbounce.3 == $sub.ref(0, 571802));
procedure  devirtbounce.3(funcPtr: ref, arg: ref, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.4: ref;
axiom (devirtbounce.4 == $sub.ref(0, 572834));
procedure  devirtbounce.4(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.5: ref;
axiom (devirtbounce.5 == $sub.ref(0, 573866));
procedure  devirtbounce.5(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_object_size();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.6: ref;
axiom (devirtbounce.6 == $sub.ref(0, 574898));
procedure  devirtbounce.6(funcPtr: ref, arg: ref)
  returns ($r: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.7: ref;
axiom (devirtbounce.7 == $sub.ref(0, 575930));
procedure  devirtbounce.7(funcPtr: ref, arg: ref, arg1: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.8: ref;
axiom (devirtbounce.8 == $sub.ref(0, 576962));
procedure  devirtbounce.8(funcPtr: ref, arg: ref, arg1: i64, arg2: ref)
{
  var $p0: ref;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $exn := false;
  return;
}
const devirtbounce.9: ref;
axiom (devirtbounce.9 == $sub.ref(0, 577994));
procedure  devirtbounce.9(funcPtr: ref, arg: ref, arg1: i64)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_object_size();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
const devirtbounce.10: ref;
axiom (devirtbounce.10 == $sub.ref(0, 579026));
procedure  devirtbounce.10(funcPtr: ref, arg: ref, arg1: i32, arg2: ref)
  returns ($r: i32)
{
  var $p0: ref;
  var $i1: i32;
  var $i2: i32;
  var $i3: i1;
  var $i4: i1;
$bb0:
  $p0 := $bitcast.ref.ref(funcPtr);
  goto $bb1;
$bb1:
  $i4 := $eq.ref(__builtinx_object_size, $p0);
  assume {:branchcond $i4} true;
  goto $bb3, $bb5;
$bb2:
  assume ($i3 == 1);
  call $i1 := __builtinx_memcpy();
  $r := $i1;
  $exn := false;
  return;
$bb3:
  assume ($i4 == 1);
  call $i2 := __builtinx_object_size();
  $r := $i2;
  $exn := false;
  return;
$bb4:
  assume !(($i3 == 1));
  assume false;
$bb5:
  assume !(($i4 == 1));
  $i3 := $eq.ref(__builtinx_memcpy, $p0);
  assume {:branchcond $i3} true;
  goto $bb2, $bb4;
}
procedure  $memcpy.i8(M.dst: [ref] i8, M.src: [ref] i8, dst: ref, src: ref, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == M.src[$add.ref($sub.ref(src,dst),x)]);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M.dst[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M.dst[x]);
}

procedure  $memset.i8(M: [ref] i8, dst: ref, val: i8, len: ref, align: ref, isvolatile: bool) returns (M.ret: [ref] i8)
{
  assume (forall x: ref :: $sle.ref.bool(dst,x) && $slt.ref.bool(x,$add.ref(dst,len)) ==> M.ret[x] == val);
  assume (forall x: ref :: $slt.ref.bool(x,dst) ==> M.ret[x] == M[x]);
  assume (forall x: ref :: $sle.ref.bool($add.ref(dst,len),x) ==> M.ret[x] == M[x]);
}

procedure  $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
